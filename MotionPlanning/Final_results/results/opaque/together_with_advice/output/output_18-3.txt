Parameters values: 
Environment: results/environments/env18/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.3874575491941374,0.023875116360058152), (1.6874575491941375,0.023875116360058152), (1.6874575491941375,0.5238751163600581), (1.3874575491941374,0.5238751163600581)]
[(0.949949625867305,2.6501145274495617), (1.449949625867305,2.6501145274495617), (1.449949625867305,2.9501145274495615), (0.949949625867305,2.9501145274495615)]
[(2.06262177654102,0.22384305032719173), (2.56262177654102,0.22384305032719173), (2.56262177654102,0.5238430503271917), (2.06262177654102,0.5238430503271917)]
[(3.406513244250834,2.494100365692535), (3.706513244250834,2.494100365692535), (3.706513244250834,2.994100365692535), (3.406513244250834,2.994100365692535)]
[(4.13341906754952,0.04177954947327961), (4.4334190675495195,0.04177954947327961), (4.4334190675495195,0.5417795494732796), (4.13341906754952,0.5417795494732796)]
[(5.120198261571851,2.498218840636166), (5.4201982615718505,2.498218840636166), (5.4201982615718505,2.998218840636166), (5.120198261571851,2.998218840636166)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.091385,y=0.020358874,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=0.6879822,h=2.7995596]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=2.5638416,h=2.7995596]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=2.5638416,h=2.7995596]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=4.671217,h=2.7995596]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=5.173853,h=2.7995596]  
t: java.awt.geom.Rectangle2D$Float[x=1.2874576,y=0.0,w=0.5,h=0.62387514]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=0.937508,h=3.0501146]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=1.8126721,h=3.0501146]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=2.9565637,h=3.0941005]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=3.6834695,h=3.0941005]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=4.670249,h=3.098219]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.96027386, 1.445862] with IG = 37.124016
Iter num: 2
Used frontier: Point2D.Float[0.98267525, 0.48417363] with IG = 41.582233
Iter num: 3
Added advice frontier Point2D.Float[1.318319, 0.13584223]
Added advice frontier Point2D.Float[1.2826486, 0.126313]
Added advice frontier Point2D.Float[1.1281625, 0.22524115]
Used Advice frontier: Point2D.Float[1.1281625, 0.22524115] with IG = 336.6935
Iter num: 4
Used Advice frontier: Point2D.Float[1.2826486, 0.126313] with IG = 545.11725
Iter num: 5
Added advice frontier Point2D.Float[1.2890401, 0.06388891]
Added advice frontier Point2D.Float[1.3077569, 0.0902087]
Used Advice frontier: Point2D.Float[1.318319, 0.13584223] with IG = 2708.4622
Iter num: 6
Used Advice frontier: Point2D.Float[1.3077569, 0.0902087] with IG = 2134.932
Iter num: 7
Used Advice frontier: Point2D.Float[1.2890401, 0.06388891] with IG = 3096.33
Iter num: 8
Used frontier: Point2D.Float[1.7805967, 0.6698939] with IG = 23.922352
Iter num: 9
Used frontier: Point2D.Float[1.8226182, 1.5384965] with IG = 13.595826
Iter num: 10
Used frontier: Point2D.Float[2.5377035, 1.4290079] with IG = 28.09265
Iter num: 11
Added advice frontier Point2D.Float[3.0884824, 0.9013027]
Added advice frontier Point2D.Float[3.4449303, 1.6277213]
Added advice frontier Point2D.Float[2.920897, 2.0845776]
Used Advice frontier: Point2D.Float[3.0884824, 0.9013027] with IG = 129.88033
Iter num: 12
Added advice frontier Point2D.Float[2.6515396, 0.39846164]
Added advice frontier Point2D.Float[2.523034, 0.7093453]
Added advice frontier Point2D.Float[3.105715, 0.293682]
Added advice frontier Point2D.Float[3.2763424, 0.17149091]
Used Advice frontier: Point2D.Float[2.523034, 0.7093453] with IG = 167.46416
Iter num: 13
Used Advice frontier: Point2D.Float[2.6515396, 0.39846164] with IG = 297.26865
Iter num: 14
Used Advice frontier: Point2D.Float[3.105715, 0.293682] with IG = 214.5438
Iter num: 15
Used Advice frontier: Point2D.Float[3.2763424, 0.17149091] with IG = 476.49115
Iter num: 16
Used Advice frontier: Point2D.Float[3.4449303, 1.6277213] with IG = 63.92116
Iter num: 17
Used Advice frontier: Point2D.Float[2.920897, 2.0845776] with IG = 143.83969
Iter num: 18
Added advice frontier Point2D.Float[3.4408655, 2.4770322]
Added advice frontier Point2D.Float[3.3925247, 2.263147]
Added advice frontier Point2D.Float[2.4149177, 2.4677296]
Added advice frontier Point2D.Float[2.203322, 2.404568]
Used Advice frontier: Point2D.Float[3.3925247, 2.263147] with IG = 198.29416
Iter num: 19
Used Advice frontier: Point2D.Float[3.4408655, 2.4770322] with IG = 456.03824
Iter num: 20
Used Advice frontier: Point2D.Float[2.4149177, 2.4677296] with IG = 90.992325
Iter num: 21
Used Advice frontier: Point2D.Float[2.203322, 2.404568] with IG = 452.85434
Iter num: 22
Used frontier: Point2D.Float[4.2587867, 1.3935611] with IG = 10.002371
Iter num: 23
Added advice frontier Point2D.Float[5.0168333, 0.937978]
Added advice frontier Point2D.Float[5.0397944, 1.0378621]
Used Advice frontier: Point2D.Float[5.0397944, 1.0378621] with IG = 106.8338
Iter num: 24
Added advice frontier Point2D.Float[5.239256, 0.19159436]
Added advice frontier Point2D.Float[5.6629477, 0.6492268]
Added advice frontier Point2D.Float[4.500311, 0.5554386]
Added advice frontier Point2D.Float[4.241569, 0.73023564]
Used Advice frontier: Point2D.Float[5.0168333, 0.937978] with IG = 975.71265
Iter num: 25
Used Advice frontier: Point2D.Float[4.500311, 0.5554386] with IG = 154.6621
Iter num: 26
Used Advice frontier: Point2D.Float[4.241569, 0.73023564] with IG = 320.25406
Iter num: 27
Used Advice frontier: Point2D.Float[5.239256, 0.19159436] with IG = 87.14675
Iter num: 28
Used Advice frontier: Point2D.Float[5.6629477, 0.6492268] with IG = 160.34575
Iter num: 29
Used frontier: Point2D.Float[5.6429834, 1.6923379] with IG = 17.775959
Iter num: 30
Added advice frontier Point2D.Float[4.893112, 2.004816]
Added advice frontier Point2D.Float[4.899408, 1.8312486]
Used Advice frontier: Point2D.Float[4.899408, 1.8312486] with IG = 127.353294
Iter num: 31
Added advice frontier Point2D.Float[5.190084, 2.4619184]
Added advice frontier Point2D.Float[5.526744, 2.3327534]
Used Advice frontier: Point2D.Float[4.893112, 2.004816] with IG = 575.76636
Iter num: 32
Added advice frontier Point2D.Float[5.71909, 2.4923391]
Used Advice frontier: Point2D.Float[5.190084, 2.4619184] with IG = 143.23497
Iter num: 33
Used Advice frontier: Point2D.Float[5.526744, 2.3327534] with IG = 277.32504
Iter num: 34
Used Advice frontier: Point2D.Float[5.71909, 2.4923391] with IG = 400.11325
Iter num: 35
Used frontier: Point2D.Float[4.3550677, 2.5173314] with IG = 29.664341
Iter num: 36
Used frontier: Point2D.Float[0.9440708, 2.3611107] with IG = 5.789726
Iter num: 37
Added advice frontier Point2D.Float[0.93195206, 2.6917715]
Added advice frontier Point2D.Float[0.6374874, 2.7697203]
Added advice frontier Point2D.Float[0.48483926, 2.5796037]
Used Advice frontier: Point2D.Float[0.93195206, 2.6917715] with IG = 302.2218

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9602738618850708, 1.445862054824829) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9826752543449402, 0.48417362570762634) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1281625032424927, 0.22524115443229675) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2826485633850098, 0.1263130009174347) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3183189630508423, 0.1358422338962555) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3077569007873535, 0.09020870178937912) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2890400886535645, 0.06388890743255615) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.2824194431304932, 0.49842017889022827) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7805967330932617, 0.6698939204216003) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2268508672714233, 0.8148418664932251) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1065796613693237, 1.194901466369629) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8226182460784912, 1.538496494293213) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.195742130279541, 1.6751750707626343) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.537703514099121, 1.429007887840271) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6909055709838867, 1.2133893966674805) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.08848237991333, 0.901302695274353) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.52303409576416, 0.709345281124115) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6515395641326904, 0.39846163988113403) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.105715036392212, 0.2936820089817047) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.2763423919677734, 0.17149090766906738) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1163930892944336, 0.7043607831001282) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.08848237991333, 0.901302695274353) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4449303150177, 1.6277213096618652) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9208970069885254, 2.0845775604248047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3925247192382812, 2.2631471157073975) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4408655166625977, 2.47703218460083) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.071382522583008, 2.285221576690674) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6676619052886963, 2.4188618659973145) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4149177074432373, 2.4677295684814453) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.203321933746338, 2.4045679569244385) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.550243854522705, 2.20277738571167) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9208970069885254, 2.0845775604248047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2995517253875732, 1.8724080324172974) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7152888774871826, 1.6298171281814575) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.024003505706787, 1.5148259401321411) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.258786678314209, 1.3935611248016357) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.238243103027344, 1.3067435026168823) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.806429862976074, 1.0932655334472656) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.039794445037842, 1.0378620624542236) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.016833305358887, 0.9379780292510986) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.787827491760254, 0.724746584892273) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.500310897827148, 0.5554385781288147) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.2415690422058105, 0.7302356362342834) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.500310897827148, 0.5554385781288147) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.911122798919678, 0.4303537607192993) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.239255905151367, 0.19159436225891113) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.662947654724121, 0.6492267847061157) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.267721176147461, 0.8459088206291199) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.092230796813965, 1.0811755657196045) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.170519828796387, 1.2764856815338135) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.413443088531494, 1.5045849084854126) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.642983436584473, 1.6923378705978394) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.375952243804932, 1.7778642177581787) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.150838375091553, 1.8824666738510132) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.899407863616943, 1.8312486410140991) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8931121826171875, 2.0048160552978516) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.098440647125244, 1.9792969226837158) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.190083980560303, 2.461918354034424) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.5267438888549805, 2.3327534198760986) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.719089984893799, 2.4923391342163086) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.452301502227783, 2.418999433517456) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.190083980560303, 2.461918354034424) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.847750186920166, 2.454716920852661) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.482965469360352, 2.5125622749328613) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.355067729949951, 2.51733136177063) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.534539222717285, 2.367804527282715) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.760292053222656, 2.1458282470703125) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8931121826171875, 2.0048160552978516) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.6795430183410645, 1.8559945821762085) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.3808488845825195, 1.8655084371566772) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.0361328125, 1.8544615507125854) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6604995727539062, 1.8665900230407715) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2455177307128906, 1.8770281076431274) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8036656379699707, 1.8579652309417725) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.299659252166748, 1.8827329874038696) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8764675855636597, 1.884035587310791) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2168689966201782, 1.8948413133621216) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,t,12]  [r1,b,t,12]  [r1,12]  [h,12]  [r3,12]  [r3,t,12]  [r3,b,45]  [r3,45]  [h,45]  [r4,45]  [r4,t,45]  [r4,45]  [r4,b,34]  [r4,34]  [h,34]  [r5,34]  [r5,t,34]  [r5,34]  [r5,t,34]  [r5,34]  [r5,b,47]  [r5,47]  [h,47]  [r6,47]  [h,47]  [r6,t,47]  [r6,47]  [r6,b,37]  [r6,t,37]  [r6,37]  [h,37]  [r2,37]  [r2,t,37]  


Remaining path: 
[r2,t,37]  [r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 19875
RRG size = 1851

Movement Length = 29.280893
Remaining path Length = 0.30460703
Total path Length = 29.5855

Advice samples: [16, 5, 6, 1, 0, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):9646.359188

Initialization time (in ms):718.367603
Sampling time (in ms):7452.408963
Advice time (in ms):10.43855
Path checking time (in ms):693.039297
Learning time (in ms):227.091827
Exploration time (in ms):0.0
Time taken other than these things (in ms):545.012948
Moving time (in ms):2147.4836



