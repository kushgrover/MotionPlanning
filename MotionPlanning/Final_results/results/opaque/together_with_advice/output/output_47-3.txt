Parameters values: 
Environment: results/environments/env47/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.5684250515435717,0.1380848530355258), (1.0684250515435716,0.1380848530355258), (1.0684250515435716,0.4380848530355258), (0.5684250515435717,0.4380848530355258)]
[(1.041211362220077,2.47903452316435), (1.341211362220077,2.47903452316435), (1.341211362220077,2.97903452316435), (1.041211362220077,2.97903452316435)]
[(2.8465359036432987,0.173133541249254), (3.3465359036432987,0.173133541249254), (3.3465359036432987,0.473133541249254), (2.8465359036432987,0.473133541249254)]
[(2.5786789177093055,2.566718257451437), (3.0786789177093055,2.566718257451437), (3.0786789177093055,2.8667182574514367), (2.5786789177093055,2.8667182574514367)]
[(5.177152498106892,0.01740518814493488), (5.477152498106892,0.01740518814493488), (5.477152498106892,0.5174051881449349), (5.177152498106892,0.5174051881449349)]
[(5.453756536429743,2.481729578714294), (5.953756536429743,2.481729578714294), (5.953756536429743,2.7817295787142937), (5.453756536429743,2.7817295787142937)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.0954135,w=0.20000002,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.0954135,w=0.3725698,h=2.5887315]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.0954135,w=2.675704,h=2.5887315]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.0954135,w=3.5252042,h=2.772432]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.009471155,w=4.3582215,h=2.8583744]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.009471155,w=4.3582215,h=2.8583744]  
t: java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.038084853,w=0.70000005,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.038084853,w=0.9727863,h=3.0409498]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.038084853,w=2.9781108,h=3.0409498]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.038084853,w=2.9781108,h=3.0409498]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.0,w=5.1087275,h=3.0790346]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.0,w=5.5853314,h=3.0790346]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.98870736, 1.4755418] with IG = 35.993725
Iter num: 2
Used frontier: Point2D.Float[1.1081043, 0.5591348] with IG = 40.03669
Iter num: 3
Added advice frontier Point2D.Float[1.0894291, 0.43433577]
Added advice frontier Point2D.Float[1.3360599, 0.40783668]
Used Advice frontier: Point2D.Float[1.0894291, 0.43433577] with IG = 792.4648
Iter num: 4
Used Advice frontier: Point2D.Float[1.3360599, 0.40783668] with IG = 403.14404
Iter num: 5
Used frontier: Point2D.Float[0.30750647, 0.42463174] with IG = 22.182198
Iter num: 6
Added advice frontier Point2D.Float[0.2556156, 0.16141202]
Added advice frontier Point2D.Float[0.097794846, 0.011113098]
Added advice frontier Point2D.Float[0.56029266, 0.14170325]
Used Advice frontier: Point2D.Float[0.2556156, 0.16141202] with IG = 372.73676
Iter num: 7
Used Advice frontier: Point2D.Float[0.097794846, 0.011113098] with IG = 458.84525
Iter num: 8
Used Advice frontier: Point2D.Float[0.56029266, 0.14170325] with IG = 208.0815
Iter num: 9
Used frontier: Point2D.Float[0.9952862, 2.3805459] with IG = 13.704897
Iter num: 10
Added advice frontier Point2D.Float[0.41556165, 2.6207907]
Added advice frontier Point2D.Float[0.68132466, 2.6682696]
Used Advice frontier: Point2D.Float[0.68132466, 2.6682696] with IG = 234.8189
Iter num: 11
Used Advice frontier: Point2D.Float[0.41556165, 2.6207907] with IG = 370.41046
Iter num: 12
Used frontier: Point2D.Float[1.7005913, 2.5240438] with IG = 21.318953
Iter num: 13
Used frontier: Point2D.Float[1.9397552, 1.4753195] with IG = 12.646415
Iter num: 14
Used frontier: Point2D.Float[2.7171762, 1.5095404] with IG = 24.8572
Iter num: 15
Added advice frontier Point2D.Float[2.8582575, 0.69325507]
Added advice frontier Point2D.Float[3.0389822, 2.10316]
Added advice frontier Point2D.Float[2.8225822, 1.8756576]
Added advice frontier Point2D.Float[2.9103894, 0.5591674]
Used Advice frontier: Point2D.Float[2.8225822, 1.8756576] with IG = 262.47516
Iter num: 16
Added advice frontier Point2D.Float[2.9633856, 2.5235364]
Added advice frontier Point2D.Float[2.8620658, 2.3951602]
Used Advice frontier: Point2D.Float[3.0389822, 2.10316] with IG = 318.4871
Iter num: 17
Added advice frontier Point2D.Float[3.5859292, 2.8240678]
Added advice frontier Point2D.Float[3.8364046, 2.4729612]
Used Advice frontier: Point2D.Float[2.8620658, 2.3951602] with IG = 292.89948
Iter num: 18
Used Advice frontier: Point2D.Float[2.9633856, 2.5235364] with IG = 611.46173
Iter num: 19
Used Advice frontier: Point2D.Float[3.5859292, 2.8240678] with IG = 134.35403
Iter num: 20
Used frontier: Point2D.Float[3.545999, 2.8412626] with IG = 253.01918
Iter num: 21
Used Advice frontier: Point2D.Float[3.8364046, 2.4729612] with IG = 213.2098
Iter num: 22
Used Advice frontier: Point2D.Float[2.8582575, 0.69325507] with IG = 45.000484
Iter num: 23
Added advice frontier Point2D.Float[2.5934942, 0.33886957]
Added advice frontier Point2D.Float[2.4086282, 0.03371074]
Used Advice frontier: Point2D.Float[2.9103894, 0.5591674] with IG = 695.09436
Iter num: 24
Used Advice frontier: Point2D.Float[2.5934942, 0.33886957] with IG = 259.1041
Iter num: 25
Added advice frontier Point2D.Float[2.768624, 0.2193029]
Used Advice frontier: Point2D.Float[2.768624, 0.2193029] with IG = 471.57916
Iter num: 26
Used Advice frontier: Point2D.Float[2.4086282, 0.03371074] with IG = 246.90118
Iter num: 27
Used frontier: Point2D.Float[3.7063012, 0.36117887] with IG = 16.407412
Iter num: 28
Used frontier: Point2D.Float[3.6868613, 1.4698688] with IG = 14.0474825
Iter num: 29
Used frontier: Point2D.Float[4.249527, 1.3761795] with IG = 30.726202
Iter num: 30
Added advice frontier Point2D.Float[5.0504823, 0.9188815]
Added advice frontier Point2D.Float[5.1404305, 1.5095016]
Used Advice frontier: Point2D.Float[5.0504823, 0.9188815] with IG = 108.42374
Iter num: 31
Added advice frontier Point2D.Float[5.1488056, 0.38577422]
Added advice frontier Point2D.Float[4.9092536, 0.26116675]
Added advice frontier Point2D.Float[4.9140415, 2.00893]
Used Advice frontier: Point2D.Float[5.1488056, 0.38577422] with IG = 184.4683
Iter num: 32
Added advice frontier Point2D.Float[4.4422956, 0.017469654]
Added advice frontier Point2D.Float[4.611087, 0.093320675]
Used Advice frontier: Point2D.Float[4.9092536, 0.26116675] with IG = 370.3394
Iter num: 33
Used Advice frontier: Point2D.Float[4.611087, 0.093320675] with IG = 292.25812
Iter num: 34
Used Advice frontier: Point2D.Float[4.4422956, 0.017469654] with IG = 540.3915
Iter num: 35
Used Advice frontier: Point2D.Float[5.1404305, 1.5095016] with IG = 58.2173
Iter num: 36
Used Advice frontier: Point2D.Float[4.9140415, 2.00893] with IG = 181.26077
Iter num: 37
Added advice frontier Point2D.Float[5.6218925, 2.4400773]
Used Advice frontier: Point2D.Float[5.6218925, 2.4400773] with IG = 63.853104
Iter num: 38
Used frontier: Point2D.Float[4.4580317, 2.6135397] with IG = 21.84262
Iter num: 39
Added advice frontier Point2D.Float[4.2618427, 2.610524]
Added advice frontier Point2D.Float[4.273152, 2.3744068]
Used Advice frontier: Point2D.Float[4.2618427, 2.610524] with IG = 509.65256

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9887073636054993, 1.4755418300628662) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1081043481826782, 0.5591347813606262) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0894291400909424, 0.43433576822280884) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3360599279403687, 0.4078366756439209) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0794713497161865, 0.4684826731681824) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3075064718723297, 0.4246317446231842) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.25561559200286865, 0.16141201555728912) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.09779484570026398, 0.01111309789121151) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.560292661190033, 0.14170324802398682) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5173466801643372, 0.2681266665458679) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5765337944030762, 0.5678682327270508) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8498072624206543, 1.0254276990890503) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9011170864105225, 1.468551516532898) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9510067701339722, 1.9405242204666138) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.995286226272583, 2.3805458545684814) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6813246607780457, 2.668269634246826) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.41556164622306824, 2.620790719985962) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0668524503707886, 2.4446403980255127) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.7005913257598877, 2.5240437984466553) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4693883657455444, 2.305610418319702) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1561917066574097, 2.018399715423584) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2222192287445068, 1.8369518518447876) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3141425848007202, 1.7899223566055298) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9397552013397217, 1.475319504737854) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2966816425323486, 1.741318702697754) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7171761989593506, 1.5095404386520386) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.822582244873047, 1.875657558441162) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0389821529388428, 2.1031599044799805) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8620657920837402, 2.39516019821167) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.963385581970215, 2.523536443710327) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.191815137863159, 2.4941320419311523) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5859291553497314, 2.8240678310394287) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.545999050140381, 2.8412625789642334) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.83640456199646, 2.472961187362671) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.512723445892334, 2.2866709232330322) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.164527654647827, 2.118429660797119) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1098930835723877, 1.9395197629928589) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0719358921051025, 1.5903878211975098) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.984586238861084, 1.2832603454589844) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.912721872329712, 0.8681884407997131) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.858257532119751, 0.6932550668716431) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9103894233703613, 0.5591673851013184) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.593494176864624, 0.338869571685791) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7686240673065186, 0.21930289268493652) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.408628225326538, 0.03371074050664902) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.593494176864624, 0.338869571685791) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9103894233703613, 0.5591673851013184) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.222904920578003, 0.6282808780670166) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6159260272979736, 0.5068809986114502) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.706301212310791, 0.3611788749694824) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6159260272979736, 0.5068809986114502) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.363349437713623, 0.716916024684906) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.121237277984619, 0.888407289981842) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1854259967803955, 1.0890830755233765) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.404989242553711, 1.2430402040481567) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.686861276626587, 1.469868779182434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.816333532333374, 1.2416393756866455) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.2495269775390625, 1.3761794567108154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.050482273101807, 0.9188814759254456) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.148805618286133, 0.3857742249965668) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.9092535972595215, 0.2611667513847351) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.611086845397949, 0.09332067519426346) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.442295551300049, 0.017469653859734535) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.611086845397949, 0.09332067519426346) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.784510135650635, 0.3495285212993622) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.88320255279541, 0.5414701104164124) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.994823932647705, 0.898408055305481) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.121662139892578, 1.2589439153671265) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.140430450439453, 1.509501576423645) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.977553844451904, 1.7967852354049683) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.914041519165039, 2.008929967880249) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.638558387756348, 2.5188777446746826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.069580078125, 2.482508659362793) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.62189245223999, 2.440077304840088) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.069580078125, 2.482508659362793) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.638558387756348, 2.5188777446746826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,b,35]  [r3,b,t,35]  [r3,35]  [r3,b,35]  [r3,t,35]  [r3,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 39
Total sampled points = 21638
RRG size = 1952

Movement Length = 28.508558
Remaining path Length = 0.0
Total path Length = 28.508558

Advice samples: [15, 5, 5, 2, 0, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):8338.48258

Initialization time (in ms):585.810238
Sampling time (in ms):6118.138516
Advice time (in ms):9.076066
Path checking time (in ms):728.470873
Learning time (in ms):187.21079
Exploration time (in ms):0.0
Time taken other than these things (in ms):709.776097
Moving time (in ms):872.4152



