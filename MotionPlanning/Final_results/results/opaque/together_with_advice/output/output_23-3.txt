Parameters values: 
Environment: results/environments/env23/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.2157226293405783,0.04055244830813173), (1.5157226293405783,0.04055244830813173), (1.5157226293405783,0.5405524483081318), (1.2157226293405783,0.5405524483081318)]
[(0.3576645860585022,2.593201535157728), (0.8576645860585022,2.593201535157728), (0.8576645860585022,2.893201535157728), (0.3576645860585022,2.893201535157728)]
[(2.856455974652672,0.04661123323166423), (3.1564559746526717,0.04661123323166423), (3.1564559746526717,0.5466112332316643), (2.856455974652672,0.5466112332316643)]
[(2.439977136056974,2.6041272805916598), (2.939977136056974,2.6041272805916598), (2.939977136056974,2.9041272805916596), (2.439977136056974,2.9041272805916596)]
[(4.462141000053162,0.03110407394402779), (4.762141000053162,0.03110407394402779), (4.762141000053162,0.5311040739440278), (4.462141000053162,0.5311040739440278)]
[(5.240185086464032,2.4996318482786917), (5.540185086464032,2.4996318482786917), (5.540185086464032,2.9996318482786917), (5.240185086464032,2.9996318482786917)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.041052807,w=0.2,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.041052807,w=1.5149511,h=2.7990265]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.0011094679,w=3.3497689,h=2.83897]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.0011094679,w=3.4383087,h=2.83897]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.0011094679,w=5.0334105,h=2.83897]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.0011094679,w=5.1516094,h=2.83897]  
t: java.awt.geom.Rectangle2D$Float[x=1.1157227,y=0.0,w=0.5,h=0.64055246]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=1.3580581,h=2.9932015]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=2.9987912,h=2.9932015]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=2.9987912,h=3.0041273]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=4.6044765,h=3.0041273]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=5.38252,h=3.0996318]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.97313595, 1.5274993] with IG = 36.63134
Iter num: 2
Used frontier: Point2D.Float[1.001199, 0.9387982] with IG = 54.295303
Iter num: 3
Added advice frontier Point2D.Float[1.276675, 0.593974]
Added advice frontier Point2D.Float[1.3176961, 0.7803084]
Used Advice frontier: Point2D.Float[1.3176961, 0.7803084] with IG = 282.51584
Iter num: 4
Used Advice frontier: Point2D.Float[1.276675, 0.593974] with IG = 524.119
Iter num: 5
Used frontier: Point2D.Float[1.532369, 0.5572367] with IG = 77.42344
Iter num: 6
Used frontier: Point2D.Float[0.30722067, 0.5102187] with IG = 22.8352
Iter num: 7
Added advice frontier Point2D.Float[0.104137495, 0.073018916]
Used Advice frontier: Point2D.Float[0.104137495, 0.073018916] with IG = 207.44101
Iter num: 8
Used frontier: Point2D.Float[1.0050831, 2.4129398] with IG = 13.736426
Iter num: 9
Added advice frontier Point2D.Float[0.73621655, 2.5675118]
Added advice frontier Point2D.Float[1.3908919, 2.7684267]
Added advice frontier Point2D.Float[1.3250712, 2.8772411]
Added advice frontier Point2D.Float[0.20802611, 2.5716333]
Used Advice frontier: Point2D.Float[0.73621655, 2.5675118] with IG = 322.44357
Iter num: 10
Used Advice frontier: Point2D.Float[0.20802611, 2.5716333] with IG = 189.31989
Iter num: 11
Used Advice frontier: Point2D.Float[1.3250712, 2.8772411] with IG = 81.00998
Iter num: 12
Used Advice frontier: Point2D.Float[1.3908919, 2.7684267] with IG = 786.3308
Iter num: 13
Used frontier: Point2D.Float[1.9258274, 1.446935] with IG = 12.363838
Iter num: 14
Used frontier: Point2D.Float[2.7382905, 1.476356] with IG = 28.20932
Iter num: 15
Added advice frontier Point2D.Float[3.123944, 2.126171]
Added advice frontier Point2D.Float[3.2208533, 0.79792166]
Added advice frontier Point2D.Float[3.0560572, 1.9998976]
Added advice frontier Point2D.Float[3.1110492, 1.0967668]
Used Advice frontier: Point2D.Float[3.1110492, 1.0967668] with IG = 187.96562
Iter num: 16
Added advice frontier Point2D.Float[2.7885065, 0.5242225]
Added advice frontier Point2D.Float[3.3838391, 0.19257472]
Added advice frontier Point2D.Float[2.5296335, 0.41393483]
Added advice frontier Point2D.Float[3.4794214, 0.44167748]
Added advice frontier Point2D.Float[3.1881368, 0.36488026]
Used Advice frontier: Point2D.Float[3.2208533, 0.79792166] with IG = 314.09076
Iter num: 17
Used Advice frontier: Point2D.Float[3.1881368, 0.36488026] with IG = 230.26855
Iter num: 18
Added advice frontier Point2D.Float[3.2427132, 0.18991387]
Added advice frontier Point2D.Float[3.2792728, 0.17337485]
Used Advice frontier: Point2D.Float[3.2427132, 0.18991387] with IG = 545.6111
Iter num: 19
Used Advice frontier: Point2D.Float[3.2792728, 0.17337485] with IG = 2492.1138
Iter num: 20
Used Advice frontier: Point2D.Float[3.3838391, 0.19257472] with IG = 940.60626
Iter num: 21
Used Advice frontier: Point2D.Float[3.4794214, 0.44167748] with IG = 374.79703
Iter num: 22
Used Advice frontier: Point2D.Float[2.7885065, 0.5242225] with IG = 129.79231
Iter num: 23
Used Advice frontier: Point2D.Float[2.5296335, 0.41393483] with IG = 355.38254
Iter num: 24
Used Advice frontier: Point2D.Float[3.0560572, 1.9998976] with IG = 55.854515
Iter num: 25
Added advice frontier Point2D.Float[2.6258924, 2.5773194]
Added advice frontier Point2D.Float[2.3402784, 2.3605304]
Added advice frontier Point2D.Float[3.4993935, 2.7439847]
Added advice frontier Point2D.Float[3.288323, 2.9220715]
Used Advice frontier: Point2D.Float[3.123944, 2.126171] with IG = 697.5187
Iter num: 26
Used Advice frontier: Point2D.Float[2.6258924, 2.5773194] with IG = 145.67995
Iter num: 27
Used Advice frontier: Point2D.Float[2.3402784, 2.3605304] with IG = 278.88513
Iter num: 28
Used Advice frontier: Point2D.Float[3.4993935, 2.7439847] with IG = 71.713135
Iter num: 29
Used Advice frontier: Point2D.Float[3.288323, 2.9220715] with IG = 362.1058
Iter num: 30
Used frontier: Point2D.Float[3.8817747, 1.5519577] with IG = 15.250152
Iter num: 31
Used frontier: Point2D.Float[4.6862316, 1.8261327] with IG = 22.123758
Iter num: 32
Added advice frontier Point2D.Float[5.010359, 0.99109244]
Added advice frontier Point2D.Float[4.982653, 1.0364053]
Added advice frontier Point2D.Float[5.1000414, 2.2489834]
Added advice frontier Point2D.Float[5.117614, 1.8605008]
Used Advice frontier: Point2D.Float[5.1000414, 2.2489834] with IG = 169.02089
Iter num: 33
Added advice frontier Point2D.Float[5.1633606, 2.9086106]
Added advice frontier Point2D.Float[4.669346, 2.7954583]
Used Advice frontier: Point2D.Float[5.117614, 1.8605008] with IG = 257.14886
Iter num: 34
Added advice frontier Point2D.Float[5.1252503, 2.6112056]
Added advice frontier Point2D.Float[4.8644147, 2.4772365]
Added advice frontier Point2D.Float[5.173296, 2.5986185]
Used Advice frontier: Point2D.Float[4.8644147, 2.4772365] with IG = 139.48288
Iter num: 35
Used Advice frontier: Point2D.Float[5.1252503, 2.6112056] with IG = 341.031
Iter num: 36
Used Advice frontier: Point2D.Float[5.173296, 2.5986185] with IG = 2013.4066
Iter num: 37
Used Advice frontier: Point2D.Float[5.1633606, 2.9086106] with IG = 322.4233
Iter num: 38
Used Advice frontier: Point2D.Float[4.669346, 2.7954583] with IG = 197.31352
Iter num: 39
Used Advice frontier: Point2D.Float[4.982653, 1.0364053] with IG = 55.762783
Iter num: 40
Added advice frontier Point2D.Float[4.6903334, 0.59116536]
Added advice frontier Point2D.Float[4.3951874, 0.6361531]
Used Advice frontier: Point2D.Float[5.010359, 0.99109244] with IG = 1882.8214
Iter num: 41
Used frontier: Point2D.Float[5.118894, 0.82321894] with IG = 245.11823
Iter num: 42
Used Advice frontier: Point2D.Float[4.6903334, 0.59116536] with IG = 140.42726
Iter num: 43
Used Advice frontier: Point2D.Float[4.3951874, 0.6361531] with IG = 334.94675
Iter num: 44
Used frontier: Point2D.Float[4.2982764, 0.45350748] with IG = 9.672886
Iter num: 45
Added advice frontier Point2D.Float[5.050595, 0.12804343]
Added advice frontier Point2D.Float[5.104867, 0.20744957]
Used Advice frontier: Point2D.Float[5.104867, 0.20744957] with IG = 49.368656

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9731359481811523, 1.5274993181228638) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0011990070343018, 0.938798189163208) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3176960945129395, 0.7803084254264832) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2766749858856201, 0.5939739942550659) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.5323690176010132, 0.5572366714477539) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5740430951118469, 0.5131741166114807) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3072206676006317, 0.5102186799049377) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10413749516010284, 0.07301891595125198) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.634985625743866, 0.6148021817207336) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8666094541549683, 1.059346079826355) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9202926158905029, 1.4791271686553955) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9894840717315674, 2.160676956176758) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0050830841064453, 2.4129397869110107) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7362165451049805, 2.567511796951294) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.20802611112594604, 2.5716333389282227) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7614588141441345, 2.502708911895752) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3250712156295776, 2.8772411346435547) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3908919095993042, 2.7684266567230225) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.258709192276001, 2.439208984375) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.175989031791687, 1.8936806917190552) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4820328950881958, 1.7148712873458862) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9258273839950562, 1.4469350576400757) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2538979053497314, 1.428536295890808) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.738290548324585, 1.476356029510498) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.111049175262451, 1.0967668294906616) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.220853328704834, 0.7979216575622559) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1881368160247803, 0.3648802638053894) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.242713212966919, 0.18991386890411377) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.2792727947235107, 0.17337484657764435) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.3838391304016113, 0.19257472455501556) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.479421377182007, 0.4416774809360504) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1183676719665527, 0.6506894826889038) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.788506507873535, 0.5242224931716919) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.5296335220336914, 0.4139348268508911) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6504526138305664, 0.4628206491470337) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9378650188446045, 0.7909534573554993) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0510706901550293, 1.214630126953125) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0530805587768555, 1.5568804740905762) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0560572147369385, 1.9998975992202759) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.123944044113159, 2.126171112060547) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.890631914138794, 2.245837926864624) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.625892400741577, 2.577319383621216) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.340278387069702, 2.360530376434326) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.704486608505249, 2.2681350708007812) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.049497365951538, 2.2498250007629395) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3024725914001465, 2.467343807220459) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4993934631347656, 2.7439846992492676) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.288322925567627, 2.9220714569091797) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1521716117858887, 2.656627893447876) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1891441345214844, 2.3167855739593506) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.189037322998047, 1.8968846797943115) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3694772720336914, 1.8133049011230469) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7009105682373047, 1.6187680959701538) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.881774663925171, 1.5519577264785767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.170734882354736, 1.3618801832199097) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.68623161315918, 1.8261326551437378) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.100041389465332, 2.248983383178711) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.117613792419434, 1.8605008125305176) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.100041389465332, 2.248983383178711) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.864414691925049, 2.47723650932312) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.125250339508057, 2.611205577850342) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.173295974731445, 2.598618507385254) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:1>
(5.163360595703125, 2.9086105823516846) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.669345855712891, 2.7954583168029785) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.735921382904053, 2.5090975761413574) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.754268646240234, 2.3905324935913086) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.799309253692627, 2.1469995975494385) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.814098834991455, 1.848747968673706) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.82864236831665, 1.6156576871871948) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.91763162612915, 1.305668830871582) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9826531410217285, 1.036405324935913) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.010358810424805, 0.9910924434661865) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.118894100189209, 0.8232189416885376) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.010358810424805, 0.9910924434661865) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.690333366394043, 0.5911653637886047) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.3951873779296875, 0.6361531019210815) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.298276424407959, 0.4535074830055237) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.3951873779296875, 0.6361531019210815) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.690333366394043, 0.5911653637886047) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.010358810424805, 0.9910924434661865) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.188501358032227, 0.7111541032791138) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,t,2]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,b,t,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,t,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 45
Total sampled points = 25194
RRG size = 2251

Movement Length = 29.994373
Remaining path Length = 0.0961811
Total path Length = 30.090555

Advice samples: [12, 6, 7, 2, 3, 1, 3, 0, 0, 0] (34)

Total time taken (in ms):10160.669501

Initialization time (in ms):508.976588
Sampling time (in ms):8116.486899
Advice time (in ms):8.272735
Path checking time (in ms):919.720911
Learning time (in ms):175.818741
Exploration time (in ms):0.0
Time taken other than these things (in ms):431.393627
Moving time (in ms):2080.3748



