Parameters values: 
Environment: results/environments/env43/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.9464961852971374,0.044126745694382054), (1.2464961852971375,0.044126745694382054), (1.2464961852971375,0.544126745694382), (0.9464961852971374,0.544126745694382)]
[(0.9727464850309987,2.486878934212696), (1.4727464850309988,2.486878934212696), (1.4727464850309988,2.786878934212696), (0.9727464850309987,2.786878934212696)]
[(3.432239658554289,0.23801273828136338), (3.932239658554289,0.23801273828136338), (3.932239658554289,0.5380127382813633), (3.432239658554289,0.5380127382813633)]
[(2.3097636200998863,2.6550924622919516), (2.8097636200998863,2.6550924622919516), (2.8097636200998863,2.9550924622919514), (2.3097636200998863,2.9550924622919514)]
[(5.378278035170789,0.07541829192520734), (5.878278035170789,0.07541829192520734), (5.878278035170789,0.3754182919252073), (5.378278035170789,0.3754182919252073)]
[(5.5729060168562645,2.4935657537752576), (5.872906016856264,2.4935657537752576), (5.872906016856264,2.9935657537752576), (5.5729060168562645,2.9935657537752576)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.6154911,y=0.014554821,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=0.43962836,h=2.7991025]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=2.6898956,h=2.7991025]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=2.8611693,h=2.7991025]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=4.1118517,h=2.7991025]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=5.191603,h=2.7991025]  
t: java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=0.50000006,h=0.6441268]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=0.72625035,h=2.886879]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=3.1857433,h=2.886879]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=3.1857433,h=3.0550926]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=5.131782,h=3.0550926]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=5.131782,h=3.0935657]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9499605, 1.4393067] with IG = 37.55319
Iter num: 2
Used frontier: Point2D.Float[1.0417317, 2.3856707] with IG = 30.50053
Iter num: 3
Added advice frontier Point2D.Float[1.132374, 2.4359128]
Added advice frontier Point2D.Float[0.42046323, 2.7164338]
Added advice frontier Point2D.Float[0.22085795, 2.7683618]
Used Advice frontier: Point2D.Float[1.132374, 2.4359128] with IG = 964.9206
Iter num: 4
Used Advice frontier: Point2D.Float[0.42046323, 2.7164338] with IG = 130.03732
Iter num: 5
Used Advice frontier: Point2D.Float[0.22085795, 2.7683618] with IG = 484.85004
Iter num: 6
Used frontier: Point2D.Float[0.76670146, 2.7955863] with IG = 12.808267
Iter num: 7
Used frontier: Point2D.Float[1.4773717, 2.890407] with IG = 15.342386
Iter num: 8
Used frontier: Point2D.Float[1.880929, 1.4599029] with IG = 10.483666
Iter num: 9
Used frontier: Point2D.Float[2.7280629, 1.4090797] with IG = 26.911959
Iter num: 10
Added advice frontier Point2D.Float[3.1933198, 2.1170762]
Added advice frontier Point2D.Float[2.8920825, 1.9973041]
Added advice frontier Point2D.Float[3.3178313, 0.69587266]
Used Advice frontier: Point2D.Float[2.8920825, 1.9973041] with IG = 163.75621
Iter num: 11
Added advice frontier Point2D.Float[2.654935, 2.5577939]
Added advice frontier Point2D.Float[2.5059373, 2.2307882]
Added advice frontier Point2D.Float[3.0479794, 2.695305]
Added advice frontier Point2D.Float[2.9672344, 2.719387]
Used Advice frontier: Point2D.Float[3.1933198, 2.1170762] with IG = 308.47556
Iter num: 12
Used Advice frontier: Point2D.Float[3.0479794, 2.695305] with IG = 167.72467
Iter num: 13
Used Advice frontier: Point2D.Float[2.9672344, 2.719387] with IG = 1186.8073
Iter num: 14
Used Advice frontier: Point2D.Float[2.654935, 2.5577939] with IG = 284.39023
Iter num: 15
Used Advice frontier: Point2D.Float[2.5059373, 2.2307882] with IG = 278.27966
Iter num: 16
Used Advice frontier: Point2D.Float[3.3178313, 0.69587266] with IG = 54.647655
Iter num: 17
Added advice frontier Point2D.Float[3.3347464, 0.59275657]
Added advice frontier Point2D.Float[3.4656363, 0.009155579]
Added advice frontier Point2D.Float[2.8700893, 0.27016446]
Added advice frontier Point2D.Float[2.8844845, 0.06526898]
Used Advice frontier: Point2D.Float[3.3347464, 0.59275657] with IG = 956.9904
Iter num: 18
Used Advice frontier: Point2D.Float[2.8700893, 0.27016446] with IG = 167.98552
Iter num: 19
Used Advice frontier: Point2D.Float[2.8844845, 0.06526898] with IG = 486.8536
Iter num: 20
Used Advice frontier: Point2D.Float[3.4656363, 0.009155579] with IG = 171.16483
Iter num: 21
Used frontier: Point2D.Float[3.714458, 1.536096] with IG = 15.284859
Iter num: 22
Used frontier: Point2D.Float[4.449104, 1.144331] with IG = 26.611757
Iter num: 23
Used frontier: Point2D.Float[4.462729, 1.1267711] with IG = 494.91632
Iter num: 24
Used frontier: Point2D.Float[4.449104, 1.144331] with IG = 44.992393
Iter num: 25
Used frontier: Point2D.Float[5.242151, 1.638299] with IG = 29.115387
Iter num: 26
Added advice frontier Point2D.Float[5.0843644, 0.83746886]
Added advice frontier Point2D.Float[5.0531883, 2.4570444]
Used Advice frontier: Point2D.Float[5.0531883, 2.4570444] with IG = 95.12485
Iter num: 27
Added advice frontier Point2D.Float[5.6684055, 2.487127]
Added advice frontier Point2D.Float[5.7772064, 2.2631986]
Added advice frontier Point2D.Float[5.3852577, 2.4897308]
Added advice frontier Point2D.Float[5.4695463, 2.3929353]
Used Advice frontier: Point2D.Float[5.3852577, 2.4897308] with IG = 299.6935
Iter num: 28
Added advice frontier Point2D.Float[5.4858265, 2.4802194]
Used Advice frontier: Point2D.Float[5.4858265, 2.4802194] with IG = 989.927
Iter num: 29
Used Advice frontier: Point2D.Float[5.4695463, 2.3929353] with IG = 1126.2607
Iter num: 30
Used Advice frontier: Point2D.Float[5.6684055, 2.487127] with IG = 454.46527
Iter num: 31
Used Advice frontier: Point2D.Float[5.7772064, 2.2631986] with IG = 401.6693
Iter num: 32
Used Advice frontier: Point2D.Float[5.0843644, 0.83746886] with IG = 47.273857
Iter num: 33
Added advice frontier Point2D.Float[5.3527474, 0.42436293]
Added advice frontier Point2D.Float[4.9124274, 0.23896402]
Used Advice frontier: Point2D.Float[5.3527474, 0.42436293] with IG = 202.99141
Iter num: 34
Added advice frontier Point2D.Float[4.376641, 0.25659224]
Added advice frontier Point2D.Float[4.609726, 0.030139547]
Used Advice frontier: Point2D.Float[4.9124274, 0.23896402] with IG = 209.31018
Iter num: 35
Used Advice frontier: Point2D.Float[4.609726, 0.030139547] with IG = 271.9281
Iter num: 36
Used Advice frontier: Point2D.Float[4.376641, 0.25659224] with IG = 307.71484
Iter num: 37
Used frontier: Point2D.Float[4.1190057, 2.4445972] with IG = 7.4352264
Iter num: 38
Used frontier: Point2D.Float[5.885409, 2.361021] with IG = 5.0833125
Iter num: 39
Used frontier: Point2D.Float[0.7496951, 0.615884] with IG = 3.2404847
Iter num: 40
Added advice frontier Point2D.Float[0.6983338, 0.18562888]
Added advice frontier Point2D.Float[0.32655105, 0.010202218]
Used Advice frontier: Point2D.Float[0.6983338, 0.18562888] with IG = 230.67238

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.949960470199585, 1.4393067359924316) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0417317152023315, 2.3856706619262695) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1323740482330322, 2.435912847518921) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.634059727191925, 2.5938847064971924) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4204632341861725, 2.7164337635040283) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.22085794806480408, 2.768361806869507) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7667014598846436, 2.795586347579956) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4773716926574707, 2.890407085418701) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5312758684158325, 2.371959924697876) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1484473943710327, 2.2182533740997314) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1474446058273315, 1.9204727411270142) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.328376293182373, 1.826063871383667) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8809289932250977, 1.4599028825759888) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9200783967971802, 1.4581011533737183) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.601138114929199, 1.4531875848770142) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.728062868118286, 1.409079670906067) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.892082452774048, 1.997304081916809) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.193319797515869, 2.1170761585235596) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0479793548583984, 2.695305109024048) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.9672343730926514, 2.7193870544433594) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.654934883117676, 2.5577938556671143) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.505937337875366, 2.230788230895996) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.892082452774048, 1.997304081916809) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.939523220062256, 1.8016963005065918) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1059844493865967, 1.3797214031219482) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.154895544052124, 1.042540431022644) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.31783127784729, 0.6958726644515991) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3347463607788086, 0.5927565693855286) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.140242576599121, 0.5631821751594543) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.870089292526245, 0.27016445994377136) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.8844845294952393, 0.06526897847652435) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.028333902359009, 0.042252082377672195) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4656362533569336, 0.009155578911304474) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3535053730010986, 0.23593483865261078) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.24654483795166, 0.616203784942627) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.154895544052124, 1.042540431022644) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.35925030708313, 1.1923667192459106) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.52484393119812, 1.359721064567566) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7144579887390137, 1.5360959768295288) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.145290851593018, 1.437736988067627) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.449103832244873, 1.1443309783935547) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.462728977203369, 1.126771092414856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.449103832244873, 1.1443309783935547) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.534987449645996, 1.4713736772537231) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.242150783538818, 1.6382989883422852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.891979694366455, 1.8207507133483887) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.053188323974609, 2.4570443630218506) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.385257720947266, 2.4897308349609375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.48582649230957, 2.4802193641662598) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:1>
(5.469546318054199, 2.392935276031494) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.668405532836914, 2.4871270656585693) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.7772064208984375, 2.2631986141204834) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.469546318054199, 2.392935276031494) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.199278354644775, 2.3203439712524414) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.094220161437988, 1.9387805461883545) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.086945056915283, 1.7629679441452026) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.127142429351807, 1.4712103605270386) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.104869842529297, 1.2453997135162354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.084364414215088, 0.8374688625335693) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.352747440338135, 0.4243629276752472) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.9124274253845215, 0.2389640212059021) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6097259521484375, 0.03013954684138298) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.376640796661377, 0.2565922439098358) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.627679347991943, 0.1620834767818451) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.760270118713379, 0.5029971599578857) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.763247489929199, 0.5514748096466064) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.873133182525635, 0.8785639405250549) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.869081974029541, 1.2444957494735718) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8376994132995605, 1.5065628290176392) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8468146324157715, 1.8610666990280151) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7915568351745605, 2.1998331546783447) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.754364013671875, 2.2694003582000732) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.428818225860596, 2.3567872047424316) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.1190056800842285, 2.4445972442626953) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.22468376159668, 2.4387543201446533) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.609115123748779, 2.406066656112671) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.81913948059082, 2.406559467315674) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.103559970855713, 2.3828306198120117) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.469546318054199, 2.392935276031494) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.830410957336426, 2.3609018325805664) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.885408878326416, 2.361021041870117) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.805619716644287, 2.3378102779388428) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.476526260375977, 2.2372586727142334) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1353020668029785, 2.135819911956787) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.933840274810791, 1.9229131937026978) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.580713748931885, 1.7733304500579834) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.27822208404541, 1.6758652925491333) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9401021003723145, 1.6258456707000732) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.664426565170288, 1.5833245515823364) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.313354730606079, 1.5032905340194702) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1372461318969727, 1.465782642364502) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.735689640045166, 1.3841758966445923) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4110631942749023, 1.3025974035263062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.849478006362915, 1.1977684497833252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2130820751190186, 1.0750452280044556) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7496951222419739, 0.615884006023407) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [r2,46]  [h,46]  [r4,46]  [r4,b,8]  [r4,8]  [r4,t,8]  [r4,8]  [h,8]  [r3,8]  [r3,t,8]  [r3,8]  [r3,b,25]  [r3,25]  [r3,t,25]  [r3,25]  [h,25]  [r6,25]  [r6,b,27]  [r6,b,t,27]  [r6,27]  [r6,t,27]  [r6,27]  [h,27]  [r5,27]  [r5,t,27]  [r5,27]  [r5,b,33]  [r5,33]  [h,33]  [r6,33]  [h,33]  [r1,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21987
RRG size = 2001

Movement Length = 33.22371
Remaining path Length = 0.0
Total path Length = 33.22371

Advice samples: [12, 9, 0, 4, 1, 0, 0, 0, 0, 0] (26)

Total time taken (in ms):8359.763537

Initialization time (in ms):524.927616
Sampling time (in ms):6363.935479
Advice time (in ms):8.228416
Path checking time (in ms):720.377896
Learning time (in ms):190.717069
Exploration time (in ms):0.0
Time taken other than these things (in ms):551.577061
Moving time (in ms):1610.6128



