Parameters values: 
Environment: results/environments/env3/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.5316647776071026,0.029906735253392273), (1.8316647776071027,0.029906735253392273), (1.8316647776071027,0.5299067352533923), (1.5316647776071026,0.5299067352533923)]
[(0.8916993769647183,2.573264270639125), (1.3916993769647183,2.573264270639125), (1.3916993769647183,2.8732642706391247), (0.8916993769647183,2.8732642706391247)]
[(2.822466880675265,0.011726331347083983), (3.322466880675265,0.011726331347083983), (3.322466880675265,0.311726331347084), (2.822466880675265,0.311726331347084)]
[(3.292119766684071,2.5542887391079483), (3.792119766684071,2.5542887391079483), (3.792119766684071,2.854288739107948), (3.292119766684071,2.854288739107948)]
[(4.506744772545506,0.04602612679720857), (4.806744772545506,0.04602612679720857), (4.806744772545506,0.5460261267972085), (4.506744772545506,0.5460261267972085)]
[(5.452111731413338,2.47834811035907), (5.752111731413338,2.47834811035907), (5.752111731413338,2.97834811035907), (5.452111731413338,2.97834811035907)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.105814,y=0.024023486,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.024023486,w=0.9972011,h=2.7794473]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.022553466,w=2.299967,h=2.7809174]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.022553466,w=2.299967,h=2.8262458]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.022553466,w=5.491236,h=2.8262458]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.022553466,w=5.491236,h=2.8262458]  
t: java.awt.geom.Rectangle2D$Float[x=1.4316648,y=0.0,w=0.5,h=0.6299067]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=1.1399655,h=2.9732642]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=2.6307676,h=2.9732642]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=3.1004205,h=2.9732642]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=4.1150455,h=2.9732642]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=5.0604124,h=3.0783482]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0240248, 1.4076098] with IG = 34.459282
Iter num: 2
Used frontier: Point2D.Float[1.043006, 0.67812914] with IG = 56.185352
Iter num: 3
Added advice frontier Point2D.Float[1.5026608, 0.47432646]
Added advice frontier Point2D.Float[1.3905402, 0.54545486]
Added advice frontier Point2D.Float[1.238851, 0.052958317]
Added advice frontier Point2D.Float[1.3300316, 0.24251175]
Used Advice frontier: Point2D.Float[1.3905402, 0.54545486] with IG = 268.8186
Iter num: 4
Used Advice frontier: Point2D.Float[1.5026608, 0.47432646] with IG = 753.1312
Iter num: 5
Used Advice frontier: Point2D.Float[1.3300316, 0.24251175] with IG = 345.98376
Iter num: 6
Used Advice frontier: Point2D.Float[1.238851, 0.052958317] with IG = 475.41266
Iter num: 7
Used frontier: Point2D.Float[0.17523362, 0.36777163] with IG = 21.635212
Iter num: 8
Used frontier: Point2D.Float[0.98913336, 2.292151] with IG = 12.971638
Iter num: 9
Added advice frontier Point2D.Float[0.3671969, 2.6114538]
Added advice frontier Point2D.Float[0.5560683, 2.9465582]
Added advice frontier Point2D.Float[1.0849581, 2.4968848]
Used Advice frontier: Point2D.Float[1.0849581, 2.4968848] with IG = 442.38116
Iter num: 10
Used Advice frontier: Point2D.Float[0.3671969, 2.6114538] with IG = 137.57362
Iter num: 11
Used Advice frontier: Point2D.Float[0.5560683, 2.9465582] with IG = 259.96622
Iter num: 12
Used frontier: Point2D.Float[1.6429586, 2.6287785] with IG = 13.49278
Iter num: 13
Used frontier: Point2D.Float[1.9932469, 1.5255145] with IG = 12.286239
Iter num: 14
Used frontier: Point2D.Float[2.7299252, 1.4557427] with IG = 32.43238
Iter num: 15
Added advice frontier Point2D.Float[2.9326675, 2.278312]
Added advice frontier Point2D.Float[3.089804, 0.95069724]
Added advice frontier Point2D.Float[2.9187412, 1.9792696]
Added advice frontier Point2D.Float[3.127822, 1.0045027]
Used Advice frontier: Point2D.Float[2.9187412, 1.9792696] with IG = 179.683
Iter num: 16
Added advice frontier Point2D.Float[3.2606096, 2.6908557]
Added advice frontier Point2D.Float[3.1653874, 2.8045511]
Added advice frontier Point2D.Float[2.4845934, 2.7029693]
Added advice frontier Point2D.Float[2.327538, 2.594086]
Used Advice frontier: Point2D.Float[2.9326675, 2.278312] with IG = 334.03876
Iter num: 17
Used Advice frontier: Point2D.Float[3.2606096, 2.6908557] with IG = 189.75009
Iter num: 18
Used Advice frontier: Point2D.Float[3.1653874, 2.8045511] with IG = 674.29315
Iter num: 19
Used Advice frontier: Point2D.Float[2.4845934, 2.7029693] with IG = 141.25638
Iter num: 20
Used Advice frontier: Point2D.Float[2.327538, 2.594086] with IG = 523.26636
Iter num: 21
Used Advice frontier: Point2D.Float[3.127822, 1.0045027] with IG = 54.032166
Iter num: 22
Added advice frontier Point2D.Float[2.973883, 0.3530344]
Used Advice frontier: Point2D.Float[3.089804, 0.95069724] with IG = 1517.8738
Iter num: 23
Used Advice frontier: Point2D.Float[2.973883, 0.3530344] with IG = 164.23021
Iter num: 24
Added advice frontier Point2D.Float[2.4553633, 0.20340036]
Added advice frontier Point2D.Float[2.3635023, 0.26796362]
Used Advice frontier: Point2D.Float[2.3635023, 0.26796362] with IG = 104.547005
Iter num: 25
Added advice frontier Point2D.Float[2.7309787, 0.14471114]
Added advice frontier Point2D.Float[2.6035898, 0.20143041]
Used Advice frontier: Point2D.Float[2.4553633, 0.20340036] with IG = 890.62836
Iter num: 26
Used Advice frontier: Point2D.Float[2.6035898, 0.20143041] with IG = 674.5837
Iter num: 27
Used Advice frontier: Point2D.Float[2.7309787, 0.14471114] with IG = 717.1265
Iter num: 28
Used frontier: Point2D.Float[3.6510556, 0.27405638] with IG = 25.110218
Iter num: 29
Used frontier: Point2D.Float[3.7326658, 1.555481] with IG = 19.667576
Iter num: 30
Used frontier: Point2D.Float[4.6195083, 1.3419747] with IG = 24.961903
Iter num: 31
Added advice frontier Point2D.Float[5.1614833, 2.0702395]
Added advice frontier Point2D.Float[4.990847, 1.8678164]
Added advice frontier Point2D.Float[5.1419353, 0.6265371]
Added advice frontier Point2D.Float[5.1547227, 1.0070395]
Used Advice frontier: Point2D.Float[4.990847, 1.8678164] with IG = 155.33122
Iter num: 32
Added advice frontier Point2D.Float[5.3802805, 2.5631447]
Added advice frontier Point2D.Float[5.099398, 2.6623125]
Added advice frontier Point2D.Float[4.6749606, 2.637537]
Added advice frontier Point2D.Float[4.7468576, 2.799149]
Used Advice frontier: Point2D.Float[5.1614833, 2.0702395] with IG = 377.71686
Iter num: 33
Used Advice frontier: Point2D.Float[5.3802805, 2.5631447] with IG = 185.43091
Iter num: 34
Used Advice frontier: Point2D.Float[5.099398, 2.6623125] with IG = 335.71198
Iter num: 35
Used Advice frontier: Point2D.Float[4.7468576, 2.799149] with IG = 264.4346
Iter num: 36
Used Advice frontier: Point2D.Float[4.6749606, 2.637537] with IG = 565.34515
Iter num: 37
Used Advice frontier: Point2D.Float[5.1547227, 1.0070395] with IG = 47.5991
Iter num: 38
Added advice frontier Point2D.Float[4.8755274, 0.15843873]
Used Advice frontier: Point2D.Float[5.1419353, 0.6265371] with IG = 262.66208
Iter num: 39
Added advice frontier Point2D.Float[5.6637497, 0.13798718]
Added advice frontier Point2D.Float[5.9483085, 0.26453894]
Used Advice frontier: Point2D.Float[4.8755274, 0.15843873] with IG = 164.29753

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0240248441696167, 1.4076098203659058) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0430059432983398, 0.6781291365623474) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3905402421951294, 0.5454548597335815) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5026607513427734, 0.4743264615535736) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3300316333770752, 0.24251174926757812) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2388509511947632, 0.05295831710100174) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8254539370536804, 0.18181884288787842) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.1752336174249649, 0.36777162551879883) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6892504096031189, 0.7986244559288025) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8909895420074463, 1.0663925409317017) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9506988525390625, 1.8104206323623657) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.989133358001709, 2.2921509742736816) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0849580764770508, 2.496884822845459) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7462193369865417, 2.5546181201934814) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3671968877315521, 2.6114537715911865) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5560683012008667, 2.9465582370758057) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6905561685562134, 2.6292216777801514) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0849580764770508, 2.496884822845459) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.642958641052246, 2.6287784576416016) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4668787717819214, 2.413184642791748) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.19321870803833, 2.1032607555389404) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.192270278930664, 1.8806474208831787) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.423575758934021, 1.7753276824951172) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9932469129562378, 1.5255144834518433) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9973300695419312, 1.525590419769287) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7299251556396484, 1.4557427167892456) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.918741226196289, 1.9792696237564087) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9326674938201904, 2.2783119678497314) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2606096267700195, 2.6908557415008545) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1653873920440674, 2.804551124572754) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.936443328857422, 2.848702907562256) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.484593391418457, 2.7029693126678467) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.327538013458252, 2.594085931777954) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5973143577575684, 2.314276933670044) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.918741226196289, 1.9792696237564087) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9985969066619873, 1.695001244544983) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0649077892303467, 1.3615920543670654) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.127821922302246, 1.0045026540756226) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.08980393409729, 0.9506972432136536) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0395267009735107, 0.7197872400283813) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9738829135894775, 0.3530344069004059) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8392834663391113, 0.5679971575737) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5197064876556396, 0.6143336892127991) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.363502264022827, 0.26796361804008484) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4553632736206055, 0.2034003585577011) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.6035897731781006, 0.20143041014671326) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7309787273406982, 0.14471113681793213) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7695846557617188, 0.3649995028972626) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.184149980545044, 0.34572863578796387) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.440761089324951, 0.33760130405426025) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6510555744171143, 0.2740563750267029) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.48746919631958, 0.4830198287963867) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.318265676498413, 0.8324968218803406) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.127821922302246, 1.0045026540756226) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4235057830810547, 1.2595971822738647) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.732665777206421, 1.55548095703125) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8989651203155518, 1.5528098344802856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.318577289581299, 1.3887755870819092) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.619508266448975, 1.3419747352600098) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.804815292358398, 1.5977905988693237) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.990847110748291, 1.86781644821167) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.161483287811279, 2.070239543914795) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.380280494689941, 2.5631446838378906) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.099398136138916, 2.6623125076293945) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.746857643127441, 2.7991490364074707) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.674960613250732, 2.6375370025634766) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.099398136138916, 2.6623125076293945) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.087489604949951, 2.4268221855163574) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.161483287811279, 2.070239543914795) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.183857440948486, 1.7710739374160767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.18470573425293, 1.5649715662002563) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.119173049926758, 1.3528047800064087) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.154722690582275, 1.0070395469665527) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.141935348510742, 0.6265370845794678) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.120925426483154, 0.6091440916061401) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,t,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... done

Number of iterations = 39
Total sampled points = 20601
RRG size = 1951

Movement Length = 26.678198
Remaining path Length = 0.8337735
Total path Length = 27.51197

Advice samples: [12, 7, 9, 1, 0, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):9029.724251

Initialization time (in ms):581.28241
Sampling time (in ms):7024.865264
Advice time (in ms):8.33233
Path checking time (in ms):713.550588
Learning time (in ms):174.774371
Exploration time (in ms):0.0
Time taken other than these things (in ms):526.919288
Moving time (in ms):1275.0684



