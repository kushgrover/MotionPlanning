Parameters values: 
Environment: results/environments/env75/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.0046784470120502,0.20888578497069216), (1.5046784470120502,0.20888578497069216), (1.5046784470120502,0.5088857849706921), (1.0046784470120502,0.5088857849706921)]
[(0.33768745997417154,2.4842732117048585), (0.6376874599741715,2.4842732117048585), (0.6376874599741715,2.9842732117048585), (0.33768745997417154,2.9842732117048585)]
[(2.6006308217132212,0.004383289788441667), (2.900630821713221,0.004383289788441667), (2.900630821713221,0.5043832897884417), (2.6006308217132212,0.5043832897884417)]
[(2.890389793774743,2.4695444364623214), (3.190389793774743,2.4695444364623214), (3.190389793774743,2.9695444364623214), (2.890389793774743,2.9695444364623214)]
[(4.60640805461215,0.00018335428599908227), (5.10640805461215,0.00018335428599908227), (5.10640805461215,0.30018335428599907), (4.60640805461215,0.30018335428599907)]
[(4.127454020473715,2.454297213534866), (4.427454020473715,2.454297213534866), (4.427454020473715,2.954297213534866), (4.127454020473715,2.954297213534866)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=1.3065677,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=2.8305266,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=2.8305266,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=4.192007,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=4.4572687,h=2.6501615]  
t: java.awt.geom.Rectangle2D$Float[x=0.90467846,y=0.10888579,w=0.6999999,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.10888579,w=1.3669909,h=2.9753873]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=2.7629435,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=3.0527024,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=4.9687204,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=4.9687204,h=3.084273]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.93830204, 1.5852101] with IG = 37.976715
Iter num: 2
Used frontier: Point2D.Float[1.0085971, 2.4544835] with IG = 47.012363
Iter num: 3
Added advice frontier Point2D.Float[0.66826206, 2.648104]
Added advice frontier Point2D.Float[1.524408, 2.4882529]
Added advice frontier Point2D.Float[1.6945894, 2.467944]
Used Advice frontier: Point2D.Float[0.66826206, 2.648104] with IG = 255.39069
Iter num: 4
Used Advice frontier: Point2D.Float[1.524408, 2.4882529] with IG = 114.818344
Iter num: 5
Used Advice frontier: Point2D.Float[1.6945894, 2.467944] with IG = 583.46826
Iter num: 6
Used frontier: Point2D.Float[1.7019129, 1.3958433] with IG = 14.507381
Iter num: 7
Added advice frontier Point2D.Float[0.9526574, 0.60375935]
Used Advice frontier: Point2D.Float[0.9526574, 0.60375935] with IG = 85.86636
Iter num: 8
Added advice frontier Point2D.Float[0.3557518, 0.17733806]
Used Advice frontier: Point2D.Float[0.3557518, 0.17733806] with IG = 136.31882
Iter num: 9
Used frontier: Point2D.Float[1.6737249, 0.5237828] with IG = 15.05212
Iter num: 10
Used frontier: Point2D.Float[1.6527565, 0.23610029] with IG = 24.268003
Iter num: 11
Used frontier: Point2D.Float[2.5449736, 1.4834857] with IG = 9.64996
Iter num: 12
Added advice frontier Point2D.Float[2.9783337, 0.9193404]
Used Advice frontier: Point2D.Float[2.9783337, 0.9193404] with IG = 140.50792
Iter num: 13
Added advice frontier Point2D.Float[2.7992299, 0.5338201]
Added advice frontier Point2D.Float[2.5943544, 0.76528174]
Added advice frontier Point2D.Float[3.1235876, 0.16769902]
Added advice frontier Point2D.Float[3.5843942, 0.16508001]
Used Advice frontier: Point2D.Float[2.5943544, 0.76528174] with IG = 241.70233
Iter num: 14
Added advice frontier Point2D.Float[2.9096265, 0.029419595]
Used Advice frontier: Point2D.Float[2.7992299, 0.5338201] with IG = 323.51035
Iter num: 15
Added advice frontier Point2D.Float[2.9990346, 0.15282704]
Added advice frontier Point2D.Float[2.9871626, 0.24852385]
Added advice frontier Point2D.Float[3.0443192, 0.11278607]
Used Advice frontier: Point2D.Float[2.9871626, 0.24852385] with IG = 198.46597
Iter num: 16
Used Advice frontier: Point2D.Float[2.9990346, 0.15282704] with IG = 1037.0172
Iter num: 17
Used Advice frontier: Point2D.Float[3.0443192, 0.11278607] with IG = 1654.3132
Iter num: 18
Added advice frontier Point2D.Float[2.9573357, 2.053696]
Added advice frontier Point2D.Float[2.8929164, 1.8972974]
Used Advice frontier: Point2D.Float[3.1235876, 0.16769902] with IG = 1037.0118
Iter num: 19
Used Advice frontier: Point2D.Float[2.9096265, 0.029419595] with IG = 392.53262
Iter num: 20
Used Advice frontier: Point2D.Float[3.5843942, 0.16508001] with IG = 144.00891
Iter num: 21
Used Advice frontier: Point2D.Float[2.8929164, 1.8972974] with IG = 52.057228
Iter num: 22
Added advice frontier Point2D.Float[2.8400922, 2.593372]
Added advice frontier Point2D.Float[2.6372693, 2.6084146]
Used Advice frontier: Point2D.Float[2.9573357, 2.053696] with IG = 591.20544
Iter num: 23
Added advice frontier Point2D.Float[2.2393305, 2.6329195]
Used Advice frontier: Point2D.Float[2.8400922, 2.593372] with IG = 165.0069
Iter num: 24
Used Advice frontier: Point2D.Float[2.6372693, 2.6084146] with IG = 491.6905
Iter num: 25
Used Advice frontier: Point2D.Float[2.2393305, 2.6329195] with IG = 250.81985
Iter num: 26
Used frontier: Point2D.Float[3.5360851, 2.578525] with IG = 24.527735
Iter num: 27
Used frontier: Point2D.Float[3.6356666, 1.3741671] with IG = 18.367022
Iter num: 28
Used frontier: Point2D.Float[4.0002394, 1.6158961] with IG = 52.33946
Iter num: 29
Used frontier: Point2D.Float[4.5011506, 1.5773555] with IG = 51.75245
Iter num: 30
Added advice frontier Point2D.Float[5.1651115, 2.1286206]
Added advice frontier Point2D.Float[4.9703875, 0.9536248]
Added advice frontier Point2D.Float[5.3041406, 1.1451566]
Used Advice frontier: Point2D.Float[4.9703875, 0.9536248] with IG = 113.505
Iter num: 31
Added advice frontier Point2D.Float[5.182577, 0.07321703]
Added advice frontier Point2D.Float[5.1077867, 0.42911726]
Used Advice frontier: Point2D.Float[5.3041406, 1.1451566] with IG = 259.87128
Iter num: 32
Used Advice frontier: Point2D.Float[5.182577, 0.07321703] with IG = 57.651627
Iter num: 33
Added advice frontier Point2D.Float[4.4345903, 0.29055294]
Added advice frontier Point2D.Float[4.434287, 0.58920115]
Used Advice frontier: Point2D.Float[5.1077867, 0.42911726] with IG = 274.97174
Iter num: 34
Added advice frontier Point2D.Float[4.506736, 0.20093754]
Used Advice frontier: Point2D.Float[4.434287, 0.58920115] with IG = 144.43979
Iter num: 35
Used Advice frontier: Point2D.Float[4.4345903, 0.29055294] with IG = 334.84195
Iter num: 36
Used Advice frontier: Point2D.Float[4.506736, 0.20093754] with IG = 869.20746
Iter num: 37
Used Advice frontier: Point2D.Float[5.1651115, 2.1286206] with IG = 43.658817
Iter num: 38
Added advice frontier Point2D.Float[4.717367, 2.5662274]
Added advice frontier Point2D.Float[4.8363357, 2.808841]
Used Advice frontier: Point2D.Float[4.717367, 2.5662274] with IG = 144.95341

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9383020401000977, 1.5852100849151611) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0085971355438232, 2.4544835090637207) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6682620644569397, 2.648103952407837) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.524407982826233, 2.488252878189087) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.694589376449585, 2.4679439067840576) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2448233366012573, 2.166311025619507) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1352286338806152, 1.9121050834655762) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4463225603103638, 1.6462584733963013) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7019128799438477, 1.395843267440796) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0781105756759644, 1.0235801935195923) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9526574015617371, 0.6037593483924866) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.35575181245803833, 0.17733806371688843) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9526574015617371, 0.6037593483924866) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.968278169631958, 0.6109607219696045) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.673724889755249, 0.5237827897071838) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6527564525604248, 0.23610028624534607) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4113706350326538, 0.8085249662399292) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.153602957725525, 0.9534579515457153) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2504138946533203, 1.159888505935669) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.614536166191101, 1.2957794666290283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2236921787261963, 1.374721646308899) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.544973611831665, 1.4834856986999512) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.624516725540161, 1.3931472301483154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9783337116241455, 0.9193403720855713) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5943543910980225, 0.7652817368507385) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.799229860305786, 0.5338200926780701) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.913494110107422, 0.6084499359130859) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9871625900268555, 0.24852384626865387) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.9990346431732178, 0.15282703936100006) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.0443191528320312, 0.11278606951236725) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.1235876083374023, 0.16769902408123016) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9096264839172363, 0.02941959537565708) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.363614559173584, 0.0761595070362091) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5843942165374756, 0.1650800108909607) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4145925045013428, 0.3830418288707733) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2212510108947754, 0.6145500540733337) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1181297302246094, 0.801206648349762) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.111144781112671, 1.1601266860961914) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.044285535812378, 1.4829744100570679) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.892916440963745, 1.8972973823547363) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9573357105255127, 2.0536959171295166) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7610599994659424, 2.422882080078125) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.840092182159424, 2.593372106552124) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.6372692584991455, 2.608414649963379) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.239330530166626, 2.6329195499420166) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.5315985679626465, 2.5536015033721924) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7902750968933105, 2.4259872436523438) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.045154571533203, 2.2845215797424316) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.502267360687256, 2.439563512802124) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5360851287841797, 2.5785250663757324) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.334392786026001, 2.3047382831573486) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.152747869491577, 2.1215007305145264) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.239051580429077, 1.7553777694702148) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.433957815170288, 1.559755802154541) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.635666608810425, 1.3741670846939087) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7326130867004395, 1.4169481992721558) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.000239372253418, 1.6158961057662964) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.501150608062744, 1.5773555040359497) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.43948221206665, 1.401247501373291) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9703874588012695, 0.9536247849464417) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.304140567779541, 1.1451566219329834) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9703874588012695, 0.9536247849464417) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.549750804901123, 0.17838308215141296) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.182577133178711, 0.07321702688932419) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.107786655426025, 0.42911726236343384) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.814356803894043, 0.5037597417831421) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.434287071228027, 0.5892011523246765) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.4345903396606445, 0.29055294394493103) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.506735801696777, 0.20093753933906555) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.642310619354248, 0.4416678249835968) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.840193748474121, 0.7565116286277771) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.9703874588012695, 0.9536247849464417) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.304140567779541, 1.1451566219329834) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.240627765655518, 1.4806079864501953) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.107228755950928, 1.798648715019226) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.165111541748047, 2.1286206245422363) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,t,46]  [r1,b,22]  [r1,t,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,t,22]  [r3,b,t,2]  [r3,b,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20860
RRG size = 1901

Movement Length = 28.733622
Remaining path Length = 0.0
Total path Length = 28.733622

Advice samples: [15, 9, 1, 2, 1, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):8081.494287

Initialization time (in ms):611.436462
Sampling time (in ms):6208.098304
Advice time (in ms):8.733459
Path checking time (in ms):640.426247
Learning time (in ms):188.578481
Exploration time (in ms):0.0
Time taken other than these things (in ms):424.221334
Moving time (in ms):939.5241



