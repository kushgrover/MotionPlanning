Parameters values: 
Environment: results/environments/env5/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.3701272651548115,0.1363439632556243), (1.8701272651548115,0.1363439632556243), (1.8701272651548115,0.4363439632556243), (1.3701272651548115,0.4363439632556243)]
[(1.4024058452780364,2.4650776949658315), (1.7024058452780364,2.4650776949658315), (1.7024058452780364,2.9650776949658315), (1.4024058452780364,2.9650776949658315)]
[(2.325029254646829,0.014869329633475706), (2.825029254646829,0.014869329633475706), (2.825029254646829,0.3148693296334757), (2.325029254646829,0.3148693296334757)]
[(3.3667451156909927,2.452769608434172), (3.6667451156909925,2.452769608434172), (3.6667451156909925,2.952769608434172), (3.3667451156909927,2.952769608434172)]
[(5.2091984603361645,0.007280379493695118), (5.7091984603361645,0.007280379493695118), (5.7091984603361645,0.30728037949369513), (5.2091984603361645,0.30728037949369513)]
[(5.3068210152985,2.550463722205057), (5.8068210152985,2.550463722205057), (5.8068210152985,2.8504637222050566), (5.3068210152985,2.8504637222050566)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.24541876,y=0.07387604,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.24541876,y=0.07387604,w=0.5307536,h=2.6165514]  java.awt.geom.Rectangle2D$Float[x=0.24541876,y=0.07387604,w=3.1084368,h=2.6165514]  java.awt.geom.Rectangle2D$Float[x=0.24541876,y=0.07387604,w=3.1084368,h=2.6165514]  java.awt.geom.Rectangle2D$Float[x=0.24541876,y=0.0642648,w=4.904532,h=2.6261628]  java.awt.geom.Rectangle2D$Float[x=0.24541876,y=0.0642648,w=4.904532,h=2.6803868]  
t: java.awt.geom.Rectangle2D$Float[x=1.2701273,y=0.036343962,w=0.6999999,h=0.5]  java.awt.geom.Rectangle2D$Float[x=1.2701273,y=0.036343962,w=0.6999999,h=3.0287337]  java.awt.geom.Rectangle2D$Float[x=1.2701273,y=0.0,w=1.654902,h=3.0650778]  java.awt.geom.Rectangle2D$Float[x=1.2701273,y=0.0,w=2.4966178,h=3.0650778]  java.awt.geom.Rectangle2D$Float[x=1.2701273,y=0.0,w=4.539071,h=3.0650778]  java.awt.geom.Rectangle2D$Float[x=1.2701273,y=0.0,w=4.636694,h=3.0650778]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9965731, 1.4734454] with IG = 35.675816
Iter num: 2
Used frontier: Point2D.Float[0.9948488, 2.2051] with IG = 43.736362
Iter num: 3
Added advice frontier Point2D.Float[1.3663498, 2.59721]
Added advice frontier Point2D.Float[0.6031164, 2.9727988]
Added advice frontier Point2D.Float[0.6732043, 2.4912002]
Added advice frontier Point2D.Float[0.9593566, 2.7266836]
Used Advice frontier: Point2D.Float[0.6732043, 2.4912002] with IG = 232.3017
Iter num: 4
Used Advice frontier: Point2D.Float[0.9593566, 2.7266836] with IG = 269.84134
Iter num: 5
Used Advice frontier: Point2D.Float[1.3663498, 2.59721] with IG = 234.14201
Iter num: 6
Used Advice frontier: Point2D.Float[0.6031164, 2.9727988] with IG = 117.558235
Iter num: 7
Used frontier: Point2D.Float[0.97747356, 0.5407896] with IG = 14.990986
Iter num: 8
Added advice frontier Point2D.Float[0.3298908, 0.11552065]
Added advice frontier Point2D.Float[1.3043522, 0.19487771]
Used Advice frontier: Point2D.Float[1.3043522, 0.19487771] with IG = 210.11711
Iter num: 9
Used Advice frontier: Point2D.Float[0.3298908, 0.11552065] with IG = 102.24103
Iter num: 10
Used frontier: Point2D.Float[1.8902074, 1.4848373] with IG = 10.483228
Iter num: 11
Used frontier: Point2D.Float[2.6793396, 1.3321245] with IG = 28.495598
Iter num: 12
Added advice frontier Point2D.Float[3.1444736, 2.0330381]
Added advice frontier Point2D.Float[3.3073673, 1.7501062]
Added advice frontier Point2D.Float[2.9946015, 0.7103757]
Used Advice frontier: Point2D.Float[2.9946015, 0.7103757] with IG = 133.63185
Iter num: 13
Added advice frontier Point2D.Float[2.8943412, 0.021765232]
Added advice frontier Point2D.Float[3.065583, 0.20287742]
Added advice frontier Point2D.Float[3.3064783, 0.3233497]
Used Advice frontier: Point2D.Float[3.3064783, 0.3233497] with IG = 201.18799
Iter num: 14
Used Advice frontier: Point2D.Float[3.065583, 0.20287742] with IG = 371.27777
Iter num: 15
Used Advice frontier: Point2D.Float[2.8943412, 0.021765232] with IG = 401.20422
Iter num: 16
Used Advice frontier: Point2D.Float[3.3073673, 1.7501062] with IG = 56.045128
Iter num: 17
Used Advice frontier: Point2D.Float[3.1444736, 2.0330381] with IG = 306.30368
Iter num: 18
Added advice frontier Point2D.Float[3.5198243, 2.419586]
Added advice frontier Point2D.Float[3.012745, 2.5094843]
Added advice frontier Point2D.Float[3.2425354, 2.7337804]
Added advice frontier Point2D.Float[3.8434887, 2.3890026]
Used Advice frontier: Point2D.Float[3.012745, 2.5094843] with IG = 202.29764
Iter num: 19
Used Advice frontier: Point2D.Float[3.2425354, 2.7337804] with IG = 311.4186
Iter num: 20
Used Advice frontier: Point2D.Float[3.5198243, 2.419586] with IG = 119.60324
Iter num: 21
Used Advice frontier: Point2D.Float[3.8434887, 2.3890026] with IG = 307.59183
Iter num: 22
Used frontier: Point2D.Float[3.8986418, 2.4452894] with IG = 25.379417
Iter num: 23
Used frontier: Point2D.Float[4.1701245, 1.4996246] with IG = 12.470162
Iter num: 24
Used frontier: Point2D.Float[4.9317675, 1.513865] with IG = 52.443836
Iter num: 25
Added advice frontier Point2D.Float[5.068012, 0.8144525]
Added advice frontier Point2D.Float[4.924205, 1.110801]
Added advice frontier Point2D.Float[5.048114, 2.092479]
Used Advice frontier: Point2D.Float[4.924205, 1.110801] with IG = 248.05591
Iter num: 26
Added advice frontier Point2D.Float[5.457097, 0.35406065]
Added advice frontier Point2D.Float[5.090374, 0.2876663]
Used Advice frontier: Point2D.Float[5.068012, 0.8144525] with IG = 303.58423
Iter num: 27
Added advice frontier Point2D.Float[5.1143146, 0.18785103]
Used Advice frontier: Point2D.Float[5.090374, 0.2876663] with IG = 176.02483
Iter num: 28
Added advice frontier Point2D.Float[5.201618, 0.14190184]
Added advice frontier Point2D.Float[5.042688, 0.18820088]
Used Advice frontier: Point2D.Float[5.1143146, 0.18785103] with IG = 974.22034
Iter num: 29
Used Advice frontier: Point2D.Float[5.042688, 0.18820088] with IG = 1396.1115
Iter num: 30
Used Advice frontier: Point2D.Float[5.201618, 0.14190184] with IG = 604.09515
Iter num: 31
Used Advice frontier: Point2D.Float[5.457097, 0.35406065] with IG = 179.84013
Iter num: 32
Used Advice frontier: Point2D.Float[5.048114, 2.092479] with IG = 52.313637
Iter num: 33
Added advice frontier Point2D.Float[5.293185, 2.6400034]
Used Advice frontier: Point2D.Float[5.293185, 2.6400034] with IG = 164.5432
Iter num: 34
Added advice frontier Point2D.Float[4.870018, 2.6160882]
Used Advice frontier: Point2D.Float[4.870018, 2.6160882] with IG = 122.95501

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9965730905532837, 1.4734454154968262) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9948487877845764, 2.2051000595092773) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6732043027877808, 2.4912002086639404) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9593566060066223, 2.7266836166381836) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3663498163223267, 2.597209930419922) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6031163930892944, 2.9727988243103027) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7579696178436279, 2.3898189067840576) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9089963436126709, 1.5596754550933838) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9648803472518921, 0.7312905192375183) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9774735569953918, 0.5407896041870117) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3043521642684937, 0.1948777139186859) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.859167754650116, 0.17248700559139252) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.32989078760147095, 0.1155206486582756) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7760125398635864, 0.6546907424926758) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2705938816070557, 1.1173104047775269) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7021558284759521, 1.3947389125823975) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8902074098587036, 1.484837293624878) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3130791187286377, 1.3656325340270996) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.679339647293091, 1.3321244716644287) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.789053201675415, 1.313311219215393) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9946014881134033, 0.7103757262229919) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.306478261947632, 0.3233497142791748) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.0655829906463623, 0.20287741720676422) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.894341230392456, 0.02176523208618164) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.9808075428009033, 0.5590699911117554) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.112971067428589, 0.9974544048309326) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2879526615142822, 1.5159554481506348) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3073673248291016, 1.7501062154769897) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1444735527038574, 2.0330381393432617) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.012744903564453, 2.50948429107666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.242535352706909, 2.7337803840637207) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.012744903564453, 2.50948429107666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.519824266433716, 2.419585943222046) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.8434886932373047, 2.389002561569214) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.89864182472229, 2.445289373397827) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.519824266433716, 2.419585943222046) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1996030807495117, 2.1072983741760254) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.199572801589966, 1.9302324056625366) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5432846546173096, 1.827344536781311) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8945236206054688, 1.7258158922195435) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.170124530792236, 1.4996246099472046) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.199652671813965, 1.5075715780258179) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.931767463684082, 1.5138649940490723) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9242048263549805, 1.1108009815216064) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.068012237548828, 0.8144525289535522) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.975451946258545, 0.6401820778846741) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.090373992919922, 0.28766629099845886) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.114314556121826, 0.18785102665424347) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(5.042687892913818, 0.18820087611675262) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.201618194580078, 0.14190183579921722) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.090373992919922, 0.28766629099845886) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.457097053527832, 0.35406064987182617) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.276508331298828, 0.5041475892066956) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.068012237548828, 0.8144525289535522) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.931767463684082, 1.5138649940490723) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.988576889038086, 1.7649091482162476) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.048113822937012, 2.0924789905548096) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.213200092315674, 2.341977596282959) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.293185234069824, 2.6400034427642822) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.213200092315674, 2.341977596282959) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,b,35]  [r4,t,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r5,35]  [r5,b,t,21]  [r5,b,21]  [r5,t,21]  [r5,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 34
Total sampled points = 18686
RRG size = 1702

Movement Length = 24.842243
Remaining path Length = 0.0
Total path Length = 24.842243

Advice samples: [10, 6, 7, 2, 1, 0, 0, 0, 0, 0] (26)

Total time taken (in ms):8102.62748

Initialization time (in ms):542.059919
Sampling time (in ms):6189.173196
Advice time (in ms):8.710079
Path checking time (in ms):689.776316
Learning time (in ms):195.468785
Exploration time (in ms):0.0
Time taken other than these things (in ms):477.439185
Moving time (in ms):1946.1571



