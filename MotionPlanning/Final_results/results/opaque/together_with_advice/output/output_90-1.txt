Parameters values: 
Environment: results/environments/env90/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.2641023788638672,0.19689346872813182), (1.7641023788638672,0.19689346872813182), (1.7641023788638672,0.4968934687281318), (1.2641023788638672,0.4968934687281318)]
[(0.5921788239465343,2.462720546565608), (0.8921788239465342,2.462720546565608), (0.8921788239465342,2.962720546565608), (0.5921788239465343,2.962720546565608)]
[(2.390652455537571,0.09659702402218617), (2.890652455537571,0.09659702402218617), (2.890652455537571,0.39659702402218616), (2.390652455537571,0.39659702402218616)]
[(2.195610717227572,2.4849727761223974), (2.695610717227572,2.4849727761223974), (2.695610717227572,2.7849727761223972), (2.195610717227572,2.7849727761223972)]
[(5.199983124428999,0.03073258766954498), (5.499983124428999,0.03073258766954498), (5.499983124428999,0.530732587669545), (5.199983124428999,0.530732587669545)]
[(4.241607891705796,2.4953075135939304), (4.541607891705796,2.4953075135939304), (4.541607891705796,2.9953075135939304), (4.241607891705796,2.9953075135939304)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.12007078,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.12007078,w=1.3874295,h=2.5545096]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.12007078,w=2.9660325,h=2.5545096]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.12007078,w=2.9660325,h=2.770194]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.017042454,w=4.526944,h=2.8732224]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.017042454,w=5.0547833,h=2.8732224]  
t: java.awt.geom.Rectangle2D$Float[x=1.1641024,y=0.09689347,w=0.6999999,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.09689347,w=1.3719236,h=2.965827]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.0,w=2.4984736,h=3.0627205]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.0,w=2.4984736,h=3.0627205]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.0,w=5.1078043,h=3.0627205]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.0,w=5.1078043,h=3.0953076]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9397363, 1.502653] with IG = 38.10701
Iter num: 2
Used frontier: Point2D.Float[0.846896, 2.2507064] with IG = 47.758495
Iter num: 3
Added advice frontier Point2D.Float[1.688946, 2.6058264]
Added advice frontier Point2D.Float[1.3977413, 2.845784]
Added advice frontier Point2D.Float[0.9370403, 2.558238]
Used Advice frontier: Point2D.Float[0.9370403, 2.558238] with IG = 312.04068
Iter num: 4
Added advice frontier Point2D.Float[1.1870847, 0.5542679]
Added advice frontier Point2D.Float[1.3429246, 0.6166061]
Used Advice frontier: Point2D.Float[1.3977413, 2.845784] with IG = 184.13737
Iter num: 5
Used Advice frontier: Point2D.Float[1.688946, 2.6058264] with IG = 265.01825
Iter num: 6
Used Advice frontier: Point2D.Float[1.3429246, 0.6166061] with IG = 44.050705
Iter num: 7
Added advice frontier Point2D.Float[0.53455406, 0.14690466]
Added advice frontier Point2D.Float[0.74103844, 0.27709723]
Used Advice frontier: Point2D.Float[1.1870847, 0.5542679] with IG = 595.7857
Iter num: 8
Used Advice frontier: Point2D.Float[0.74103844, 0.27709723] with IG = 190.42236
Iter num: 9
Used Advice frontier: Point2D.Float[0.53455406, 0.14690466] with IG = 409.66443
Iter num: 10
Used frontier: Point2D.Float[1.8511289, 1.4343895] with IG = 11.676361
Iter num: 11
Used frontier: Point2D.Float[2.7182581, 1.3618479] with IG = 26.299974
Iter num: 12
Added advice frontier Point2D.Float[2.9581687, 2.163862]
Added advice frontier Point2D.Float[3.5861456, 1.5778925]
Added advice frontier Point2D.Float[3.0794976, 0.82959545]
Used Advice frontier: Point2D.Float[3.0794976, 0.82959545] with IG = 154.29524
Iter num: 13
Added advice frontier Point2D.Float[2.935439, 0.18636435]
Added advice frontier Point2D.Float[3.3501744, 0.3821936]
Added advice frontier Point2D.Float[3.2758164, 0.1989045]
Used Advice frontier: Point2D.Float[3.3501744, 0.3821936] with IG = 191.23767
Iter num: 14
Used Advice frontier: Point2D.Float[3.2758164, 0.1989045] with IG = 505.5666
Iter num: 15
Used Advice frontier: Point2D.Float[2.935439, 0.18636435] with IG = 293.5924
Iter num: 16
Used Advice frontier: Point2D.Float[3.5861456, 1.5778925] with IG = 63.568157
Iter num: 17
Used Advice frontier: Point2D.Float[2.9581687, 2.163862] with IG = 116.42752
Iter num: 18
Added advice frontier Point2D.Float[2.770938, 2.7724557]
Added advice frontier Point2D.Float[2.9015257, 2.7362494]
Added advice frontier Point2D.Float[3.149615, 2.8509579]
Used Advice frontier: Point2D.Float[2.770938, 2.7724557] with IG = 126.620895
Iter num: 19
Used Advice frontier: Point2D.Float[2.9015257, 2.7362494] with IG = 737.9306
Iter num: 20
Used Advice frontier: Point2D.Float[3.149615, 2.8509579] with IG = 365.86536
Iter num: 21
Used frontier: Point2D.Float[2.770938, 2.7724557] with IG = 15.514759
Iter num: 22
Used frontier: Point2D.Float[4.416864, 1.3520463] with IG = 9.914051
Iter num: 23
Added advice frontier Point2D.Float[5.1552076, 0.83929336]
Added advice frontier Point2D.Float[5.08317, 1.3497254]
Added advice frontier Point2D.Float[5.014932, 2.0378296]
Added advice frontier Point2D.Float[5.0444922, 1.8601464]
Used Advice frontier: Point2D.Float[5.1552076, 0.83929336] with IG = 111.243935
Iter num: 24
Added advice frontier Point2D.Float[5.5919566, 0.45880803]
Added advice frontier Point2D.Float[5.9313016, 0.3960155]
Added advice frontier Point2D.Float[4.853428, 0.116485916]
Added advice frontier Point2D.Float[4.758132, 0.3389645]
Used Advice frontier: Point2D.Float[5.08317, 1.3497254] with IG = 193.99008
Iter num: 25
Used Advice frontier: Point2D.Float[5.0444922, 1.8601464] with IG = 185.83986
Iter num: 26
Added advice frontier Point2D.Float[5.1176014, 0.1166563]
Added advice frontier Point2D.Float[4.588821, 2.4412234]
Added advice frontier Point2D.Float[4.88326, 2.5740318]
Used Advice frontier: Point2D.Float[5.014932, 2.0378296] with IG = 555.169
Iter num: 27
Added advice frontier Point2D.Float[5.250128, 2.6842225]
Added advice frontier Point2D.Float[5.192573, 2.5926025]
Used Advice frontier: Point2D.Float[4.588821, 2.4412234] with IG = 168.86783

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9397363066673279, 1.5026530027389526) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8468959927558899, 2.250706434249878) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9370403289794922, 2.5582380294799805) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3977413177490234, 2.8457839488983154) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.688946008682251, 2.6058263778686523) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.095226526260376, 1.965165138244629) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.119431734085083, 1.3651362657546997) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1307424306869507, 1.0680338144302368) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3429245948791504, 0.6166061162948608) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.187084674835205, 0.5542678833007812) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.74103844165802, 0.277097225189209) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5345540642738342, 0.14690466225147247) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8414402604103088, 0.6034504771232605) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0120106935501099, 0.8450750112533569) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2350757122039795, 1.0946751832962036) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.642270565032959, 1.3163903951644897) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8511289358139038, 1.4343894720077515) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.385895252227783, 1.34713876247406) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7182581424713135, 1.3618478775024414) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.866636037826538, 1.0727958679199219) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0794975757598877, 0.8295954465866089) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3501744270324707, 0.38219359517097473) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2758164405822754, 0.19890449941158295) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.935439109802246, 0.18636435270309448) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.0794975757598877, 0.8295954465866089) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2209277153015137, 1.1572883129119873) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5861456394195557, 1.577892541885376) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9581687450408936, 2.1638619899749756) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7911605834960938, 2.150562286376953) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.770937919616699, 2.7724556922912598) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9015257358551025, 2.7362494468688965) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.1496150493621826, 2.8509578704833984) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.770937919616699, 2.7724556922912598) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9628567695617676, 2.488123655319214) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1219265460968018, 2.055856943130493) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2634003162384033, 1.8560676574707031) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.634202003479004, 1.7803887128829956) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9822206497192383, 1.6116666793823242) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.416863918304443, 1.352046251296997) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.155207633972168, 0.839293360710144) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.083169937133789, 1.349725365638733) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.148894309997559, 1.5605179071426392) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.044492244720459, 1.860146403312683) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.014932155609131, 2.037829637527466) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  


Remaining path: 
[r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 27
Total sampled points = 14392
RRG size = 1351

Movement Length = 19.571817
Remaining path Length = 4.514931
Total path Length = 24.086748

Advice samples: [10, 5, 3, 2, 0, 1, 0, 0, 0, 0] (21)

Total time taken (in ms):5816.185054

Initialization time (in ms):511.805484
Sampling time (in ms):4285.677072
Advice time (in ms):7.704293
Path checking time (in ms):423.528907
Learning time (in ms):193.663861
Exploration time (in ms):0.0
Time taken other than these things (in ms):393.805437
Moving time (in ms):1409.2861



