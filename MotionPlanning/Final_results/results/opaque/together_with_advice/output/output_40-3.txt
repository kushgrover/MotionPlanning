Parameters values: 
Environment: results/environments/env40/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.4121669694970944,0.14273691763264815), (0.9121669694970944,0.14273691763264815), (0.9121669694970944,0.4427369176326481), (0.4121669694970944,0.4427369176326481)]
[(1.3941965059827683,2.488966172719022), (1.6941965059827684,2.488966172719022), (1.6941965059827684,2.988966172719022), (1.3941965059827683,2.988966172719022)]
[(3.3000987154188737,0.03164997059265434), (3.6000987154188735,0.03164997059265434), (3.6000987154188735,0.5316499705926543), (3.3000987154188737,0.5316499705926543)]
[(2.939281922801234,2.4904053184735413), (3.2392819228012337,2.4904053184735413), (3.2392819228012337,2.9904053184735413), (2.939281922801234,2.9904053184735413)]
[(5.2210419054036965,0.04365260136728314), (5.7210419054036965,0.04365260136728314), (5.7210419054036965,0.34365260136728315), (5.2210419054036965,0.34365260136728315)]
[(4.280880719126387,2.601740548899565), (4.780880719126387,2.601740548899565), (4.780880719126387,2.9017405488995647), (4.280880719126387,2.9017405488995647)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.3103716,y=0.0046652327,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=0.38463295,h=2.6612413]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=1.4331448,h=2.6612413]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=2.3220162,h=2.6700475]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=3.9767637,h=2.6700475]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=4.510332,h=2.7211432]  
t: java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.042736918,w=0.70000005,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.042736918,w=1.4820296,h=3.0462291]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.0,w=3.3879318,h=3.0889661]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.0,w=3.3879318,h=3.0904052]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.0,w=5.508875,h=3.0904052]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.0,w=5.508875,h=3.0904052]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9417598, 1.5288948] with IG = 37.993217
Iter num: 2
Used frontier: Point2D.Float[1.0947471, 2.417306] with IG = 39.934006
Iter num: 3
Added advice frontier Point2D.Float[1.201476, 2.5111156]
Added advice frontier Point2D.Float[1.340281, 2.8812845]
Added advice frontier Point2D.Float[1.1546813, 2.9774795]
Added advice frontier Point2D.Float[1.2954476, 2.6509743]
Added advice frontier Point2D.Float[1.2658997, 2.6458893]
Used Advice frontier: Point2D.Float[1.201476, 2.5111156] with IG = 703.7491
Iter num: 4
Used Advice frontier: Point2D.Float[1.2658997, 2.6458893] with IG = 669.43384
Iter num: 5
Used Advice frontier: Point2D.Float[1.2954476, 2.6509743] with IG = 3335.303
Iter num: 6
Used Advice frontier: Point2D.Float[1.340281, 2.8812845] with IG = 426.1968
Iter num: 7
Used Advice frontier: Point2D.Float[1.1546813, 2.9774795] with IG = 478.3609
Iter num: 8
Used frontier: Point2D.Float[0.1864505, 2.5090659] with IG = 21.344267
Iter num: 9
Used frontier: Point2D.Float[1.0156826, 0.5736934] with IG = 13.578194
Iter num: 10
Added advice frontier Point2D.Float[0.9175357, 0.05695279]
Added advice frontier Point2D.Float[1.037675, 0.02170271]
Added advice frontier Point2D.Float[1.4878123, 0.022129845]
Added advice frontier Point2D.Float[1.6033471, 0.06952555]
Used Advice frontier: Point2D.Float[0.9175357, 0.05695279] with IG = 190.12175
Iter num: 11
Used Advice frontier: Point2D.Float[1.037675, 0.02170271] with IG = 798.69714
Iter num: 12
Used Advice frontier: Point2D.Float[1.4878123, 0.022129845] with IG = 222.15436
Iter num: 13
Used Advice frontier: Point2D.Float[1.6033471, 0.06952555] with IG = 800.7783
Iter num: 14
Used frontier: Point2D.Float[0.054050572, 0.49757618] with IG = 12.514965
Iter num: 15
Used frontier: Point2D.Float[1.8719649, 1.4629393] with IG = 10.687949
Iter num: 16
Used frontier: Point2D.Float[2.791004, 1.4349878] with IG = 24.446209
Iter num: 17
Added advice frontier Point2D.Float[3.306206, 0.6930467]
Added advice frontier Point2D.Float[2.9655702, 2.300096]
Added advice frontier Point2D.Float[3.1858103, 1.1928488]
Added advice frontier Point2D.Float[3.244635, 0.6203892]
Added advice frontier Point2D.Float[3.0740635, 1.9479189]
Used Advice frontier: Point2D.Float[3.1858103, 1.1928488] with IG = 215.91507
Iter num: 18
Used Advice frontier: Point2D.Float[3.244635, 0.6203892] with IG = 155.72324
Iter num: 19
Used Advice frontier: Point2D.Float[3.306206, 0.6930467] with IG = 1050.0123
Iter num: 20
Used Advice frontier: Point2D.Float[3.0740635, 1.9479189] with IG = 70.69213
Iter num: 21
Added advice frontier Point2D.Float[2.9277687, 2.443694]
Added advice frontier Point2D.Float[2.6197302, 2.656194]
Added advice frontier Point2D.Float[3.3172493, 2.4959476]
Added advice frontier Point2D.Float[3.426393, 2.7340572]
Used Advice frontier: Point2D.Float[2.9655702, 2.300096] with IG = 271.36313
Iter num: 22
Added advice frontier Point2D.Float[3.3998203, 2.5385914]
Used Advice frontier: Point2D.Float[2.9277687, 2.443694] with IG = 673.4447
Iter num: 23
Added advice frontier Point2D.Float[2.5449903, 0.23229025]
Used Advice frontier: Point2D.Float[2.6197302, 2.656194] with IG = 267.21933
Iter num: 24
Used Advice frontier: Point2D.Float[3.3172493, 2.4959476] with IG = 130.34503
Iter num: 25
Used Advice frontier: Point2D.Float[3.3998203, 2.5385914] with IG = 1076.0487
Iter num: 26
Used Advice frontier: Point2D.Float[3.426393, 2.7340572] with IG = 506.93552
Iter num: 27
Used Advice frontier: Point2D.Float[2.5449903, 0.23229025] with IG = 37.417812
Iter num: 28
Used frontier: Point2D.Float[4.1093, 1.3863984] with IG = 10.830787
Iter num: 29
Used frontier: Point2D.Float[4.966889, 1.7552627] with IG = 34.191032
Iter num: 30
Added advice frontier Point2D.Float[5.0310674, 2.6906464]
Added advice frontier Point2D.Float[4.6997437, 2.556215]
Added advice frontier Point2D.Float[4.8345494, 2.3307455]
Added advice frontier Point2D.Float[5.093791, 0.80997413]
Used Advice frontier: Point2D.Float[5.0310674, 2.6906464] with IG = 104.42578
Iter num: 31
Added advice frontier Point2D.Float[5.6354785, 2.6243343]
Added advice frontier Point2D.Float[5.3723354, 2.8994172]
Used Advice frontier: Point2D.Float[4.6997437, 2.556215] with IG = 279.67554
Iter num: 32
Used Advice frontier: Point2D.Float[4.8345494, 2.3307455] with IG = 380.66837
Iter num: 33
Used Advice frontier: Point2D.Float[5.3723354, 2.8994172] with IG = 123.43851
Iter num: 34
Used Advice frontier: Point2D.Float[5.6354785, 2.6243343] with IG = 262.69003
Iter num: 35
Used Advice frontier: Point2D.Float[5.093791, 0.80997413] with IG = 46.9046
Iter num: 36
Added advice frontier Point2D.Float[5.1843557, 0.10982889]
Added advice frontier Point2D.Float[4.952692, 0.1955179]
Added advice frontier Point2D.Float[4.7116446, 0.15523607]
Used Advice frontier: Point2D.Float[5.1843557, 0.10982889] with IG = 141.64742

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9417598247528076, 1.5288947820663452) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0947470664978027, 2.4173059463500977) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.201475977897644, 2.511115550994873) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.265899658203125, 2.6458892822265625) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.295447587966919, 2.6509742736816406) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.3402810096740723, 2.881284475326538) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1546813249588013, 2.9774794578552246) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7518094182014465, 2.8182103633880615) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.18645049631595612, 2.509065866470337) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.653420627117157, 2.1625614166259766) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7841774225234985, 2.0784566402435303) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9181424379348755, 1.858964204788208) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9417598247528076, 1.5288947820663452) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.015682578086853, 0.5736933946609497) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9175357222557068, 0.056952789425849915) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0376750230789185, 0.021702710539102554) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4878122806549072, 0.0221298448741436) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.6033470630645752, 0.06952554732561111) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1191508769989014, 0.3572109043598175) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6254062652587891, 0.572293758392334) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.05405057221651077, 0.49757617712020874) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5153211355209351, 0.7467775940895081) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9439747333526611, 0.9678044319152832) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4022977352142334, 1.209983229637146) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.871964931488037, 1.4629392623901367) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1663875579833984, 1.3767591714859009) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.620062828063965, 1.377373456954956) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.791003942489624, 1.4349877834320068) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1858103275299072, 1.192848801612854) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1048665046691895, 0.7456023693084717) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2446351051330566, 0.6203892230987549) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.306205987930298, 0.6930466890335083) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1048665046691895, 0.7456023693084717) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0546045303344727, 1.2527616024017334) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.058232545852661, 1.3396711349487305) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.088200092315674, 1.7868106365203857) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.074063539505005, 1.9479188919067383) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9655702114105225, 2.300096035003662) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9277687072753906, 2.4436941146850586) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.619730234146118, 2.656193971633911) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9277687072753906, 2.4436941146850586) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.317249298095703, 2.4959475994110107) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.399820327758789, 2.5385913848876953) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.4263930320739746, 2.7340571880340576) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.317249298095703, 2.4959475994110107) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.2125821113586426, 2.1617271900177) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.088200092315674, 1.7868106365203857) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.948564052581787, 1.4145617485046387) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9310710430145264, 1.230094075202942) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.878810167312622, 0.9470324516296387) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7881386280059814, 0.762601912021637) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.722205400466919, 0.521664023399353) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.544990301132202, 0.23229025304317474) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.729684591293335, 0.45853152871131897) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.949437141418457, 0.7474461197853088) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1587932109832764, 1.045784592628479) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5827560424804688, 1.2143691778182983) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.90873384475708, 1.341905117034912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.109300136566162, 1.386398434638977) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.32680606842041, 1.5945762395858765) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.681838512420654, 1.6456373929977417) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.966888904571533, 1.7552627325057983) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.915295124053955, 1.840582251548767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.031067371368408, 2.6906464099884033) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.699743747711182, 2.5562150478363037) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.834549427032471, 2.3307454586029053) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.031067371368408, 2.6906464099884033) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.372335433959961, 2.8994171619415283) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.635478496551514, 2.6243343353271484) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.470419406890869, 2.331585168838501) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.21343994140625, 2.0729658603668213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.915295124053955, 1.840582251548767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.939674377441406, 1.611844778060913) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.953787803649902, 1.2754743099212646) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.045085430145264, 1.010429859161377) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,b,t,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,t,22]  [r4,b,t,19]  [r4,b,19]  [r4,19]  [r4,b,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 19714
RRG size = 1802

Movement Length = 27.612265
Remaining path Length = 0.24700339
Total path Length = 27.859268

Advice samples: [19, 3, 4, 1, 0, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):7153.331299

Initialization time (in ms):492.824261
Sampling time (in ms):5434.815837
Advice time (in ms):7.211746
Path checking time (in ms):586.828039
Learning time (in ms):208.639089
Exploration time (in ms):0.0
Time taken other than these things (in ms):423.012327
Moving time (in ms):738.1975



