Parameters values: 
Environment: results/environments/env100/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.8629961879768844,0.14387283958412067), (1.3629961879768844,0.14387283958412067), (1.3629961879768844,0.44387283958412066), (0.8629961879768844,0.44387283958412066)]
[(0.527256383271099,2.46237433156018), (0.8272563832710991,2.46237433156018), (0.8272563832710991,2.96237433156018), (0.527256383271099,2.96237433156018)]
[(2.982828600266923,0.01942320464486552), (3.2828286002669227,0.01942320464486552), (3.2828286002669227,0.5194232046448655), (2.982828600266923,0.5194232046448655)]
[(3.537222699849413,2.4789729903674367), (3.8372226998494128,2.4789729903674367), (3.8372226998494128,2.9789729903674367), (3.537222699849413,2.9789729903674367)]
[(5.5415610354060965,0.0448081926162269), (5.841561035406096,0.0448081926162269), (5.841561035406096,0.5448081926162269), (5.5415610354060965,0.5448081926162269)]
[(5.2268173458048155,2.48323836753466), (5.526817345804815,2.48323836753466), (5.526817345804815,2.98323836753466), (5.2268173458048155,2.98323836753466)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.28451866,y=0.13355772,w=0.20000002,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.28451866,y=0.13355772,w=0.83472556,h=2.5483184]  java.awt.geom.Rectangle2D$Float[x=0.28451866,y=0.048724692,w=3.3014598,h=2.6331515]  java.awt.geom.Rectangle2D$Float[x=0.28451866,y=0.048724692,w=3.3014598,h=2.6354997]  java.awt.geom.Rectangle2D$Float[x=0.28451866,y=0.046594217,w=4.33321,h=2.6376302]  java.awt.geom.Rectangle2D$Float[x=0.28451866,y=0.046594217,w=4.466177,h=2.6376302]  
t: java.awt.geom.Rectangle2D$Float[x=0.7629962,y=0.04387284,w=0.70000005,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.42725638,y=0.04387284,w=1.0357399,h=3.0185015]  java.awt.geom.Rectangle2D$Float[x=0.42725638,y=0.0,w=2.9555724,h=3.0623744]  java.awt.geom.Rectangle2D$Float[x=0.42725638,y=0.0,w=3.5099664,h=3.078973]  java.awt.geom.Rectangle2D$Float[x=0.42725638,y=0.0,w=5.5143046,h=3.078973]  java.awt.geom.Rectangle2D$Float[x=0.42725638,y=0.0,w=5.5143046,h=3.0832384]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9870875, 1.3844993] with IG = 35.77117
Iter num: 2
Used frontier: Point2D.Float[1.7414306, 1.5874509] with IG = 29.443102
Iter num: 3
Used frontier: Point2D.Float[2.6906805, 1.4679642] with IG = 22.994741
Iter num: 4
Added advice frontier Point2D.Float[3.0304856, 0.67101854]
Added advice frontier Point2D.Float[2.9398935, 0.5801935]
Added advice frontier Point2D.Float[3.1239948, 2.0559545]
Used Advice frontier: Point2D.Float[3.1239948, 2.0559545] with IG = 136.91003
Iter num: 5
Added advice frontier Point2D.Float[3.891562, 2.4354765]
Used Advice frontier: Point2D.Float[3.891562, 2.4354765] with IG = 116.785736
Iter num: 6
Added advice frontier Point2D.Float[2.2944984, 2.4857469]
Added advice frontier Point2D.Float[2.3338997, 2.5841444]
Used Advice frontier: Point2D.Float[2.3338997, 2.5841444] with IG = 61.75415
Iter num: 7
Used Advice frontier: Point2D.Float[2.2944984, 2.4857469] with IG = 943.45795
Iter num: 8
Used Advice frontier: Point2D.Float[3.0304856, 0.67101854] with IG = 47.003754
Iter num: 9
Used Advice frontier: Point2D.Float[2.9398935, 0.5801935] with IG = 779.53613
Iter num: 10
Used frontier: Point2D.Float[3.869678, 0.3969572] with IG = 20.823143
Iter num: 11
Added advice frontier Point2D.Float[3.543388, 0.20532592]
Added advice frontier Point2D.Float[3.6023834, 0.4110524]
Used Advice frontier: Point2D.Float[3.6023834, 0.4110524] with IG = 373.59988
Iter num: 12
Added advice frontier Point2D.Float[3.3088295, 0.2495933]
Used Advice frontier: Point2D.Float[3.543388, 0.20532592] with IG = 467.24963
Iter num: 13
Used Advice frontier: Point2D.Float[3.3088295, 0.2495933] with IG = 418.93762
Iter num: 14
Used frontier: Point2D.Float[3.6419818, 1.5172769] with IG = 14.277607
Iter num: 15
Used frontier: Point2D.Float[4.395199, 1.4081136] with IG = 27.789751
Iter num: 16
Used frontier: Point2D.Float[4.7665606, 1.1878949] with IG = 39.374878
Iter num: 17
Added advice frontier Point2D.Float[5.0525155, 0.8480463]
Added advice frontier Point2D.Float[5.1758943, 1.1578273]
Added advice frontier Point2D.Float[5.0725293, 2.0882366]
Added advice frontier Point2D.Float[5.0728445, 1.8805096]
Used Advice frontier: Point2D.Float[5.1758943, 1.1578273] with IG = 243.64302
Iter num: 18
Used Advice frontier: Point2D.Float[5.0525155, 0.8480463] with IG = 299.8982
Iter num: 19
Added advice frontier Point2D.Float[4.506751, 0.14287087]
Added advice frontier Point2D.Float[4.379099, 0.30015618]
Added advice frontier Point2D.Float[5.54788, 0.59237653]
Added advice frontier Point2D.Float[5.8999662, 0.7721675]
Used Advice frontier: Point2D.Float[5.54788, 0.59237653] with IG = 179.07468
Iter num: 20
Used Advice frontier: Point2D.Float[5.8999662, 0.7721675] with IG = 252.95032
Iter num: 21
Used Advice frontier: Point2D.Float[4.506751, 0.14287087] with IG = 63.472523
Iter num: 22
Used Advice frontier: Point2D.Float[4.379099, 0.30015618] with IG = 493.66168
Iter num: 23
Used Advice frontier: Point2D.Float[5.0728445, 1.8805096] with IG = 55.180946
Iter num: 24
Added advice frontier Point2D.Float[5.323915, 2.4455283]
Used Advice frontier: Point2D.Float[5.0725293, 2.0882366] with IG = 481.4006
Iter num: 25
Added advice frontier Point2D.Float[4.7240334, 2.643337]
Added advice frontier Point2D.Float[4.8566403, 2.5500798]
Used Advice frontier: Point2D.Float[5.323915, 2.4455283] with IG = 228.90302
Iter num: 26
Used Advice frontier: Point2D.Float[4.8566403, 2.5500798] with IG = 148.02307
Iter num: 27
Used Advice frontier: Point2D.Float[4.7240334, 2.643337] with IG = 616.8432
Iter num: 28
Used frontier: Point2D.Float[5.5236826, 2.4445288] with IG = 16.565825
Iter num: 29
Used frontier: Point2D.Float[0.9428791, 2.332514] with IG = 4.7838893
Iter num: 30
Added advice frontier Point2D.Float[1.1125976, 2.520526]
Added advice frontier Point2D.Float[0.6573976, 2.4217663]
Added advice frontier Point2D.Float[0.28514853, 2.4782782]
Used Advice frontier: Point2D.Float[1.1125976, 2.520526] with IG = 394.81357
Iter num: 31
Used Advice frontier: Point2D.Float[0.6573976, 2.4217663] with IG = 191.39772
Iter num: 32
Added advice frontier Point2D.Float[0.85200334, 2.7102442]
Added advice frontier Point2D.Float[0.97905564, 2.654782]
Used Advice frontier: Point2D.Float[0.28514853, 2.4782782] with IG = 265.59418
Iter num: 33
Used Advice frontier: Point2D.Float[0.97905564, 2.654782] with IG = 112.49187
Iter num: 34
Used Advice frontier: Point2D.Float[0.85200334, 2.7102442] with IG = 721.34344
Iter num: 35
Used frontier: Point2D.Float[1.2784967, 0.660946] with IG = 9.5443735
Iter num: 36
Used frontier: Point2D.Float[1.3916819, 0.52352554] with IG = 73.02072
Iter num: 37
Used frontier: Point2D.Float[0.35053357, 0.44055724] with IG = 27.758747
Iter num: 38
Added advice frontier Point2D.Float[0.44994667, 0.32267198]
Added advice frontier Point2D.Float[0.1310215, 0.12712692]
Used Advice frontier: Point2D.Float[0.44994667, 0.32267198] with IG = 648.47766

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9870874881744385, 1.3844993114471436) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.741430640220642, 1.5874508619308472) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.690680503845215, 1.4679641723632812) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.123994827270508, 2.0559544563293457) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.891561985015869, 2.435476541519165) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.3006157875061035, 2.303401231765747) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.836059093475342, 2.500858783721924) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.333899736404419, 2.584144353866577) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.2944984436035156, 2.4857468605041504) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.865102767944336, 2.097099542617798) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.910012722015381, 1.4291774034500122) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0304856300354004, 0.6710185408592224) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9398934841156006, 0.5801935195922852) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.4031083583831787, 0.8210170865058899) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.869678020477295, 0.3969571888446808) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6023833751678467, 0.411052405834198) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5433878898620605, 0.2053259164094925) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.3088295459747314, 0.24959330260753632) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.2773277759552, 0.81598961353302) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1610660552978516, 0.9249763488769531) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2956347465515137, 1.4361140727996826) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.641981840133667, 1.5172768831253052) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.153286457061768, 1.3413864374160767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.395198822021484, 1.4081135988235474) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7665605545043945, 1.1878949403762817) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.175894260406494, 1.1578272581100464) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.052515506744385, 0.8480463027954102) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.257791996002197, 0.7602691650390625) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.547880172729492, 0.5923765301704407) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.899966239929199, 0.7721675038337708) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.547880172729492, 0.5923765301704407) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.143972873687744, 0.4008104205131531) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.840424060821533, 0.1411755234003067) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.50675106048584, 0.14287087321281433) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.379098892211914, 0.3001561760902405) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7410888671875, 0.6178517937660217) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.854979038238525, 0.813156247138977) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.957176208496094, 1.1331413984298706) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.085633754730225, 1.5154714584350586) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.072844505310059, 1.880509614944458) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.072529315948486, 2.0882365703582764) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.323915004730225, 2.445528268814087) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.132406711578369, 2.253922700881958) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.856640338897705, 2.550079822540283) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.724033355712891, 2.6433370113372803) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.0164265632629395, 2.3825020790100098) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.323915004730225, 2.445528268814087) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.523682594299316, 2.444528818130493) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.166876316070557, 2.2442431449890137) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.072529315948486, 2.0882365703582764) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.7971367835998535, 1.8733805418014526) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.387618064880371, 1.8872036933898926) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.111288547515869, 1.894840955734253) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7014942169189453, 1.9159181118011475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.446834087371826, 1.9116950035095215) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1493284702301025, 1.915266990661621) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.610316276550293, 1.905923843383789) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3680710792541504, 1.9060155153274536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.692893385887146, 1.9032560586929321) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3266412019729614, 1.8938069343566895) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1758533716201782, 1.9591797590255737) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0975650548934937, 2.083494186401367) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9428790807723999, 2.3325140476226807) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1125975847244263, 2.5205259323120117) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8007967472076416, 2.342930555343628) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6573976278305054, 2.4217662811279297) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.2851485311985016, 2.478278160095215) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.631146252155304, 2.387467861175537) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7839629650115967, 2.339232921600342) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.979055643081665, 2.6547820568084717) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8520033359527588, 2.7102441787719727) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9428790807723999, 2.3325140476226807) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0123071670532227, 1.9122555255889893) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1016486883163452, 1.3607304096221924) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1694363355636597, 1.037135362625122) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2784967422485352, 0.6609460115432739) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3916819095611572, 0.5235255360603333) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7281812429428101, 0.4820456802845001) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r4,0]  [r4,t,0]  [r4,0]  [r4,b,11]  [r4,11]  [h,11]  [r3,11]  [r3,t,11]  [r3,11]  [r3,b,14]  [r3,t,14]  [r3,14]  [h,14]  [r5,14]  [r5,t,14]  [r5,14]  [r5,t,14]  [r5,14]  [r5,b,39]  [r5,39]  [h,39]  [r6,39]  [r6,t,39]  [r6,39]  [r6,b,15]  [r6,15]  [r6,t,15]  [r6,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [r2,t,33]  [r2,33]  [r2,t,33]  [r2,33]  [r2,b,33]  [r2,t,33]  [r2,33]  [h,33]  [r1,33]  [r1,t,33]  [r1,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20799
RRG size = 1901

Movement Length = 31.252316
Remaining path Length = 0.0
Total path Length = 31.252316

Advice samples: [13, 5, 5, 1, 2, 0, 0, 0, 0, 0] (26)

Total time taken (in ms):8975.526268

Initialization time (in ms):720.244805
Sampling time (in ms):6915.484555
Advice time (in ms):8.760598
Path checking time (in ms):686.427853
Learning time (in ms):148.811418
Exploration time (in ms):0.0
Time taken other than these things (in ms):495.797039
Moving time (in ms):2147.4836



