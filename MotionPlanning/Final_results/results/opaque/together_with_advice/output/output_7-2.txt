Parameters values: 
Environment: results/environments/env7/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.45798842997240674,0.20320806098818242), (0.9579884299724067,0.20320806098818242), (0.9579884299724067,0.5032080609881824), (0.45798842997240674,0.5032080609881824)]
[(0.15064940767973892,2.6614375312127665), (0.6506494076797389,2.6614375312127665), (0.6506494076797389,2.9614375312127663), (0.15064940767973892,2.9614375312127663)]
[(3.337233300959369,0.040492437694537815), (3.837233300959369,0.040492437694537815), (3.837233300959369,0.3404924376945378), (3.337233300959369,0.3404924376945378)]
[(2.8410373893699594,2.453229257038431), (3.1410373893699592,2.453229257038431), (3.1410373893699592,2.953229257038431), (2.8410373893699594,2.953229257038431)]
[(4.793953835593923,0.04623404401637616), (5.293953835593923,0.04623404401637616), (5.293953835593923,0.34623404401637614), (4.793953835593923,0.34623404401637614)]
[(4.511697806781696,2.490182754065923), (5.011697806781696,2.490182754065923), (5.011697806781696,2.7901827540659228), (4.511697806781696,2.7901827540659228)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=0.43932533,h=2.7150483]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=2.2571568,h=2.7150483]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=2.4035554,h=2.7150483]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=3.241067,h=2.7150483]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=4.6056647,h=2.815751]  
t: java.awt.geom.Rectangle2D$Float[x=0.35798842,y=0.10320806,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.10320806,w=1.007339,h=2.9582295]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.0,w=3.8865838,h=3.0614376]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.0,w=3.8865838,h=3.0614376]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.0,w=5.343304,h=3.0614376]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.0,w=5.343304,h=3.0614376]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9444441, 1.5173342] with IG = 37.88677
Iter num: 2
Used frontier: Point2D.Float[1.145256, 2.358796] with IG = 41.6141
Iter num: 3
Added advice frontier Point2D.Float[0.7349105, 2.8210638]
Added advice frontier Point2D.Float[1.4393396, 2.6832607]
Used Advice frontier: Point2D.Float[1.4393396, 2.6832607] with IG = 228.35896
Iter num: 4
Used Advice frontier: Point2D.Float[0.7349105, 2.8210638] with IG = 139.31818
Iter num: 5
Used frontier: Point2D.Float[0.2578828, 2.4391563] with IG = 17.52458
Iter num: 6
Used frontier: Point2D.Float[0.24412009, 2.5024312] with IG = 108.100914
Iter num: 7
Used frontier: Point2D.Float[0.96432817, 0.5599831] with IG = 13.9814005
Iter num: 8
Added advice frontier Point2D.Float[1.2498759, 0.23718736]
Added advice frontier Point2D.Float[1.3219247, 0.23969933]
Added advice frontier Point2D.Float[1.029276, 0.25705844]
Used Advice frontier: Point2D.Float[1.029276, 0.25705844] with IG = 322.7796
Iter num: 9
Used Advice frontier: Point2D.Float[1.2498759, 0.23718736] with IG = 451.4814
Iter num: 10
Used Advice frontier: Point2D.Float[1.3219247, 0.23969933] with IG = 1387.1056
Iter num: 11
Used frontier: Point2D.Float[0.88262224, 0.20066883] with IG = 25.018686
Iter num: 12
Used frontier: Point2D.Float[0.6348167, 0.16612393] with IG = 39.96774
Iter num: 13
Used frontier: Point2D.Float[0.49963737, 0.12280612] with IG = 84.53664
Iter num: 14
Used frontier: Point2D.Float[0.18489671, 0.38755614] with IG = 34.039764
Iter num: 15
Used frontier: Point2D.Float[1.8720816, 1.4564147] with IG = 10.987604
Iter num: 16
Used frontier: Point2D.Float[2.674591, 1.6912228] with IG = 24.393017
Iter num: 17
Added advice frontier Point2D.Float[3.0809288, 0.80029535]
Added advice frontier Point2D.Float[3.1154876, 1.1044959]
Added advice frontier Point2D.Float[2.9242282, 2.1269]
Added advice frontier Point2D.Float[3.12444, 1.8497386]
Used Advice frontier: Point2D.Float[3.12444, 1.8497386] with IG = 209.66096
Iter num: 18
Added advice frontier Point2D.Float[3.0860627, 2.4248111]
Used Advice frontier: Point2D.Float[2.9242282, 2.1269] with IG = 292.47372
Iter num: 19
Added advice frontier Point2D.Float[3.402579, 2.5100741]
Added advice frontier Point2D.Float[3.4358819, 2.8092396]
Used Advice frontier: Point2D.Float[3.0860627, 2.4248111] with IG = 294.95898
Iter num: 20
Used Advice frontier: Point2D.Float[3.402579, 2.5100741] with IG = 305.06467
Iter num: 21
Used Advice frontier: Point2D.Float[3.4358819, 2.8092396] with IG = 332.2111
Iter num: 22
Used Advice frontier: Point2D.Float[3.1154876, 1.1044959] with IG = 54.10377
Iter num: 23
Added advice frontier Point2D.Float[3.2502937, 0.22064292]
Added advice frontier Point2D.Float[2.921343, 0.29844254]
Used Advice frontier: Point2D.Float[3.0809288, 0.80029535] with IG = 326.62952
Iter num: 24
Added advice frontier Point2D.Float[3.253269, 0.4162855]
Added advice frontier Point2D.Float[3.4133525, 0.46389616]
Added advice frontier Point2D.Float[3.1613047, 0.24665388]
Added advice frontier Point2D.Float[3.0297153, 0.1721781]
Used Advice frontier: Point2D.Float[3.253269, 0.4162855] with IG = 237.58086
Iter num: 25
Used Advice frontier: Point2D.Float[3.4133525, 0.46389616] with IG = 598.7539
Iter num: 26
Used Advice frontier: Point2D.Float[3.2502937, 0.22064292] with IG = 341.4734
Iter num: 27
Used Advice frontier: Point2D.Float[3.1613047, 0.24665388] with IG = 1078.6027
Iter num: 28
Used Advice frontier: Point2D.Float[3.0297153, 0.1721781] with IG = 661.3615
Iter num: 29
Used Advice frontier: Point2D.Float[2.921343, 0.29844254] with IG = 600.98016
Iter num: 30
Used frontier: Point2D.Float[3.9241838, 1.4581885] with IG = 13.242767
Iter num: 31
Used frontier: Point2D.Float[4.539523, 1.0975279] with IG = 30.737823
Iter num: 32
Used frontier: Point2D.Float[5.2482877, 1.5216976] with IG = 20.03142
Iter num: 33
Added advice frontier Point2D.Float[4.969525, 0.93497396]
Added advice frontier Point2D.Float[5.0966687, 2.038635]
Added advice frontier Point2D.Float[4.811872, 1.1143943]
Added advice frontier Point2D.Float[5.092405, 2.433662]
Added advice frontier Point2D.Float[5.0834537, 2.2865658]
Used Advice frontier: Point2D.Float[5.0966687, 2.038635] with IG = 185.62732
Iter num: 34
Added advice frontier Point2D.Float[5.4958124, 2.890089]
Added advice frontier Point2D.Float[5.7393675, 2.7017202]
Added advice frontier Point2D.Float[5.638212, 2.7913957]
Used Advice frontier: Point2D.Float[5.0834537, 2.2865658] with IG = 402.7667
Iter num: 35
Used Advice frontier: Point2D.Float[5.092405, 2.433662] with IG = 678.5722
Iter num: 36
Used Advice frontier: Point2D.Float[5.4958124, 2.890089] with IG = 164.16325
Iter num: 37
Used Advice frontier: Point2D.Float[5.638212, 2.7913957] with IG = 577.17633
Iter num: 38
Used Advice frontier: Point2D.Float[5.7393675, 2.7017202] with IG = 739.7454
Iter num: 39
Used Advice frontier: Point2D.Float[4.811872, 1.1143943] with IG = 52.787613
Iter num: 40
Added advice frontier Point2D.Float[4.7788367, 0.35134184]
Used Advice frontier: Point2D.Float[4.969525, 0.93497396] with IG = 418.6847
Iter num: 41
Used Advice frontier: Point2D.Float[4.7788367, 0.35134184] with IG = 161.22838
Iter num: 42
Added advice frontier Point2D.Float[4.1641235, 0.2359648]
Used Advice frontier: Point2D.Float[4.1641235, 0.2359648] with IG = 152.62555

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9444441199302673, 1.517334222793579) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1452560424804688, 2.3587958812713623) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4393396377563477, 2.683260679244995) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7349104881286621, 2.821063756942749) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6751566529273987, 2.4441978931427) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.2578828036785126, 2.4391562938690186) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.24412009119987488, 2.5024311542510986) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6672202944755554, 2.3118364810943604) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9143998622894287, 1.9205213785171509) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9444441199302673, 1.517334222793579) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9643281698226929, 0.5599830746650696) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0292760133743286, 0.25705844163894653) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2498759031295776, 0.23718735575675964) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3219246864318848, 0.2396993339061737) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9788166284561157, 0.12993228435516357) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.882622241973877, 0.2006688266992569) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6348167061805725, 0.16612392663955688) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4996373653411865, 0.122806116938591) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.18489670753479004, 0.38755613565444946) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6129209995269775, 0.6982097029685974) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8670583963394165, 0.875393807888031) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.522348403930664, 1.297149419784546) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8720816373825073, 1.4564146995544434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.0853099822998047, 1.4049278497695923) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.523279905319214, 1.4520206451416016) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.674591064453125, 1.6912227869033813) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1244399547576904, 1.849738597869873) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9242281913757324, 2.1268999576568604) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0860626697540283, 2.4248111248016357) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.4025790691375732, 2.5100741386413574) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.4358818531036377, 2.809239625930786) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2031571865081787, 2.4827816486358643) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9935829639434814, 2.080610513687134) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9981870651245117, 1.6257967948913574) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0551087856292725, 1.5104151964187622) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.115487575531006, 1.104495882987976) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0809288024902344, 0.800295352935791) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2532689571380615, 0.41628551483154297) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.4133524894714355, 0.46389615535736084) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.250293731689453, 0.22064292430877686) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.1613047122955322, 0.24665388464927673) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.0297152996063232, 0.17217810451984406) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9213430881500244, 0.298442542552948) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9733798503875732, 0.4179978668689728) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0809288024902344, 0.800295352935791) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.133297920227051, 1.0235109329223633) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5058867931365967, 1.19501793384552) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.579272985458374, 1.2364240884780884) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9241838455200195, 1.458188533782959) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.195826053619385, 1.4247794151306152) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.539523124694824, 1.0975278615951538) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.195826053619385, 1.4247794151306152) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.52766227722168, 1.6358914375305176) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.248287677764893, 1.5216976404190063) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.096668720245361, 2.038635015487671) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.08345365524292, 2.2865657806396484) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.092404842376709, 2.433661937713623) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.49581241607666, 2.8900890350341797) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.638212203979492, 2.791395664215088) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.739367485046387, 2.7017202377319336) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.507319450378418, 2.468592405319214) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.265361309051514, 2.202150344848633) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.096668720245361, 2.038635015487671) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.955869674682617, 1.6854532957077026) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.848299026489258, 1.3416681289672852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8118720054626465, 1.1143943071365356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.96952486038208, 0.934973955154419) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.965498447418213, 0.8922051787376404) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.88831901550293, 0.5535785555839539) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.778836727142334, 0.3513418436050415) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [r1,t,22]  [r1,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,b,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,t,35]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 42
Total sampled points = 21969
RRG size = 2101

Movement Length = 25.349318
Remaining path Length = 0.0
Total path Length = 25.349318

Advice samples: [9, 6, 10, 3, 0, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):10254.796535

Initialization time (in ms):605.922261
Sampling time (in ms):7851.809239
Advice time (in ms):9.409265
Path checking time (in ms):946.526776
Learning time (in ms):231.816142
Exploration time (in ms):0.0
Time taken other than these things (in ms):609.312852
Moving time (in ms):1879.0482



