Parameters values: 
Environment: results/environments/env98/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.2964459906563521,0.00587351198522919), (1.5964459906563522,0.00587351198522919), (1.5964459906563522,0.5058735119852292), (1.2964459906563521,0.5058735119852292)]
[(0.008202265135611175,2.4612755217872535), (0.30820226513561116,2.4612755217872535), (0.30820226513561116,2.9612755217872535), (0.008202265135611175,2.9612755217872535)]
[(3.2001140349371284,0.24148467603878945), (3.7001140349371284,0.24148467603878945), (3.7001140349371284,0.5414846760387895), (3.2001140349371284,0.5414846760387895)]
[(2.5265201032575746,2.6206805593035916), (3.0265201032575746,2.6206805593035916), (3.0265201032575746,2.9206805593035914), (2.5265201032575746,2.9206805593035914)]
[(4.892832179970829,0.04533355172275242), (5.392832179970829,0.04533355172275242), (5.392832179970829,0.34533355172275243), (4.892832179970829,0.34533355172275243)]
[(4.5570679001751015,2.4638930332618996), (4.857067900175101,2.4638930332618996), (4.857067900175101,2.9638930332618996), (4.5570679001751015,2.9638930332618996)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.65736973,y=0.035862837,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.65736973,y=0.035862837,w=0.37201452,h=2.6547177]  java.awt.geom.Rectangle2D$Float[x=0.65736973,y=0.035862837,w=1.7418119,h=2.6547177]  java.awt.geom.Rectangle2D$Float[x=0.65736973,y=0.035862837,w=2.9603267,h=2.7909765]  java.awt.geom.Rectangle2D$Float[x=0.65736973,y=0.035862837,w=3.8500295,h=2.7909765]  java.awt.geom.Rectangle2D$Float[x=0.65736973,y=0.035862837,w=5.2252088,h=2.7909765]  
t: java.awt.geom.Rectangle2D$Float[x=1.196446,y=0.0,w=0.5,h=0.6058735]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.696446,h=3.0612755]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.800114,h=3.0612755]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.800114,h=3.0612755]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.492832,h=3.0612755]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.492832,h=3.063893]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0140309, 1.4549773] with IG = 34.96736
Iter num: 2
Used frontier: Point2D.Float[1.0032481, 0.6060912] with IG = 43.583015
Iter num: 3
Added advice frontier Point2D.Float[1.2187448, 0.08914488]
Added advice frontier Point2D.Float[1.1092771, 0.2857905]
Added advice frontier Point2D.Float[0.8024186, 0.11518703]
Added advice frontier Point2D.Float[0.8534638, 0.004329424]
Used Advice frontier: Point2D.Float[1.1092771, 0.2857905] with IG = 296.3894
Iter num: 4
Used Advice frontier: Point2D.Float[1.2187448, 0.08914488] with IG = 444.3231
Iter num: 5
Used Advice frontier: Point2D.Float[0.8534638, 0.004329424] with IG = 266.6678
Iter num: 6
Used Advice frontier: Point2D.Float[0.8024186, 0.11518703] with IG = 819.3687
Iter num: 7
Used frontier: Point2D.Float[1.0741735, 2.377268] with IG = 14.044819
Iter num: 8
Added advice frontier Point2D.Float[0.3939869, 2.4263198]
Added advice frontier Point2D.Float[0.47513932, 2.786434]
Added advice frontier Point2D.Float[0.9138948, 2.5647168]
Used Advice frontier: Point2D.Float[0.9138948, 2.5647168] with IG = 405.46594
Iter num: 9
Used Advice frontier: Point2D.Float[0.47513932, 2.786434] with IG = 203.41982
Iter num: 10
Used Advice frontier: Point2D.Float[0.3939869, 2.4263198] with IG = 270.89642
Iter num: 11
Used frontier: Point2D.Float[1.9824739, 1.4311367] with IG = 12.269958
Iter num: 12
Used frontier: Point2D.Float[2.9430146, 1.2354907] with IG = 24.48322
Iter num: 13
Added advice frontier Point2D.Float[2.871216, 0.9235081]
Added advice frontier Point2D.Float[3.1991246, 0.6287725]
Added advice frontier Point2D.Float[3.2463489, 0.7624794]
Added advice frontier Point2D.Float[2.8997233, 1.0085297]
Added advice frontier Point2D.Float[2.966011, 2.1744406]
Added advice frontier Point2D.Float[2.9765797, 1.8595226]
Used Advice frontier: Point2D.Float[2.8997233, 1.0085297] with IG = 432.8013
Iter num: 14
Added advice frontier Point2D.Float[2.2594242, 0.39077696]
Added advice frontier Point2D.Float[2.408962, 0.5949358]
Used Advice frontier: Point2D.Float[2.871216, 0.9235081] with IG = 1115.1573
Iter num: 15
Used Advice frontier: Point2D.Float[3.2463489, 0.7624794] with IG = 244.95766
Iter num: 16
Used Advice frontier: Point2D.Float[3.1991246, 0.6287725] with IG = 705.211
Iter num: 17
Used Advice frontier: Point2D.Float[2.408962, 0.5949358] with IG = 121.15476
Iter num: 18
Used Advice frontier: Point2D.Float[2.2594242, 0.39077696] with IG = 395.1539
Iter num: 19
Used Advice frontier: Point2D.Float[2.9765797, 1.8595226] with IG = 57.19474
Iter num: 20
Added advice frontier Point2D.Float[2.6509104, 2.54103]
Added advice frontier Point2D.Float[3.4417214, 2.638018]
Added advice frontier Point2D.Float[3.3167014, 2.5306678]
Added advice frontier Point2D.Float[2.7020388, 2.4749064]
Used Advice frontier: Point2D.Float[2.966011, 2.1744406] with IG = 317.36426
Iter num: 21
Used Advice frontier: Point2D.Float[2.7020388, 2.4749064] with IG = 250.03041
Iter num: 22
Used Advice frontier: Point2D.Float[2.6509104, 2.54103] with IG = 1196.389
Iter num: 23
Used Advice frontier: Point2D.Float[3.3167014, 2.5306678] with IG = 142.34131
Iter num: 24
Used Advice frontier: Point2D.Float[3.4417214, 2.638018] with IG = 606.85187
Iter num: 25
Used frontier: Point2D.Float[2.6509104, 2.54103] with IG = 22.172667
Iter num: 26
Used frontier: Point2D.Float[3.891807, 1.4333547] with IG = 11.292058
Iter num: 27
Used frontier: Point2D.Float[2.580593, 2.523311] with IG = 11.0525465
Iter num: 28
Used frontier: Point2D.Float[4.644069, 1.4166234] with IG = 9.318567
Iter num: 29
Added advice frontier Point2D.Float[5.299861, 0.8552827]
Added advice frontier Point2D.Float[5.0754547, 2.0356796]
Added advice frontier Point2D.Float[5.1916, 1.9689819]
Used Advice frontier: Point2D.Float[5.299861, 0.8552827] with IG = 115.215454
Iter num: 30
Added advice frontier Point2D.Float[5.30429, 0.37489957]
Added advice frontier Point2D.Float[5.2217855, 0.58792496]
Used Advice frontier: Point2D.Float[5.2217855, 0.58792496] with IG = 359.03473
Iter num: 31
Added advice frontier Point2D.Float[4.3246217, 0.36485207]
Used Advice frontier: Point2D.Float[5.30429, 0.37489957] with IG = 437.74356
Iter num: 32
Used Advice frontier: Point2D.Float[4.3246217, 0.36485207] with IG = 86.72782
Iter num: 33
Used Advice frontier: Point2D.Float[5.1916, 1.9689819] with IG = 50.301373
Iter num: 34
Added advice frontier Point2D.Float[4.8833675, 2.6546352]
Added advice frontier Point2D.Float[5.2359595, 2.9463115]
Used Advice frontier: Point2D.Float[5.0754547, 2.0356796] with IG = 746.63715
Iter num: 35
Added advice frontier Point2D.Float[5.736946, 2.554743]
Added advice frontier Point2D.Float[5.821304, 2.4092617]
Used Advice frontier: Point2D.Float[4.8833675, 2.6546352] with IG = 154.3027

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.014030933380127, 1.45497727394104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0032480955123901, 0.6060912013053894) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1092771291732788, 0.28579050302505493) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2187447547912598, 0.08914487808942795) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8534638285636902, 0.004329423885792494) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.80241858959198, 0.11518702656030655) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8285759091377258, 0.3070048391819) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9327007532119751, 1.2411409616470337) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0385912656784058, 2.0804367065429688) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0741734504699707, 2.377268075942993) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.913894772529602, 2.5647168159484863) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.475139319896698, 2.7864339351654053) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.39398691058158875, 2.4263198375701904) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.99587082862854, 2.053372383117676) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1231510639190674, 1.9727928638458252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5075045824050903, 1.7294602394104004) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9824738502502441, 1.4311367273330688) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.943014621734619, 1.2354906797409058) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8997232913970947, 1.0085296630859375) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.871216058731079, 0.9235081076622009) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2463488578796387, 0.7624794244766235) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.199124574661255, 0.628772497177124) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8686728477478027, 0.7311096787452698) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4089620113372803, 0.5949357748031616) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2594242095947266, 0.39077696204185486) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.607238531112671, 0.6406989097595215) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.778404951095581, 0.7768135070800781) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8451268672943115, 1.2437442541122437) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8780431747436523, 1.4225656986236572) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9765796661376953, 1.8595225811004639) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9660110473632812, 2.174440622329712) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7020387649536133, 2.4749064445495605) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6509103775024414, 2.541029930114746) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.891575336456299, 2.429060459136963) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3167014122009277, 2.530667781829834) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4417214393615723, 2.6380178928375244) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.298485279083252, 2.6109066009521484) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.891575336456299, 2.429060459136963) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6509103775024414, 2.541029930114746) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9660110473632812, 2.174440622329712) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2199881076812744, 1.8906149864196777) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.472438097000122, 1.6817208528518677) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7268853187561035, 1.5635020732879639) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8918070793151855, 1.4333547353744507) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7268853187561035, 1.5635020732879639) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.472438097000122, 1.6817208528518677) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2199881076812744, 1.8906149864196777) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9660110473632812, 2.174440622329712) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.857506513595581, 2.2728726863861084) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5805931091308594, 2.523310899734497) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.857506513595581, 2.2728726863861084) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9660110473632812, 2.174440622329712) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2199881076812744, 1.8906149864196777) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4101853370666504, 1.7931941747665405) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7268853187561035, 1.5635020732879639) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8918070793151855, 1.4333547353744507) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.644069194793701, 1.4166233539581299) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.798788547515869, 1.230987310409546) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.299860954284668, 0.855282723903656) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.221785545349121, 0.5879249572753906) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.304289817810059, 0.37489956617355347) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.221785545349121, 0.5879249572753906) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.688166618347168, 0.44811519980430603) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.324621677398682, 0.36485207080841064) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.688166618347168, 0.44811519980430603) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.780577659606934, 0.6236904859542847) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.9372453689575195, 0.9659632444381714) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.956759929656982, 1.1780309677124023) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.998779773712158, 1.3805550336837769) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.108463764190674, 1.653175711631775) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1915998458862305, 1.9689818620681763) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  


Remaining path: 
[r6,t,21]  [r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 35
Total sampled points = 18710
RRG size = 1751

Movement Length = 26.452454
Remaining path Length = 2.3896081
Total path Length = 28.842062

Advice samples: [11, 7, 4, 4, 0, 0, 0, 0, 0, 0] (26)

Total time taken (in ms):9013.390892

Initialization time (in ms):500.539566
Sampling time (in ms):7383.997034
Advice time (in ms):7.383343
Path checking time (in ms):576.861342
Learning time (in ms):159.644466
Exploration time (in ms):0.0
Time taken other than these things (in ms):384.965141
Moving time (in ms):2483.028



