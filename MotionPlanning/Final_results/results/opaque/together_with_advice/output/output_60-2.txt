Parameters values: 
Environment: results/environments/env60/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.20002434897286384,0.016058018028613074), (0.5000243489728639,0.016058018028613074), (0.5000243489728639,0.5160580180286131), (0.20002434897286384,0.5160580180286131)]
[(0.6702677824099635,2.6414287188664876), (1.1702677824099634,2.6414287188664876), (1.1702677824099634,2.9414287188664874), (0.6702677824099635,2.9414287188664874)]
[(3.0124567504930395,0.14423158156954774), (3.5124567504930395,0.14423158156954774), (3.5124567504930395,0.44423158156954773), (3.0124567504930395,0.44423158156954773)]
[(2.2305339462624283,2.5076496885715023), (2.7305339462624283,2.5076496885715023), (2.7305339462624283,2.807649688571502), (2.2305339462624283,2.807649688571502)]
[(5.073039253800532,0.049590439794048535), (5.373039253800532,0.049590439794048535), (5.373039253800532,0.5495904397940485), (5.073039253800532,0.5495904397940485)]
[(4.991242793062115,2.486027989407533), (5.291242793062115,2.486027989407533), (5.291242793062115,2.986027989407533), (4.991242793062115,2.986027989407533)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.6169832,y=0.041905288,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.041905288,w=1.6212,h=2.807913]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.041905288,w=2.0915399,h=2.807913]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.041905288,w=3.204024,h=2.807913]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.025445752,w=5.627618,h=2.8243728]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.025445752,w=5.627618,h=2.8243728]  
t: java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=0.5,h=0.616058]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=1.1702434,h=3.0414288]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=3.5124323,h=3.0414288]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=3.5124323,h=3.0414288]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=5.373015,h=3.0414288]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=5.373015,h=3.086028]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9926865, 1.4414518] with IG = 35.77
Iter num: 2
Used frontier: Point2D.Float[1.2106851, 2.119382] with IG = 40.723564
Iter num: 3
Added advice frontier Point2D.Float[0.90580845, 2.5738294]
Used Advice frontier: Point2D.Float[0.90580845, 2.5738294] with IG = 182.73495
Iter num: 4
Added advice frontier Point2D.Float[0.24544908, 2.660811]
Added advice frontier Point2D.Float[0.36117414, 2.3246405]
Used Advice frontier: Point2D.Float[0.36117414, 2.3246405] with IG = 166.96336
Iter num: 5
Used Advice frontier: Point2D.Float[0.24544908, 2.660811] with IG = 281.2688
Iter num: 6
Used frontier: Point2D.Float[0.93913084, 0.53360856] with IG = 16.864325
Iter num: 7
Added advice frontier Point2D.Float[0.529631, 0.14396739]
Added advice frontier Point2D.Float[0.73144895, 0.1972632]
Added advice frontier Point2D.Float[1.695585, 0.21529461]
Added advice frontier Point2D.Float[1.3537455, 0.08699284]
Used Advice frontier: Point2D.Float[0.73144895, 0.1972632] with IG = 252.97414
Iter num: 8
Used Advice frontier: Point2D.Float[0.529631, 0.14396739] with IG = 479.0729
Iter num: 9
Used Advice frontier: Point2D.Float[1.3537455, 0.08699284] with IG = 120.87301
Iter num: 10
Used Advice frontier: Point2D.Float[1.695585, 0.21529461] with IG = 273.87943
Iter num: 11
Used frontier: Point2D.Float[1.9484683, 1.4516312] with IG = 11.107823
Iter num: 12
Used frontier: Point2D.Float[2.7068472, 1.3983834] with IG = 25.766445
Iter num: 13
Added advice frontier Point2D.Float[2.9737287, 0.92141044]
Added advice frontier Point2D.Float[2.9760199, 1.0763891]
Added advice frontier Point2D.Float[3.096802, 2.001459]
Added advice frontier Point2D.Float[3.230939, 1.9317755]
Used Advice frontier: Point2D.Float[2.9760199, 1.0763891] with IG = 238.27478
Iter num: 14
Added advice frontier Point2D.Float[3.4261792, 0.46209055]
Added advice frontier Point2D.Float[3.6717649, 0.64105654]
Used Advice frontier: Point2D.Float[2.9737287, 0.92141044] with IG = 645.1797
Iter num: 15
Used Advice frontier: Point2D.Float[3.4261792, 0.46209055] with IG = 155.10193
Iter num: 16
Used Advice frontier: Point2D.Float[3.6717649, 0.64105654] with IG = 329.08063
Iter num: 17
Used Advice frontier: Point2D.Float[3.230939, 1.9317755] with IG = 58.01885
Iter num: 18
Added advice frontier Point2D.Float[2.7309048, 2.6105247]
Used Advice frontier: Point2D.Float[3.096802, 2.001459] with IG = 661.563
Iter num: 19
Added advice frontier Point2D.Float[3.3566327, 2.6433194]
Added advice frontier Point2D.Float[3.2147224, 2.571579]
Added advice frontier Point2D.Float[2.2632532, 0.25737897]
Used Advice frontier: Point2D.Float[3.2147224, 2.571579] with IG = 170.86972
Iter num: 20
Used Advice frontier: Point2D.Float[3.3566327, 2.6433194] with IG = 628.87836
Iter num: 21
Used Advice frontier: Point2D.Float[2.7309048, 2.6105247] with IG = 156.27455
Iter num: 22
Used Advice frontier: Point2D.Float[2.2632532, 0.25737897] with IG = 38.565887
Iter num: 23
Used frontier: Point2D.Float[4.0055523, 1.4675268] with IG = 10.713608
Iter num: 24
Used frontier: Point2D.Float[4.7090564, 1.4303795] with IG = 36.906437
Iter num: 25
Added advice frontier Point2D.Float[5.1156197, 2.1379867]
Added advice frontier Point2D.Float[5.0643144, 0.70348746]
Added advice frontier Point2D.Float[5.135347, 1.9013816]
Added advice frontier Point2D.Float[4.9785604, 1.0117627]
Used Advice frontier: Point2D.Float[5.0643144, 0.70348746] with IG = 123.60001
Iter num: 26
Added advice frontier Point2D.Float[5.0022445, 0.26025093]
Added advice frontier Point2D.Float[4.868115, 0.28066072]
Used Advice frontier: Point2D.Float[4.9785604, 1.0117627] with IG = 312.51923
Iter num: 27
Used Advice frontier: Point2D.Float[4.868115, 0.28066072] with IG = 135.07143
Iter num: 28
Used Advice frontier: Point2D.Float[5.0022445, 0.26025093] with IG = 737.06384
Iter num: 29
Used Advice frontier: Point2D.Float[5.135347, 1.9013816] with IG = 57.591763
Iter num: 30
Added advice frontier Point2D.Float[4.8984756, 2.5001204]
Added advice frontier Point2D.Float[4.7516785, 2.5473094]
Used Advice frontier: Point2D.Float[5.1156197, 2.1379867] with IG = 421.18384
Iter num: 31
Added advice frontier Point2D.Float[5.5923047, 2.5020616]
Added advice frontier Point2D.Float[5.7681494, 2.8219414]
Used Advice frontier: Point2D.Float[4.8984756, 2.5001204] with IG = 236.82553
Iter num: 32
Added advice frontier Point2D.Float[5.343335, 2.4160416]
Used Advice frontier: Point2D.Float[4.7516785, 2.5473094] with IG = 648.5279
Iter num: 33
Used Advice frontier: Point2D.Float[5.343335, 2.4160416] with IG = 164.64127
Iter num: 34
Used Advice frontier: Point2D.Float[5.5923047, 2.5020616] with IG = 379.63507
Iter num: 35
Used Advice frontier: Point2D.Float[5.7681494, 2.8219414] with IG = 273.95264
Iter num: 36
Used frontier: Point2D.Float[5.6082797, 0.31390172] with IG = 7.5662217
Iter num: 37
Added advice frontier Point2D.Float[5.66371, 0.13810481]
Added advice frontier Point2D.Float[5.893906, 0.11825168]
Added advice frontier Point2D.Float[5.458366, 0.1632201]
Used Advice frontier: Point2D.Float[5.66371, 0.13810481] with IG = 542.509

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9926865100860596, 1.4414517879486084) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.210685133934021, 2.119381904602051) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9058084487915039, 2.573829412460327) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3611741364002228, 2.3246405124664307) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.24544908106327057, 2.660810947418213) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8675497174263, 1.9837998151779175) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8725871443748474, 1.6944425106048584) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8950329422950745, 1.0730443000793457) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9391308426856995, 0.5336085557937622) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7314489483833313, 0.1972631961107254) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5296310186386108, 0.1439673900604248) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6847586035728455, 0.1508982628583908) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.353745460510254, 0.08699283748865128) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.695585012435913, 0.21529461443424225) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.236486792564392, 0.8473626971244812) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1706241369247437, 0.9976499676704407) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2536685466766357, 1.177958369255066) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9484683275222778, 1.4516311883926392) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4192981719970703, 1.1910476684570312) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7068471908569336, 1.398383378982544) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.976019859313965, 1.0763890743255615) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.973728656768799, 0.9214104413986206) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4261791706085205, 0.46209055185317993) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.671764850616455, 0.6410565376281738) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.387394666671753, 0.7652373909950256) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.976019859313965, 1.0763890743255615) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.166809558868408, 1.5541279315948486) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2309389114379883, 1.931775450706482) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.096801996231079, 2.0014588832855225) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.147200107574463, 2.1224966049194336) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2147223949432373, 2.5715789794921875) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.356632709503174, 2.6433193683624268) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.1802139282226562, 2.574993848800659) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7309048175811768, 2.6105246543884277) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.7920849323272705, 2.2988121509552) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.807544231414795, 1.9032725095748901) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7743403911590576, 1.5507851839065552) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.825235366821289, 1.29397451877594) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8931312561035156, 1.0845489501953125) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6538808345794678, 0.711270809173584) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3352432250976562, 0.3653905987739563) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2632532119750977, 0.2573789656162262) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.499396800994873, 0.543211817741394) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8258349895477295, 0.827305018901825) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.973728656768799, 0.9214104413986206) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.387418508529663, 1.1597384214401245) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6097567081451416, 1.274623155593872) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.005552291870117, 1.4675267934799194) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.709056377410889, 1.4303795099258423) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.064314365386963, 0.7034874558448792) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.978560447692871, 1.0117627382278442) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.942857265472412, 0.6498242616653442) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.868114948272705, 0.2806607186794281) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.002244472503662, 0.26025092601776123) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.942857265472412, 0.6498242616653442) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.978560447692871, 1.0117627382278442) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.857009410858154, 1.351569414138794) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.967818260192871, 1.526309847831726) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.13534688949585, 1.9013816118240356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.115619659423828, 2.137986660003662) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.921223163604736, 2.463393211364746) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.898475646972656, 2.5001204013824463) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.751678466796875, 2.547309398651123) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.898475646972656, 2.5001204013824463) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.232301235198975, 2.445970296859741) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.343335151672363, 2.416041612625122) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.592304706573486, 2.502061605453491) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.768149375915527, 2.821941375732422) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.592304706573486, 2.502061605453491) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.115619659423828, 2.137986660003662) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.044421195983887, 1.8833818435668945) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.018883228302002, 1.514998197555542) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.041265487670898, 1.2251498699188232) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.978560447692871, 1.0117627382278442) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.229618072509766, 0.8395740389823914) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.578355312347412, 0.6886856555938721) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,t,35]  [r6,b,53]  [r6,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 19714
RRG size = 1852

Movement Length = 29.433834
Remaining path Length = 0.0
Total path Length = 29.433834

Advice samples: [14, 8, 6, 1, 0, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):8983.601662

Initialization time (in ms):534.308873
Sampling time (in ms):7243.664952
Advice time (in ms):7.825746
Path checking time (in ms):605.715344
Learning time (in ms):150.456777
Exploration time (in ms):0.0
Time taken other than these things (in ms):441.62997
Moving time (in ms):2952.79



