Parameters values: 
Environment: results/environments/env52/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.2722599495151272,0.043477514645969856), (1.5722599495151273,0.043477514645969856), (1.5722599495151273,0.5434775146459698), (1.2722599495151272,0.5434775146459698)]
[(1.2180478132492327,2.6466249334735124), (1.7180478132492327,2.6466249334735124), (1.7180478132492327,2.946624933473512), (1.2180478132492327,2.946624933473512)]
[(2.3755102465834037,0.18762865767727185), (2.8755102465834037,0.18762865767727185), (2.8755102465834037,0.4876286576772718), (2.3755102465834037,0.4876286576772718)]
[(3.3038540242053545,2.609865702074196), (3.8038540242053545,2.609865702074196), (3.8038540242053545,2.909865702074196), (3.3038540242053545,2.909865702074196)]
[(5.078708414670673,0.04526408474261078), (5.3787084146706725,0.04526408474261078), (5.3787084146706725,0.5452640847426108), (5.078708414670673,0.5452640847426108)]
[(4.534513999248959,2.658476303151124), (5.034513999248959,2.658476303151124), (5.034513999248959,2.958476303151124), (4.534513999248959,2.958476303151124)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.39531136,y=0.029394856,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.304113,y=0.029394856,w=0.29119834,h=2.756348]  java.awt.geom.Rectangle2D$Float[x=0.304113,y=0.029394856,w=2.0560508,h=2.756348]  java.awt.geom.Rectangle2D$Float[x=0.304113,y=0.029394856,w=2.6920228,h=2.756348]  java.awt.geom.Rectangle2D$Float[x=0.304113,y=0.029394856,w=4.0212145,h=2.756348]  java.awt.geom.Rectangle2D$Float[x=0.304113,y=0.029394856,w=4.0481005,h=2.7725215]  
t: java.awt.geom.Rectangle2D$Float[x=1.1722599,y=0.0,w=0.5,h=0.6434775]  java.awt.geom.Rectangle2D$Float[x=1.1180478,y=0.0,w=0.6999999,h=3.046625]  java.awt.geom.Rectangle2D$Float[x=1.1180478,y=0.0,w=1.8574625,h=3.046625]  java.awt.geom.Rectangle2D$Float[x=1.1180478,y=0.0,w=2.7858062,h=3.046625]  java.awt.geom.Rectangle2D$Float[x=1.1180478,y=0.0,w=4.3606606,h=3.046625]  java.awt.geom.Rectangle2D$Float[x=1.1180478,y=0.0,w=4.3606606,h=3.0584762]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9751448, 1.4529834] with IG = 36.512722
Iter num: 2
Used frontier: Point2D.Float[1.3334749, 0.5514944] with IG = 38.140625
Iter num: 3
Used frontier: Point2D.Float[0.49347353, 0.48494712] with IG = 35.602676
Iter num: 4
Added advice frontier Point2D.Float[0.50658464, 0.056883294]
Added advice frontier Point2D.Float[0.024692943, 0.25411114]
Used Advice frontier: Point2D.Float[0.50658464, 0.056883294] with IG = 233.50053
Iter num: 5
Used Advice frontier: Point2D.Float[0.024692943, 0.25411114] with IG = 192.05272
Iter num: 6
Used frontier: Point2D.Float[1.0439507, 2.3757248] with IG = 12.695956
Iter num: 7
Added advice frontier Point2D.Float[0.49415466, 2.6983657]
Added advice frontier Point2D.Float[0.6086193, 2.8301773]
Added advice frontier Point2D.Float[1.2029365, 2.9504867]
Used Advice frontier: Point2D.Float[1.2029365, 2.9504867] with IG = 167.68808
Iter num: 8
Used Advice frontier: Point2D.Float[0.6086193, 2.8301773] with IG = 164.91518
Iter num: 9
Used Advice frontier: Point2D.Float[0.49415466, 2.6983657] with IG = 572.8195
Iter num: 10
Used frontier: Point2D.Float[1.8821617, 1.5155797] with IG = 12.509672
Iter num: 11
Used frontier: Point2D.Float[2.7927074, 1.554569] with IG = 24.79249
Iter num: 12
Added advice frontier Point2D.Float[2.9902625, 0.9300943]
Added advice frontier Point2D.Float[3.2581718, 1.2060832]
Added advice frontier Point2D.Float[3.2411358, 2.186689]
Added advice frontier Point2D.Float[3.0540817, 1.9041984]
Used Advice frontier: Point2D.Float[3.0540817, 1.9041984] with IG = 229.08008
Iter num: 13
Added advice frontier Point2D.Float[3.3197231, 2.5287492]
Added advice frontier Point2D.Float[3.5264137, 2.3973837]
Added advice frontier Point2D.Float[2.9094265, 2.7081587]
Added advice frontier Point2D.Float[2.6512346, 2.376712]
Used Advice frontier: Point2D.Float[3.2411358, 2.186689] with IG = 295.15335
Iter num: 14
Used Advice frontier: Point2D.Float[3.3197231, 2.5287492] with IG = 284.92313
Iter num: 15
Used Advice frontier: Point2D.Float[3.5264137, 2.3973837] with IG = 408.32352
Iter num: 16
Used Advice frontier: Point2D.Float[2.9094265, 2.7081587] with IG = 144.36037
Iter num: 17
Used Advice frontier: Point2D.Float[2.6512346, 2.376712] with IG = 238.01436
Iter num: 18
Used Advice frontier: Point2D.Float[3.2581718, 1.2060832] with IG = 73.991394
Iter num: 19
Added advice frontier Point2D.Float[2.9195492, 0.3988507]
Added advice frontier Point2D.Float[2.897618, 0.59562474]
Used Advice frontier: Point2D.Float[2.9902625, 0.9300943] with IG = 259.98572
Iter num: 20
Used Advice frontier: Point2D.Float[2.897618, 0.59562474] with IG = 288.13196
Iter num: 21
Used Advice frontier: Point2D.Float[2.9195492, 0.3988507] with IG = 505.06985
Iter num: 22
Used frontier: Point2D.Float[2.7641869, 0.77533245] with IG = 27.00853
Iter num: 23
Used frontier: Point2D.Float[2.3934252, 0.63909537] with IG = 32.911423
Iter num: 24
Added advice frontier Point2D.Float[2.3276784, 0.21225353]
Added advice frontier Point2D.Float[2.2502096, 0.4264824]
Added advice frontier Point2D.Float[2.2262268, 0.20525654]
Used Advice frontier: Point2D.Float[2.2502096, 0.4264824] with IG = 390.09265
Iter num: 25
Used Advice frontier: Point2D.Float[2.2262268, 0.20525654] with IG = 449.39365
Iter num: 26
Used Advice frontier: Point2D.Float[2.3276784, 0.21225353] with IG = 983.35535
Iter num: 27
Added advice frontier Point2D.Float[2.3452678, 0.338294]
Used Advice frontier: Point2D.Float[2.3452678, 0.338294] with IG = 785.78125
Iter num: 28
Used frontier: Point2D.Float[2.2262268, 0.20525654] with IG = 61.617428
Iter num: 29
Used frontier: Point2D.Float[4.1258144, 1.4691986] with IG = 10.438833
Iter num: 30
Used frontier: Point2D.Float[4.846411, 1.177568] with IG = 39.207504
Iter num: 31
Added advice frontier Point2D.Float[5.166934, 0.63106847]
Added advice frontier Point2D.Float[5.1078134, 2.0137024]
Added advice frontier Point2D.Float[5.1515417, 1.7793955]
Added advice frontier Point2D.Float[5.3700686, 0.7441974]
Added advice frontier Point2D.Float[5.4462905, 0.5536346]
Used Advice frontier: Point2D.Float[5.166934, 0.63106847] with IG = 157.8386
Iter num: 32
Added advice frontier Point2D.Float[4.8656955, 0.9493257]
Used Advice frontier: Point2D.Float[5.3700686, 0.7441974] with IG = 430.08542
Iter num: 33
Used Advice frontier: Point2D.Float[5.4462905, 0.5536346] with IG = 487.23145
Iter num: 34
Used Advice frontier: Point2D.Float[4.8656955, 0.9493257] with IG = 123.022934
Iter num: 35
Used Advice frontier: Point2D.Float[5.1515417, 1.7793955] with IG = 110.068344
Iter num: 36
Added advice frontier Point2D.Float[4.871191, 2.5632832]
Added advice frontier Point2D.Float[4.650379, 2.3695827]
Used Advice frontier: Point2D.Float[5.1078134, 2.0137024] with IG = 419.54672
Iter num: 37
Used Advice frontier: Point2D.Float[4.650379, 2.3695827] with IG = 172.07133
Iter num: 38
Used Advice frontier: Point2D.Float[4.871191, 2.5632832] with IG = 340.44778
Iter num: 39
Used frontier: Point2D.Float[5.6857843, 2.4453156] with IG = 34.714813
Iter num: 40
Used frontier: Point2D.Float[4.3739557, 2.4806073] with IG = 6.869067
Iter num: 41
Added advice frontier Point2D.Float[4.23227, 2.77759]
Added advice frontier Point2D.Float[4.490449, 2.7774103]
Added advice frontier Point2D.Float[4.1823945, 2.5848067]
Used Advice frontier: Point2D.Float[4.1823945, 2.5848067] with IG = 458.57465
Iter num: 42
Used Advice frontier: Point2D.Float[4.23227, 2.77759] with IG = 502.18317
Iter num: 43
Used Advice frontier: Point2D.Float[4.490449, 2.7774103] with IG = 387.3278
Iter num: 44
Used frontier: Point2D.Float[4.2445393, 0.2940636] with IG = 5.5009933
Iter num: 45
Added advice frontier Point2D.Float[4.2316165, 0.13015196]
Used Advice frontier: Point2D.Float[4.2316165, 0.13015196] with IG = 608.1975

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9751448035240173, 1.4529833793640137) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.33347487449646, 0.5514944195747375) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.49347352981567383, 0.4849471151828766) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.506584644317627, 0.05688329413533211) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.024692943319678307, 0.2541111409664154) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5399715900421143, 0.5709931254386902) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8441447615623474, 1.0047380924224854) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.92475426197052, 1.6625261306762695) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0439506769180298, 2.3757247924804688) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2029365301132202, 2.950486660003662) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6086192727088928, 2.8301773071289062) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4941546618938446, 2.6983656883239746) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8286900520324707, 2.341198205947876) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.152974009513855, 1.9894437789916992) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2359379529953003, 1.9181872606277466) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3909735679626465, 1.8254543542861938) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8821617364883423, 1.5155797004699707) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2997887134552, 1.6199318170547485) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7927074432373047, 1.5545690059661865) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.054081678390503, 1.904198408126831) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.241135835647583, 2.1866888999938965) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.319723129272461, 2.5287492275238037) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.526413679122925, 2.397383689880371) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.319723129272461, 2.5287492275238037) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.90942645072937, 2.7081587314605713) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.6512346267700195, 2.3767120838165283) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8030741214752197, 2.230210542678833) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.054081678390503, 1.904198408126831) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.147426128387451, 1.4963752031326294) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.258171796798706, 1.2060831785202026) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.990262508392334, 0.930094301700592) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.897618055343628, 0.5956247448921204) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9195492267608643, 0.3988507091999054) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7641868591308594, 0.7753324508666992) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.393425226211548, 0.6390953660011292) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2502095699310303, 0.4264824092388153) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.226226806640625, 0.20525653660297394) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.3276784420013428, 0.21225352585315704) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.3452677726745605, 0.33829399943351746) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.226226806640625, 0.20525653660297394) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.2520344257354736, 0.30234047770500183) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.393425226211548, 0.6390953660011292) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7641868591308594, 0.7753324508666992) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.990262508392334, 0.930094301700592) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.228208303451538, 1.0754488706588745) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4515581130981445, 1.1864639520645142) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7816593647003174, 1.3440866470336914) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.125814437866211, 1.4691985845565796) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.301212310791016, 1.2312910556793213) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.594923973083496, 1.083739995956421) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.846411228179932, 1.177567958831787) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.166934013366699, 0.6310684680938721) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.370068550109863, 0.744197428226471) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.446290493011475, 0.5536345839500427) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.166934013366699, 0.6310684680938721) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.002983570098877, 0.6181460618972778) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.865695476531982, 0.949325680732727) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.962551116943359, 1.2985711097717285) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.151750087738037, 1.5401296615600586) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.151541709899902, 1.7793954610824585) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.107813358306885, 2.013702392578125) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.880444526672363, 2.2177577018737793) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.650379180908203, 2.3695826530456543) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.871191024780273, 2.5632832050323486) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.15981912612915, 2.536346673965454) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.305022239685059, 2.514406681060791) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.600101470947266, 2.384530544281006) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.685784339904785, 2.4453155994415283) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.600101470947266, 2.384530544281006) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.305022239685059, 2.514406681060791) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.15981912612915, 2.536346673965454) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.871191024780273, 2.5632832050323486) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.650379180908203, 2.3695826530456543) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.373955726623535, 2.480607271194458) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.182394504547119, 2.5848066806793213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.232269763946533, 2.777590036392212) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.490448951721191, 2.7774102687835693) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.373955726623535, 2.480607271194458) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.650379180908203, 2.3695826530456543) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.861752510070801, 2.1586289405822754) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.881991386413574, 1.8609848022460938) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.867342472076416, 1.690183401107788) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.926534175872803, 1.4850685596466064) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.95807409286499, 1.1279566287994385) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.769622802734375, 0.9051629900932312) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.565321445465088, 0.5397495627403259) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.347270965576172, 0.4505567252635956) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,t,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,b,t,35]  [r3,t,35]  [r3,b,35]  [r3,35]  [h,35]  [r5,t,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 45
Total sampled points = 24808
RRG size = 2251

Movement Length = 30.1997
Remaining path Length = 0.0
Total path Length = 30.1997

Advice samples: [13, 7, 10, 1, 0, 0, 0, 0, 0, 0] (31)

Total time taken (in ms):11128.613187

Initialization time (in ms):604.877093
Sampling time (in ms):9050.907516
Advice time (in ms):9.125967
Path checking time (in ms):754.396795
Learning time (in ms):194.792698
Exploration time (in ms):0.0
Time taken other than these things (in ms):514.513118
Moving time (in ms):2818.5723



