Parameters values: 
Environment: results/environments/env15/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.22546035989040844,0.0013222127636357006), (0.5254603598904084,0.0013222127636357006), (0.5254603598904084,0.5013222127636358), (0.22546035989040844,0.5013222127636358)]
[(0.10370056440667909,2.469990514201998), (0.6037005644066791,2.469990514201998), (0.6037005644066791,2.769990514201998), (0.10370056440667909,2.769990514201998)]
[(3.442167168729154,0.23521857971106702), (3.942167168729154,0.23521857971106702), (3.942167168729154,0.535218579711067), (3.442167168729154,0.535218579711067)]
[(3.0950495625063423,2.4945467327863855), (3.395049562506342,2.4945467327863855), (3.395049562506342,2.9945467327863855), (3.0950495625063423,2.9945467327863855)]
[(4.694485543704489,0.054769915181309206), (5.194485543704489,0.054769915181309206), (5.194485543704489,0.3547699151813092), (4.694485543704489,0.3547699151813092)]
[(4.577925306964135,2.5901798758103904), (5.077925306964135,2.5901798758103904), (5.077925306964135,2.8901798758103903), (4.577925306964135,2.8901798758103903)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.7223141,y=0.03114449,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.7223141,y=0.03114449,w=0.7084305,h=2.7826636]  java.awt.geom.Rectangle2D$Float[x=0.7223141,y=0.01552353,w=1.6650584,h=2.7982845]  java.awt.geom.Rectangle2D$Float[x=0.7223141,y=0.01552353,w=1.6650584,h=2.7982845]  java.awt.geom.Rectangle2D$Float[x=0.7223141,y=0.01552353,w=4.9384165,h=2.7982845]  java.awt.geom.Rectangle2D$Float[x=0.7223141,y=0.01552353,w=4.9384165,h=2.7982845]  
t: java.awt.geom.Rectangle2D$Float[x=0.12546036,y=0.0,w=0.5,h=0.60132223]  java.awt.geom.Rectangle2D$Float[x=0.0037005644,y=0.0,w=0.7,h=2.8699906]  java.awt.geom.Rectangle2D$Float[x=0.0037005644,y=0.0,w=4.0384665,h=2.8699906]  java.awt.geom.Rectangle2D$Float[x=0.0037005644,y=0.0,w=4.0384665,h=3.0945468]  java.awt.geom.Rectangle2D$Float[x=0.0037005644,y=0.0,w=5.290785,h=3.0945468]  java.awt.geom.Rectangle2D$Float[x=0.0037005644,y=0.0,w=5.290785,h=3.0945468]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0237901, 1.3454467] with IG = 34.165054
Iter num: 2
Used frontier: Point2D.Float[0.961333, 0.40056846] with IG = 51.74561
Iter num: 3
Added advice frontier Point2D.Float[0.50804806, 0.57353073]
Added advice frontier Point2D.Float[0.60921615, 0.6632175]
Added advice frontier Point2D.Float[0.7236705, 0.08971048]
Added advice frontier Point2D.Float[0.61389184, 0.1637226]
Used Advice frontier: Point2D.Float[0.7236705, 0.08971048] with IG = 255.55801
Iter num: 4
Used Advice frontier: Point2D.Float[0.61389184, 0.1637226] with IG = 755.30023
Iter num: 5
Used Advice frontier: Point2D.Float[0.50804806, 0.57353073] with IG = 236.26364
Iter num: 6
Used Advice frontier: Point2D.Float[0.60921615, 0.6632175] with IG = 739.6519
Iter num: 7
Used frontier: Point2D.Float[1.8222499, 0.6010575] with IG = 20.582357
Iter num: 8
Used frontier: Point2D.Float[1.9148593, 1.5291587] with IG = 13.631169
Iter num: 9
Used frontier: Point2D.Float[2.845352, 1.5982722] with IG = 25.69829
Iter num: 10
Added advice frontier Point2D.Float[3.2092023, 2.3427374]
Added advice frontier Point2D.Float[3.0761993, 2.4389565]
Used Advice frontier: Point2D.Float[3.2092023, 2.3427374] with IG = 120.24088
Iter num: 11
Added advice frontier Point2D.Float[2.9926434, 0.77243334]
Added advice frontier Point2D.Float[2.991416, 1.0411296]
Used Advice frontier: Point2D.Float[3.0761993, 2.4389565] with IG = 609.1686
Iter num: 12
Used frontier: Point2D.Float[3.0598822, 2.420596] with IG = 977.06323
Iter num: 13
Used Advice frontier: Point2D.Float[2.991416, 1.0411296] with IG = 72.40002
Iter num: 14
Added advice frontier Point2D.Float[2.378069, 2.4909058]
Added advice frontier Point2D.Float[2.44546, 2.563062]
Added advice frontier Point2D.Float[3.344867, 0.17821215]
Added advice frontier Point2D.Float[2.7400777, 0.18475765]
Used Advice frontier: Point2D.Float[2.9926434, 0.77243334] with IG = 372.16357
Iter num: 15
Added advice frontier Point2D.Float[2.2350304, 0.21064962]
Used Advice frontier: Point2D.Float[2.7400777, 0.18475765] with IG = 155.9969
Iter num: 16
Used Advice frontier: Point2D.Float[2.2350304, 0.21064962] with IG = 197.74155
Iter num: 17
Used Advice frontier: Point2D.Float[3.344867, 0.17821215] with IG = 90.04667
Iter num: 18
Used Advice frontier: Point2D.Float[2.378069, 2.4909058] with IG = 38.508133
Iter num: 19
Used Advice frontier: Point2D.Float[2.44546, 2.563062] with IG = 1012.8389
Iter num: 20
Used frontier: Point2D.Float[3.6339967, 2.684866] with IG = 15.626781
Iter num: 21
Used frontier: Point2D.Float[3.8262389, 1.417211] with IG = 14.270508
Iter num: 22
Used frontier: Point2D.Float[4.3804445, 1.3610182] with IG = 19.535385
Iter num: 23
Added advice frontier Point2D.Float[5.189685, 0.8422248]
Used Advice frontier: Point2D.Float[5.189685, 0.8422248] with IG = 104.03037
Iter num: 24
Added advice frontier Point2D.Float[5.1587677, 0.42497528]
Added advice frontier Point2D.Float[5.7643824, 0.5027989]
Added advice frontier Point2D.Float[5.4832163, 0.18866922]
Added advice frontier Point2D.Float[5.266963, 0.20891096]
Added advice frontier Point2D.Float[5.5748515, 0.33978826]
Added advice frontier Point2D.Float[5.037275, 2.0805225]
Used Advice frontier: Point2D.Float[5.1587677, 0.42497528] with IG = 239.0095
Iter num: 25
Used Advice frontier: Point2D.Float[5.4832163, 0.18866922] with IG = 249.13927
Iter num: 26
Used Advice frontier: Point2D.Float[5.5748515, 0.33978826] with IG = 565.83044
Iter num: 27
Used Advice frontier: Point2D.Float[5.7643824, 0.5027989] with IG = 400.01785
Iter num: 28
Used Advice frontier: Point2D.Float[5.266963, 0.20891096] with IG = 171.07481
Iter num: 29
Used Advice frontier: Point2D.Float[5.037275, 2.0805225] with IG = 52.180733
Iter num: 30
Added advice frontier Point2D.Float[5.0400143, 2.5161068]
Added advice frontier Point2D.Float[5.0157228, 2.4725444]
Added advice frontier Point2D.Float[5.4162564, 2.633268]
Added advice frontier Point2D.Float[5.932888, 2.146111]
Used Advice frontier: Point2D.Float[5.0157228, 2.4725444] with IG = 254.70316
Iter num: 31
Used Advice frontier: Point2D.Float[5.0400143, 2.5161068] with IG = 2004.9135
Iter num: 32
Used Advice frontier: Point2D.Float[5.4162564, 2.633268] with IG = 253.76714
Iter num: 33
Used Advice frontier: Point2D.Float[5.932888, 2.146111] with IG = 140.82687
Iter num: 34
Used frontier: Point2D.Float[5.6087985, 1.5539192] with IG = 21.038815
Iter num: 35
Used frontier: Point2D.Float[4.3030815, 0.3234497] with IG = 15.38873
Iter num: 36
Used frontier: Point2D.Float[4.369761, 2.696253] with IG = 6.3793445
Iter num: 37
Used frontier: Point2D.Float[0.95709556, 2.2591724] with IG = 4.1605635
Iter num: 38
Added advice frontier Point2D.Float[0.6504567, 2.6699145]
Added advice frontier Point2D.Float[0.77207273, 2.700071]
Added advice frontier Point2D.Float[1.2477489, 2.63313]
Used Advice frontier: Point2D.Float[1.2477489, 2.63313] with IG = 189.34511

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0237901210784912, 1.3454467058181763) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9613329768180847, 0.4005684554576874) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.723670482635498, 0.08971048146486282) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6138918399810791, 0.16372260451316833) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5080480575561523, 0.5735307335853577) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6092161536216736, 0.6632174849510193) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4426252841949463, 0.6224459409713745) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8222498893737793, 0.6010575294494629) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.216111421585083, 0.8564208149909973) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1508879661560059, 1.0420371294021606) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4556903839111328, 1.2272543907165527) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9148592948913574, 1.5291587114334106) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5486180782318115, 1.5949201583862305) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8453519344329834, 1.5982722043991089) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9800124168395996, 1.8002811670303345) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.209202289581299, 2.3427374362945557) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0761992931365967, 2.4389564990997314) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.059882164001465, 2.42059588432312) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.031952142715454, 1.912156581878662) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.00421404838562, 1.4042519330978394) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9914159774780273, 1.0411295890808105) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.992643356323242, 0.772433340549469) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.933187484741211, 0.6748946309089661) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7400777339935303, 0.18475764989852905) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.23503041267395, 0.21064962446689606) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7400777339935303, 0.18475764989852905) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.344866991043091, 0.17821215093135834) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1252660751342773, 0.674371063709259) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0578432083129883, 1.1464649438858032) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.00421404838562, 1.4042519330978394) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8946616649627686, 1.956504464149475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5653538703918457, 2.368051290512085) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.3780689239501953, 2.49090576171875) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.445460081100464, 2.5630619525909424) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.752609968185425, 2.436025619506836) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.209202289581299, 2.3427374362945557) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6339967250823975, 2.684865951538086) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.607212781906128, 2.6583662033081055) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3160624504089355, 2.252685308456421) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1362030506134033, 2.006134271621704) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.396618366241455, 1.7405297756195068) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8262388706207275, 1.4172110557556152) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7843074798583984, 1.7832484245300293) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.2150397300720215, 1.75634765625) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.380444526672363, 1.361018180847168) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.189684867858887, 0.8422247767448425) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1587677001953125, 0.42497527599334717) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.483216285705566, 0.18866921961307526) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.5748515129089355, 0.3397882580757141) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.764382362365723, 0.5027989149093628) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.5748515129089355, 0.3397882580757141) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.266963005065918, 0.2089109569787979) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.292849540710449, 0.3942909240722656) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.2562713623046875, 0.7701172232627869) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.189684867858887, 0.8422247767448425) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.174660682678223, 1.1618857383728027) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.162210941314697, 1.550583004951477) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.081408977508545, 1.9152594804763794) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0372748374938965, 2.0805225372314453) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.015722751617432, 2.4725444316864014) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.040014266967773, 2.5161068439483643) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.416256427764893, 2.633268117904663) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.932888031005859, 2.146111011505127) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.600389003753662, 2.3330206871032715) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.211966037750244, 2.275449514389038) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.081408977508545, 1.9152594804763794) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.189968109130859, 1.8116397857666016) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.492960453033447, 1.6715105772018433) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.608798503875732, 1.5539191961288452) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.309619426727295, 1.3750147819519043) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.069274425506592, 1.1598975658416748) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.848751544952393, 0.7947799563407898) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.567607879638672, 0.5298669934272766) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.303081512451172, 0.3234497010707855) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.567607879638672, 0.5298669934272766) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.848751544952393, 0.7947799563407898) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.8238019943237305, 1.089539647102356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8446550369262695, 1.1832704544067383) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.820758819580078, 1.5649938583374023) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.912466049194336, 1.8533638715744019) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.965448379516602, 2.116715908050537) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.90994119644165, 2.3134562969207764) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.550779819488525, 2.4169981479644775) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.369760990142822, 2.6962530612945557) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.550779819488525, 2.4169981479644775) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.90994119644165, 2.3134562969207764) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.965448379516602, 2.116715908050537) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.785935401916504, 1.7996585369110107) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.478830814361572, 1.9088855981826782) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.098875045776367, 1.8531993627548218) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7073075771331787, 1.8560112714767456) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.585812568664551, 1.8626165390014648) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2524302005767822, 1.8765443563461304) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.031952142715454, 1.912156581878662) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.475966453552246, 1.9293200969696045) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9218868017196655, 1.940191626548767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.209451675415039, 1.938431739807129) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0152513980865479, 2.16286563873291) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9570955634117126, 2.2591724395751953) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,t,12]  [r1,12]  [h,12]  [r4,12]  [r4,t,12]  [h,12]  [r3,12]  [r3,b,45]  [r3,45]  [r3,t,45]  [r3,45]  [h,45]  [r4,45]  [r4,b,34]  [r4,34]  [h,34]  [r5,34]  [r5,t,34]  [r5,b,47]  [r5,47]  [r5,t,47]  [r5,47]  [h,47]  [r6,47]  [r6,t,47]  [r6,b,37]  [r6,37]  [h,37]  [r5,37]  [h,37]  [r6,37]  [h,37]  [r2,37]  [r2,b,63]  


Remaining path: 
[r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20125
RRG size = 1901

Movement Length = 37.497665
Remaining path Length = 0.0
Total path Length = 37.497665

Advice samples: [15, 3, 5, 2, 0, 0, 0, 0, 0, 0] (25)

Total time taken (in ms):9057.738211

Initialization time (in ms):645.955474
Sampling time (in ms):6936.237602
Advice time (in ms):7.852913
Path checking time (in ms):663.96482
Learning time (in ms):188.011411
Exploration time (in ms):0.0
Time taken other than these things (in ms):615.715991
Moving time (in ms):1744.8304



