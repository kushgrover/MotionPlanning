Parameters values: 
Environment: results/environments/env54/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.5150596956122103,0.04370100644702838), (1.0150596956122104,0.04370100644702838), (1.0150596956122104,0.3437010064470284), (0.5150596956122103,0.3437010064470284)]
[(1.0101998994214099,2.5593813236127834), (1.5101998994214099,2.5593813236127834), (1.5101998994214099,2.859381323612783), (1.0101998994214099,2.859381323612783)]
[(2.105691927735323,0.0349862892122686), (2.405691927735323,0.0349862892122686), (2.405691927735323,0.5349862892122687), (2.105691927735323,0.5349862892122687)]
[(2.9468216479185156,2.450516195018655), (3.2468216479185155,2.450516195018655), (3.2468216479185155,2.950516195018655), (2.9468216479185156,2.950516195018655)]
[(5.357699733371453,0.06484113502350274), (5.857699733371453,0.06484113502350274), (5.857699733371453,0.36484113502350274), (5.357699733371453,0.36484113502350274)]
[(5.376563877407428,2.496863266123021), (5.676563877407427,2.496863266123021), (5.676563877407427,2.996863266123021), (5.376563877407428,2.996863266123021)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.1684585,y=0.13343954,w=0.20000005,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.13343954,w=0.5939578,h=2.5543325]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.047781546,w=1.9540645,h=2.6399906]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.047781546,w=2.9212904,h=2.6420648]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.047781546,w=3.6035705,h=2.6420648]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.047781546,w=3.6035705,h=2.6420648]  
t: java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=0.70000005,h=0.443701]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=1.1951402,h=2.9593813]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=2.0906324,h=2.9593813]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=2.9317617,h=3.0505161]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=5.54264,h=3.0505161]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=5.54264,h=3.0968633]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0234566, 1.5387346] with IG = 34.62197
Iter num: 2
Used frontier: Point2D.Float[1.0526463, 2.4827023] with IG = 39.17753
Iter num: 3
Added advice frontier Point2D.Float[0.8008639, 2.6621728]
Added advice frontier Point2D.Float[0.8562672, 2.6994998]
Added advice frontier Point2D.Float[0.963684, 2.4890757]
Added advice frontier Point2D.Float[0.9616282, 2.4611723]
Used Advice frontier: Point2D.Float[0.963684, 2.4890757] with IG = 1121.1986
Iter num: 4
Used Advice frontier: Point2D.Float[0.9616282, 2.4611723] with IG = 3574.1157
Iter num: 5
Used Advice frontier: Point2D.Float[0.8008639, 2.6621728] with IG = 388.5251
Iter num: 6
Used Advice frontier: Point2D.Float[0.8562672, 2.6994998] with IG = 1496.9065
Iter num: 7
Used frontier: Point2D.Float[0.8615752, 2.96235] with IG = 19.018375
Iter num: 8
Used frontier: Point2D.Float[0.9501426, 0.6530845] with IG = 13.843816
Iter num: 9
Added advice frontier Point2D.Float[1.361197, 0.25063077]
Added advice frontier Point2D.Float[1.7452439, 0.32965347]
Added advice frontier Point2D.Float[1.0853982, 0.25009412]
Added advice frontier Point2D.Float[1.1859946, 0.23847768]
Used Advice frontier: Point2D.Float[1.0853982, 0.25009412] with IG = 235.24832
Iter num: 10
Used Advice frontier: Point2D.Float[1.1859946, 0.23847768] with IG = 987.5088
Iter num: 11
Used Advice frontier: Point2D.Float[1.361197, 0.25063077] with IG = 569.40027
Iter num: 12
Used Advice frontier: Point2D.Float[1.7452439, 0.32965347] with IG = 255.04178
Iter num: 13
Used frontier: Point2D.Float[1.9564472, 1.4950728] with IG = 12.062961
Iter num: 14
Used frontier: Point2D.Float[2.747716, 1.595051] with IG = 29.947065
Iter num: 15
Added advice frontier Point2D.Float[3.1942487, 0.8362952]
Added advice frontier Point2D.Float[3.1783905, 1.1373745]
Added advice frontier Point2D.Float[3.0737107, 2.1064107]
Added advice frontier Point2D.Float[3.1617093, 2.380784]
Used Advice frontier: Point2D.Float[3.1783905, 1.1373745] with IG = 153.9314
Iter num: 16
Used Advice frontier: Point2D.Float[3.1942487, 0.8362952] with IG = 331.67862
Iter num: 17
Added advice frontier Point2D.Float[2.6351402, 0.09736173]
Added advice frontier Point2D.Float[2.565218, 0.30987033]
Used Advice frontier: Point2D.Float[2.565218, 0.30987033] with IG = 117.93765
Iter num: 18
Added advice frontier Point2D.Float[2.365679, 0.63246137]
Added advice frontier Point2D.Float[2.2673123, 0.7021687]
Used Advice frontier: Point2D.Float[2.6351402, 0.09736173] with IG = 446.99448
Iter num: 19
Used Advice frontier: Point2D.Float[2.365679, 0.63246137] with IG = 165.82852
Iter num: 20
Used Advice frontier: Point2D.Float[2.2673123, 0.7021687] with IG = 829.4507
Iter num: 21
Used Advice frontier: Point2D.Float[3.0737107, 2.1064107] with IG = 50.58187
Iter num: 22
Added advice frontier Point2D.Float[3.580343, 2.502109]
Added advice frontier Point2D.Float[3.773319, 2.6316957]
Used Advice frontier: Point2D.Float[3.1617093, 2.380784] with IG = 347.0539
Iter num: 23
Used Advice frontier: Point2D.Float[3.580343, 2.502109] with IG = 229.43146
Iter num: 24
Used Advice frontier: Point2D.Float[3.773319, 2.6316957] with IG = 430.20227
Iter num: 25
Used frontier: Point2D.Float[2.550572, 2.88419] with IG = 26.906282
Iter num: 26
Used frontier: Point2D.Float[3.9817877, 1.6322707] with IG = 12.9917965
Iter num: 27
Used frontier: Point2D.Float[4.7010407, 1.2131029] with IG = 26.9121
Iter num: 28
Added advice frontier Point2D.Float[5.081796, 0.75269914]
Added advice frontier Point2D.Float[4.8881793, 2.0087318]
Added advice frontier Point2D.Float[5.4714684, 1.505807]
Added advice frontier Point2D.Float[5.1093435, 1.0248935]
Used Advice frontier: Point2D.Float[5.081796, 0.75269914] with IG = 167.37805
Iter num: 29
Added advice frontier Point2D.Float[5.4974375, 0.37395304]
Added advice frontier Point2D.Float[5.647769, 0.54509646]
Used Advice frontier: Point2D.Float[5.1093435, 1.0248935] with IG = 365.5174
Iter num: 30
Used Advice frontier: Point2D.Float[5.4974375, 0.37395304] with IG = 119.63052
Iter num: 31
Added advice frontier Point2D.Float[4.3102746, 0.2687403]
Added advice frontier Point2D.Float[4.3698545, 0.18363002]
Used Advice frontier: Point2D.Float[5.647769, 0.54509646] with IG = 438.99515
Iter num: 32
Used Advice frontier: Point2D.Float[4.3698545, 0.18363002] with IG = 62.85499
Iter num: 33
Used Advice frontier: Point2D.Float[4.3102746, 0.2687403] with IG = 962.53937
Iter num: 34
Used Advice frontier: Point2D.Float[4.8881793, 2.0087318] with IG = 47.100964
Iter num: 35
Added advice frontier Point2D.Float[5.643734, 2.4815924]
Added advice frontier Point2D.Float[5.362541, 2.3564358]
Added advice frontier Point2D.Float[5.3664217, 2.4964995]
Used Advice frontier: Point2D.Float[5.4714684, 1.505807] with IG = 129.8417
Iter num: 36
Used Advice frontier: Point2D.Float[5.362541, 2.3564358] with IG = 93.5349
Iter num: 37
Used Advice frontier: Point2D.Float[5.3664217, 2.4964995] with IG = 713.6867
Iter num: 38
Added advice frontier Point2D.Float[4.3002253, 2.6717136]
Used Advice frontier: Point2D.Float[5.643734, 2.4815924] with IG = 360.08438

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0234565734863281, 1.5387345552444458) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.052646279335022, 2.4827022552490234) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9636840224266052, 2.4890756607055664) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.9616281986236572, 2.461172342300415) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8008639216423035, 2.662172794342041) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8562672138214111, 2.6994998455047607) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.861575186252594, 2.9623498916625977) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8562672138214111, 2.6994998455047607) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8841818571090698, 1.974503517150879) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9281641244888306, 1.089492917060852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9501426219940186, 0.6530845165252686) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0853981971740723, 0.25009411573410034) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1859946250915527, 0.2384776771068573) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3611969947814941, 0.25063076615333557) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.7452439069747925, 0.32965347170829773) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2506814002990723, 0.8023370504379272) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.13499116897583, 1.0810277462005615) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.398349404335022, 1.2350810766220093) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9564472436904907, 1.495072841644287) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.323599100112915, 1.5020393133163452) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.747715950012207, 1.5950510501861572) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9030020236968994, 1.5338398218154907) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1783905029296875, 1.1373745203018188) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.194248676300049, 0.8362951874732971) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0194590091705322, 0.5534954071044922) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.565217971801758, 0.30987033247947693) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6351401805877686, 0.0973617285490036) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.565217971801758, 0.30987033247947693) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3656790256500244, 0.6324613690376282) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.2673122882843018, 0.7021687030792236) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7354736328125, 0.6433866620063782) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8339385986328125, 0.9525459408760071) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9210939407348633, 1.261165976524353) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0257046222686768, 1.7191532850265503) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0737106800079346, 2.1064107418060303) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1617093086242676, 2.380784034729004) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.580343008041382, 2.5021090507507324) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.7733190059661865, 2.6316957473754883) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.580343008041382, 2.5021090507507324) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.1617093086242676, 2.380784034729004) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8811542987823486, 2.296700954437256) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.550571918487549, 2.884190082550049) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8811542987823486, 2.296700954437256) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0436179637908936, 2.1296753883361816) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2474968433380127, 1.8927669525146484) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.525616407394409, 1.762008786201477) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.98178768157959, 1.6322706937789917) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.103060245513916, 1.2898975610733032) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.701040744781494, 1.21310293674469) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.081796169281006, 0.7526991367340088) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.109343528747559, 1.0248935222625732) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.081796169281006, 0.7526991367340088) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.497437477111816, 0.37395304441452026) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.647768974304199, 0.5450964570045471) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.34644079208374, 0.3670046627521515) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.024528503417969, 0.5595417618751526) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.638882637023926, 0.5695148706436157) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.444058895111084, 0.22679856419563293) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.36985445022583, 0.18363001942634583) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.310274600982666, 0.26874029636383057) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.357948303222656, 0.3303222954273224) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.638882637023926, 0.5695148706436157) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.819580078125, 0.8020749688148499) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.109343528747559, 1.0248935222625732) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.081818580627441, 1.3859314918518066) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.022501468658447, 1.6601920127868652) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.888179302215576, 2.0087318420410156) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.471468448638916, 1.5058070421218872) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.422848701477051, 1.5764946937561035) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.171569347381592, 1.8187487125396729) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.125192165374756, 1.9855719804763794) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.283856391906738, 2.3281242847442627) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.362541198730469, 2.356435775756836) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,t,0]  [r2,b,t,46]  [r2,t,46]  [r2,b,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,b,35]  [r4,35]  [r4,b,35]  [r4,t,35]  [r4,35]  [h,35]  [r5,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [h,21]  [r6,21]  [r6,t,21]  


Remaining path: 
[r6,t,21]  [r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 21184
RRG size = 1901

Movement Length = 26.978865
Remaining path Length = 1.6758807
Total path Length = 28.654745

Advice samples: [13, 3, 11, 2, 0, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):9684.297649

Initialization time (in ms):485.403115
Sampling time (in ms):7853.958882
Advice time (in ms):8.211626
Path checking time (in ms):737.019166
Learning time (in ms):208.563644
Exploration time (in ms):0.0
Time taken other than these things (in ms):391.141216
Moving time (in ms):3355.443



