Parameters values: 
Environment: results/environments/env37/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.8808529235870659,0.1111339842597201), (1.380852923587066,0.1111339842597201), (1.380852923587066,0.4111339842597201), (0.8808529235870659,0.4111339842597201)]
[(0.00762556566201617,2.589145470230414), (0.5076255656620162,2.589145470230414), (0.5076255656620162,2.889145470230414), (0.00762556566201617,2.889145470230414)]
[(2.1714169054422032,0.04860467480909359), (2.471416905442203,0.04860467480909359), (2.471416905442203,0.5486046748090936), (2.1714169054422032,0.5486046748090936)]
[(2.392038140392138,2.4945009859722305), (2.6920381403921376,2.4945009859722305), (2.6920381403921376,2.9945009859722305), (2.392038140392138,2.9945009859722305)]
[(5.551675485129414,0.03906870738727279), (5.851675485129414,0.03906870738727279), (5.851675485129414,0.5390687073872727), (5.551675485129414,0.5390687073872727)]
[(4.8201386478572585,2.4749252526602237), (5.3201386478572585,2.4749252526602237), (5.3201386478572585,2.7749252526602235), (4.8201386478572585,2.7749252526602235)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.3958565,y=0.16150576,w=0.19999993,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=1.273794,y=0.16150576,w=0.32206237,h=2.5005736]  java.awt.geom.Rectangle2D$Float[x=1.273794,y=0.016353209,w=2.4121423,h=2.6457262]  java.awt.geom.Rectangle2D$Float[x=1.273794,y=0.016353209,w=2.4121423,h=2.6625373]  java.awt.geom.Rectangle2D$Float[x=1.273794,y=0.016353209,w=3.037253,h=2.6625373]  java.awt.geom.Rectangle2D$Float[x=1.273794,y=0.016353209,w=3.3138971,h=2.757978]  
t: java.awt.geom.Rectangle2D$Float[x=0.7808529,y=0.011133985,w=0.70000005,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.011133985,w=1.480853,h=2.9780116]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.5714169,h=2.9891455]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.7920382,h=3.094501]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.9516754,h=3.094501]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.9516754,h=3.094501]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0132716, 1.462199] with IG = 35.00889
Iter num: 2
Used frontier: Point2D.Float[1.0657601, 0.6008426] with IG = 42.875977
Iter num: 3
Added advice frontier Point2D.Float[0.9781832, 0.4634152]
Added advice frontier Point2D.Float[1.5821041, 0.30881542]
Added advice frontier Point2D.Float[1.4670799, 0.350693]
Added advice frontier Point2D.Float[1.8617406, 0.22819029]
Added advice frontier Point2D.Float[1.293228, 0.5057995]
Used Advice frontier: Point2D.Float[0.9781832, 0.4634152] with IG = 613.64703
Iter num: 4
Used Advice frontier: Point2D.Float[1.293228, 0.5057995] with IG = 314.58102
Iter num: 5
Used Advice frontier: Point2D.Float[1.4670799, 0.350693] with IG = 429.2103
Iter num: 6
Used Advice frontier: Point2D.Float[1.5821041, 0.30881542] with IG = 816.9242
Iter num: 7
Used Advice frontier: Point2D.Float[1.8617406, 0.22819029] with IG = 343.61017
Iter num: 8
Used frontier: Point2D.Float[1.5217879, 0.12746054] with IG = 16.92228
Iter num: 9
Used frontier: Point2D.Float[0.8841861, 2.3962398] with IG = 13.490196
Iter num: 10
Added advice frontier Point2D.Float[0.38543063, 2.5089643]
Added advice frontier Point2D.Float[1.331072, 2.6118774]
Added advice frontier Point2D.Float[0.5455807, 2.3347454]
Added advice frontier Point2D.Float[1.7545382, 2.5918367]
Used Advice frontier: Point2D.Float[0.5455807, 2.3347454] with IG = 290.57596
Iter num: 11
Used Advice frontier: Point2D.Float[0.38543063, 2.5089643] with IG = 422.5761
Iter num: 12
Used Advice frontier: Point2D.Float[1.331072, 2.6118774] with IG = 105.112854
Iter num: 13
Used Advice frontier: Point2D.Float[1.7545382, 2.5918367] with IG = 235.88235
Iter num: 14
Used frontier: Point2D.Float[1.9708657, 1.4067831] with IG = 12.363952
Iter num: 15
Used frontier: Point2D.Float[2.8431036, 1.2002393] with IG = 27.438133
Iter num: 16
Added advice frontier Point2D.Float[2.894211, 0.9316646]
Added advice frontier Point2D.Float[3.1141279, 2.1101546]
Added advice frontier Point2D.Float[3.0393016, 1.9524161]
Added advice frontier Point2D.Float[2.8228302, 1.0205927]
Used Advice frontier: Point2D.Float[2.8228302, 1.0205927] with IG = 553.13727
Iter num: 17
Used Advice frontier: Point2D.Float[2.894211, 0.9316646] with IG = 876.9422
Iter num: 18
Added advice frontier Point2D.Float[2.510743, 0.4088387]
Used Advice frontier: Point2D.Float[2.510743, 0.4088387] with IG = 150.15565
Iter num: 19
Added advice frontier Point2D.Float[2.6931603, 2.577596]
Used Advice frontier: Point2D.Float[3.0393016, 1.9524161] with IG = 58.12816
Iter num: 20
Used Advice frontier: Point2D.Float[3.1141279, 2.1101546] with IG = 572.78217
Iter num: 21
Used Advice frontier: Point2D.Float[2.6931603, 2.577596] with IG = 158.96762
Iter num: 22
Used frontier: Point2D.Float[2.8462605, 2.2123404] with IG = 40.39949
Iter num: 23
Used frontier: Point2D.Float[2.7612672, 2.1790621] with IG = 131.46936
Iter num: 24
Used frontier: Point2D.Float[2.6885164, 2.2536347] with IG = 124.78245
Iter num: 25
Used frontier: Point2D.Float[3.914264, 1.5740361] with IG = 15.626435
Iter num: 26
Used frontier: Point2D.Float[4.7507567, 1.64906] with IG = 23.25881
Iter num: 27
Added advice frontier Point2D.Float[5.011286, 0.98532957]
Added advice frontier Point2D.Float[4.709632, 1.2209558]
Added advice frontier Point2D.Float[4.927198, 2.1302645]
Added advice frontier Point2D.Float[5.5644145, 1.6515745]
Added advice frontier Point2D.Float[4.8787484, 2.3977373]
Used Advice frontier: Point2D.Float[4.709632, 1.2209558] with IG = 232.51764
Iter num: 28
Used Advice frontier: Point2D.Float[5.011286, 0.98532957] with IG = 261.2518
Iter num: 29
Added advice frontier Point2D.Float[5.511691, 0.53195035]
Added advice frontier Point2D.Float[5.8387175, 0.7681152]
Used Advice frontier: Point2D.Float[4.927198, 2.1302645] with IG = 81.59512
Iter num: 30
Added advice frontier Point2D.Float[4.571026, 2.6578848]
Added advice frontier Point2D.Float[4.6942673, 2.5026138]
Added advice frontier Point2D.Float[3.502684, 0.21058688]
Added advice frontier Point2D.Float[3.5232656, 0.22280747]
Used Advice frontier: Point2D.Float[4.8787484, 2.3977373] with IG = 367.88327
Iter num: 31
Used Advice frontier: Point2D.Float[4.6942673, 2.5026138] with IG = 471.23505
Iter num: 32
Used Advice frontier: Point2D.Float[4.571026, 2.6578848] with IG = 504.449
Iter num: 33
Used Advice frontier: Point2D.Float[5.5644145, 1.6515745] with IG = 69.68106
Iter num: 34
Used Advice frontier: Point2D.Float[5.511691, 0.53195035] with IG = 48.17799
Iter num: 35
Used Advice frontier: Point2D.Float[5.8387175, 0.7681152] with IG = 247.90164
Iter num: 36
Added advice frontier Point2D.Float[2.2877493, 2.4852796]
Used frontier: Point2D.Float[5.89889, 0.6630809] with IG = 41.305458
Iter num: 37
Used frontier: Point2D.Float[4.3658795, 0.46137884] with IG = 25.175528
Iter num: 38
Added advice frontier Point2D.Float[2.3192222, 2.4290867]
Used Advice frontier: Point2D.Float[3.5232656, 0.22280747] with IG = 28.248371
Iter num: 39
Added advice frontier Point2D.Float[4.1978383, 0.212369]
Used Advice frontier: Point2D.Float[3.502684, 0.21058688] with IG = 4177.778

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,t,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0132715702056885, 1.4621989727020264) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0657601356506348, 0.6008425951004028) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9781832098960876, 0.4634152054786682) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.293228030204773, 0.5057994723320007) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.4670798778533936, 0.3506929874420166) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.5821040868759155, 0.3088154196739197) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.8617405891418457, 0.22819028794765472) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5217878818511963, 0.1274605393409729) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3787223100662231, 0.5102629065513611) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1748425960540771, 0.9076147675514221) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9976997971534729, 1.7721869945526123) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8841860890388489, 2.396239757537842) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5455806851387024, 2.334745407104492) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.38543063402175903, 2.5089643001556396) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9013531804084778, 2.5730972290039062) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3310719728469849, 2.61187744140625) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.7545381784439087, 2.59183669090271) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4751697778701782, 2.365807294845581) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.173512578010559, 2.020395517349243) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2348275184631348, 1.8452765941619873) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5080480575561523, 1.6836289167404175) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9708657264709473, 1.406783103942871) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5879647731781006, 1.3387248516082764) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8431036472320557, 1.2002393007278442) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8228302001953125, 1.0205926895141602) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8942110538482666, 0.9316645860671997) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8496081829071045, 0.7575544118881226) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5107429027557373, 0.40883868932724) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8496081829071045, 0.7575544118881226) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8431036472320557, 1.2002393007278442) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.036252498626709, 1.6568852663040161) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.039301633834839, 1.9524160623550415) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1141278743743896, 2.110154628753662) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.69316029548645, 2.5775959491729736) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8462605476379395, 2.2123403549194336) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7612671852111816, 2.1790621280670166) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.68851637840271, 2.2536346912384033) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.790212869644165, 2.192859649658203) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0619735717773438, 1.9823909997940063) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4190948009490967, 1.8268901109695435) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.771491289138794, 1.6400480270385742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.914263963699341, 1.5740361213684082) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.316612243652344, 1.3102037906646729) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.750756740570068, 1.6490600109100342) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.70963191986084, 1.2209558486938477) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.011285781860352, 0.9853295683860779) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.750756740570068, 1.6490600109100342) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9271979331970215, 2.1302645206451416) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.878748416900635, 2.3977372646331787) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.694267272949219, 2.5026137828826904) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.571025848388672, 2.6578848361968994) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.694267272949219, 2.5026137828826904) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.899688243865967, 2.1608407497406006) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9271979331970215, 2.1302645206451416) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.5644145011901855, 1.6515744924545288) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.37626314163208, 1.5424517393112183) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.294997692108154, 1.209342122077942) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.011285781860352, 0.9853295683860779) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.119149684906006, 0.6916806101799011) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1047468185424805, 0.3590237498283386) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.236138343811035, 0.2964926064014435) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.511691093444824, 0.5319503545761108) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.838717460632324, 0.768115222454071) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.898890018463135, 0.6630808711051941) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.838068008422852, 0.7386588454246521) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.511691093444824, 0.5319503545761108) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.040101051330566, 0.2407989650964737) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.65380859375, 0.3843975067138672) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.365879535675049, 0.4613788425922394) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.5505499839782715, 0.6068169474601746) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6959004402160645, 0.7257218956947327) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.877569675445557, 0.9855379462242126) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.70963191986084, 1.2209558486938477) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.559401512145996, 1.2125009298324585) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.209378719329834, 1.22749662399292) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.921658992767334, 1.2123172283172607) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.629056692123413, 1.1510868072509766) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2548749446868896, 1.1420586109161377) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1406686305999756, 0.999716579914093) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.274203300476074, 0.7169171571731567) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3732705116271973, 0.5027644038200378) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,t,12]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [h,22]  [r5,22]  [h,22]  [r6,22]  [r6,t,22]  [r6,22]  [r6,b,18]  [r6,18]  [h,18]  [r5,18]  [r5,t,18]  [r5,18]  [r5,t,18]  [r5,18]  [h,18]  [r3,18]  [r3,b,9]  


Remaining path: 
[r3,b,9]  [r3,9]  [h,9]  [r5,9]  [r5,b,56]  [r5,56]  [h,56]  [r4,56]  [r4,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 39
Total sampled points = 20269
RRG size = 1952

Movement Length = 28.941975
Remaining path Length = 9.175376
Total path Length = 38.11735

Advice samples: [15, 5, 2, 3, 1, 0, 0, 0, 0, 0] (26)

Total time taken (in ms):10248.918319

Initialization time (in ms):478.025433
Sampling time (in ms):8595.269969
Advice time (in ms):6.981949
Path checking time (in ms):425.029608
Learning time (in ms):153.215112
Exploration time (in ms):0.0
Time taken other than these things (in ms):590.396248
Moving time (in ms):3758.0964



