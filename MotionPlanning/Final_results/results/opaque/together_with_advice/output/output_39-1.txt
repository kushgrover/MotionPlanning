Parameters values: 
Environment: results/environments/env39/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.8952914253443238,0.011990255478630456), (1.1952914253443239,0.011990255478630456), (1.1952914253443239,0.5119902554786304), (0.8952914253443238,0.5119902554786304)]
[(0.4703828888407377,2.48625306046861), (0.9703828888407378,2.48625306046861), (0.9703828888407378,2.78625306046861), (0.4703828888407377,2.78625306046861)]
[(2.184598389110481,0.050744575642078835), (2.684598389110481,0.050744575642078835), (2.684598389110481,0.35074457564207884), (2.184598389110481,0.35074457564207884)]
[(2.778874976284508,2.514569907377064), (3.278874976284508,2.514569907377064), (3.278874976284508,2.814569907377064), (2.778874976284508,2.814569907377064)]
[(4.521199826910787,0.024108548180688753), (4.821199826910787,0.024108548180688753), (4.821199826910787,0.5241085481806887), (4.521199826910787,0.5241085481806887)]
[(5.274751045727751,2.5630716256667574), (5.774751045727751,2.5630716256667574), (5.774751045727751,2.863071625666757), (5.274751045727751,2.863071625666757)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.11811526,y=0.03293038,w=0.2,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.11811526,y=0.03293038,w=0.2429439,h=2.80592]  java.awt.geom.Rectangle2D$Float[x=0.11811526,y=0.03293038,w=2.7827535,h=2.80592]  java.awt.geom.Rectangle2D$Float[x=0.11811526,y=0.03293038,w=2.7827535,h=2.80592]  java.awt.geom.Rectangle2D$Float[x=0.11811526,y=0.03293038,w=5.3651047,h=2.80592]  java.awt.geom.Rectangle2D$Float[x=0.11811526,y=0.03293038,w=5.3651047,h=2.80592]  
t: java.awt.geom.Rectangle2D$Float[x=0.7952914,y=0.0,w=0.5,h=0.6119903]  java.awt.geom.Rectangle2D$Float[x=0.37038288,y=0.0,w=0.9249085,h=2.886253]  java.awt.geom.Rectangle2D$Float[x=0.37038288,y=0.0,w=2.4142156,h=2.886253]  java.awt.geom.Rectangle2D$Float[x=0.37038288,y=0.0,w=3.0084922,h=2.9145699]  java.awt.geom.Rectangle2D$Float[x=0.37038288,y=0.0,w=4.550817,h=2.9145699]  java.awt.geom.Rectangle2D$Float[x=0.37038288,y=0.0,w=5.5043683,h=2.9630716]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0017285, 1.3655602] with IG = 35.099445
Iter num: 2
Used frontier: Point2D.Float[1.7223625, 1.5890366] with IG = 31.80957
Iter num: 3
Used frontier: Point2D.Float[2.6192255, 1.3886244] with IG = 26.11585
Iter num: 4
Added advice frontier Point2D.Float[3.107662, 0.9142507]
Added advice frontier Point2D.Float[3.0841126, 1.2871096]
Added advice frontier Point2D.Float[3.0202115, 2.1600864]
Used Advice frontier: Point2D.Float[3.0841126, 1.2871096] with IG = 210.15392
Iter num: 5
Added advice frontier Point2D.Float[2.7694948, 0.39760047]
Used Advice frontier: Point2D.Float[3.107662, 0.9142507] with IG = 267.6646
Iter num: 6
Added advice frontier Point2D.Float[2.4373028, 0.4030474]
Added advice frontier Point2D.Float[2.847421, 0.26574352]
Used Advice frontier: Point2D.Float[2.7694948, 0.39760047] with IG = 161.94795
Iter num: 7
Added advice frontier Point2D.Float[2.7257566, 0.012517708]
Used Advice frontier: Point2D.Float[2.847421, 0.26574352] with IG = 652.9014
Iter num: 8
Used Advice frontier: Point2D.Float[2.7257566, 0.012517708] with IG = 355.95187
Iter num: 9
Used Advice frontier: Point2D.Float[2.4373028, 0.4030474] with IG = 141.9085
Iter num: 10
Used Advice frontier: Point2D.Float[3.0202115, 2.1600864] with IG = 52.068905
Iter num: 11
Added advice frontier Point2D.Float[2.5697737, 2.6112251]
Added advice frontier Point2D.Float[3.2814705, 2.7808685]
Added advice frontier Point2D.Float[2.7777617, 2.4551756]
Added advice frontier Point2D.Float[2.6830046, 2.234364]
Used Advice frontier: Point2D.Float[2.6830046, 2.234364] with IG = 289.61108
Iter num: 12
Used Advice frontier: Point2D.Float[2.7777617, 2.4551756] with IG = 416.17322
Iter num: 13
Used Advice frontier: Point2D.Float[2.5697737, 2.6112251] with IG = 384.58566
Iter num: 14
Used Advice frontier: Point2D.Float[3.2814705, 2.7808685] with IG = 79.043175
Iter num: 15
Added advice frontier Point2D.Float[2.7610714, 2.6268127]
Added advice frontier Point2D.Float[2.7009687, 2.766453]
Used Advice frontier: Point2D.Float[2.7610714, 2.6268127] with IG = 84.92152
Iter num: 16
Used Advice frontier: Point2D.Float[2.7009687, 2.766453] with IG = 657.7843
Iter num: 17
Used frontier: Point2D.Float[4.022142, 1.4906083] with IG = 11.92658
Iter num: 18
Used frontier: Point2D.Float[4.942273, 1.3191495] with IG = 27.51632
Iter num: 19
Added advice frontier Point2D.Float[4.9681773, 2.138449]
Added advice frontier Point2D.Float[5.224172, 0.8344422]
Added advice frontier Point2D.Float[4.8843565, 0.59812236]
Added advice frontier Point2D.Float[5.0904675, 1.0293065]
Added advice frontier Point2D.Float[4.9966116, 0.5229306]
Added advice frontier Point2D.Float[5.094018, 1.9809464]
Used Advice frontier: Point2D.Float[5.0904675, 1.0293065] with IG = 307.1903
Iter num: 20
Added advice frontier Point2D.Float[5.3538027, 0.22587942]
Used Advice frontier: Point2D.Float[5.224172, 0.8344422] with IG = 423.14783
Iter num: 21
Used Advice frontier: Point2D.Float[4.9966116, 0.5229306] with IG = 259.21768
Iter num: 22
Used Advice frontier: Point2D.Float[4.8843565, 0.59812236] with IG = 740.1317
Iter num: 23
Used Advice frontier: Point2D.Float[5.3538027, 0.22587942] with IG = 166.75542
Iter num: 24
Used Advice frontier: Point2D.Float[5.094018, 1.9809464] with IG = 55.065857
Iter num: 25
Added advice frontier Point2D.Float[5.199633, 2.5257883]
Added advice frontier Point2D.Float[4.866744, 2.6529531]
Added advice frontier Point2D.Float[5.001787, 2.6382825]
Used Advice frontier: Point2D.Float[4.9681773, 2.138449] with IG = 496.02954
Iter num: 26
Used Advice frontier: Point2D.Float[5.199633, 2.5257883] with IG = 200.42484
Iter num: 27
Used Advice frontier: Point2D.Float[5.001787, 2.6382825] with IG = 439.3834
Iter num: 28
Used Advice frontier: Point2D.Float[4.866744, 2.6529531] with IG = 736.1727
Iter num: 29
Used frontier: Point2D.Float[4.9250784, 2.9840307] with IG = 20.82234
Iter num: 30
Used frontier: Point2D.Float[5.9032383, 1.6629673] with IG = 10.587998
Iter num: 31
Used frontier: Point2D.Float[4.46676, 0.6234498] with IG = 6.747168
Iter num: 32
Used frontier: Point2D.Float[0.8733393, 2.2746797] with IG = 4.9773903
Iter num: 33
Added advice frontier Point2D.Float[0.7634133, 2.4468765]
Used Advice frontier: Point2D.Float[0.7634133, 2.4468765] with IG = 489.49387
Iter num: 34
Used frontier: Point2D.Float[0.7352019, 2.2037802] with IG = 57.2064
Iter num: 35
Used frontier: Point2D.Float[1.2126435, 2.7113929] with IG = 27.071861
Iter num: 36
Used frontier: Point2D.Float[1.2072668, 2.8753262] with IG = 85.3547
Iter num: 37
Used frontier: Point2D.Float[0.7352019, 2.2037802] with IG = 23.122862
Iter num: 38
Used frontier: Point2D.Float[0.40495402, 2.308054] with IG = 75.07535
Iter num: 39
Used frontier: Point2D.Float[0.6674189, 0.62435025] with IG = 10.553505
Iter num: 40
Added advice frontier Point2D.Float[0.25117537, 0.14398432]
Added advice frontier Point2D.Float[0.045561034, 0.4707888]
Used Advice frontier: Point2D.Float[0.25117537, 0.14398432] with IG = 150.53717
Iter num: 41
Added advice frontier Point2D.Float[0.20897725, 2.6861608]
Added advice frontier Point2D.Float[0.23368186, 2.871406]
Added advice frontier Point2D.Float[0.42321748, 2.578727]
Used Advice frontier: Point2D.Float[0.045561034, 0.4707888] with IG = 258.9957

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r3,b,t,4]  [h,4]  [r5,4]  [r5,b,49]  [r5,49]  [h,49]  [r4,49]  [r4,b,15]  [r4,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0017285346984863, 1.3655601739883423) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7223625183105469, 1.5890365839004517) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.61922550201416, 1.3886244297027588) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0841126441955566, 1.287109613418579) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1076619625091553, 0.9142506718635559) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7694947719573975, 0.3976004719734192) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.8474209308624268, 0.26574352383613586) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7257566452026367, 0.012517708353698254) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.74322247505188, 0.4107966125011444) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.437302827835083, 0.4030474126338959) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.5825576782226562, 0.5823771953582764) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9540395736694336, 1.1636319160461426) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.003213882446289, 1.5344271659851074) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0202114582061768, 2.1600863933563232) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.68300461769104, 2.2343640327453613) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.777761697769165, 2.4551756381988525) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.5697736740112305, 2.611225128173828) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.777761697769165, 2.4551756381988525) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.304257392883301, 2.319913387298584) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.281470537185669, 2.7808685302734375) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.304257392883301, 2.319913387298584) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.777761697769165, 2.4551756381988525) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.7610714435577393, 2.626812696456909) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.7009687423706055, 2.7664530277252197) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.777761697769165, 2.4551756381988525) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.169421434402466, 1.9725269079208374) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3326575756073, 1.8260529041290283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.76206374168396, 1.607391119003296) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.022141933441162, 1.4906083345413208) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.492358207702637, 1.4688801765441895) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.942273139953613, 1.3191494941711426) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.09046745300293, 1.0293065309524536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.224172115325928, 0.8344421982765198) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.996611595153809, 0.5229306221008301) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.884356498718262, 0.5981223583221436) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.996611595153809, 0.5229306221008301) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.353802680969238, 0.22587941586971283) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.299376487731934, 0.5412999987602234) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.224172115325928, 0.8344421982765198) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.09046745300293, 1.0293065309524536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.045406818389893, 1.3140182495117188) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.064502716064453, 1.5482144355773926) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.09401798248291, 1.98094642162323) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.968177318572998, 2.13844895362854) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.124438762664795, 2.2056660652160645) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1996331214904785, 2.5257883071899414) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.001787185668945, 2.638282537460327) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.866744041442871, 2.6529531478881836) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.925078392028809, 2.9840307235717773) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.030030727386475, 2.6097044944763184) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.124438762664795, 2.2056660652160645) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.195761203765869, 1.8771940469741821) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.616115570068359, 1.688179850578308) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.903238296508789, 1.662967324256897) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.6006855964660645, 1.3806185722351074) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.4228196144104, 1.270403265953064) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.09046745300293, 1.0293065309524536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.826325416564941, 0.84209805727005) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.680883407592773, 0.7622828483581543) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.466760158538818, 0.6234498023986816) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.680883407592773, 0.7622828483581543) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.842161655426025, 0.8989881873130798) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.798353672027588, 1.0696313381195068) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.332614898681641, 1.2293062210083008) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.014606475830078, 1.2873026132583618) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5505380630493164, 1.3752074241638184) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.034682512283325, 1.4938520193099976) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3793346881866455, 1.6302318572998047) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.897838830947876, 1.7251951694488525) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6503328084945679, 1.7812907695770264) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.264379620552063, 1.8954005241394043) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1778883934020996, 1.9650381803512573) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8733392953872681, 2.274679660797119) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7634133100509644, 2.4468765258789062) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.735201895236969, 2.203780174255371) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7539482712745667, 2.205199718475342) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.160003900527954, 2.244802236557007) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2418982982635498, 2.2625069618225098) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2126435041427612, 2.711392879486084) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2072668075561523, 2.875326156616211) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2126435041427612, 2.711392879486084) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2418982982635498, 2.2625069618225098) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.160003900527954, 2.244802236557007) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7539482712745667, 2.205199718475342) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.735201895236969, 2.203780174255371) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4049540162086487, 2.308053970336914) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7213720679283142, 2.1396865844726562) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8833125233650208, 2.0015504360198975) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8891356587409973, 1.646592617034912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8790895342826843, 1.1935704946517944) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7319561243057251, 0.7272608280181885) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.667418897151947, 0.6243502497673035) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6421589851379395, 0.4734514653682709) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r3,0]  [r3,b,t,13]  [r3,b,13]  [r3,t,13]  [r3,b,t,13]  [r3,t,13]  [r3,13]  [h,13]  [r4,13]  [r4,t,13]  [r4,b,14]  [r4,t,14]  [r4,14]  [r4,t,14]  [r4,14]  [r4,t,14]  [r4,b,t,14]  [r4,t,14]  [h,14]  [r5,14]  [r5,t,14]  [r5,14]  [r5,b,39]  [r5,39]  [h,39]  [r6,39]  [r6,t,39]  [r6,b,15]  [r6,15]  [r6,b,15]  [r6,15]  [h,15]  [r5,15]  [r5,t,15]  [r5,15]  [h,15]  [r2,15]  [r2,t,15]  [r2,15]  [h,15]  [r1,15]  [r1,b,37]  [r1,37]  


Remaining path: 
[r1,37]  [h,37]  [r2,37]  [r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 41
Total sampled points = 22468
RRG size = 2051

Movement Length = 32.89736
Remaining path Length = 3.6891685
Total path Length = 36.58653

Advice samples: [12, 7, 5, 2, 0, 0, 0, 0, 0, 0] (26)

Total time taken (in ms):11017.215311

Initialization time (in ms):759.783565
Sampling time (in ms):8946.737522
Advice time (in ms):8.591846
Path checking time (in ms):633.108883
Learning time (in ms):197.208375
Exploration time (in ms):0.0
Time taken other than these things (in ms):471.78512
Moving time (in ms):3892.3142



