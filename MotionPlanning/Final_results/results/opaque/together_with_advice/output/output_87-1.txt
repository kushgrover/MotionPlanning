Parameters values: 
Environment: results/environments/env87/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.9721446329126272,0.0465625644281134), (1.2721446329126271,0.0465625644281134), (1.2721446329126271,0.5465625644281134), (0.9721446329126272,0.5465625644281134)]
[(1.5936415011156488,2.4534613096611366), (1.8936415011156489,2.4534613096611366), (1.8936415011156489,2.9534613096611366), (1.5936415011156488,2.9534613096611366)]
[(2.0917514895412106,0.012506397601212315), (2.3917514895412104,0.012506397601212315), (2.3917514895412104,0.5125063976012123), (2.0917514895412106,0.5125063976012123)]
[(2.4193461482241165,2.5752876018061874), (2.9193461482241165,2.5752876018061874), (2.9193461482241165,2.8752876018061873), (2.4193461482241165,2.8752876018061873)]
[(4.845104547744013,0.02697969635747752), (5.145104547744013,0.02697969635747752), (5.145104547744013,0.5269796963574775), (4.845104547744013,0.5269796963574775)]
[(5.354505256502532,2.461470926145287), (5.6545052565025316,2.461470926145287), (5.6545052565025316,2.961470926145287), (5.354505256502532,2.961470926145287)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.2764728,y=0.039959393,w=0.19999993,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.045842722,y=0.039959393,w=1.43063,h=2.6316957]  java.awt.geom.Rectangle2D$Float[x=0.045842722,y=0.0029354717,w=3.7605956,h=2.6687198]  java.awt.geom.Rectangle2D$Float[x=0.045842722,y=0.0029354717,w=3.7605956,h=2.757334]  java.awt.geom.Rectangle2D$Float[x=0.045842722,y=0.0029354717,w=4.608604,h=2.757334]  java.awt.geom.Rectangle2D$Float[x=0.045842722,y=0.0029354717,w=4.608604,h=2.757334]  
t: java.awt.geom.Rectangle2D$Float[x=0.87214464,y=0.0,w=0.49999994,h=0.6465626]  java.awt.geom.Rectangle2D$Float[x=0.87214464,y=0.0,w=1.1214969,h=3.0534613]  java.awt.geom.Rectangle2D$Float[x=0.87214464,y=0.0,w=1.6196067,h=3.0534613]  java.awt.geom.Rectangle2D$Float[x=0.87214464,y=0.0,w=2.1472015,h=3.0534613]  java.awt.geom.Rectangle2D$Float[x=0.87214464,y=0.0,w=4.3729596,h=3.0534613]  java.awt.geom.Rectangle2D$Float[x=0.87214464,y=0.0,w=4.8823605,h=3.061471]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.02042, 1.4552691] with IG = 34.725754
Iter num: 2
Used frontier: Point2D.Float[0.84563947, 2.2465672] with IG = 39.488094
Iter num: 3
Added advice frontier Point2D.Float[1.5027473, 2.6739128]
Added advice frontier Point2D.Float[1.6601062, 2.2905483]
Added advice frontier Point2D.Float[0.09688325, 2.6017296]
Added advice frontier Point2D.Float[0.0347195, 2.63461]
Used Advice frontier: Point2D.Float[1.5027473, 2.6739128] with IG = 127.57604
Iter num: 4
Used Advice frontier: Point2D.Float[1.6601062, 2.2905483] with IG = 241.31079
Iter num: 5
Used Advice frontier: Point2D.Float[0.09688325, 2.6017296] with IG = 62.684334
Iter num: 6
Used Advice frontier: Point2D.Float[0.0347195, 2.63461] with IG = 1421.9923
Iter num: 7
Used frontier: Point2D.Float[1.934433, 1.4580882] with IG = 10.292945
Iter num: 8
Used frontier: Point2D.Float[2.7448165, 1.5766054] with IG = 27.06404
Iter num: 9
Added advice frontier Point2D.Float[2.9514859, 2.0131676]
Added advice frontier Point2D.Float[3.2192726, 1.6695988]
Added advice frontier Point2D.Float[3.0791764, 0.8748761]
Used Advice frontier: Point2D.Float[2.9514859, 2.0131676] with IG = 207.03502
Iter num: 10
Added advice frontier Point2D.Float[2.7381775, 2.540336]
Added advice frontier Point2D.Float[2.7613125, 2.2941275]
Added advice frontier Point2D.Float[3.0703886, 2.5802605]
Added advice frontier Point2D.Float[2.9363518, 2.6285074]
Used Advice frontier: Point2D.Float[2.7613125, 2.2941275] with IG = 294.75018
Iter num: 11
Added advice frontier Point2D.Float[3.0188982, 2.7364686]
Used Advice frontier: Point2D.Float[2.7381775, 2.540336] with IG = 404.37863
Iter num: 12
Used Advice frontier: Point2D.Float[2.9363518, 2.6285074] with IG = 300.48074
Iter num: 13
Used Advice frontier: Point2D.Float[3.0188982, 2.7364686] with IG = 735.8207
Iter num: 14
Used Advice frontier: Point2D.Float[3.0703886, 2.5802605] with IG = 607.9931
Iter num: 15
Used Advice frontier: Point2D.Float[3.2192726, 1.6695988] with IG = 108.25832
Iter num: 16
Used Advice frontier: Point2D.Float[3.0791764, 0.8748761] with IG = 123.34113
Iter num: 17
Added advice frontier Point2D.Float[2.4549954, 0.13569391]
Added advice frontier Point2D.Float[3.6494725, 0.17585577]
Used Advice frontier: Point2D.Float[3.6494725, 0.17585577] with IG = 110.66508
Iter num: 18
Used Advice frontier: Point2D.Float[2.4549954, 0.13569391] with IG = 61.743343
Iter num: 19
Used frontier: Point2D.Float[2.612285, 0.7564068] with IG = 15.363466
Iter num: 20
Used frontier: Point2D.Float[2.537698, 0.7196052] with IG = 24.046597
Iter num: 21
Used frontier: Point2D.Float[4.0771165, 1.5038111] with IG = 13.272959
Iter num: 22
Used frontier: Point2D.Float[4.5587816, 1.300101] with IG = 57.364513
Iter num: 23
Added advice frontier Point2D.Float[5.034526, 2.1287165]
Added advice frontier Point2D.Float[5.2389016, 0.87614805]
Added advice frontier Point2D.Float[5.1346984, 1.0673305]
Used Advice frontier: Point2D.Float[5.1346984, 1.0673305] with IG = 159.81773
Iter num: 24
Added advice frontier Point2D.Float[5.126795, 0.5636119]
Added advice frontier Point2D.Float[5.291379, 0.5530216]
Used Advice frontier: Point2D.Float[5.2389016, 0.87614805] with IG = 459.27145
Iter num: 25
Used Advice frontier: Point2D.Float[5.291379, 0.5530216] with IG = 305.4741
Iter num: 26
Used Advice frontier: Point2D.Float[5.126795, 0.5636119] with IG = 606.3379
Iter num: 27
Used frontier: Point2D.Float[5.011515, 0.7121765] with IG = 191.44377
Iter num: 28
Used Advice frontier: Point2D.Float[5.034526, 2.1287165] with IG = 69.85203
Iter num: 29
Added advice frontier Point2D.Float[5.262698, 2.5315037]
Added advice frontier Point2D.Float[4.977498, 2.9905658]
Added advice frontier Point2D.Float[4.3447304, 2.6703503]
Added advice frontier Point2D.Float[4.2017384, 2.592321]
Used Advice frontier: Point2D.Float[5.262698, 2.5315037] with IG = 182.70471
Iter num: 30
Added advice frontier Point2D.Float[4.475201, 0.19098693]
Added advice frontier Point2D.Float[4.2809567, 0.4947865]
Used Advice frontier: Point2D.Float[4.977498, 2.9905658] with IG = 185.03387
Iter num: 31
Used Advice frontier: Point2D.Float[4.3447304, 2.6703503] with IG = 140.84814
Iter num: 32
Used Advice frontier: Point2D.Float[4.2017384, 2.592321] with IG = 613.88635
Iter num: 33
Used Advice frontier: Point2D.Float[4.2809567, 0.4947865] with IG = 33.412228
Iter num: 34
Used Advice frontier: Point2D.Float[4.475201, 0.19098693] with IG = 277.32336
Iter num: 35
Used frontier: Point2D.Float[4.523744, 0.16361198] with IG = 35.887455
Iter num: 36
Used frontier: Point2D.Float[5.791317, 1.6344522] with IG = 8.698022
Iter num: 37
Used frontier: Point2D.Float[5.7585235, 2.3116205] with IG = 9.759886
Iter num: 38
Used frontier: Point2D.Float[0.7470221, 0.6791465] with IG = 3.2927861
Iter num: 39
Used frontier: Point2D.Float[1.326314, 0.5761953] with IG = 35.67733
Iter num: 40
Added advice frontier Point2D.Float[1.4649382, 0.2257685]
Added advice frontier Point2D.Float[1.3064146, 0.11993156]
Added advice frontier Point2D.Float[1.8734678, 0.27396163]
Used Advice frontier: Point2D.Float[1.4649382, 0.2257685] with IG = 265.35785

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.020419955253601, 1.4552690982818604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8456394672393799, 2.2465672492980957) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5027472972869873, 2.673912763595581) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.6601061820983887, 2.290548324584961) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4638248682022095, 2.3522043228149414) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8282803893089294, 2.4637255668640137) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.09688325226306915, 2.60172963142395) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.034719500690698624, 2.6346099376678467) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5425614714622498, 2.320842742919922) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8941406607627869, 2.102804660797119) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2843912839889526, 1.8640230894088745) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9344329833984375, 1.4580881595611572) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4784514904022217, 1.6442973613739014) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.744816541671753, 1.5766054391860962) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9514858722686768, 2.0131676197052) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.761312484741211, 2.2941274642944336) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.738177537918091, 2.5403358936309814) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.910217761993408, 2.4802303314208984) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.936351776123047, 2.628507375717163) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0188982486724854, 2.736468553543091) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.0703885555267334, 2.5802605152130127) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.123613119125366, 2.335336208343506) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.174241781234741, 1.8963217735290527) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2192726135253906, 1.6695988178253174) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.211989402770996, 1.4205504655838013) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.079176425933838, 0.874876081943512) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2325477600097656, 0.7218004465103149) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.64947247505188, 0.17585577070713043) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.380857229232788, 0.6002025008201599) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1062092781066895, 0.6292704939842224) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7247469425201416, 0.46550583839416504) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4549953937530518, 0.13569390773773193) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.559192180633545, 0.3237555921077728) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6122848987579346, 0.7564067840576172) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5376980304718018, 0.7196052074432373) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6122848987579346, 0.7564067840576172) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9711673259735107, 0.9937704205513) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.340759038925171, 1.1736185550689697) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7432634830474854, 1.3797061443328857) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.0771164894104, 1.5038111209869385) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.558781623840332, 1.3001010417938232) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.868178844451904, 1.2155896425247192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.134698390960693, 1.0673304796218872) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.238901615142822, 0.8761480450630188) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.291378974914551, 0.5530216097831726) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.126794815063477, 0.5636119246482849) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.011515140533447, 0.712176501750946) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.928754806518555, 1.0598270893096924) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.978106498718262, 1.4875582456588745) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.002771854400635, 1.7349168062210083) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0345258712768555, 2.128716468811035) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.116945266723633, 2.096449136734009) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.262698173522949, 2.531503677368164) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.9774980545043945, 2.990565776824951) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.686701774597168, 2.8622658252716064) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.344730377197266, 2.6703503131866455) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.201738357543945, 2.5923209190368652) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.441059112548828, 2.543508529663086) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.83920955657959, 2.4903242588043213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.00126314163208, 2.188934564590454) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9755964279174805, 1.866075038909912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.925151348114014, 1.589221715927124) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.868178844451904, 1.2155896425247192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.875709533691406, 0.9344875812530518) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.570959568023682, 0.689158022403717) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.280956745147705, 0.49478650093078613) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.47520112991333, 0.19098693132400513) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.523744106292725, 0.1636119782924652) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.69230842590332, 0.36673569679260254) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.913019180297852, 0.615165114402771) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.011515140533447, 0.712176501750946) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.159454822540283, 0.9535276293754578) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.203629016876221, 1.0586994886398315) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.285037517547607, 1.133307933807373) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.547724723815918, 1.3915743827819824) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.791316986083984, 1.634452223777771) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.487036228179932, 1.7809770107269287) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.137976169586182, 1.9762022495269775) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.116945266723633, 2.096449136734009) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.355335712432861, 2.16365122795105) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.758523464202881, 2.3116204738616943) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.355335712432861, 2.16365122795105) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.116945266723633, 2.096449136734009) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9755964279174805, 1.866075038909912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.855896472930908, 1.732293963432312) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.517941951751709, 1.774043321609497) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.141345024108887, 1.6600245237350464) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7108709812164307, 1.6039670705795288) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3130316734313965, 1.521810531616211) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0076868534088135, 1.4544309377670288) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6467111110687256, 1.3883857727050781) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.296504497528076, 1.317265510559082) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.659749984741211, 1.197178840637207) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.270330548286438, 1.1176466941833496) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7470220923423767, 0.6791465282440186) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9297993183135986, 0.6545825600624084) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [r2,46]  [h,46]  [r4,46]  [r4,t,46]  [r4,b,t,8]  [r4,b,8]  [r4,8]  [h,8]  [r3,8]  [r3,b,25]  [r3,25]  [r3,t,25]  [r3,25]  [h,25]  [r5,25]  [r5,t,25]  [r5,25]  [h,25]  [r6,25]  [r6,t,25]  [r6,25]  [r6,b,27]  [r6,27]  [h,27]  [r5,27]  [r5,b,33]  [r5,33]  [r5,t,33]  [r5,33]  [h,33]  [r6,33]  [h,33]  [r1,33]  [r1,t,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 20867
RRG size = 2001

Movement Length = 34.879066
Remaining path Length = 0.0
Total path Length = 34.879066

Advice samples: [15, 4, 4, 3, 0, 0, 0, 0, 0, 0] (26)

Total time taken (in ms):9633.825189

Initialization time (in ms):489.468249
Sampling time (in ms):7655.61085
Advice time (in ms):8.009735
Path checking time (in ms):748.55503
Learning time (in ms):177.901284
Exploration time (in ms):0.0
Time taken other than these things (in ms):554.280041
Moving time (in ms):2281.7014



