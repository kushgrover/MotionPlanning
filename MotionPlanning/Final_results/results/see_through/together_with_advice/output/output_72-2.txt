Parameters values: 
Environment: results/environments/env72/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.3508421033000788,0.04804156079195818), (0.6508421033000789,0.04804156079195818), (0.6508421033000789,0.5480415607919582), (0.3508421033000788,0.5480415607919582)]
[(1.3145280167804054,2.491437631819939), (1.6145280167804055,2.491437631819939), (1.6145280167804055,2.991437631819939), (1.3145280167804054,2.991437631819939)]
[(3.0588219348246364,0.02199084040532306), (3.358821934824636,0.02199084040532306), (3.358821934824636,0.5219908404053231), (3.0588219348246364,0.5219908404053231)]
[(3.0914349489530273,2.4504003620390398), (3.391434948953027,2.4504003620390398), (3.391434948953027,2.9504003620390398), (3.0914349489530273,2.9504003620390398)]
[(4.776505752708488,0.009069264403547102), (5.076505752708488,0.009069264403547102), (5.076505752708488,0.509069264403547), (4.776505752708488,0.509069264403547)]
[(4.610415286262635,2.5875399781110815), (5.110415286262635,2.5875399781110815), (5.110415286262635,2.8875399781110813), (4.610415286262635,2.8875399781110813)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.5316651,y=0.018087046,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.5784907,y=0.018087046,w=1.1531744,h=2.6344895]  java.awt.geom.Rectangle2D$Float[x=0.5784907,y=0.018087046,w=3.1505752,h=2.6344895]  java.awt.geom.Rectangle2D$Float[x=0.5784907,y=0.018087046,w=3.1505752,h=2.6631565]  java.awt.geom.Rectangle2D$Float[x=0.5784907,y=0.011879692,w=4.7391033,h=2.669364]  java.awt.geom.Rectangle2D$Float[x=0.5784907,y=0.011879692,w=4.98533,h=2.7380438]  
t: java.awt.geom.Rectangle2D$Float[x=0.2508421,y=0.0,w=0.5,h=0.64804155]  java.awt.geom.Rectangle2D$Float[x=0.2508421,y=0.0,w=1.4636859,h=3.0914376]  java.awt.geom.Rectangle2D$Float[x=0.2508421,y=0.0,w=3.20798,h=3.0914376]  java.awt.geom.Rectangle2D$Float[x=0.2508421,y=0.0,w=3.240593,h=3.0914376]  java.awt.geom.Rectangle2D$Float[x=0.2508421,y=0.0,w=4.9256635,h=3.0914376]  java.awt.geom.Rectangle2D$Float[x=0.2508421,y=0.0,w=4.9595733,h=3.0914376]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0487394, 1.5022069] with IG = 33.728874
Iter num: 2
Used frontier: Point2D.Float[1.0369105, 2.4470303] with IG = 37.041058
Iter num: 3
Added advice frontier Point2D.Float[1.2443235, 2.8569741]
Added advice frontier Point2D.Float[0.77440256, 2.5846143]
Added advice frontier Point2D.Float[0.41891423, 2.8781378]
Added advice frontier Point2D.Float[0.7230031, 0.60670966]
Used Advice frontier: Point2D.Float[0.77440256, 2.5846143] with IG = 337.4072
Iter num: 4
Used Advice frontier: Point2D.Float[0.41891423, 2.8781378] with IG = 216.91615
Iter num: 5
Used Advice frontier: Point2D.Float[1.2443235, 2.8569741] with IG = 121.11221
Iter num: 6
Used Advice frontier: Point2D.Float[0.7230031, 0.60670966] with IG = 43.2806
Iter num: 7
Added advice frontier Point2D.Float[1.5706116, 0.16394472]
Used Advice frontier: Point2D.Float[1.5706116, 0.16394472] with IG = 103.787384
Iter num: 8
Used frontier: Point2D.Float[1.9942417, 1.4628361] with IG = 11.230341
Iter num: 9
Used frontier: Point2D.Float[2.8756328, 1.4647057] with IG = 26.294249
Iter num: 10
Added advice frontier Point2D.Float[3.216958, 0.57720476]
Added advice frontier Point2D.Float[3.229664, 2.2078137]
Added advice frontier Point2D.Float[3.0300608, 0.83398175]
Added advice frontier Point2D.Float[3.0192475, 1.0111395]
Added advice frontier Point2D.Float[2.9326024, 1.9537888]
Added advice frontier Point2D.Float[3.0579777, 0.5532841]
Added advice frontier Point2D.Float[3.1207638, 2.375138]
Used Advice frontier: Point2D.Float[3.0192475, 1.0111395] with IG = 210.19005
Iter num: 11
Used Advice frontier: Point2D.Float[3.0300608, 0.83398175] with IG = 563.42004
Iter num: 12
Used Advice frontier: Point2D.Float[3.0579777, 0.5532841] with IG = 354.50626
Iter num: 13
Added advice frontier Point2D.Float[3.5810628, 0.16328359]
Added advice frontier Point2D.Float[3.9027493, 0.53511316]
Used Advice frontier: Point2D.Float[3.216958, 0.57720476] with IG = 622.0071
Iter num: 14
Used Advice frontier: Point2D.Float[3.5810628, 0.16328359] with IG = 166.75098
Iter num: 15
Used Advice frontier: Point2D.Float[3.9027493, 0.53511316] with IG = 203.38844
Iter num: 16
Used Advice frontier: Point2D.Float[2.9326024, 1.9537888] with IG = 49.800835
Iter num: 17
Added advice frontier Point2D.Float[2.5892448, 2.5925174]
Added advice frontier Point2D.Float[2.4699283, 2.6147058]
Used Advice frontier: Point2D.Float[3.229664, 2.2078137] with IG = 255.84375
Iter num: 18
Used Advice frontier: Point2D.Float[3.1207638, 2.375138] with IG = 500.89807
Iter num: 19
Used Advice frontier: Point2D.Float[2.5892448, 2.5925174] with IG = 174.04076
Iter num: 20
Used Advice frontier: Point2D.Float[2.4699283, 2.6147058] with IG = 823.9801
Iter num: 21
Used frontier: Point2D.Float[3.8053787, 1.3689169] with IG = 13.42165
Iter num: 22
Used frontier: Point2D.Float[4.6003866, 1.5225329] with IG = 29.466656
Iter num: 23
Added advice frontier Point2D.Float[5.007802, 2.298689]
Added advice frontier Point2D.Float[5.1482506, 1.9828897]
Added advice frontier Point2D.Float[5.2169747, 0.8357942]
Used Advice frontier: Point2D.Float[5.1482506, 1.9828897] with IG = 124.91444
Iter num: 24
Added advice frontier Point2D.Float[5.383999, 2.7191947]
Added advice frontier Point2D.Float[5.04078, 2.5209434]
Added advice frontier Point2D.Float[5.599289, 2.7795537]
Added advice frontier Point2D.Float[5.071312, 2.4125335]
Used Advice frontier: Point2D.Float[5.007802, 2.298689] with IG = 289.33298
Iter num: 25
Used Advice frontier: Point2D.Float[5.071312, 2.4125335] with IG = 767.09784
Iter num: 26
Used Advice frontier: Point2D.Float[5.04078, 2.5209434] with IG = 887.8846
Iter num: 27
Used Advice frontier: Point2D.Float[5.383999, 2.7191947] with IG = 252.29472
Iter num: 28
Used Advice frontier: Point2D.Float[5.599289, 2.7795537] with IG = 447.2448
Iter num: 29
Used Advice frontier: Point2D.Float[5.2169747, 0.8357942] with IG = 41.730495
Iter num: 30
Added advice frontier Point2D.Float[5.10701, 0.17238747]
Added advice frontier Point2D.Float[5.9758024, 0.27894467]
Added advice frontier Point2D.Float[5.3050313, 0.13147949]
Added advice frontier Point2D.Float[5.4138336, 0.41704553]
Used Advice frontier: Point2D.Float[5.10701, 0.17238747] with IG = 133.02905

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0487394332885742, 1.5022069215774536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0369105339050293, 2.4470303058624268) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7744025588035583, 2.5846142768859863) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.41891422867774963, 2.8781378269195557) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.244323492050171, 2.8569741249084473) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1444942951202393, 2.393772840499878) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9918634295463562, 1.689674735069275) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8519447445869446, 1.0666371583938599) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.723003089427948, 0.6067096590995789) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1922082901000977, 0.29614099860191345) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.570611596107483, 0.16394472122192383) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.240613341331482, 0.7678923010826111) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1664223670959473, 0.9535301327705383) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2467899322509766, 1.2300753593444824) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.994241714477539, 1.4628361463546753) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.605494499206543, 1.354111671447754) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8756327629089355, 1.4647057056427002) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.019247531890869, 1.0111395120620728) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0300607681274414, 0.8339817523956299) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0579776763916016, 0.5532841086387634) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.2169580459594727, 0.5772047638893127) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.397033452987671, 0.5349470376968384) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.5810627937316895, 0.1632835865020752) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.9027493000030518, 0.5351131558418274) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.397033452987671, 0.5349470376968384) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1813530921936035, 0.9457292556762695) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.139047861099243, 1.1064391136169434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.023258686065674, 1.5837328433990479) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9326024055480957, 1.9537887573242188) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2296640872955322, 2.2078137397766113) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1207637786865234, 2.3751380443573) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8951048851013184, 2.4777731895446777) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.589244842529297, 2.592517375946045) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.46992826461792, 2.614705801010132) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6745033264160156, 2.490084409713745) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.895261526107788, 2.2370898723602295) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1515021324157715, 1.9115946292877197) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5916903018951416, 1.6751651763916016) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8053786754608154, 1.3689168691635132) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.2219767570495605, 1.4046225547790527) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.600386619567871, 1.5225329399108887) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.797549247741699, 1.9207924604415894) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.148250579833984, 1.9828896522521973) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0078020095825195, 2.2986888885498047) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.071311950683594, 2.4125335216522217) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.040780067443848, 2.5209434032440186) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.383998870849609, 2.7191946506500244) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.5992889404296875, 2.7795536518096924) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.383998870849609, 2.7191946506500244) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.301054954528809, 2.4343154430389404) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.107975959777832, 2.1899213790893555) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.130672454833984, 1.9745142459869385) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.874805450439453, 1.7630813121795654) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.018995761871338, 1.5469685792922974) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.032690525054932, 1.214517593383789) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0912556648254395, 1.0439625978469849) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.21697473526001, 0.83579421043396) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,b,53]  [r6,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 30
Total sampled points = 15825
RRG size = 1501

Movement Length = 22.938652
Remaining path Length = 0.20220272
Total path Length = 23.140854

Advice samples: [11, 6, 2, 4, 1, 0, 0, 0, 0, 0] (24)

Total time taken (in ms):5202.120409

Initialization time (in ms):515.914173
Sampling time (in ms):3554.014444
Advice time (in ms):6.377295
Path checking time (in ms):579.012155
Learning time (in ms):172.73774
Exploration time (in ms):0.0
Time taken other than these things (in ms):374.064602
Moving time (in ms):268.43546



