Parameters values: 
Environment: results/environments/env20/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.4066343008747713,0.027822382481768774), (1.7066343008747713,0.027822382481768774), (1.7066343008747713,0.5278223824817688), (1.4066343008747713,0.5278223824817688)]
[(0.5729840142337361,2.454765364478238), (1.0729840142337361,2.454765364478238), (1.0729840142337361,2.7547653644782377), (0.5729840142337361,2.7547653644782377)]
[(2.3472568116241543,0.08799180583656897), (2.8472568116241543,0.08799180583656897), (2.8472568116241543,0.38799180583656895), (2.3472568116241543,0.38799180583656895)]
[(3.5270861816939334,2.488867972033085), (3.827086181693933,2.488867972033085), (3.827086181693933,2.988867972033085), (3.5270861816939334,2.988867972033085)]
[(4.116756224478914,0.21211234956528754), (4.616756224478914,0.21211234956528754), (4.616756224478914,0.5121123495652875), (4.116756224478914,0.5121123495652875)]
[(5.478077655222586,2.501325103281686), (5.978077655222586,2.501325103281686), (5.978077655222586,2.8013251032816857), (5.478077655222586,2.8013251032816857)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.9762146,y=0.046417873,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.056033093,y=0.046417873,w=1.1201814,h=2.657627]  java.awt.geom.Rectangle2D$Float[x=0.056033093,y=0.046417873,w=3.2709613,h=2.657627]  java.awt.geom.Rectangle2D$Float[x=0.056033093,y=0.046417873,w=3.2709613,h=2.657627]  java.awt.geom.Rectangle2D$Float[x=0.056033093,y=0.0013700125,w=4.770611,h=2.702675]  java.awt.geom.Rectangle2D$Float[x=0.056033093,y=0.0013700125,w=5.23006,h=2.7337542]  
t: java.awt.geom.Rectangle2D$Float[x=1.3066343,y=0.0,w=0.5,h=0.6278224]  java.awt.geom.Rectangle2D$Float[x=0.47298402,y=0.0,w=1.3336504,h=2.8547654]  java.awt.geom.Rectangle2D$Float[x=0.47298402,y=0.0,w=2.4742727,h=2.8547654]  java.awt.geom.Rectangle2D$Float[x=0.47298402,y=0.0,w=3.454102,h=3.088868]  java.awt.geom.Rectangle2D$Float[x=0.47298402,y=0.0,w=4.2437725,h=3.088868]  java.awt.geom.Rectangle2D$Float[x=0.47298402,y=0.0,w=5.605094,h=3.088868]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.014551, 1.3533009] with IG = 34.548206
Iter num: 2
Used frontier: Point2D.Float[0.9795513, 0.44855422] with IG = 51.909412
Iter num: 3
Added advice frontier Point2D.Float[1.0995588, 0.22315086]
Added advice frontier Point2D.Float[1.2863308, 0.04438171]
Used Advice frontier: Point2D.Float[1.0995588, 0.22315086] with IG = 391.60477
Iter num: 4
Used Advice frontier: Point2D.Float[1.2863308, 0.04438171] with IG = 386.78952
Iter num: 5
Used frontier: Point2D.Float[1.8873508, 1.4685665] with IG = 12.942739
Iter num: 6
Used frontier: Point2D.Float[2.8355439, 1.6760937] with IG = 23.687075
Iter num: 7
Added advice frontier Point2D.Float[3.1713512, 2.1783674]
Added advice frontier Point2D.Float[3.2543287, 2.4605591]
Added advice frontier Point2D.Float[2.9160903, 2.4866261]
Added advice frontier Point2D.Float[2.9366667, 0.98554504]
Used Advice frontier: Point2D.Float[3.1713512, 2.1783674] with IG = 165.51088
Iter num: 8
Added advice frontier Point2D.Float[3.5049088, 2.5222702]
Used Advice frontier: Point2D.Float[3.2543287, 2.4605591] with IG = 339.9759
Iter num: 9
Used Advice frontier: Point2D.Float[3.5049088, 2.5222702] with IG = 387.49612
Iter num: 10
Used Advice frontier: Point2D.Float[2.9160903, 2.4866261] with IG = 169.52129
Iter num: 11
Used Advice frontier: Point2D.Float[2.9366667, 0.98554504] with IG = 66.471306
Iter num: 12
Added advice frontier Point2D.Float[3.1729927, 0.3307409]
Added advice frontier Point2D.Float[3.3075764, 0.5411828]
Added advice frontier Point2D.Float[2.8168504, 0.0061756033]
Added advice frontier Point2D.Float[2.3058634, 0.46710852]
Added advice frontier Point2D.Float[2.314364, 0.52921456]
Used Advice frontier: Point2D.Float[3.3075764, 0.5411828] with IG = 172.76549
Iter num: 13
Used Advice frontier: Point2D.Float[3.1729927, 0.3307409] with IG = 400.32492
Iter num: 14
Used Advice frontier: Point2D.Float[2.8168504, 0.0061756033] with IG = 207.53322
Iter num: 15
Used Advice frontier: Point2D.Float[2.314364, 0.52921456] with IG = 74.87231
Iter num: 16
Used Advice frontier: Point2D.Float[2.3058634, 0.46710852] with IG = 1595.2758
Iter num: 17
Used frontier: Point2D.Float[3.7797928, 1.433261] with IG = 14.637601
Iter num: 18
Used frontier: Point2D.Float[4.6883082, 1.545854] with IG = 22.958328
Iter num: 19
Added advice frontier Point2D.Float[5.050982, 2.2616687]
Added advice frontier Point2D.Float[4.9095516, 0.73653156]
Added advice frontier Point2D.Float[5.2617254, 1.1355982]
Added advice frontier Point2D.Float[5.1557074, 1.8376814]
Used Advice frontier: Point2D.Float[5.1557074, 1.8376814] with IG = 152.46754
Iter num: 20
Added advice frontier Point2D.Float[5.1450567, 2.5351825]
Added advice frontier Point2D.Float[5.02851, 2.6032917]
Used Advice frontier: Point2D.Float[5.050982, 2.2616687] with IG = 228.97472
Iter num: 21
Added advice frontier Point2D.Float[5.7304287, 2.42263]
Used Advice frontier: Point2D.Float[5.1450567, 2.5351825] with IG = 345.7335
Iter num: 22
Added advice frontier Point2D.Float[5.3925476, 2.8889694]
Used Advice frontier: Point2D.Float[5.02851, 2.6032917] with IG = 740.8018
Iter num: 23
Used Advice frontier: Point2D.Float[5.3925476, 2.8889694] with IG = 216.10068
Iter num: 24
Used Advice frontier: Point2D.Float[5.7304287, 2.42263] with IG = 111.032364
Iter num: 25
Used Advice frontier: Point2D.Float[5.2617254, 1.1355982] with IG = 59.128433
Iter num: 26
Used Advice frontier: Point2D.Float[4.9095516, 0.73653156] with IG = 187.8848
Iter num: 27
Added advice frontier Point2D.Float[4.5082936, 0.5433361]
Added advice frontier Point2D.Float[4.217738, 0.6472662]
Added advice frontier Point2D.Float[4.788745, 0.09979581]
Added advice frontier Point2D.Float[4.8623867, 0.32206348]
Added advice frontier Point2D.Float[4.455447, 0.19932212]
Used Advice frontier: Point2D.Float[4.8623867, 0.32206348] with IG = 239.7259
Iter num: 28
Added advice frontier Point2D.Float[4.6934056, 0.19573276]
Added advice frontier Point2D.Float[4.621457, 0.12478137]
Used Advice frontier: Point2D.Float[4.6934056, 0.19573276] with IG = 473.9706
Iter num: 29
Used Advice frontier: Point2D.Float[4.621457, 0.12478137] with IG = 989.629
Iter num: 30
Used Advice frontier: Point2D.Float[4.788745, 0.09979581] with IG = 591.21423
Iter num: 31
Used Advice frontier: Point2D.Float[4.455447, 0.19932212] with IG = 287.48825
Iter num: 32
Used Advice frontier: Point2D.Float[4.5082936, 0.5433361] with IG = 138.16739
Iter num: 33
Used Advice frontier: Point2D.Float[4.217738, 0.6472662] with IG = 324.06107
Iter num: 34
Used frontier: Point2D.Float[5.7352667, 0.5666995] with IG = 14.222328
Iter num: 35
Used frontier: Point2D.Float[0.98302484, 2.271603] with IG = 4.617672
Iter num: 36
Added advice frontier Point2D.Float[0.7110677, 2.389071]
Added advice frontier Point2D.Float[0.24062285, 2.495946]
Added advice frontier Point2D.Float[0.11421531, 2.6377432]
Used Advice frontier: Point2D.Float[0.7110677, 2.389071] with IG = 337.5617

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.014551043510437, 1.353300929069519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9795513153076172, 0.44855421781539917) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0995588302612305, 0.22315086424350739) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2863308191299438, 0.04438171163201332) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.210445761680603, 0.8457044959068298) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1730642318725586, 1.078072190284729) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8873507976531982, 1.4685665369033813) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.52067232131958, 1.5944771766662598) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8355438709259033, 1.6760936975479126) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.171351194381714, 2.1783673763275146) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.254328727722168, 2.460559129714966) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.504908800125122, 2.5222702026367188) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.916090250015259, 2.486626148223877) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8775453567504883, 1.769668698310852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9231133460998535, 1.2280800342559814) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.93666672706604, 0.9855450391769409) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3075764179229736, 0.541182816028595) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.172992706298828, 0.33074089884757996) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.816850423812866, 0.006175603251904249) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1568996906280518, 0.2748684287071228) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.6851792335510254, 0.519250750541687) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.314363956451416, 0.5292145609855652) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.305863380432129, 0.46710851788520813) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.4090893268585205, 0.5034312605857849) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8866894245147705, 0.7881880402565002) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.358400821685791, 1.2153006792068481) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7797927856445312, 1.4332610368728638) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.790299892425537, 1.5075767040252686) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.420348644256592, 1.637987494468689) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.688308238983154, 1.5458539724349976) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.97125768661499, 1.9070384502410889) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.155707359313965, 1.8376814126968384) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0509819984436035, 2.2616686820983887) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.14505672454834, 2.535182476043701) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.028510093688965, 2.6032917499542236) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.392547607421875, 2.8889694213867188) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.285207271575928, 2.73380446434021) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.461731910705566, 2.3405890464782715) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.730428695678711, 2.4226300716400146) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.21624755859375, 2.2805678844451904) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.155707359313965, 1.8376814126968384) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.228942394256592, 1.4609692096710205) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.261725425720215, 1.1355981826782227) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.909551620483398, 0.7365315556526184) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.862386703491211, 0.32206347584724426) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.693405628204346, 0.19573275744915009) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(4.621457099914551, 0.12478137016296387) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.788744926452637, 0.09979581087827682) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.455447196960449, 0.19932211935520172) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.693405628204346, 0.19573275744915009) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(4.645753860473633, 0.5407472252845764) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.508293628692627, 0.5433360934257507) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.217738151550293, 0.6472662091255188) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.508293628692627, 0.5433360934257507) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.680653095245361, 0.5645438432693481) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.072117328643799, 0.5858463644981384) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.46042537689209, 0.5201643705368042) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.73526668548584, 0.5666995048522949) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.5350260734558105, 0.7155627608299255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.199680328369141, 0.8805769681930542) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.894191265106201, 1.074061632156372) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.5192461013793945, 1.137745976448059) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.158593654632568, 1.2183951139450073) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8462107181549072, 1.262176513671875) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.557239055633545, 1.3475643396377563) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2945027351379395, 1.402306079864502) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1222951412200928, 1.4408133029937744) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.52067232131958, 1.5944771766662598) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8785570859909058, 1.7550657987594604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4884535074234009, 1.8445422649383545) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1976127624511719, 1.9108994007110596) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r4,12]  [r4,b,41]  [r4,t,41]  [r4,41]  [h,41]  [r3,41]  [r3,b,34]  [r3,t,34]  [r3,b,34]  [r3,34]  [r3,t,34]  [r3,34]  [h,34]  [r6,34]  [r6,b,23]  [r6,23]  [r6,t,23]  [r6,b,23]  [r6,23]  [r6,t,23]  [r6,23]  [h,23]  [r5,23]  [r5,b,t,37]  [r5,t,37]  [r5,b,37]  [r5,t,37]  [r5,b,t,37]  [r5,t,37]  [r5,37]  [r5,t,37]  [r5,37]  [h,37]  [r2,37]  [r2,t,37]  


Remaining path: 
[r2,t,37]  [r2,37]  [r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 19563
RRG size = 1801

Movement Length = 28.331131
Remaining path Length = 0.9249874
Total path Length = 29.256119

Advice samples: [14, 3, 6, 3, 2, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):10119.432427

Initialization time (in ms):712.652472
Sampling time (in ms):7678.631773
Advice time (in ms):10.589856
Path checking time (in ms):962.468452
Learning time (in ms):249.701601
Exploration time (in ms):0.0
Time taken other than these things (in ms):505.388273
Moving time (in ms):2483.028



