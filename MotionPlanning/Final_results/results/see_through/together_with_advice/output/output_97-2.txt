Parameters values: 
Environment: results/environments/env97/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.5427190543949734,0.021078696574777015), (1.8427190543949734,0.021078696574777015), (1.8427190543949734,0.521078696574777), (1.5427190543949734,0.521078696574777)]
[(0.0961107321818688,2.55586616651487), (0.5961107321818688,2.55586616651487), (0.5961107321818688,2.8558661665148697), (0.0961107321818688,2.8558661665148697)]
[(2.5249771938380086,0.2125600797905451), (3.0249771938380086,0.2125600797905451), (3.0249771938380086,0.5125600797905451), (2.5249771938380086,0.5125600797905451)]
[(3.6225766484014637,2.467318750733637), (3.9225766484014635,2.467318750733637), (3.9225766484014635,2.967318750733637), (3.6225766484014637,2.967318750733637)]
[(4.826553961816174,0.2135406936758442), (5.326553961816174,0.2135406936758442), (5.326553961816174,0.5135406936758442), (4.826553961816174,0.5135406936758442)]
[(5.348815586500751,2.4822868684679182), (5.648815586500751,2.4822868684679182), (5.648815586500751,2.9822868684679182), (5.348815586500751,2.9822868684679182)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.2783953,y=0.014020551,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.2783953,y=0.014020551,w=0.52747095,h=2.7515397]  java.awt.geom.Rectangle2D$Float[x=0.2783953,y=0.014020551,w=3.2777238,h=2.7515397]  java.awt.geom.Rectangle2D$Float[x=0.2783953,y=0.014020551,w=3.2777238,h=2.7515397]  java.awt.geom.Rectangle2D$Float[x=0.2783953,y=0.014020551,w=4.082224,h=2.7515397]  java.awt.geom.Rectangle2D$Float[x=0.2783953,y=0.014020551,w=4.4986286,h=2.7515397]  
t: java.awt.geom.Rectangle2D$Float[x=1.4427191,y=0.0,w=0.5,h=0.62107867]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.9427191,h=2.955866]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.124977,h=2.955866]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=4.022577,h=3.0673187]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.4265537,h=3.0673187]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.7488155,h=3.0822868]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.014631, 1.4908539] with IG = 34.985035
Iter num: 2
Used frontier: Point2D.Float[0.7981853, 0.55704564] with IG = 37.556145
Iter num: 3
Added advice frontier Point2D.Float[1.6434083, 0.54820037]
Added advice frontier Point2D.Float[1.5206844, 0.6404623]
Added advice frontier Point2D.Float[0.402266, 0.12992334]
Added advice frontier Point2D.Float[0.16426869, 0.005062635]
Used Advice frontier: Point2D.Float[0.402266, 0.12992334] with IG = 171.70436
Iter num: 4
Used Advice frontier: Point2D.Float[0.16426869, 0.005062635] with IG = 372.07666
Iter num: 5
Used Advice frontier: Point2D.Float[1.5206844, 0.6404623] with IG = 66.73693
Iter num: 6
Used Advice frontier: Point2D.Float[1.6434083, 0.54820037] with IG = 651.31134
Iter num: 7
Used frontier: Point2D.Float[0.9658396, 2.428311] with IG = 14.958462
Iter num: 8
Added advice frontier Point2D.Float[0.7256802, 2.6147501]
Added advice frontier Point2D.Float[0.7834627, 2.794675]
Added advice frontier Point2D.Float[0.6888859, 2.704021]
Added advice frontier Point2D.Float[0.6503856, 2.9482682]
Added advice frontier Point2D.Float[0.71864164, 2.7314253]
Used Advice frontier: Point2D.Float[0.7256802, 2.6147501] with IG = 328.91165
Iter num: 9
Used Advice frontier: Point2D.Float[0.6888859, 2.704021] with IG = 1035.6664
Iter num: 10
Used Advice frontier: Point2D.Float[0.71864164, 2.7314253] with IG = 2472.04
Iter num: 11
Used Advice frontier: Point2D.Float[0.7834627, 2.794675] with IG = 1104.1597
Iter num: 12
Used Advice frontier: Point2D.Float[0.6503856, 2.9482682] with IG = 492.0658
Iter num: 13
Used frontier: Point2D.Float[1.863962, 2.4707031] with IG = 19.137094
Iter num: 14
Used frontier: Point2D.Float[1.9862337, 1.4724201] with IG = 11.148578
Iter num: 15
Used frontier: Point2D.Float[2.7974246, 1.5401232] with IG = 29.479483
Iter num: 16
Added advice frontier Point2D.Float[3.1024778, 0.8798294]
Added advice frontier Point2D.Float[2.8977437, 0.5829302]
Added advice frontier Point2D.Float[2.9253225, 0.7305288]
Added advice frontier Point2D.Float[3.1476128, 2.1935878]
Used Advice frontier: Point2D.Float[3.1024778, 0.8798294] with IG = 137.48442
Iter num: 17
Added advice frontier Point2D.Float[3.4754558, 0.39096513]
Added advice frontier Point2D.Float[3.5003166, 0.077941954]
Used Advice frontier: Point2D.Float[2.9253225, 0.7305288] with IG = 431.63367
Iter num: 18
Used Advice frontier: Point2D.Float[2.8977437, 0.5829302] with IG = 665.9873
Iter num: 19
Used Advice frontier: Point2D.Float[3.4754558, 0.39096513] with IG = 132.31947
Iter num: 20
Used Advice frontier: Point2D.Float[3.5003166, 0.077941954] with IG = 318.46237
Iter num: 21
Used Advice frontier: Point2D.Float[3.1476128, 2.1935878] with IG = 44.38973
Iter num: 22
Added advice frontier Point2D.Float[3.6152325, 2.4082334]
Added advice frontier Point2D.Float[3.875975, 2.3659532]
Added advice frontier Point2D.Float[2.7836697, 2.6427429]
Added advice frontier Point2D.Float[2.7247517, 2.6937597]
Used Advice frontier: Point2D.Float[3.6152325, 2.4082334] with IG = 176.7074
Iter num: 23
Used Advice frontier: Point2D.Float[3.875975, 2.3659532] with IG = 378.57547
Iter num: 24
Used Advice frontier: Point2D.Float[2.7836697, 2.6427429] with IG = 83.22512
Iter num: 25
Used Advice frontier: Point2D.Float[2.7247517, 2.6937597] with IG = 1283.1013
Iter num: 26
Used frontier: Point2D.Float[3.698287, 1.3537006] with IG = 12.622099
Iter num: 27
Used frontier: Point2D.Float[3.7435176, 1.3439631] with IG = 475.50168
Iter num: 28
Used frontier: Point2D.Float[4.2738795, 1.6660111] with IG = 36.61007
Iter num: 29
Added advice frontier Point2D.Float[5.0894094, 2.0278382]
Used Advice frontier: Point2D.Float[5.0894094, 2.0278382] with IG = 86.7138
Iter num: 30
Added advice frontier Point2D.Float[5.2636743, 2.6708782]
Added advice frontier Point2D.Float[4.9755898, 2.7328706]
Added advice frontier Point2D.Float[4.741494, 2.5790339]
Added advice frontier Point2D.Float[4.3897867, 2.4225564]
Used Advice frontier: Point2D.Float[5.2636743, 2.6708782] with IG = 150.09724
Iter num: 31
Used Advice frontier: Point2D.Float[4.9755898, 2.7328706] with IG = 339.35226
Iter num: 32
Added advice frontier Point2D.Float[4.935428, 0.9514838]
Used Advice frontier: Point2D.Float[4.741494, 2.5790339] with IG = 356.99155
Iter num: 33
Used Advice frontier: Point2D.Float[4.3897867, 2.4225564] with IG = 259.7768
Iter num: 34
Used Advice frontier: Point2D.Float[4.935428, 0.9514838] with IG = 50.990795
Iter num: 35
Added advice frontier Point2D.Float[4.784317, 0.42096317]
Added advice frontier Point2D.Float[4.612021, 0.6733544]
Used Advice frontier: Point2D.Float[4.784317, 0.42096317] with IG = 181.2836
Iter num: 36
Used Advice frontier: Point2D.Float[4.612021, 0.6733544] with IG = 327.2323
Iter num: 37
Used frontier: Point2D.Float[4.784317, 0.42096317] with IG = 78.53576
Iter num: 38
Used frontier: Point2D.Float[5.595496, 1.624773] with IG = 27.84546
Iter num: 39
Used frontier: Point2D.Float[4.9342275, 0.92643404] with IG = 23.90956
Iter num: 40
Added advice frontier Point2D.Float[4.2958155, 0.26881498]
Added advice frontier Point2D.Float[4.5628095, 0.11405532]
Used Advice frontier: Point2D.Float[4.2958155, 0.26881498] with IG = 68.43961

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0146310329437256, 1.4908539056777954) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7981852889060974, 0.5570456385612488) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4022659957408905, 0.12992334365844727) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.16426868736743927, 0.0050626350566744804) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4022659957408905, 0.12992334365844727) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2777138948440552, 0.51883864402771) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5206843614578247, 0.6404622793197632) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6434082984924316, 0.5482003688812256) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1897838115692139, 0.8540676832199097) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1443790197372437, 1.2213023900985718) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0626851320266724, 2.0011069774627686) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9658396244049072, 2.4283111095428467) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7256801724433899, 2.6147501468658447) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6888859272003174, 2.7040209770202637) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.7186416387557983, 2.7314252853393555) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7834627032279968, 2.79467511177063) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6503856182098389, 2.948268175125122) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9662419557571411, 2.8443479537963867) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.432571530342102, 2.6212778091430664) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8639620542526245, 2.470703125) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7418086528778076, 2.4119930267333984) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2945945262908936, 2.1540896892547607) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.215622067451477, 2.125845432281494) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1369215250015259, 1.8165336847305298) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.649815320968628, 1.5757752656936646) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9862337112426758, 1.4724200963974) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2606143951416016, 1.488847255706787) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.797424554824829, 1.5401232242584229) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.102477788925171, 0.8798294067382812) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9253225326538086, 0.7305287718772888) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8977437019348145, 0.5829302072525024) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.356595516204834, 0.6566034555435181) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4754557609558105, 0.39096513390541077) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.500316619873047, 0.07794195413589478) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1726186275482178, 0.42312726378440857) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.102477788925171, 0.8798294067382812) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1111559867858887, 1.3162106275558472) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.137770175933838, 1.7586842775344849) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1476128101348877, 2.1935877799987793) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2376554012298584, 2.3546829223632812) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.615232467651367, 2.408233404159546) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.8759748935699463, 2.365953207015991) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.615232467651367, 2.408233404159546) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2376554012298584, 2.3546829223632812) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0116641521453857, 2.415224313735962) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7836697101593018, 2.642742872238159) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.7247517108917236, 2.6937596797943115) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9513983726501465, 2.3750312328338623) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1336231231689453, 2.020264148712158) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3415229320526123, 1.7652970552444458) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4721145629882812, 1.605386734008789) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.698287010192871, 1.3537006378173828) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7435176372528076, 1.3439631462097168) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9475483894348145, 1.5249226093292236) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.273879528045654, 1.666011095046997) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.810415267944336, 1.504636287689209) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.089409351348877, 2.0278382301330566) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.263674259185791, 2.6708781719207764) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.975589752197266, 2.732870578765869) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.741494178771973, 2.579033851623535) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.389786720275879, 2.4225564002990723) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.716033935546875, 2.278937339782715) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.946238994598389, 2.268341302871704) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.787925720214844, 1.909934163093567) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.777416229248047, 1.8719391822814941) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.810415267944336, 1.504636287689209) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.926809310913086, 1.1910346746444702) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.935428142547607, 0.9514837861061096) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7843170166015625, 0.4209631681442261) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.612020969390869, 0.6733543872833252) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7843170166015625, 0.4209631681442261) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.935428142547607, 0.9514837861061096) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.243673801422119, 1.0746163129806519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.388209342956543, 1.3935229778289795) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.59549617767334, 1.6247730255126953) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.388209342956543, 1.3935229778289795) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.243673801422119, 1.0746163129806519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.934227466583252, 0.9264340400695801) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.935428142547607, 0.9514837861061096) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7843170166015625, 0.4209631681442261) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.612020969390869, 0.6733543872833252) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,b,t,22]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,t,53]  [r5,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 22636
RRG size = 2001

Movement Length = 30.136108
Remaining path Length = 0.0
Total path Length = 30.136108

Advice samples: [20, 5, 3, 0, 0, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):7712.517332

Initialization time (in ms):519.88661
Sampling time (in ms):5684.848307
Advice time (in ms):7.24185
Path checking time (in ms):758.852765
Learning time (in ms):156.478338
Exploration time (in ms):0.0
Time taken other than these things (in ms):585.209462
Moving time (in ms):335.5443



