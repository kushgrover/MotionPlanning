Parameters values: 
Environment: results/environments/env80/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.9019029140175442,0.04236525987240346), (1.2019029140175441,0.04236525987240346), (1.2019029140175441,0.5423652598724035), (0.9019029140175442,0.5423652598724035)]
[(0.03897240799866653,2.542508411327633), (0.5389724079986665,2.542508411327633), (0.5389724079986665,2.842508411327633), (0.03897240799866653,2.842508411327633)]
[(2.657941830963909,0.15166417023839757), (3.157941830963909,0.15166417023839757), (3.157941830963909,0.45166417023839756), (2.657941830963909,0.45166417023839756)]
[(2.7191992856050256,2.4786445392135206), (3.0191992856050254,2.4786445392135206), (3.0191992856050254,2.9786445392135206), (2.7191992856050256,2.9786445392135206)]
[(4.624151508138515,0.19426059426071687), (5.124151508138515,0.19426059426071687), (5.124151508138515,0.4942605942607169), (4.624151508138515,0.4942605942607169)]
[(5.3390873321315375,2.592550060743596), (5.8390873321315375,2.592550060743596), (5.8390873321315375,2.892550060743596), (5.3390873321315375,2.892550060743596)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.4626455,y=0.016379444,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.016379444,w=0.7609046,h=2.8582296]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.016379444,w=1.4276586,h=2.8582296]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.016379444,w=2.8414872,h=2.8582296]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.011635878,w=4.4379287,h=2.8629732]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.011635878,w=4.4379287,h=2.8629732]  
t: java.awt.geom.Rectangle2D$Float[x=0.8019029,y=0.0,w=0.5,h=0.6423653]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.3019029,h=2.9425085]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.2579417,h=2.9425085]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.2579417,h=3.0786445]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.2241516,h=3.0786445]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.9390874,h=3.0786445]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0318365, 1.4944912] with IG = 34.340187
Iter num: 2
Used frontier: Point2D.Float[0.96015275, 1.7630707] with IG = 118.713104
Iter num: 3
Added advice frontier Point2D.Float[1.0778894, 2.3617165]
Added advice frontier Point2D.Float[1.0180225, 2.7446337]
Added advice frontier Point2D.Float[0.5673479, 2.4709325]
Used Advice frontier: Point2D.Float[1.0778894, 2.3617165] with IG = 163.90387
Iter num: 4
Used Advice frontier: Point2D.Float[1.0180225, 2.7446337] with IG = 258.01868
Iter num: 5
Used Advice frontier: Point2D.Float[0.5673479, 2.4709325] with IG = 189.654
Iter num: 6
Used frontier: Point2D.Float[1.985622, 1.4477386] with IG = 12.544188
Iter num: 7
Used frontier: Point2D.Float[2.9311497, 1.5503142] with IG = 25.173414
Iter num: 8
Added advice frontier Point2D.Float[3.233888, 0.67378855]
Added advice frontier Point2D.Float[3.0858216, 2.1626112]
Added advice frontier Point2D.Float[3.1383774, 1.9225752]
Added advice frontier Point2D.Float[3.1119907, 1.0071285]
Added advice frontier Point2D.Float[2.7622316, 2.4610078]
Used Advice frontier: Point2D.Float[3.1383774, 1.9225752] with IG = 234.7123
Iter num: 9
Used Advice frontier: Point2D.Float[3.0858216, 2.1626112] with IG = 406.96362
Iter num: 10
Added advice frontier Point2D.Float[3.7232203, 2.544987]
Added advice frontier Point2D.Float[3.753467, 2.6768687]
Used Advice frontier: Point2D.Float[2.7622316, 2.4610078] with IG = 227.18411
Iter num: 11
Used Advice frontier: Point2D.Float[3.7232203, 2.544987] with IG = 103.13297
Iter num: 12
Used Advice frontier: Point2D.Float[3.753467, 2.6768687] with IG = 739.0668
Iter num: 13
Used Advice frontier: Point2D.Float[3.1119907, 1.0071285] with IG = 51.7785
Iter num: 14
Added advice frontier Point2D.Float[2.7770715, 0.4655937]
Added advice frontier Point2D.Float[2.4798713, 0.5409204]
Used Advice frontier: Point2D.Float[3.233888, 0.67378855] with IG = 281.74667
Iter num: 15
Used Advice frontier: Point2D.Float[2.7770715, 0.4655937] with IG = 199.19435
Iter num: 16
Used Advice frontier: Point2D.Float[2.4798713, 0.5409204] with IG = 326.16046
Iter num: 17
Added advice frontier Point2D.Float[2.228758, 0.18669774]
Added advice frontier Point2D.Float[2.1911209, 0.09532554]
Added advice frontier Point2D.Float[2.5625143, 0.07316184]
Used Advice frontier: Point2D.Float[2.228758, 0.18669774] with IG = 230.30748
Iter num: 18
Used Advice frontier: Point2D.Float[2.1911209, 0.09532554] with IG = 1011.9384
Iter num: 19
Used Advice frontier: Point2D.Float[2.5625143, 0.07316184] with IG = 268.77805
Iter num: 20
Used frontier: Point2D.Float[3.9631763, 1.485156] with IG = 11.245311
Iter num: 21
Used frontier: Point2D.Float[4.68588, 1.2350793] with IG = 27.180061
Iter num: 22
Added advice frontier Point2D.Float[5.0222163, 2.1381078]
Added advice frontier Point2D.Float[4.8716617, 1.9213634]
Used Advice frontier: Point2D.Float[4.8716617, 1.9213634] with IG = 126.13017
Iter num: 23
Added advice frontier Point2D.Float[5.1518483, 2.6730382]
Added advice frontier Point2D.Float[4.661107, 2.592159]
Added advice frontier Point2D.Float[5.255417, 2.6447458]
Added advice frontier Point2D.Float[4.9277205, 0.96438897]
Added advice frontier Point2D.Float[4.8892055, 0.49495983]
Used Advice frontier: Point2D.Float[5.0222163, 2.1381078] with IG = 378.92694
Iter num: 24
Used Advice frontier: Point2D.Float[5.1518483, 2.6730382] with IG = 181.68158
Iter num: 25
Used Advice frontier: Point2D.Float[5.255417, 2.6447458] with IG = 931.41583
Iter num: 26
Used Advice frontier: Point2D.Float[4.661107, 2.592159] with IG = 165.36446
Iter num: 27
Used Advice frontier: Point2D.Float[4.9277205, 0.96438897] with IG = 59.14985
Iter num: 28
Added advice frontier Point2D.Float[5.256306, 0.09523826]
Added advice frontier Point2D.Float[5.1130013, 0.11760668]
Used Advice frontier: Point2D.Float[4.8892055, 0.49495983] with IG = 212.31128
Iter num: 29
Used Advice frontier: Point2D.Float[5.256306, 0.09523826] with IG = 118.89675
Iter num: 30
Used Advice frontier: Point2D.Float[5.1130013, 0.11760668] with IG = 689.46466
Iter num: 31
Added advice frontier Point2D.Float[5.1900916, 0.14351396]
Added advice frontier Point2D.Float[5.281473, 0.26837668]
Used Advice frontier: Point2D.Float[5.1900916, 0.14351396] with IG = 1229.6024
Iter num: 32
Used Advice frontier: Point2D.Float[5.281473, 0.26837668] with IG = 646.2882
Iter num: 33
Used frontier: Point2D.Float[5.8094983, 1.3058074] with IG = 16.746643
Iter num: 34
Used frontier: Point2D.Float[0.8177981, 0.6048227] with IG = 3.230187
Iter num: 35
Used frontier: Point2D.Float[1.2477599, 0.60141456] with IG = 55.775032
Iter num: 36
Added advice frontier Point2D.Float[1.561948, 0.20709974]
Added advice frontier Point2D.Float[1.5858845, 0.40583304]
Added advice frontier Point2D.Float[1.2702312, 0.23347716]
Used Advice frontier: Point2D.Float[1.2702312, 0.23347716] with IG = 271.2799

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0318365097045898, 1.4944912195205688) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9601527452468872, 1.7630707025527954) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0778894424438477, 2.3617165088653564) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0180225372314453, 2.744633674621582) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5673478841781616, 2.4709324836730957) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6002426147460938, 2.4467897415161133) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.150791883468628, 1.98641836643219) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4870805740356445, 1.734338402748108) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9856220483779907, 1.4477386474609375) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.399301052093506, 1.4595402479171753) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.93114972114563, 1.55031418800354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1383774280548096, 1.9225752353668213) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0858216285705566, 2.162611246109009) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7622315883636475, 2.461007833480835) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2689621448516846, 2.4561264514923096) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.7232203483581543, 2.5449869632720947) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.753467082977295, 2.6768686771392822) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5222153663635254, 2.4202802181243896) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1466898918151855, 2.096189260482788) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1383774280548096, 1.9225752353668213) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.132848024368286, 1.3980154991149902) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1119906902313232, 1.0071284770965576) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2338879108428955, 0.6737885475158691) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.777071475982666, 0.46559369564056396) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.4798712730407715, 0.5409203767776489) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2287580966949463, 0.18669773638248444) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.1911208629608154, 0.0953255370259285) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.562514305114746, 0.07316184043884277) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.4810619354248047, 0.39029330015182495) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.828188419342041, 0.6088030934333801) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1678502559661865, 1.0643140077590942) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3309080600738525, 1.0783088207244873) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.751894235610962, 1.3193320035934448) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9631762504577637, 1.4851560592651367) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.682031631469727, 1.1467071771621704) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.685880184173584, 1.235079288482666) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.94683837890625, 1.5278044939041138) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.87166166305542, 1.921363353729248) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.022216320037842, 2.1381077766418457) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.151848316192627, 2.6730382442474365) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.2554168701171875, 2.6447458267211914) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.151848316192627, 2.6730382442474365) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.661107063293457, 2.5921590328216553) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.829263210296631, 2.3159990310668945) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.87166166305542, 1.921363353729248) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.94683837890625, 1.5278044939041138) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.898688793182373, 1.3005800247192383) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.927720546722412, 0.9643889665603638) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.889205455780029, 0.49495983123779297) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.240304470062256, 0.5757610201835632) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.256306171417236, 0.09523826092481613) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.113001346588135, 0.11760667711496353) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.190091609954834, 0.14351396262645721) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(5.281473159790039, 0.2683766782283783) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.190512657165527, 0.6633691191673279) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.116641521453857, 0.8293539881706238) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.211448669433594, 1.0985288619995117) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.307980537414551, 1.088489294052124) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.56791877746582, 1.3099528551101685) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.809498310089111, 1.30580735206604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.56791877746582, 1.3099528551101685) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.235217571258545, 1.2958625555038452) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.898688793182373, 1.3005800247192383) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.648695468902588, 1.3087385892868042) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.329250335693359, 1.2923038005828857) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.046485424041748, 1.2742247581481934) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7320542335510254, 1.2381820678710938) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2197341918945312, 1.2097477912902832) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9036383628845215, 1.2219938039779663) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.557705879211426, 1.209140658378601) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.382453441619873, 1.2056477069854736) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.020394802093506, 1.1940999031066895) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3664333820343018, 1.1757844686508179) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9723601341247559, 0.9009737968444824) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8177980780601501, 0.6048226952552795) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1100932359695435, 0.5947085022926331) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,t,46]  [h,46]  [r4,46]  [r4,t,46]  [r4,46]  [r4,b,8]  [r4,8]  [h,8]  [r3,8]  [r3,t,8]  [r3,8]  [r3,b,25]  [r3,25]  [r3,t,25]  [r3,25]  [h,25]  [r6,25]  [r6,b,27]  [r6,t,27]  [r6,b,27]  [r6,27]  [h,27]  [r5,27]  [r5,t,27]  [r5,27]  [r5,b,33]  [r5,t,33]  [r5,b,t,33]  [r5,33]  [h,33]  [r1,33]  [r1,t,33]  


Remaining path: 
[r1,t,33]  [r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 20335
RRG size = 1801

Movement Length = 28.082293
Remaining path Length = 0.29290682
Total path Length = 28.3752

Advice samples: [18, 4, 5, 0, 0, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):7235.010135

Initialization time (in ms):511.824032
Sampling time (in ms):5434.252641
Advice time (in ms):8.439453
Path checking time (in ms):723.935116
Learning time (in ms):209.657238
Exploration time (in ms):0.0
Time taken other than these things (in ms):346.901655
Moving time (in ms):1073.7418



