Parameters values: 
Environment: results/environments/env2/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.19668825345028892,0.19771416083247587), (0.696688253450289,0.19771416083247587), (0.696688253450289,0.4977141608324759), (0.19668825345028892,0.4977141608324759)]
[(0.39189452921092566,2.63892147394795), (0.8918945292109257,2.63892147394795), (0.8918945292109257,2.93892147394795), (0.39189452921092566,2.93892147394795)]
[(2.859893087699537,0.05290720785317192), (3.359893087699537,0.05290720785317192), (3.359893087699537,0.3529072078531719), (2.859893087699537,0.3529072078531719)]
[(2.665815360518983,2.542253249503729), (3.165815360518983,2.542253249503729), (3.165815360518983,2.8422532495037287), (2.665815360518983,2.8422532495037287)]
[(4.758434931057473,0.03028341222039891), (5.258434931057473,0.03028341222039891), (5.258434931057473,0.3302834122203989), (4.758434931057473,0.3302834122203989)]
[(4.8551102344265855,2.635894126682025), (5.3551102344265855,2.635894126682025), (5.3551102344265855,2.9358941266820247), (4.8551102344265855,2.9358941266820247)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=0.5243565,h=2.8285859]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=1.342168,h=2.8285859]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=2.3074641,h=2.859815]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=4.5513654,h=2.859815]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=4.5513654,h=2.859815]  
t: java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.09771416,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.09771416,w=0.8952063,h=2.9412072]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.0,w=3.3632047,h=3.0389214]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.0,w=3.3632047,h=3.0389214]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.0,w=5.261747,h=3.0389214]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.0,w=5.358422,h=3.0389214]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0135479, 1.4955851] with IG = 35.02786
Iter num: 2
Used frontier: Point2D.Float[1.0086232, 0.56174815] with IG = 37.479256
Iter num: 3
Added advice frontier Point2D.Float[0.62825966, 0.5223391]
Added advice frontier Point2D.Float[0.8113319, 0.5580025]
Added advice frontier Point2D.Float[1.3017793, 0.19893996]
Added advice frontier Point2D.Float[1.3465713, 0.3741576]
Used Advice frontier: Point2D.Float[0.8113319, 0.5580025] with IG = 506.77335
Iter num: 4
Used Advice frontier: Point2D.Float[0.62825966, 0.5223391] with IG = 536.1539
Iter num: 5
Used Advice frontier: Point2D.Float[1.3465713, 0.3741576] with IG = 136.34442
Iter num: 6
Used Advice frontier: Point2D.Float[1.3017793, 0.19893996] with IG = 552.9374
Iter num: 7
Used frontier: Point2D.Float[1.0620534, 2.3837638] with IG = 14.976208
Iter num: 8
Added advice frontier Point2D.Float[0.3524585, 2.6359956]
Added advice frontier Point2D.Float[0.2164757, 2.7447045]
Added advice frontier Point2D.Float[1.588027, 2.7916381]
Added advice frontier Point2D.Float[1.8945738, 2.4580534]
Used Advice frontier: Point2D.Float[1.588027, 2.7916381] with IG = 150.2427
Iter num: 9
Used Advice frontier: Point2D.Float[1.8945738, 2.4580534] with IG = 220.72862
Iter num: 10
Used Advice frontier: Point2D.Float[0.3524585, 2.6359956] with IG = 63.56719
Iter num: 11
Used Advice frontier: Point2D.Float[0.2164757, 2.7447045] with IG = 574.4002
Iter num: 12
Used frontier: Point2D.Float[1.9739968, 1.4470614] with IG = 10.052913
Iter num: 13
Used frontier: Point2D.Float[2.5675013, 1.7001203] with IG = 33.91926
Iter num: 14
Added advice frontier Point2D.Float[2.881123, 2.01513]
Added advice frontier Point2D.Float[2.8935301, 1.9768424]
Added advice frontier Point2D.Float[3.089655, 0.95960027]
Added advice frontier Point2D.Float[3.008097, 1.0189048]
Used Advice frontier: Point2D.Float[2.8935301, 1.9768424] with IG = 233.84544
Iter num: 15
Added advice frontier Point2D.Float[2.5889266, 2.5383706]
Added advice frontier Point2D.Float[2.399205, 2.6353912]
Used Advice frontier: Point2D.Float[2.881123, 2.01513] with IG = 2484.613
Iter num: 16
Used frontier: Point2D.Float[2.9268618, 1.9760566] with IG = 714.8062
Iter num: 17
Used Advice frontier: Point2D.Float[2.5889266, 2.5383706] with IG = 151.64029
Iter num: 18
Added advice frontier Point2D.Float[3.2640727, 2.8464284]
Added advice frontier Point2D.Float[3.5284848, 2.7762074]
Added advice frontier Point2D.Float[2.9100404, 2.9034402]
Added advice frontier Point2D.Float[3.4143062, 2.8725703]
Used Advice frontier: Point2D.Float[2.399205, 2.6353912] with IG = 469.2856
Iter num: 19
Used Advice frontier: Point2D.Float[3.5284848, 2.7762074] with IG = 69.61827
Iter num: 20
Used Advice frontier: Point2D.Float[3.4143062, 2.8725703] with IG = 669.311
Iter num: 21
Used Advice frontier: Point2D.Float[3.2640727, 2.8464284] with IG = 655.77637
Iter num: 22
Used Advice frontier: Point2D.Float[2.9100404, 2.9034402] with IG = 278.86737
Iter num: 23
Used Advice frontier: Point2D.Float[3.008097, 1.0189048] with IG = 43.908634
Iter num: 24
Added advice frontier Point2D.Float[3.4246972, 0.38479194]
Added advice frontier Point2D.Float[3.7992437, 0.45476356]
Added advice frontier Point2D.Float[2.76179, 0.40857917]
Used Advice frontier: Point2D.Float[3.089655, 0.95960027] with IG = 991.66864
Iter num: 25
Used Advice frontier: Point2D.Float[3.4246972, 0.38479194] with IG = 143.48856
Iter num: 26
Used Advice frontier: Point2D.Float[3.7992437, 0.45476356] with IG = 262.449
Iter num: 27
Used Advice frontier: Point2D.Float[2.76179, 0.40857917] with IG = 80.43708
Iter num: 28
Added advice frontier Point2D.Float[2.4242334, 0.21765396]
Added advice frontier Point2D.Float[2.3902283, 0.475106]
Used Advice frontier: Point2D.Float[2.3902283, 0.475106] with IG = 264.92136
Iter num: 29
Used Advice frontier: Point2D.Float[2.4242334, 0.21765396] with IG = 385.07736
Iter num: 30
Used frontier: Point2D.Float[3.8150764, 1.466464] with IG = 20.261736
Iter num: 31
Used frontier: Point2D.Float[4.664297, 1.5196146] with IG = 27.992722
Iter num: 32
Added advice frontier Point2D.Float[5.226149, 2.1315396]
Added advice frontier Point2D.Float[5.074854, 1.9200474]
Used Advice frontier: Point2D.Float[5.074854, 1.9200474] with IG = 171.38551
Iter num: 33
Added advice frontier Point2D.Float[4.9846387, 2.5731945]
Added advice frontier Point2D.Float[5.103624, 2.3575008]
Used Advice frontier: Point2D.Float[5.226149, 2.1315396] with IG = 384.56082
Iter num: 34
Added advice frontier Point2D.Float[5.10347, 0.7141457]
Used Advice frontier: Point2D.Float[5.103624, 2.3575008] with IG = 389.0406
Iter num: 35
Used Advice frontier: Point2D.Float[4.9846387, 2.5731945] with IG = 405.9502
Iter num: 36
Used Advice frontier: Point2D.Float[5.10347, 0.7141457] with IG = 47.913437
Iter num: 37
Added advice frontier Point2D.Float[4.892116, 0.40685606]
Added advice frontier Point2D.Float[4.8530226, 0.60954845]
Used Advice frontier: Point2D.Float[4.8530226, 0.60954845] with IG = 368.44363
Iter num: 38
Added advice frontier Point2D.Float[5.5316615, 0.38350198]
Added advice frontier Point2D.Float[5.36411, 0.3507092]
Used Advice frontier: Point2D.Float[4.892116, 0.40685606] with IG = 484.43048
Iter num: 39
Used Advice frontier: Point2D.Float[5.5316615, 0.38350198] with IG = 66.50886
Iter num: 40
Used Advice frontier: Point2D.Float[5.36411, 0.3507092] with IG = 585.7187
Iter num: 41
Used frontier: Point2D.Float[5.7381744, 1.3948666] with IG = 11.553318
Iter num: 42
Used frontier: Point2D.Float[4.8541636, 2.5654747] with IG = 4.400716
Iter num: 43
Used frontier: Point2D.Float[5.775352, 2.8019829] with IG = 7.594156
Exploration complete
Iter num: 44
Iter num: 45
Iter num: 46
Iter num: 47
Iter num: 48
Iter num: 49
Iter num: 50
Iter num: 51
Iter num: 52
Iter num: 53
Iter num: 54
Iter num: 55

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0135478973388672, 1.4955850839614868) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0086232423782349, 0.5617481470108032) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8113319277763367, 0.5580024719238281) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6282596588134766, 0.5223391056060791) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3465713262557983, 0.3741576075553894) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3017792701721191, 0.1989399641752243) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1730341911315918, 0.8462288975715637) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1630865335464478, 1.5244160890579224) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0620534420013428, 2.3837637901306152) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.588027000427246, 2.791638135910034) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.8945738077163696, 2.4580533504486084) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3486509323120117, 2.5007212162017822) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0984026193618774, 2.5165836811065674) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5856296420097351, 2.516456365585327) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.35245850682258606, 2.635995626449585) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.2164756953716278, 2.744704484939575) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5663657784461975, 2.4594480991363525) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.051000714302063, 2.050546407699585) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4117850065231323, 1.8061940670013428) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6189805269241333, 1.670734167098999) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9739967584609985, 1.4470614194869995) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.382896661758423, 1.4658942222595215) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5675013065338135, 1.7001203298568726) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8935301303863525, 1.9768424034118652) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8811230659484863, 2.015130043029785) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9268617630004883, 1.9760565757751465) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8811230659484863, 2.015130043029785) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5889265537261963, 2.5383706092834473) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.399204969406128, 2.6353912353515625) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.657597064971924, 2.4572865962982178) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.965040683746338, 2.2776260375976562) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.373016119003296, 2.5446903705596924) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.52848482131958, 2.776207447052002) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.414306163787842, 2.872570276260376) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.2640726566314697, 2.846428394317627) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.9100403785705566, 2.903440237045288) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2640726566314697, 2.846428394317627) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.373016119003296, 2.5446903705596924) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.192905902862549, 2.281033754348755) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1050307750701904, 1.9078949689865112) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0403852462768555, 1.5226584672927856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.008096933364868, 1.0189048051834106) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0896549224853516, 0.9596002697944641) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.128321886062622, 0.6932116746902466) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.424697160720825, 0.38479194045066833) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.799243688583374, 0.4547635614871979) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5192747116088867, 0.5921045541763306) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.128321886062622, 0.6932116746902466) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8388257026672363, 0.3638775050640106) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7617900371551514, 0.40857917070388794) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.390228271484375, 0.47510600090026855) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4242334365844727, 0.21765395998954773) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7617900371551514, 0.40857917070388794) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.84619402885437, 0.4145877957344055) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.128321886062622, 0.6932116746902466) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.153367757797241, 0.9918504357337952) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2335755825042725, 1.184367060661316) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.431586742401123, 1.2782199382781982) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8150763511657715, 1.4664640426635742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.38808536529541, 1.551634669303894) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.664297103881836, 1.519614577293396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.854397773742676, 1.779652714729309) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.074853897094727, 1.920047402381897) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.226149082183838, 2.1315395832061768) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.103623867034912, 2.3575007915496826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.984638690948486, 2.5731945037841797) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.974949836730957, 2.1882314682006836) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.930160999298096, 1.9385719299316406) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.854397773742676, 1.779652714729309) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.767794609069824, 1.5641562938690186) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.008610725402832, 1.3660460710525513) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1435322761535645, 1.282016396522522) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1034698486328125, 0.7141457200050354) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.853022575378418, 0.6095484495162964) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.892116069793701, 0.40685606002807617) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.1034698486328125, 0.7141457200050354) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.850301265716553, 0.3961564004421234) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.531661510467529, 0.38350197672843933) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.364109992980957, 0.3507091999053955) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0926127433776855, 0.36322838068008423) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.050080299377441, 0.6212490200996399) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.025538444519043, 0.8288919925689697) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1973443031311035, 1.1052439212799072) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.5670857429504395, 1.161555290222168) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.7381744384765625, 1.3948665857315063) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.563440799713135, 1.6002148389816284) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.2756147384643555, 1.7493399381637573) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.12442684173584, 1.895689606666565) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.045570373535156, 2.241987943649292) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.053987503051758, 2.4337382316589355) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.854163646697998, 2.56547474861145) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.177537441253662, 2.477363109588623) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.25132417678833, 2.4413115978240967) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,b,t,19]  [r4,t,19]  [r4,b,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,t,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  


Remaining path: 
[r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 55
Total sampled points = 31642
RRG size = 2751

Movement Length = 32.787167
Remaining path Length = 1.8558095
Total path Length = 34.642975

Advice samples: [16, 8, 6, 1, 1, 0, 0, 0, 0, 0] (32)

Total time taken (in ms):12377.83071

Initialization time (in ms):651.789213
Sampling time (in ms):9176.31901
Advice time (in ms):12.011596
Path checking time (in ms):1639.261979
Learning time (in ms):232.802907
Exploration time (in ms):0.0
Time taken other than these things (in ms):665.646005
Moving time (in ms):536.8709



