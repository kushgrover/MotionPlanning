Parameters values: 
Environment: results/environments/env31/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.4597964552400668,0.03968223693304074), (1.759796455240067,0.03968223693304074), (1.759796455240067,0.5396822369330407), (1.4597964552400668,0.5396822369330407)]
[(1.4785456869608866,2.45348726806675), (1.7785456869608867,2.45348726806675), (1.7785456869608867,2.95348726806675), (1.4785456869608866,2.95348726806675)]
[(2.2211443289312744,0.0141026328275643), (2.5211443289312743,0.0141026328275643), (2.5211443289312743,0.5141026328275643), (2.2211443289312744,0.5141026328275643)]
[(2.33173586505936,2.471798202440957), (2.6317358650593596,2.471798202440957), (2.6317358650593596,2.971798202440957), (2.33173586505936,2.971798202440957)]
[(5.400878625719108,0.01914776140940615), (5.700878625719108,0.01914776140940615), (5.700878625719108,0.5191477614094061), (5.400878625719108,0.5191477614094061)]
[(4.880966814058294,2.4847578357123674), (5.380966814058294,2.4847578357123674), (5.380966814058294,2.7847578357123672), (4.880966814058294,2.7847578357123672)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.68894315,y=0.04770875,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.68894315,y=0.04770875,w=0.34787297,h=2.6264355]  java.awt.geom.Rectangle2D$Float[x=0.68894315,y=0.0422863,w=2.2094827,h=2.6318579]  java.awt.geom.Rectangle2D$Float[x=0.68894315,y=0.0422863,w=2.2094827,h=2.6318579]  java.awt.geom.Rectangle2D$Float[x=0.68894315,y=0.027907345,w=4.5188026,h=2.646237]  java.awt.geom.Rectangle2D$Float[x=0.68894315,y=0.027907345,w=4.5188026,h=2.6663632]  
t: java.awt.geom.Rectangle2D$Float[x=1.3597964,y=0.0,w=0.5,h=0.63968223]  java.awt.geom.Rectangle2D$Float[x=1.3597964,y=0.0,w=0.51874924,h=3.0534873]  java.awt.geom.Rectangle2D$Float[x=1.3597964,y=0.0,w=1.2613479,h=3.0534873]  java.awt.geom.Rectangle2D$Float[x=1.3597964,y=0.0,w=1.3719395,h=3.071798]  java.awt.geom.Rectangle2D$Float[x=1.3597964,y=0.0,w=4.441082,h=3.071798]  java.awt.geom.Rectangle2D$Float[x=1.3597964,y=0.0,w=4.441082,h=3.071798]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.95579207, 1.2843846] with IG = 36.259136
Iter num: 2
Used frontier: Point2D.Float[1.1758919, 0.4001553] with IG = 58.164356
Iter num: 3
Added advice frontier Point2D.Float[0.80739325, 0.10998119]
Added advice frontier Point2D.Float[1.3681761, 0.12543134]
Added advice frontier Point2D.Float[1.0948503, 0.07353233]
Used Advice frontier: Point2D.Float[1.3681761, 0.12543134] with IG = 298.21335
Iter num: 4
Used Advice frontier: Point2D.Float[1.0948503, 0.07353233] with IG = 359.44144
Iter num: 5
Used Advice frontier: Point2D.Float[0.80739325, 0.10998119] with IG = 345.1148
Iter num: 6
Used frontier: Point2D.Float[0.3705306, 0.5802716] with IG = 20.252708
Iter num: 7
Used frontier: Point2D.Float[1.8083382, 1.5801097] with IG = 14.273578
Iter num: 8
Used frontier: Point2D.Float[2.6993155, 1.6465005] with IG = 26.635548
Iter num: 9
Added advice frontier Point2D.Float[3.164349, 0.9858408]
Added advice frontier Point2D.Float[3.0802252, 2.0071032]
Added advice frontier Point2D.Float[3.2116776, 1.3778368]
Used Advice frontier: Point2D.Float[3.0802252, 2.0071032] with IG = 190.64867
Iter num: 10
Added advice frontier Point2D.Float[2.4434323, 2.4221182]
Added advice frontier Point2D.Float[2.2301126, 2.3878138]
Added advice frontier Point2D.Float[2.8683698, 2.5831954]
Added advice frontier Point2D.Float[2.6616032, 2.7114317]
Added advice frontier Point2D.Float[2.7022634, 2.5498986]
Added advice frontier Point2D.Float[2.6413429, 2.3787274]
Used Advice frontier: Point2D.Float[2.6413429, 2.3787274] with IG = 173.88747
Iter num: 11
Used Advice frontier: Point2D.Float[2.7022634, 2.5498986] with IG = 550.3912
Iter num: 12
Used Advice frontier: Point2D.Float[2.6616032, 2.7114317] with IG = 600.34143
Iter num: 13
Used Advice frontier: Point2D.Float[2.8683698, 2.5831954] with IG = 411.00797
Iter num: 14
Used Advice frontier: Point2D.Float[2.4434323, 2.4221182] with IG = 196.79576
Iter num: 15
Used Advice frontier: Point2D.Float[2.2301126, 2.3878138] with IG = 462.83344
Iter num: 16
Used Advice frontier: Point2D.Float[3.2116776, 1.3778368] with IG = 63.455364
Iter num: 17
Used Advice frontier: Point2D.Float[3.164349, 0.9858408] with IG = 253.26532
Iter num: 18
Added advice frontier Point2D.Float[2.6193402, 0.551198]
Added advice frontier Point2D.Float[2.7017298, 0.30878443]
Added advice frontier Point2D.Float[2.7977183, 0.18768868]
Added advice frontier Point2D.Float[3.096728, 0.17185268]
Used Advice frontier: Point2D.Float[2.6193402, 0.551198] with IG = 143.28801
Iter num: 19
Used Advice frontier: Point2D.Float[2.7017298, 0.30878443] with IG = 390.57614
Iter num: 20
Used Advice frontier: Point2D.Float[2.7977183, 0.18768868] with IG = 647.1445
Iter num: 21
Used Advice frontier: Point2D.Float[3.096728, 0.17185268] with IG = 333.96915
Iter num: 22
Used frontier: Point2D.Float[3.5149813, 0.6751238] with IG = 18.268023
Iter num: 23
Used frontier: Point2D.Float[4.1076493, 1.4883423] with IG = 13.639497
Iter num: 24
Used frontier: Point2D.Float[5.074895, 1.4313837] with IG = 32.306175
Iter num: 25
Added advice frontier Point2D.Float[5.044561, 0.9974983]
Added advice frontier Point2D.Float[4.994476, 1.0549866]
Added advice frontier Point2D.Float[5.186367, 2.2620163]
Added advice frontier Point2D.Float[5.1746974, 1.9115907]
Used Advice frontier: Point2D.Float[4.994476, 1.0549866] with IG = 259.813
Iter num: 26
Added advice frontier Point2D.Float[5.330878, 0.26329157]
Added advice frontier Point2D.Float[4.9208255, 0.19993046]
Used Advice frontier: Point2D.Float[5.044561, 0.9974983] with IG = 1311.5479
Iter num: 27
Added advice frontier Point2D.Float[5.0372787, 0.07984004]
Added advice frontier Point2D.Float[4.982762, 0.06943388]
Used Advice frontier: Point2D.Float[4.9208255, 0.19993046] with IG = 119.94705
Iter num: 28
Added advice frontier Point2D.Float[5.201908, 2.3901389]
Used Advice frontier: Point2D.Float[4.982762, 0.06943388] with IG = 692.2865
Iter num: 29
Used Advice frontier: Point2D.Float[5.0372787, 0.07984004] with IG = 1801.7671
Iter num: 30
Used Advice frontier: Point2D.Float[5.330878, 0.26329157] with IG = 288.8498
Iter num: 31
Used Advice frontier: Point2D.Float[5.1746974, 1.9115907] with IG = 55.610424
Iter num: 32
Used Advice frontier: Point2D.Float[5.186367, 2.2620163] with IG = 285.20917
Iter num: 33
Added advice frontier Point2D.Float[4.358985, 2.6002808]
Added advice frontier Point2D.Float[4.528093, 2.371067]
Used Advice frontier: Point2D.Float[5.201908, 2.3901389] with IG = 774.8233
Iter num: 34
Used Advice frontier: Point2D.Float[4.528093, 2.371067] with IG = 130.52928
Iter num: 35
Used Advice frontier: Point2D.Float[4.358985, 2.6002808] with IG = 351.0687
Iter num: 36
Used frontier: Point2D.Float[4.5630965, 0.71657896] with IG = 5.4423056
Iter num: 37
Used frontier: Point2D.Float[3.8393748, 2.7261593] with IG = 4.187864
Iter num: 38
Used frontier: Point2D.Float[0.9470971, 2.1769915] with IG = 5.8112373
Iter num: 39
Added advice frontier Point2D.Float[0.9018856, 2.6035166]
Added advice frontier Point2D.Float[0.6134557, 2.4714065]
Added advice frontier Point2D.Float[1.3880253, 2.948379]
Used Advice frontier: Point2D.Float[0.6134557, 2.4714065] with IG = 224.61378

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9557920694351196, 1.2843846082687378) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1758918762207031, 0.40015530586242676) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3681761026382446, 0.1254313439130783) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0948503017425537, 0.07353232800960541) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8073932528495789, 0.10998118668794632) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.3705306053161621, 0.5802716016769409) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0427510738372803, 1.063637137413025) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6569660902023315, 1.4806501865386963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8083381652832031, 1.580109715461731) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1820485591888428, 1.5502328872680664) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6993155479431152, 1.6465004682540894) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0802252292633057, 2.007103204727173) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.641342878341675, 2.378727436065674) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.702263355255127, 2.549898624420166) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.6616032123565674, 2.7114317417144775) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8683698177337646, 2.583195447921753) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.641342878341675, 2.378727436065674) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.443432331085205, 2.4221181869506836) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.2301125526428223, 2.3878138065338135) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.443432331085205, 2.4221181869506836) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.892263650894165, 2.1379616260528564) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.932049036026001, 2.096569299697876) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.129863739013672, 1.5919106006622314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2116775512695312, 1.37783682346344) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.16434907913208, 0.9858407974243164) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8860294818878174, 0.7851709723472595) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.619340181350708, 0.5511980056762695) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7017297744750977, 0.3087844252586365) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7977182865142822, 0.1876886785030365) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.0967280864715576, 0.17185267806053162) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2124485969543457, 0.35312899947166443) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.514981269836426, 0.6751238107681274) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1482386589050293, 0.960961103439331) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.364051580429077, 1.3779789209365845) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.666693687438965, 1.4212074279785156) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.107649326324463, 1.48834228515625) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.09970760345459, 1.4572521448135376) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.5783467292785645, 1.263759732246399) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.761984825134277, 1.2719043493270874) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.074894905090332, 1.431383728981018) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.994475841522217, 1.054986596107483) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.04456090927124, 0.9974982738494873) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.898595333099365, 0.6521188616752625) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.8751606941223145, 0.3858313262462616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.920825481414795, 0.19993045926094055) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.982761859893799, 0.06943388283252716) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.037278652191162, 0.0798400416970253) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.330877780914307, 0.2632915675640106) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.353376388549805, 0.5105491280555725) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.086670398712158, 0.8286738991737366) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.04456090927124, 0.9974982738494873) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.170770168304443, 1.3093147277832031) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.253897190093994, 1.6717479228973389) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.174697399139404, 1.9115906953811646) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.186367034912109, 2.2620162963867188) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.201908111572266, 2.390138864517212) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.959036827087402, 2.329620122909546) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.584381103515625, 2.250647783279419) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.528092861175537, 2.3710670471191406) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.35898494720459, 2.60028076171875) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.528092861175537, 2.3710670471191406) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.799032211303711, 2.1199100017547607) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.870090484619141, 1.7412601709365845) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.928249359130859, 1.4186747074127197) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.928030014038086, 1.200815200805664) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.775694847106934, 0.8928355574607849) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.563096523284912, 0.7165789604187012) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.775694847106934, 0.8928355574607849) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.928030014038086, 1.200815200805664) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.6515607833862305, 1.3342331647872925) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.392910480499268, 1.4117134809494019) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.107649326324463, 1.48834228515625) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6462221145629883, 1.7009425163269043) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4317827224731445, 1.7877388000488281) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2118945121765137, 1.890249252319336) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.177243709564209, 2.008748769760132) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1998836994171143, 2.0741794109344482) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.409499168395996, 2.315610885620117) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.613980770111084, 2.532381057739258) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.8393747806549072, 2.7261593341827393) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.613980770111084, 2.532381057739258) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2813432216644287, 2.2947113513946533) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.963911771774292, 2.009995698928833) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7158331871032715, 1.9165091514587402) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.508472204208374, 1.922379493713379) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.117717742919922, 1.9290579557418823) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.696230173110962, 1.919070839881897) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5122864246368408, 1.9234137535095215) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2043430805206299, 1.9249458312988281) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.94709712266922, 2.1769914627075195) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r4,12]  [r4,t,12]  [r4,b,t,41]  [r4,t,41]  [r4,b,41]  [r4,t,41]  [r4,41]  [r4,t,41]  [r4,41]  [h,41]  [r3,41]  [r3,t,41]  [r3,41]  [r3,b,34]  [r3,34]  [h,34]  [r5,34]  [r5,b,47]  [r5,t,47]  [r5,47]  [h,47]  [r6,47]  [r6,t,47]  [r6,47]  [r6,b,37]  [r6,37]  [h,37]  [r5,37]  [h,37]  [r4,37]  [h,37]  [r2,37]  


Remaining path: 
[r2,37]  [r2,b,63]  [r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 39
Total sampled points = 21198
RRG size = 1951

Movement Length = 29.883345
Remaining path Length = 0.3172458
Total path Length = 30.20059

Advice samples: [10, 8, 3, 2, 2, 1, 1, 1, 0, 0] (28)

Total time taken (in ms):8163.41861

Initialization time (in ms):609.930742
Sampling time (in ms):6261.990555
Advice time (in ms):7.553525
Path checking time (in ms):638.012183
Learning time (in ms):179.58706
Exploration time (in ms):0.0
Time taken other than these things (in ms):466.344545
Moving time (in ms):738.1975



