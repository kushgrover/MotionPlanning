Parameters values: 
Environment: results/environments/env32/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.5475398324971722,0.1862257482975482), (1.047539832497172,0.1862257482975482), (1.047539832497172,0.48622574829754817), (0.5475398324971722,0.48622574829754817)]
[(0.0029883741527253925,2.53420841332515), (0.5029883741527253,2.53420841332515), (0.5029883741527253,2.83420841332515), (0.0029883741527253925,2.83420841332515)]
[(3.05610160664274,0.10796930555065609), (3.55610160664274,0.10796930555065609), (3.55610160664274,0.4079693055506561), (3.05610160664274,0.4079693055506561)]
[(3.0450914342350215,2.623360796549322), (3.5450914342350215,2.623360796549322), (3.5450914342350215,2.923360796549322), (3.0450914342350215,2.923360796549322)]
[(5.348736536630485,0.014332734992248299), (5.6487365366304845,0.014332734992248299), (5.6487365366304845,0.5143327349922483), (5.348736536630485,0.5143327349922483)]
[(4.209435194196274,2.6481388456059483), (4.709435194196274,2.6481388456059483), (4.709435194196274,2.948138845605948), (4.209435194196274,2.948138845605948)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.24693377,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.24693377,w=0.22016501,h=2.4949033]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.1711807,w=1.1581243,h=2.5706563]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.1711807,w=1.1847764,h=2.634231]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.0046474733,w=3.8434415,h=2.8007643]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.0046474733,w=4.239521,h=2.8007643]  
t: java.awt.geom.Rectangle2D$Float[x=0.44753984,y=0.08622575,w=0.70000005,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.08622575,w=1.1475399,h=2.8479826]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.007969306,w=3.6561017,h=2.926239]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.007969306,w=3.6561017,h=3.0153913]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.7487364,h=3.0233607]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.7487364,h=3.0481389]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.99618083, 1.5132897] with IG = 35.703156
Iter num: 2
Used frontier: Point2D.Float[0.93455046, 2.39704] with IG = 39.508
Iter num: 3
Added advice frontier Point2D.Float[0.5889894, 2.7443032]
Added advice frontier Point2D.Float[1.1832575, 2.7138715]
Used Advice frontier: Point2D.Float[1.1832575, 2.7138715] with IG = 248.27014
Iter num: 4
Used Advice frontier: Point2D.Float[0.5889894, 2.7443032] with IG = 168.05402
Iter num: 5
Used frontier: Point2D.Float[0.98205525, 0.6260456] with IG = 14.786277
Iter num: 6
Added advice frontier Point2D.Float[1.3470367, 0.3731883]
Added advice frontier Point2D.Float[1.1712118, 0.04955003]
Used Advice frontier: Point2D.Float[1.3470367, 0.3731883] with IG = 225.2182
Iter num: 7
Used Advice frontier: Point2D.Float[1.1712118, 0.04955003] with IG = 271.50656
Iter num: 8
Used frontier: Point2D.Float[0.73870933, 0.5315169] with IG = 16.509249
Iter num: 9
Used frontier: Point2D.Float[1.8934683, 1.426855] with IG = 14.749474
Iter num: 10
Used frontier: Point2D.Float[2.5434854, 1.4695325] with IG = 35.307663
Iter num: 11
Added advice frontier Point2D.Float[2.9224124, 2.1591108]
Added advice frontier Point2D.Float[3.1771157, 0.810862]
Added advice frontier Point2D.Float[2.8214452, 1.0245321]
Used Advice frontier: Point2D.Float[2.8214452, 1.0245321] with IG = 190.59308
Iter num: 12
Added advice frontier Point2D.Float[2.9588134, 0.32573745]
Used Advice frontier: Point2D.Float[3.1771157, 0.810862] with IG = 241.01187
Iter num: 13
Used Advice frontier: Point2D.Float[2.9588134, 0.32573745] with IG = 187.97734
Iter num: 14
Used Advice frontier: Point2D.Float[2.9224124, 2.1591108] with IG = 54.092285
Iter num: 15
Added advice frontier Point2D.Float[3.3562706, 2.593574]
Added advice frontier Point2D.Float[3.7779756, 2.3360734]
Used Advice frontier: Point2D.Float[3.3562706, 2.593574] with IG = 155.42787
Iter num: 16
Used Advice frontier: Point2D.Float[3.7779756, 2.3360734] with IG = 202.38533
Iter num: 17
Added advice frontier Point2D.Float[2.2584887, 0.29437762]
Added advice frontier Point2D.Float[2.0947978, 0.34661943]
Used Advice frontier: Point2D.Float[2.2584887, 0.29437762] with IG = 31.477665
Iter num: 18
Added advice frontier Point2D.Float[2.2424378, 2.7300706]
Used Advice frontier: Point2D.Float[2.0947978, 0.34661943] with IG = 581.98694
Iter num: 19
Used Advice frontier: Point2D.Float[2.2424378, 2.7300706] with IG = 32.388783
Iter num: 20
Used frontier: Point2D.Float[3.634078, 1.4503458] with IG = 16.879498
Iter num: 21
Used frontier: Point2D.Float[4.391737, 1.791173] with IG = 26.477566
Iter num: 22
Used frontier: Point2D.Float[4.6695986, 1.8861538] with IG = 51.08178
Iter num: 23
Added advice frontier Point2D.Float[5.182515, 2.0512607]
Added advice frontier Point2D.Float[5.266344, 1.5433593]
Used Advice frontier: Point2D.Float[5.182515, 2.0512607] with IG = 185.5854
Iter num: 24
Added advice frontier Point2D.Float[4.735314, 2.6283236]
Added advice frontier Point2D.Float[5.3645425, 2.6338143]
Added advice frontier Point2D.Float[5.812162, 2.415932]
Added advice frontier Point2D.Float[4.5424514, 2.359161]
Used Advice frontier: Point2D.Float[5.266344, 1.5433593] with IG = 194.26042
Iter num: 25
Added advice frontier Point2D.Float[5.142736, 0.83528316]
Used Advice frontier: Point2D.Float[5.142736, 0.83528316] with IG = 107.67167
Iter num: 26
Added advice frontier Point2D.Float[5.3020706, 0.28717744]
Added advice frontier Point2D.Float[4.8152757, 0.13861643]
Added advice frontier Point2D.Float[4.5311317, 0.15328205]
Used Advice frontier: Point2D.Float[5.3020706, 0.28717744] with IG = 175.02951

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9961808323860168, 1.5132896900177002) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9345504641532898, 2.3970398902893066) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1832574605941772, 2.713871479034424) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5889893770217896, 2.7443032264709473) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7624872922897339, 2.2478153705596924) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8544915318489075, 1.812235951423645) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9397653937339783, 1.0500857830047607) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9820552468299866, 0.6260455846786499) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3470367193222046, 0.3731882870197296) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.171211838722229, 0.04955003038048744) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0392485857009888, 0.5773040652275085) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7387093305587769, 0.5315169095993042) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2701574563980103, 1.1325042247772217) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8934682607650757, 1.4268549680709839) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.543485403060913, 1.4695324897766113) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8214452266693115, 1.0245320796966553) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1771156787872314, 0.8108620047569275) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.958813428878784, 0.32573744654655457) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.0026862621307373, 0.5311121344566345) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.020282030105591, 1.0677406787872314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.035972833633423, 1.491746425628662) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0126900672912598, 1.7013628482818604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.922412395477295, 2.1591107845306396) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.980844020843506, 2.1466946601867676) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3562705516815186, 2.593574047088623) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.777975559234619, 2.336073398590088) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3562705516815186, 2.593574047088623) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.082202196121216, 2.1547584533691406) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0578839778900146, 1.8557926416397095) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.042231559753418, 1.5831962823867798) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0539937019348145, 1.1880146265029907) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7094907760620117, 0.7925459742546082) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6013903617858887, 0.6553642153739929) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.258488655090332, 0.2943776249885559) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.0947978496551514, 0.3466194272041321) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3780460357666016, 0.4863215386867523) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7094907760620117, 0.7925459742546082) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9422314167022705, 0.9837844967842102) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.960466146469116, 1.398659586906433) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.926682472229004, 1.7604259252548218) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.86928129196167, 2.104288101196289) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.670149087905884, 2.3279786109924316) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.420407772064209, 2.6153018474578857) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.2424378395080566, 2.7300705909729004) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.420407772064209, 2.6153018474578857) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7337963581085205, 2.2789688110351562) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.877610683441162, 2.1447196006774902) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.20833683013916, 1.8469982147216797) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5871620178222656, 1.5070246458053589) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.634078025817871, 1.450345754623413) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.931840658187866, 1.5772926807403564) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.39173698425293, 1.791172981262207) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.669598579406738, 1.8861538171768188) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1825151443481445, 2.0512607097625732) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.26634407043457, 1.5433592796325684) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.012834072113037, 1.485594391822815) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.051630020141602, 1.0771139860153198) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.142735958099365, 0.8352831602096558) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,b,22]  [r1,22]  [r1,t,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,t,22]  [r4,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [h,35]  [r5,35]  [r5,t,35]  


Remaining path: 
[r5,t,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 26
Total sampled points = 15513
RRG size = 1301

Movement Length = 25.215464
Remaining path Length = 4.2121167
Total path Length = 29.42758

Advice samples: [11, 3, 1, 0, 2, 0, 0, 0, 0, 0] (17)

Total time taken (in ms):5017.683345

Initialization time (in ms):597.449794
Sampling time (in ms):3513.178311
Advice time (in ms):6.912558
Path checking time (in ms):319.17314
Learning time (in ms):157.379393
Exploration time (in ms):0.0
Time taken other than these things (in ms):423.590149
Moving time (in ms):738.1975



