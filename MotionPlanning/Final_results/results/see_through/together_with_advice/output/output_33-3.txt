Parameters values: 
Environment: results/environments/env33/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.41541000531217837,0.012090418308744083), (0.7154100053121784,0.012090418308744083), (0.7154100053121784,0.5120904183087441), (0.41541000531217837,0.5120904183087441)]
[(1.0207303132730805,2.4673686407509896), (1.5207303132730805,2.4673686407509896), (1.5207303132730805,2.7673686407509894), (1.0207303132730805,2.7673686407509894)]
[(2.324895791478429,0.004042033220844863), (2.624895791478429,0.004042033220844863), (2.624895791478429,0.5040420332208448), (2.324895791478429,0.5040420332208448)]
[(3.05246530434071,2.530102650960093), (3.55246530434071,2.530102650960093), (3.55246530434071,2.8301026509600926), (3.05246530434071,2.8301026509600926)]
[(4.264401235925034,0.06597184828264442), (4.764401235925034,0.06597184828264442), (4.764401235925034,0.3659718482826444), (4.264401235925034,0.3659718482826444)]
[(5.210951631841709,2.5899503858929935), (5.710951631841709,2.5899503858929935), (5.710951631841709,2.8899503858929934), (5.210951631841709,2.8899503858929934)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0419228,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0419228,w=0.58311725,h=2.6710844]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0052986294,w=3.5454452,h=2.7077086]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0052986294,w=3.5454452,h=2.7077086]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0052986294,w=5.108672,h=2.7077086]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0052986294,w=5.108672,h=2.8883526]  
t: java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=0.5,h=0.6120904]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=1.3053203,h=2.8673687]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=2.4094858,h=2.8673687]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=3.3370552,h=2.9301026]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=4.548991,h=2.9301026]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=5.4955416,h=2.9899504]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.90387523, 1.444837] with IG = 39.71378
Iter num: 2
Used frontier: Point2D.Float[1.056528, 0.52722144] with IG = 41.925278
Iter num: 3
Used frontier: Point2D.Float[0.56502515, 0.6069122] with IG = 48.200386
Iter num: 4
Added advice frontier Point2D.Float[0.16796249, 0.15726714]
Added advice frontier Point2D.Float[0.064438954, 0.019737894]
Added advice frontier Point2D.Float[0.34035358, 0.030561121]
Used Advice frontier: Point2D.Float[0.16796249, 0.15726714] with IG = 160.02036
Iter num: 5
Used Advice frontier: Point2D.Float[0.064438954, 0.019737894] with IG = 580.93
Iter num: 6
Used Advice frontier: Point2D.Float[0.34035358, 0.030561121] with IG = 362.1524
Iter num: 7
Used frontier: Point2D.Float[0.9985899, 2.3969285] with IG = 10.739756
Iter num: 8
Added advice frontier Point2D.Float[0.5048889, 2.528039]
Added advice frontier Point2D.Float[0.2094934, 2.4898276]
Used Advice frontier: Point2D.Float[0.5048889, 2.528039] with IG = 195.7661
Iter num: 9
Used Advice frontier: Point2D.Float[0.2094934, 2.4898276] with IG = 335.73193
Iter num: 10
Used frontier: Point2D.Float[1.9076456, 2.5233104] with IG = 13.821864
Iter num: 11
Used frontier: Point2D.Float[1.8141376, 1.500896] with IG = 12.939398
Iter num: 12
Used frontier: Point2D.Float[2.5894191, 1.4740074] with IG = 29.063755
Iter num: 13
Added advice frontier Point2D.Float[3.1050422, 2.0589333]
Added advice frontier Point2D.Float[3.1169436, 1.9476004]
Added advice frontier Point2D.Float[3.0477896, 0.9305986]
Added advice frontier Point2D.Float[3.002734, 1.1389103]
Used Advice frontier: Point2D.Float[3.002734, 1.1389103] with IG = 187.93832
Iter num: 14
Added advice frontier Point2D.Float[2.438241, 0.5354249]
Used Advice frontier: Point2D.Float[3.0477896, 0.9305986] with IG = 469.20044
Iter num: 15
Used Advice frontier: Point2D.Float[2.438241, 0.5354249] with IG = 137.3794
Iter num: 16
Added advice frontier Point2D.Float[3.5608692, 0.20121416]
Added advice frontier Point2D.Float[3.3883111, 0.22809762]
Used Advice frontier: Point2D.Float[3.3883111, 0.22809762] with IG = 97.66211
Iter num: 17
Used Advice frontier: Point2D.Float[3.5608692, 0.20121416] with IG = 572.60767
Iter num: 18
Used Advice frontier: Point2D.Float[3.1169436, 1.9476004] with IG = 53.472855
Iter num: 19
Added advice frontier Point2D.Float[3.4181793, 2.447297]
Used Advice frontier: Point2D.Float[3.1050422, 2.0589333] with IG = 893.11865
Iter num: 20
Used Advice frontier: Point2D.Float[3.4181793, 2.447297] with IG = 200.44899
Iter num: 21
Used frontier: Point2D.Float[2.6243494, 2.5542996] with IG = 23.810038
Iter num: 22
Added advice frontier Point2D.Float[2.3229246, 2.649203]
Used Advice frontier: Point2D.Float[2.3229246, 2.649203] with IG = 316.44373
Iter num: 23
Used frontier: Point2D.Float[3.802992, 1.4979814] with IG = 12.220049
Iter num: 24
Used frontier: Point2D.Float[4.309614, 1.5910734] with IG = 14.518418
Iter num: 25
Used frontier: Point2D.Float[5.1532874, 1.3247983] with IG = 37.882515
Iter num: 26
Added advice frontier Point2D.Float[5.047932, 0.65655625]
Added advice frontier Point2D.Float[4.999732, 2.0441577]
Added advice frontier Point2D.Float[4.90932, 1.9849464]
Used Advice frontier: Point2D.Float[5.047932, 0.65655625] with IG = 147.82048
Iter num: 27
Added advice frontier Point2D.Float[5.062243, 0.17934209]
Added advice frontier Point2D.Float[5.7120194, 0.06951499]
Added advice frontier Point2D.Float[4.45581, 0.39484966]
Added advice frontier Point2D.Float[4.6434813, 0.70598614]
Used Advice frontier: Point2D.Float[4.6434813, 0.70598614] with IG = 245.42271
Iter num: 28
Used Advice frontier: Point2D.Float[4.45581, 0.39484966] with IG = 275.21344
Iter num: 29
Used Advice frontier: Point2D.Float[5.062243, 0.17934209] with IG = 112.26933
Iter num: 30
Added advice frontier Point2D.Float[4.8421874, 0.28890517]
Used Advice frontier: Point2D.Float[4.8421874, 0.28890517] with IG = 406.7982
Iter num: 31
Used Advice frontier: Point2D.Float[5.7120194, 0.06951499] with IG = 110.519844
Iter num: 32
Used Advice frontier: Point2D.Float[4.90932, 1.9849464] with IG = 42.381348
Iter num: 33
Added advice frontier Point2D.Float[5.1114793, 2.7213767]
Added advice frontier Point2D.Float[4.913846, 2.658198]
Used Advice frontier: Point2D.Float[4.999732, 2.0441577] with IG = 925.278
Iter num: 34
Used Advice frontier: Point2D.Float[4.913846, 2.658198] with IG = 145.80533
Iter num: 35
Used Advice frontier: Point2D.Float[5.1114793, 2.7213767] with IG = 481.96027
Iter num: 36
Added advice frontier Point2D.Float[4.284972, 2.704163]
Added advice frontier Point2D.Float[4.1386585, 2.6364014]
Used Advice frontier: Point2D.Float[4.284972, 2.704163] with IG = 117.5833

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9038752317428589, 1.444836974143982) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0565279722213745, 0.5272214412689209) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5650251507759094, 0.6069121956825256) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3173162043094635, 0.4583127796649933) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.16796249151229858, 0.15726713836193085) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.06443895399570465, 0.01973789371550083) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3403535783290863, 0.030561121180653572) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3173162043094635, 0.4583127796649933) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5650251507759094, 0.6069121956825256) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8643742203712463, 1.0407133102416992) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9038752317428589, 1.444836974143982) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9985898733139038, 2.396928548812866) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5048888921737671, 2.52803897857666) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.20949339866638184, 2.4898276329040527) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7954162955284119, 2.442944288253784) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.162297010421753, 2.4027621746063232) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.5344624519348145, 2.364879608154297) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.907645583152771, 2.523310422897339) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3916767835617065, 2.2748141288757324) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1824345588684082, 2.0978434085845947) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.185312032699585, 2.0034825801849365) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2191473245620728, 1.874497652053833) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3785597085952759, 1.7876358032226562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.814137578010559, 1.5008959770202637) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1024131774902344, 1.5665149688720703) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.58941912651062, 1.4740073680877686) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0027339458465576, 1.1389102935791016) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0477895736694336, 0.9305986166000366) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.754930019378662, 0.768232524394989) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4382410049438477, 0.5354248881340027) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.9486420154571533, 0.48942363262176514) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3883111476898193, 0.22809761762619019) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5608692169189453, 0.20121416449546814) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.432666778564453, 0.43968620896339417) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2180404663085938, 0.8094742894172668) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.065277338027954, 1.1603058576583862) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.086116075515747, 1.3695118427276611) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.116943597793579, 1.9476003646850586) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1050422191619873, 2.0589332580566406) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4181792736053467, 2.4472970962524414) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.318835496902466, 2.250871181488037) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0370898246765137, 2.124664068222046) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7288453578948975, 2.2633838653564453) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.624349355697632, 2.5542995929718018) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.3229246139526367, 2.649203062057495) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.517524003982544, 2.4307024478912354) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7288453578948975, 2.2633838653564453) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1128625869750977, 1.963096261024475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3512349128723145, 1.8107149600982666) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6492204666137695, 1.6124534606933594) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.802992105484009, 1.4979814291000366) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7409098148345947, 1.9492876529693604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.55029296875, 1.8930867910385132) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.309614181518555, 1.5910733938217163) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.343669891357422, 1.1870530843734741) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.412999629974365, 1.097159743309021) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.153287410736084, 1.324798345565796) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.047932147979736, 0.656556248664856) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.643481254577637, 0.7059861421585083) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.455810070037842, 0.39484965801239014) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.047126770019531, 0.4731857180595398) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0622429847717285, 0.1793420910835266) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.842187404632568, 0.28890517354011536) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.0622429847717285, 0.1793420910835266) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.712019443511963, 0.06951498985290527) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.432661533355713, 0.04401036351919174) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.231780052185059, 0.31699955463409424) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.047932147979736, 0.656556248664856) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0473785400390625, 0.9025443196296692) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.949483394622803, 1.0858895778656006) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9402947425842285, 1.3643877506256104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.934336185455322, 1.6073598861694336) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.909319877624512, 1.984946370124817) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.99973201751709, 2.0441577434539795) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.973142147064209, 2.186157464981079) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.811494827270508, 2.498577117919922) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.913846015930176, 2.658198118209839) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.11147928237915, 2.721376657485962) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.913846015930176, 2.658198118209839) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [r1,t,12]  [h,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,t,21]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 21611
RRG size = 1801

Movement Length = 30.201574
Remaining path Length = 0.0
Total path Length = 30.201574

Advice samples: [12, 3, 5, 3, 1, 1, 0, 0, 0, 0] (25)

Total time taken (in ms):6930.985358

Initialization time (in ms):496.94442
Sampling time (in ms):5079.617621
Advice time (in ms):8.440302
Path checking time (in ms):670.455622
Learning time (in ms):162.185999
Exploration time (in ms):0.0
Time taken other than these things (in ms):513.341394
Moving time (in ms):738.1975



