Parameters values: 
Environment: results/environments/env40/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.4121669694970944,0.14273691763264815), (0.9121669694970944,0.14273691763264815), (0.9121669694970944,0.4427369176326481), (0.4121669694970944,0.4427369176326481)]
[(1.3941965059827683,2.488966172719022), (1.6941965059827684,2.488966172719022), (1.6941965059827684,2.988966172719022), (1.3941965059827683,2.988966172719022)]
[(3.3000987154188737,0.03164997059265434), (3.6000987154188735,0.03164997059265434), (3.6000987154188735,0.5316499705926543), (3.3000987154188737,0.5316499705926543)]
[(2.939281922801234,2.4904053184735413), (3.2392819228012337,2.4904053184735413), (3.2392819228012337,2.9904053184735413), (2.939281922801234,2.9904053184735413)]
[(5.2210419054036965,0.04365260136728314), (5.7210419054036965,0.04365260136728314), (5.7210419054036965,0.34365260136728315), (5.2210419054036965,0.34365260136728315)]
[(4.280880719126387,2.601740548899565), (4.780880719126387,2.601740548899565), (4.780880719126387,2.9017405488995647), (4.280880719126387,2.9017405488995647)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.3103716,y=0.0046652327,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=0.38463295,h=2.6612413]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=1.4331448,h=2.6612413]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=2.3220162,h=2.6700475]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=3.9767637,h=2.6700475]  java.awt.geom.Rectangle2D$Float[x=1.1257386,y=0.0046652327,w=4.510332,h=2.7211432]  
t: java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.042736918,w=0.70000005,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.042736918,w=1.4820296,h=3.0462291]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.0,w=3.3879318,h=3.0889661]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.0,w=3.3879318,h=3.0904052]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.0,w=5.508875,h=3.0904052]  java.awt.geom.Rectangle2D$Float[x=0.31216696,y=0.0,w=5.508875,h=3.0904052]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0203307, 1.5710816] with IG = 34.666866
Iter num: 2
Used frontier: Point2D.Float[0.9649555, 2.4183724] with IG = 47.10879
Iter num: 3
Added advice frontier Point2D.Float[1.2889785, 2.6047182]
Added advice frontier Point2D.Float[1.3399769, 2.5588243]
Added advice frontier Point2D.Float[1.0421215, 2.8204205]
Added advice frontier Point2D.Float[1.3006359, 2.6341677]
Used Advice frontier: Point2D.Float[1.2889785, 2.6047182] with IG = 267.53308
Iter num: 4
Used Advice frontier: Point2D.Float[1.3006359, 2.6341677] with IG = 3157.2812
Iter num: 5
Used Advice frontier: Point2D.Float[1.3399769, 2.5588243] with IG = 1176.5247
Iter num: 6
Used Advice frontier: Point2D.Float[1.0421215, 2.8204205] with IG = 252.25644
Iter num: 7
Used frontier: Point2D.Float[1.8990512, 1.4111012] with IG = 13.180646
Iter num: 8
Used frontier: Point2D.Float[2.5124152, 1.5142728] with IG = 35.370884
Iter num: 9
Added advice frontier Point2D.Float[3.1304178, 2.009661]
Used Advice frontier: Point2D.Float[3.1304178, 2.009661] with IG = 126.24123
Iter num: 10
Added advice frontier Point2D.Float[3.3284857, 2.4768944]
Added advice frontier Point2D.Float[3.7393084, 2.664716]
Added advice frontier Point2D.Float[3.402666, 2.5209677]
Added advice frontier Point2D.Float[3.2427547, 2.8290877]
Added advice frontier Point2D.Float[3.5486352, 2.5286138]
Added advice frontier Point2D.Float[3.0294464, 0.86853486]
Used frontier: Point2D.Float[2.992996, 1.9607754] with IG = 281.09525
Iter num: 11
Used Advice frontier: Point2D.Float[3.3284857, 2.4768944] with IG = 162.44981
Iter num: 12
Used Advice frontier: Point2D.Float[3.402666, 2.5209677] with IG = 1158.9432
Iter num: 13
Used Advice frontier: Point2D.Float[3.5486352, 2.5286138] with IG = 684.1383
Iter num: 14
Used Advice frontier: Point2D.Float[3.7393084, 2.664716] with IG = 426.86716
Iter num: 15
Used Advice frontier: Point2D.Float[3.2427547, 2.8290877] with IG = 191.1855
Iter num: 16
Used Advice frontier: Point2D.Float[3.0294464, 0.86853486] with IG = 50.071663
Iter num: 17
Added advice frontier Point2D.Float[3.5197942, 0.5342066]
Added advice frontier Point2D.Float[3.3874452, 0.6374385]
Added advice frontier Point2D.Float[2.4271019, 0.16927381]
Added advice frontier Point2D.Float[2.2291932, 0.55620724]
Used Advice frontier: Point2D.Float[3.3874452, 0.6374385] with IG = 234.68184
Iter num: 18
Used Advice frontier: Point2D.Float[3.5197942, 0.5342066] with IG = 595.7758
Iter num: 19
Used Advice frontier: Point2D.Float[2.4271019, 0.16927381] with IG = 80.85064
Iter num: 20
Used Advice frontier: Point2D.Float[2.2291932, 0.55620724] with IG = 230.09167
Iter num: 21
Used frontier: Point2D.Float[3.8182273, 1.479962] with IG = 18.851212
Iter num: 22
Used frontier: Point2D.Float[4.651504, 1.4116604] with IG = 23.918686
Iter num: 23
Added advice frontier Point2D.Float[5.0446167, 2.142034]
Added advice frontier Point2D.Float[5.025241, 0.89675206]
Added advice frontier Point2D.Float[5.0523853, 1.8590527]
Added advice frontier Point2D.Float[4.818175, 1.0903007]
Used Advice frontier: Point2D.Float[4.818175, 1.0903007] with IG = 276.23547
Iter num: 24
Added advice frontier Point2D.Float[5.2916627, 0.3573371]
Added advice frontier Point2D.Float[5.468554, 0.609038]
Used Advice frontier: Point2D.Float[5.025241, 0.89675206] with IG = 352.81015
Iter num: 25
Added advice frontier Point2D.Float[4.973603, 0.3253139]
Added advice frontier Point2D.Float[4.6669455, 0.07907911]
Used Advice frontier: Point2D.Float[5.468554, 0.609038] with IG = 180.28137
Iter num: 26
Used Advice frontier: Point2D.Float[5.2916627, 0.3573371] with IG = 325.05264
Iter num: 27
Used Advice frontier: Point2D.Float[4.973603, 0.3253139] with IG = 312.82462
Iter num: 28
Used Advice frontier: Point2D.Float[4.6669455, 0.07907911] with IG = 254.27084
Iter num: 29
Used Advice frontier: Point2D.Float[5.0523853, 1.8590527] with IG = 53.961823
Iter num: 30
Added advice frontier Point2D.Float[5.440763, 2.6245801]
Added advice frontier Point2D.Float[5.2124743, 2.7988808]
Added advice frontier Point2D.Float[4.6996293, 2.525852]
Added advice frontier Point2D.Float[4.977581, 2.4458537]
Used Advice frontier: Point2D.Float[5.0446167, 2.142034] with IG = 353.24704
Iter num: 31
Used Advice frontier: Point2D.Float[4.977581, 2.4458537] with IG = 321.4119
Iter num: 32
Used Advice frontier: Point2D.Float[4.6996293, 2.525852] with IG = 345.73962
Iter num: 33
Used Advice frontier: Point2D.Float[5.2124743, 2.7988808] with IG = 157.40878
Iter num: 34
Used Advice frontier: Point2D.Float[5.440763, 2.6245801] with IG = 348.16284
Iter num: 35
Used frontier: Point2D.Float[5.88918, 1.3860488] with IG = 8.585132
Iter num: 36
Used frontier: Point2D.Float[2.1763391, 2.4290009] with IG = 8.233219
Iter num: 37
Used frontier: Point2D.Float[0.99653554, 0.6412245] with IG = 8.974754
Iter num: 38
Added advice frontier Point2D.Float[0.57165533, 0.46250063]
Added advice frontier Point2D.Float[0.38862497, 0.6294324]
Added advice frontier Point2D.Float[1.437115, 0.0068737715]
Added advice frontier Point2D.Float[1.5146123, 0.15600868]
Used Advice frontier: Point2D.Float[0.57165533, 0.46250063] with IG = 216.40869

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r3,60]  [r3,b,24]  [r3,24]  [h,24]  [r1,24]  [r1,b,56]  [r1,56]  [h,56]  [r4,b,t,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0203306674957275, 1.5710816383361816) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9649555087089539, 2.418372392654419) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2889784574508667, 2.6047182083129883) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3006359338760376, 2.6341676712036133) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.3399769067764282, 2.558824300765991) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0421215295791626, 2.820420503616333) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0266108512878418, 2.3332529067993164) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2744755744934082, 1.7755768299102783) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.433616280555725, 1.6803581714630127) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8990511894226074, 1.411101222038269) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5124151706695557, 1.5142728090286255) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7431232929229736, 1.6918985843658447) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.130417823791504, 2.0096609592437744) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9929959774017334, 1.960775375366211) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3284857273101807, 2.4768943786621094) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.4026660919189453, 2.520967721939087) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.548635244369507, 2.528613805770874) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.7393083572387695, 2.6647160053253174) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2427546977996826, 2.829087734222412) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2423253059387207, 2.1991384029388428) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.130417823791504, 2.0096609592437744) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.13041615486145, 1.7723191976547241) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.067302942276001, 1.3261877298355103) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0294463634490967, 0.8685348629951477) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3874452114105225, 0.6374384760856628) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.519794225692749, 0.5342066287994385) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.3874452114105225, 0.6374384760856628) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.050494909286499, 0.4590187072753906) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.893202543258667, 0.3953890800476074) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4271018505096436, 0.16927380859851837) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.2291932106018066, 0.5562072396278381) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.494877338409424, 0.7970847487449646) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9673514366149902, 0.9674944877624512) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2946953773498535, 1.2048479318618774) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8182272911071777, 1.4799619913101196) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.166594982147217, 1.7180205583572388) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.55539083480835, 1.5210579633712769) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.651504039764404, 1.4116604328155518) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.818174839019775, 1.0903006792068481) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.025240898132324, 0.8967520594596863) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.169523239135742, 0.8898939490318298) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.4685540199279785, 0.6090379953384399) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.291662693023682, 0.357337087392807) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.973602771759033, 0.32531389594078064) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.666945457458496, 0.07907910645008087) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.64184045791626, 0.35688039660453796) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.745552062988281, 0.7172813415527344) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.846008777618408, 1.0121675729751587) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.009737968444824, 1.339981198310852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.034916400909424, 1.5232418775558472) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.052385330200195, 1.8590526580810547) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.04461669921875, 2.1420340538024902) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.977581024169922, 2.4458537101745605) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.699629306793213, 2.5258519649505615) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.937565803527832, 2.512495756149292) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.212474346160889, 2.7988808155059814) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.440762996673584, 2.624580144882202) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.382857799530029, 2.3081185817718506) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.30686092376709, 2.2157201766967773) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.10107421875, 1.9534116983413696) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.399171352386475, 1.707829236984253) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.665985107421875, 1.5305708646774292) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.8891801834106445, 1.3860487937927246) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.526825428009033, 1.4569121599197388) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.197576999664307, 1.5165305137634277) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8456854820251465, 1.5631626844406128) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.608148574829102, 1.613481044769287) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.166594982147217, 1.7180205583572388) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7187681198120117, 1.805007815361023) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3533012866973877, 1.8676944971084595) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0527992248535156, 2.0241034030914307) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.625589370727539, 2.2290992736816406) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.1763391494750977, 2.4290008544921875) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.30438232421875, 2.3614771366119385) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6813526153564453, 2.15548038482666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.757772445678711, 2.1033084392547607) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.876112222671509, 1.973162293434143) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4651005268096924, 1.7361512184143066) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1102359294891357, 1.5495363473892212) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5367779731750488, 1.2494994401931763) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2148044109344482, 1.1058624982833862) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0497946739196777, 0.7552525401115417) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9965355396270752, 0.6412245035171509) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,b,t,46]  [r2,t,46]  [r2,46]  [h,46]  [r4,46]  [h,46]  [r4,b,t,8]  [r4,b,8]  [r4,8]  [r4,t,8]  [r4,8]  [h,8]  [r3,8]  [r3,t,8]  [r3,8]  [r3,b,25]  [r3,25]  [h,25]  [r5,25]  [r5,t,25]  [r5,b,42]  [r5,42]  [h,42]  [r6,42]  [r6,t,42]  [r6,42]  [r6,b,33]  [r6,33]  [h,33]  [r4,33]  [h,33]  [r1,33]  [r1,t,33]  


Remaining path: 
[r1,t,33]  [r1,33]  [r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20692
RRG size = 1901

Movement Length = 29.974943
Remaining path Length = 1.3616489
Total path Length = 31.336592

Advice samples: [14, 5, 6, 3, 0, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):8537.651129

Initialization time (in ms):615.930334
Sampling time (in ms):6573.636852
Advice time (in ms):7.894329
Path checking time (in ms):745.051954
Learning time (in ms):213.050833
Exploration time (in ms):0.0
Time taken other than these things (in ms):382.086827
Moving time (in ms):1946.1571



