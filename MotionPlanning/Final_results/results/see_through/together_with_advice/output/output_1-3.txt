Parameters values: 
Environment: results/environments/env1/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.393955583428125,0.021673466878298887), (1.693955583428125,0.021673466878298887), (1.693955583428125,0.5216734668782989), (1.393955583428125,0.5216734668782989)]
[(0.5204653884318232,2.654763919997715), (1.0204653884318233,2.654763919997715), (1.0204653884318233,2.9547639199977147), (0.5204653884318232,2.9547639199977147)]
[(2.3865449443070736,0.2361282785905469), (2.8865449443070736,0.2361282785905469), (2.8865449443070736,0.5361282785905469), (2.3865449443070736,0.5361282785905469)]
[(2.641814635011797,2.5172990487401554), (3.141814635011797,2.5172990487401554), (3.141814635011797,2.8172990487401552), (2.641814635011797,2.8172990487401552)]
[(5.4486580807396106,0.09085336241245363), (5.9486580807396106,0.09085336241245363), (5.9486580807396106,0.3908533624124536), (5.4486580807396106,0.3908533624124536)]
[(5.339234757331492,2.5745785773702106), (5.839234757331492,2.5745785773702106), (5.839234757331492,2.8745785773702104), (5.339234757331492,2.8745785773702104)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.8785408,y=0.026156597,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.8785408,y=0.026156597,w=0.7211693,h=2.6281502]  java.awt.geom.Rectangle2D$Float[x=0.8785408,y=0.026156597,w=2.6962717,h=2.6281502]  java.awt.geom.Rectangle2D$Float[x=0.8785408,y=0.026156597,w=2.6962717,h=2.7098005]  java.awt.geom.Rectangle2D$Float[x=0.8785408,y=0.015234522,w=3.9541252,h=2.7207227]  java.awt.geom.Rectangle2D$Float[x=0.8785408,y=0.015234522,w=3.9541252,h=2.7777126]  
t: java.awt.geom.Rectangle2D$Float[x=1.2939556,y=0.0,w=0.5,h=0.62167346]  java.awt.geom.Rectangle2D$Float[x=0.42046538,y=0.0,w=1.3734902,h=3.054764]  java.awt.geom.Rectangle2D$Float[x=0.42046538,y=0.0,w=2.5660794,h=3.054764]  java.awt.geom.Rectangle2D$Float[x=0.42046538,y=0.0,w=2.8213491,h=3.054764]  java.awt.geom.Rectangle2D$Float[x=0.42046538,y=0.0,w=5.6281924,h=3.054764]  java.awt.geom.Rectangle2D$Float[x=0.42046538,y=0.0,w=5.6281924,h=3.054764]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.94981194, 1.5273795] with IG = 37.635864
Iter num: 2
Used frontier: Point2D.Float[1.0993574, 2.3695867] with IG = 42.086506
Iter num: 3
Added advice frontier Point2D.Float[1.0562943, 2.7500658]
Added advice frontier Point2D.Float[1.5725611, 2.4652057]
Added advice frontier Point2D.Float[1.869664, 2.8739214]
Used Advice frontier: Point2D.Float[1.0562943, 2.7500658] with IG = 261.15912
Iter num: 4
Used Advice frontier: Point2D.Float[1.5725611, 2.4652057] with IG = 169.59465
Iter num: 5
Used Advice frontier: Point2D.Float[1.869664, 2.8739214] with IG = 197.90591
Iter num: 6
Used frontier: Point2D.Float[0.21433252, 2.474762] with IG = 12.914123
Iter num: 7
Used frontier: Point2D.Float[0.9638424, 0.6029038] with IG = 13.903926
Iter num: 8
Added advice frontier Point2D.Float[1.3062178, 0.33114064]
Added advice frontier Point2D.Float[1.2336277, 0.22395684]
Added advice frontier Point2D.Float[1.0726068, 0.107860535]
Used Advice frontier: Point2D.Float[1.3062178, 0.33114064] with IG = 228.7688
Iter num: 9
Used Advice frontier: Point2D.Float[1.2336277, 0.22395684] with IG = 772.49005
Iter num: 10
Used Advice frontier: Point2D.Float[1.0726068, 0.107860535] with IG = 503.75388
Iter num: 11
Used frontier: Point2D.Float[1.8968394, 1.4617913] with IG = 11.896396
Iter num: 12
Used frontier: Point2D.Float[2.759542, 1.4448249] with IG = 26.618814
Iter num: 13
Added advice frontier Point2D.Float[2.8831735, 2.1552706]
Added advice frontier Point2D.Float[2.8682816, 0.6158528]
Added advice frontier Point2D.Float[2.8953285, 0.94738567]
Used Advice frontier: Point2D.Float[2.8953285, 0.94738567] with IG = 193.93404
Iter num: 14
Added advice frontier Point2D.Float[3.3951275, 0.23754281]
Added advice frontier Point2D.Float[3.3808932, 0.49991474]
Used Advice frontier: Point2D.Float[2.8682816, 0.6158528] with IG = 300.63043
Iter num: 15
Used Advice frontier: Point2D.Float[3.3808932, 0.49991474] with IG = 190.27356
Iter num: 16
Used Advice frontier: Point2D.Float[3.3951275, 0.23754281] with IG = 380.57864
Iter num: 17
Used Advice frontier: Point2D.Float[2.8831735, 2.1552706] with IG = 50.112236
Iter num: 18
Added advice frontier Point2D.Float[2.6736596, 2.5165489]
Added advice frontier Point2D.Float[2.3454075, 2.4698186]
Added advice frontier Point2D.Float[2.2636156, 2.7322772]
Added advice frontier Point2D.Float[2.310893, 2.8122063]
Used Advice frontier: Point2D.Float[2.6736596, 2.5165489] with IG = 239.44415
Iter num: 19
Used Advice frontier: Point2D.Float[2.3454075, 2.4698186] with IG = 301.603
Iter num: 20
Used Advice frontier: Point2D.Float[2.2636156, 2.7322772] with IG = 363.75806
Iter num: 21
Used Advice frontier: Point2D.Float[2.310893, 2.8122063] with IG = 1076.8374
Iter num: 22
Used frontier: Point2D.Float[3.65762, 2.5236747] with IG = 17.334536
Iter num: 23
Used frontier: Point2D.Float[3.632143, 1.5842555] with IG = 18.180498
Iter num: 24
Used frontier: Point2D.Float[4.3065963, 1.5221092] with IG = 30.729422
Iter num: 25
Added advice frontier Point2D.Float[5.024348, 0.9680736]
Added advice frontier Point2D.Float[5.2062697, 1.2262617]
Used Advice frontier: Point2D.Float[5.024348, 0.9680736] with IG = 99.02096
Iter num: 26
Added advice frontier Point2D.Float[5.7192006, 0.39271078]
Added advice frontier Point2D.Float[5.626122, 0.86350065]
Used Advice frontier: Point2D.Float[5.2062697, 1.2262617] with IG = 316.6131
Iter num: 27
Added advice frontier Point2D.Float[4.789189, 0.14384109]
Added advice frontier Point2D.Float[4.9813266, 0.0070601758]
Added advice frontier Point2D.Float[4.8223653, 2.0457819]
Used Advice frontier: Point2D.Float[5.626122, 0.86350065] with IG = 93.10884
Iter num: 28
Used Advice frontier: Point2D.Float[5.7192006, 0.39271078] with IG = 208.3755
Iter num: 29
Used Advice frontier: Point2D.Float[4.9813266, 0.0070601758] with IG = 93.725876
Iter num: 30
Used Advice frontier: Point2D.Float[4.789189, 0.14384109] with IG = 423.99564
Iter num: 31
Used Advice frontier: Point2D.Float[4.8223653, 2.0457819] with IG = 43.67387
Iter num: 32
Added advice frontier Point2D.Float[5.2516637, 2.4940417]
Added advice frontier Point2D.Float[5.0862603, 2.63571]
Used Advice frontier: Point2D.Float[5.2516637, 2.4940417] with IG = 147.76459
Iter num: 33
Used Advice frontier: Point2D.Float[5.0862603, 2.63571] with IG = 459.1787
Iter num: 34
Used frontier: Point2D.Float[4.333538, 2.5548027] with IG = 11.313945
Iter num: 35
Used frontier: Point2D.Float[5.728365, 1.7723207] with IG = 3.5404837
Iter num: 36
Added advice frontier Point2D.Float[4.1894703, 2.735523]
Added advice frontier Point2D.Float[4.2209105, 2.816039]
Used Advice frontier: Point2D.Float[4.2209105, 2.816039] with IG = 48.275387

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9498119354248047, 1.5273795127868652) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0993573665618896, 2.369586706161499) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.056294322013855, 2.750065803527832) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.5725611448287964, 2.465205669403076) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.869663953781128, 2.8739213943481445) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.021491289138794, 2.6428298950195312) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.21433252096176147, 2.474761962890625) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8303943872451782, 2.111238956451416) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8811141848564148, 1.476295828819275) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9638423919677734, 0.6029037833213806) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3062177896499634, 0.3311406373977661) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2336276769638062, 0.22395683825016022) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0726068019866943, 0.10786053538322449) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1711751222610474, 0.7600529193878174) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2005716562271118, 1.0607576370239258) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5366930961608887, 1.253756046295166) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8968393802642822, 1.4617912769317627) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.459838628768921, 1.4292153120040894) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7595419883728027, 1.4448249340057373) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8953285217285156, 0.9473856687545776) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.868281602859497, 0.6158527731895447) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.3808932304382324, 0.4999147355556488) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.395127534866333, 0.23754280805587769) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.2494568824768066, 0.6504535675048828) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1514158248901367, 1.0655633211135864) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1386334896087646, 1.3833380937576294) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.984807252883911, 1.8496382236480713) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8831734657287598, 2.155270576477051) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.673659563064575, 2.5165488719940186) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.345407485961914, 2.469818592071533) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.263615608215332, 2.7322771549224854) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.3108930587768555, 2.812206268310547) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6323211193084717, 2.519810676574707) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0816266536712646, 2.393751859664917) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.554903030395508, 2.4600648880004883) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6576199531555176, 2.523674726486206) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3908393383026123, 2.343104362487793) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1783645153045654, 2.072922468185425) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1678366661071777, 1.984902262687683) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.384787082672119, 1.7350850105285645) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.632143020629883, 1.5842554569244385) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6864407062530518, 1.689558506011963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.236352443695068, 1.6008375883102417) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.306596279144287, 1.5221091508865356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.560173511505127, 1.5613597631454468) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.02434778213501, 0.9680736064910889) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.20626974105835, 1.2262617349624634) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.02434778213501, 0.9680736064910889) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.347567558288574, 0.6869447231292725) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.626121997833252, 0.8635006546974182) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.719200611114502, 0.39271077513694763) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.386146068572998, 0.5423418879508972) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.2387542724609375, 0.1785930097103119) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.981326580047607, 0.007060175761580467) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.789188861846924, 0.14384108781814575) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.143288612365723, 0.22925981879234314) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.121694564819336, 0.5423008799552917) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.181827068328857, 0.8783109188079834) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.20626974105835, 1.2262617349624634) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.139046669006348, 1.3862457275390625) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.045536518096924, 1.7605226039886475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8223652839660645, 2.0457818508148193) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.845117092132568, 2.2438881397247314) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.251663684844971, 2.494041681289673) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.0862603187561035, 2.6357100009918213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.860729694366455, 2.6329145431518555) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.627315521240234, 2.858187198638916) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.333538055419922, 2.554802656173706) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.634851932525635, 2.705045223236084) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8987274169921875, 2.489194631576538) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.845117092132568, 2.2438881397247314) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.125535488128662, 1.98350191116333) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.437228679656982, 1.7757171392440796) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.728364944458008, 1.7723207473754883) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.437228679656982, 1.7757171392440796) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.125535488128662, 1.98350191116333) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.845117092132568, 2.2438881397247314) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8987274169921875, 2.489194631576538) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.634851932525635, 2.705045223236084) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r5,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [h,21]  [r6,21]  


Remaining path: 
[r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 19375
RRG size = 1801

Movement Length = 31.303589
Remaining path Length = 0.08643687
Total path Length = 31.390026

Advice samples: [18, 5, 2, 0, 0, 0, 0, 0, 0, 0] (25)

Total time taken (in ms):8126.39486

Initialization time (in ms):631.212588
Sampling time (in ms):5917.152987
Advice time (in ms):8.73027
Path checking time (in ms):836.175675
Learning time (in ms):212.706553
Exploration time (in ms):0.0
Time taken other than these things (in ms):520.416787
Moving time (in ms):1610.6128



