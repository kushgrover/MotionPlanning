Parameters values: 
Environment: results/environments/env33/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.41541000531217837,0.012090418308744083), (0.7154100053121784,0.012090418308744083), (0.7154100053121784,0.5120904183087441), (0.41541000531217837,0.5120904183087441)]
[(1.0207303132730805,2.4673686407509896), (1.5207303132730805,2.4673686407509896), (1.5207303132730805,2.7673686407509894), (1.0207303132730805,2.7673686407509894)]
[(2.324895791478429,0.004042033220844863), (2.624895791478429,0.004042033220844863), (2.624895791478429,0.5040420332208448), (2.324895791478429,0.5040420332208448)]
[(3.05246530434071,2.530102650960093), (3.55246530434071,2.530102650960093), (3.55246530434071,2.8301026509600926), (3.05246530434071,2.8301026509600926)]
[(4.264401235925034,0.06597184828264442), (4.764401235925034,0.06597184828264442), (4.764401235925034,0.3659718482826444), (4.264401235925034,0.3659718482826444)]
[(5.210951631841709,2.5899503858929935), (5.710951631841709,2.5899503858929935), (5.710951631841709,2.8899503858929934), (5.210951631841709,2.8899503858929934)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0419228,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0419228,w=0.58311725,h=2.6710844]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0052986294,w=3.5454452,h=2.7077086]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0052986294,w=3.5454452,h=2.7077086]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0052986294,w=5.108672,h=2.7077086]  java.awt.geom.Rectangle2D$Float[x=0.043897666,y=0.0052986294,w=5.108672,h=2.8883526]  
t: java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=0.5,h=0.6120904]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=1.3053203,h=2.8673687]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=2.4094858,h=2.8673687]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=3.3370552,h=2.9301026]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=4.548991,h=2.9301026]  java.awt.geom.Rectangle2D$Float[x=0.31541002,y=0.0,w=5.4955416,h=2.9899504]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.99531543, 1.5828408] with IG = 35.589573
Iter num: 2
Used frontier: Point2D.Float[0.90856755, 2.2411861] with IG = 31.624792
Iter num: 3
Added advice frontier Point2D.Float[0.46610644, 2.5496066]
Added advice frontier Point2D.Float[1.5840081, 2.4295332]
Added advice frontier Point2D.Float[1.7309994, 2.504815]
Used Advice frontier: Point2D.Float[0.46610644, 2.5496066] with IG = 185.40945
Iter num: 4
Used Advice frontier: Point2D.Float[1.5840081, 2.4295332] with IG = 88.06133
Iter num: 5
Used Advice frontier: Point2D.Float[1.7309994, 2.504815] with IG = 605.5184
Iter num: 6
Used frontier: Point2D.Float[0.9372695, 0.62310785] with IG = 12.905971
Iter num: 7
Added advice frontier Point2D.Float[0.7888241, 0.55804926]
Added advice frontier Point2D.Float[0.89601356, 0.4492827]
Added advice frontier Point2D.Float[0.16791824, 0.2160282]
Added advice frontier Point2D.Float[0.104679644, 0.6139153]
Added advice frontier Point2D.Float[0.3203933, 0.2500433]
Used Advice frontier: Point2D.Float[0.7888241, 0.55804926] with IG = 616.9941
Iter num: 8
Used Advice frontier: Point2D.Float[0.89601356, 0.4492827] with IG = 654.8443
Iter num: 9
Used Advice frontier: Point2D.Float[0.104679644, 0.6139153] with IG = 121.261246
Iter num: 10
Used Advice frontier: Point2D.Float[0.16791824, 0.2160282] with IG = 248.2121
Iter num: 11
Used Advice frontier: Point2D.Float[0.3203933, 0.2500433] with IG = 640.11
Iter num: 12
Used frontier: Point2D.Float[1.7828927, 0.534777] with IG = 11.909187
Iter num: 13
Used frontier: Point2D.Float[1.9390543, 1.4878709] with IG = 12.4297695
Iter num: 14
Used frontier: Point2D.Float[2.5858943, 1.4855821] with IG = 32.428944
Iter num: 15
Added advice frontier Point2D.Float[2.973445, 2.0967114]
Added advice frontier Point2D.Float[3.233143, 1.8583932]
Added advice frontier Point2D.Float[2.9153605, 0.9107799]
Added advice frontier Point2D.Float[2.9612045, 1.1033739]
Used Advice frontier: Point2D.Float[2.9612045, 1.1033739] with IG = 186.68259
Iter num: 16
Added advice frontier Point2D.Float[2.595004, 0.53935766]
Added advice frontier Point2D.Float[2.8283036, 0.6095716]
Used Advice frontier: Point2D.Float[2.9153605, 0.9107799] with IG = 505.11407
Iter num: 17
Added advice frontier Point2D.Float[3.4109364, 0.17236874]
Added advice frontier Point2D.Float[3.7694974, 0.46527758]
Used Advice frontier: Point2D.Float[2.8283036, 0.6095716] with IG = 318.94177
Iter num: 18
Used Advice frontier: Point2D.Float[2.595004, 0.53935766] with IG = 410.44788
Iter num: 19
Used Advice frontier: Point2D.Float[3.4109364, 0.17236874] with IG = 102.873856
Iter num: 20
Used Advice frontier: Point2D.Float[3.7694974, 0.46527758] with IG = 215.98645
Iter num: 21
Used Advice frontier: Point2D.Float[3.233143, 1.8583932] with IG = 58.00591
Iter num: 22
Used Advice frontier: Point2D.Float[2.973445, 2.0967114] with IG = 283.70798
Iter num: 23
Added advice frontier Point2D.Float[2.9805956, 2.7896478]
Added advice frontier Point2D.Float[2.7611732, 2.9193115]
Added advice frontier Point2D.Float[2.2884443, 2.471086]
Used Advice frontier: Point2D.Float[2.9805956, 2.7896478] with IG = 137.43494
Iter num: 24
Used Advice frontier: Point2D.Float[2.7611732, 2.9193115] with IG = 392.3565
Iter num: 25
Used Advice frontier: Point2D.Float[2.2884443, 2.471086] with IG = 149.89828
Iter num: 26
Used frontier: Point2D.Float[3.9509413, 1.5799195] with IG = 12.063673
Iter num: 27
Used frontier: Point2D.Float[4.5953107, 1.2553067] with IG = 26.052324
Iter num: 28
Added advice frontier Point2D.Float[5.1050467, 0.82419014]
Added advice frontier Point2D.Float[4.9853625, 2.0447605]
Added advice frontier Point2D.Float[5.2224116, 1.6929948]
Used Advice frontier: Point2D.Float[5.1050467, 0.82419014] with IG = 149.67657
Iter num: 29
Added advice frontier Point2D.Float[4.998788, 0.28212643]
Added advice frontier Point2D.Float[5.0235825, 0.38926432]
Used Advice frontier: Point2D.Float[5.0235825, 0.38926432] with IG = 107.7667
Iter num: 30
Added advice frontier Point2D.Float[4.7782707, 0.2753936]
Used Advice frontier: Point2D.Float[4.998788, 0.28212643] with IG = 909.3428
Iter num: 31
Used Advice frontier: Point2D.Float[4.7782707, 0.2753936] with IG = 453.26822
Iter num: 32
Used Advice frontier: Point2D.Float[5.2224116, 1.6929948] with IG = 65.365166
Iter num: 33
Added advice frontier Point2D.Float[5.1382937, 2.50308]
Used Advice frontier: Point2D.Float[4.9853625, 2.0447605] with IG = 235.74724
Iter num: 34
Used Advice frontier: Point2D.Float[5.1382937, 2.50308] with IG = 198.35184
Iter num: 35
Used frontier: Point2D.Float[4.407871, 2.3324864] with IG = 22.095495
Iter num: 36
Used frontier: Point2D.Float[3.894129, 2.4520018] with IG = 2.0128686
Iter num: 37
Added advice frontier Point2D.Float[4.319026, 2.8469985]
Added advice frontier Point2D.Float[4.189012, 2.944438]
Used Advice frontier: Point2D.Float[4.319026, 2.8469985] with IG = 24.000553

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.995315432548523, 1.5828408002853394) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9085675477981567, 2.2411861419677734) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.46610644459724426, 2.5496065616607666) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8258266448974609, 2.4355578422546387) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5840080976486206, 2.4295332431793213) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.7309993505477905, 2.504815101623535) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1780017614364624, 2.067260980606079) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0928972959518433, 1.5240859985351562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0186514854431152, 1.0316804647445679) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9372695088386536, 0.6231078505516052) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7888240814208984, 0.5580492615699768) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8960135579109192, 0.449282705783844) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7152881622314453, 0.5593953728675842) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.1046796441078186, 0.6139153242111206) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.16791823506355286, 0.21602819859981537) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.32039329409599304, 0.2500433027744293) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.326407790184021, 0.7136123776435852) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8160211443901062, 0.6527296304702759) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.384448766708374, 0.5724470615386963) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7828927040100098, 0.5347769856452942) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2847827672958374, 0.8768450617790222) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1173259019851685, 1.0177549123764038) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.360592246055603, 1.1635255813598633) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8613544702529907, 1.447437047958374) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.939054250717163, 1.4878709316253662) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.362349271774292, 1.625991702079773) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5858943462371826, 1.4855821132659912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9612045288085938, 1.1033738851547241) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.915360450744629, 0.9107798933982849) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.828303575515747, 0.6095715761184692) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.595004081726074, 0.5393576622009277) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.828303575515747, 0.6095715761184692) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4109363555908203, 0.17236873507499695) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.7694973945617676, 0.4652775824069977) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.600890874862671, 0.5459482073783875) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.257772445678711, 0.7539089918136597) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.122262954711914, 1.1514346599578857) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1749699115753174, 1.428801417350769) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2331430912017822, 1.8583931922912598) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.973444938659668, 2.0967113971710205) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.866079330444336, 2.4415767192840576) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.980595588684082, 2.7896478176116943) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.7611732482910156, 2.9193115234375) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5012919902801514, 2.771401882171631) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.2884442806243896, 2.471086025238037) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.642918825149536, 2.211735248565674) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0243914127349854, 2.0393054485321045) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2331430912017822, 1.8583931922912598) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.533787965774536, 1.7084953784942627) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.950941324234009, 1.579919457435608) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9180855751037598, 1.3439786434173584) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.595310688018799, 1.2553067207336426) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.855120658874512, 1.052578330039978) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.10504674911499, 0.8241901397705078) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.413281440734863, 0.38302063941955566) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.023582458496094, 0.389264315366745) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.998787879943848, 0.28212642669677734) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.778270721435547, 0.27539360523223877) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.754968643188477, 0.5868293642997742) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.778899192810059, 0.8071154952049255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.855120658874512, 1.052578330039978) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.06840181350708, 1.392533540725708) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.222411632537842, 1.6929948329925537) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.985362529754639, 2.0447604656219482) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9886860847473145, 2.2816994190216064) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.138293743133545, 2.503079891204834) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.947777271270752, 2.3223066329956055) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.609623908996582, 2.2041985988616943) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.407870769500732, 2.332486391067505) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.609623908996582, 2.2041985988616943) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9886860847473145, 2.2816994190216064) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.985362529754639, 2.0447604656219482) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.222411632537842, 1.6929948329925537) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.024449825286865, 1.6245476007461548) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.665247917175293, 1.5891035795211792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.587560176849365, 1.6555790901184082) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.226191997528076, 1.6598384380340576) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8093888759613037, 1.6917539834976196) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.609818458557129, 1.711443543434143) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.284506320953369, 1.821489691734314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1448278427124023, 1.8821046352386475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.188936710357666, 2.112255096435547) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.37028431892395, 2.1994354724884033) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.684270143508911, 2.2685387134552) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.8941290378570557, 2.4520018100738525) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.684270143508911, 2.2685387134552) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.37028431892395, 2.1994354724884033) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.188936710357666, 2.112255096435547) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1448278427124023, 1.8821046352386475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5032708644866943, 1.8298295736312866) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.883265733718872, 1.804542064666748) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.228935718536377, 1.8197858333587646) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.468752384185791, 1.790869951248169) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7384843826293945, 1.7701021432876587) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.985362529754639, 2.0447604656219482) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.839664936065674, 2.159083843231201) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.609623908996582, 2.2041985988616943) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,t,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,b,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [h,21]  [r4,21]  [h,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20214
RRG size = 1851

Movement Length = 34.844032
Remaining path Length = 0.0
Total path Length = 34.844032

Advice samples: [15, 3, 6, 3, 0, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):7202.322454

Initialization time (in ms):597.370876
Sampling time (in ms):5387.322257
Advice time (in ms):8.23137
Path checking time (in ms):630.727183
Learning time (in ms):158.47934
Exploration time (in ms):0.0
Time taken other than these things (in ms):420.191428
Moving time (in ms):335.5443



