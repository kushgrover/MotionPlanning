Parameters values: 
Environment: results/environments/env18/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.3874575491941374,0.023875116360058152), (1.6874575491941375,0.023875116360058152), (1.6874575491941375,0.5238751163600581), (1.3874575491941374,0.5238751163600581)]
[(0.949949625867305,2.6501145274495617), (1.449949625867305,2.6501145274495617), (1.449949625867305,2.9501145274495615), (0.949949625867305,2.9501145274495615)]
[(2.06262177654102,0.22384305032719173), (2.56262177654102,0.22384305032719173), (2.56262177654102,0.5238430503271917), (2.06262177654102,0.5238430503271917)]
[(3.406513244250834,2.494100365692535), (3.706513244250834,2.494100365692535), (3.706513244250834,2.994100365692535), (3.406513244250834,2.994100365692535)]
[(4.13341906754952,0.04177954947327961), (4.4334190675495195,0.04177954947327961), (4.4334190675495195,0.5417795494732796), (4.13341906754952,0.5417795494732796)]
[(5.120198261571851,2.498218840636166), (5.4201982615718505,2.498218840636166), (5.4201982615718505,2.998218840636166), (5.120198261571851,2.998218840636166)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.091385,y=0.020358874,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=0.6879822,h=2.7995596]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=2.5638416,h=2.7995596]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=2.5638416,h=2.7995596]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=4.671217,h=2.7995596]  java.awt.geom.Rectangle2D$Float[x=0.60340285,y=0.020358874,w=5.173853,h=2.7995596]  
t: java.awt.geom.Rectangle2D$Float[x=1.2874576,y=0.0,w=0.5,h=0.62387514]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=0.937508,h=3.0501146]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=1.8126721,h=3.0501146]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=2.9565637,h=3.0941005]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=3.6834695,h=3.0941005]  java.awt.geom.Rectangle2D$Float[x=0.8499496,y=0.0,w=4.670249,h=3.098219]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0338298, 1.5373211] with IG = 34.24015
Iter num: 2
Used frontier: Point2D.Float[0.88513446, 0.7164293] with IG = 38.35779
Iter num: 3
Added advice frontier Point2D.Float[1.3082865, 0.0010096846]
Added advice frontier Point2D.Float[0.6101759, 0.03971662]
Added advice frontier Point2D.Float[1.2431539, 0.17696181]
Added advice frontier Point2D.Float[0.96666706, 0.09622843]
Added advice frontier Point2D.Float[1.2950621, 0.121394515]
Added advice frontier Point2D.Float[1.2888007, 0.14761727]
Used Advice frontier: Point2D.Float[0.96666706, 0.09622843] with IG = 159.86261
Iter num: 4
Used Advice frontier: Point2D.Float[1.2431539, 0.17696181] with IG = 347.1827
Iter num: 5
Used Advice frontier: Point2D.Float[1.2888007, 0.14761727] with IG = 1842.7955
Iter num: 6
Used Advice frontier: Point2D.Float[1.2950621, 0.121394515] with IG = 3709.2102
Iter num: 7
Used Advice frontier: Point2D.Float[1.3082865, 0.0010096846] with IG = 825.70233
Iter num: 8
Used Advice frontier: Point2D.Float[0.6101759, 0.03971662] with IG = 143.0241
Iter num: 9
Used frontier: Point2D.Float[0.9912238, 2.4442246] with IG = 14.765168
Iter num: 10
Added advice frontier Point2D.Float[0.8746952, 2.846493]
Added advice frontier Point2D.Float[0.20584649, 2.9479609]
Added advice frontier Point2D.Float[0.70371604, 2.7553098]
Added advice frontier Point2D.Float[0.7428166, 2.853001]
Used Advice frontier: Point2D.Float[0.8746952, 2.846493] with IG = 238.7738
Iter num: 11
Used Advice frontier: Point2D.Float[0.7428166, 2.853001] with IG = 757.35175
Iter num: 12
Used Advice frontier: Point2D.Float[0.70371604, 2.7553098] with IG = 950.3382
Iter num: 13
Used Advice frontier: Point2D.Float[0.20584649, 2.9479609] with IG = 187.32094
Iter num: 14
Used frontier: Point2D.Float[1.9165255, 2.4361742] with IG = 12.701938
Iter num: 15
Used frontier: Point2D.Float[1.9856968, 1.4750056] with IG = 11.566524
Iter num: 16
Used frontier: Point2D.Float[2.479295, 1.7293] with IG = 42.75988
Iter num: 17
Added advice frontier Point2D.Float[3.2217612, 2.1848333]
Added advice frontier Point2D.Float[3.0236049, 1.825822]
Added advice frontier Point2D.Float[2.993763, 0.9562476]
Added advice frontier Point2D.Float[2.8285902, 1.0831804]
Used Advice frontier: Point2D.Float[3.0236049, 1.825822] with IG = 178.3674
Iter num: 18
Added advice frontier Point2D.Float[3.3410769, 2.4127414]
Added advice frontier Point2D.Float[3.234294, 2.659824]
Used Advice frontier: Point2D.Float[3.2217612, 2.1848333] with IG = 243.8625
Iter num: 19
Added advice frontier Point2D.Float[2.4438746, 2.5615075]
Added advice frontier Point2D.Float[2.5527432, 2.726544]
Used Advice frontier: Point2D.Float[3.3410769, 2.4127414] with IG = 388.72464
Iter num: 20
Used Advice frontier: Point2D.Float[3.234294, 2.659824] with IG = 371.51282
Iter num: 21
Used Advice frontier: Point2D.Float[2.5527432, 2.726544] with IG = 145.8815
Iter num: 22
Used Advice frontier: Point2D.Float[2.4438746, 2.5615075] with IG = 505.7903
Iter num: 23
Used Advice frontier: Point2D.Float[2.8285902, 1.0831804] with IG = 53.266968
Iter num: 24
Added advice frontier Point2D.Float[2.651752, 0.23845068]
Used Advice frontier: Point2D.Float[2.993763, 0.9562476] with IG = 480.04858
Iter num: 25
Added advice frontier Point2D.Float[3.0747757, 0.2976365]
Used Advice frontier: Point2D.Float[3.0747757, 0.2976365] with IG = 150.41733
Iter num: 26
Used Advice frontier: Point2D.Float[2.651752, 0.23845068] with IG = 234.11307
Iter num: 27
Used frontier: Point2D.Float[3.8725364, 1.4905995] with IG = 12.058611
Iter num: 28
Used frontier: Point2D.Float[4.5086923, 1.781812] with IG = 34.25508
Iter num: 29
Added advice frontier Point2D.Float[5.1600285, 2.1470196]
Added advice frontier Point2D.Float[4.990292, 1.8828577]
Used Advice frontier: Point2D.Float[4.990292, 1.8828577] with IG = 203.16135
Iter num: 30
Added advice frontier Point2D.Float[5.085617, 2.6204336]
Added advice frontier Point2D.Float[4.87376, 0.9539606]
Added advice frontier Point2D.Float[5.0885196, 1.1516349]
Added advice frontier Point2D.Float[4.8057756, 2.4862003]
Used Advice frontier: Point2D.Float[5.1600285, 2.1470196] with IG = 318.4778
Iter num: 31
Used Advice frontier: Point2D.Float[4.8057756, 2.4862003] with IG = 202.60234
Iter num: 32
Used Advice frontier: Point2D.Float[5.085617, 2.6204336] with IG = 322.19568
Iter num: 33
Added advice frontier Point2D.Float[5.761541, 2.616733]
Added advice frontier Point2D.Float[5.969076, 2.9128299]
Added advice frontier Point2D.Float[5.4536347, 2.6898625]
Used Advice frontier: Point2D.Float[5.761541, 2.616733] with IG = 71.75393
Iter num: 34
Used Advice frontier: Point2D.Float[5.4536347, 2.6898625] with IG = 315.98438
Iter num: 35
Used Advice frontier: Point2D.Float[5.969076, 2.9128299] with IG = 147.48022
Iter num: 36
Used Advice frontier: Point2D.Float[5.0885196, 1.1516349] with IG = 45.945835
Iter num: 37
Used Advice frontier: Point2D.Float[4.87376, 0.9539606] with IG = 342.60092
Iter num: 38
Added advice frontier Point2D.Float[5.2116714, 0.20157282]
Added advice frontier Point2D.Float[4.6679, 0.08696899]
Used Advice frontier: Point2D.Float[5.2116714, 0.20157282] with IG = 121.179436

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0338298082351685, 1.5373210906982422) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8851344585418701, 0.7164292931556702) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9666670560836792, 0.09622842818498611) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2431539297103882, 0.17696180939674377) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2888007164001465, 0.14761726558208466) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.2950620651245117, 0.12139451503753662) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3082865476608276, 0.001009684638120234) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6101759076118469, 0.03971661999821663) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7881894111633301, 0.7803160548210144) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8248873949050903, 1.1371104717254639) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9375039339065552, 1.9467138051986694) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9912238121032715, 2.4442245960235596) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8746951818466187, 2.8464930057525635) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7428166270256042, 2.853001117706299) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7037160396575928, 2.755309820175171) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.20584648847579956, 2.94796085357666) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7037160396575928, 2.755309820175171) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1878745555877686, 2.5079405307769775) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5648072957992554, 2.451258420944214) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9165254831314087, 2.436174154281616) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.634797215461731, 2.330211639404297) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.342357873916626, 2.268453359603882) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1054093837738037, 1.9789721965789795) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.352229356765747, 1.847488284111023) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.985696792602539, 1.4750056266784668) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1407618522644043, 1.5989480018615723) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.479295015335083, 1.7293000221252441) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6361498832702637, 1.7146114110946655) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0236048698425293, 1.8258219957351685) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2217612266540527, 2.184833288192749) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3410768508911133, 2.4127414226531982) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2342939376831055, 2.6598238945007324) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.856485605239868, 2.6815667152404785) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5527431964874268, 2.72654390335083) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4438745975494385, 2.5615074634552) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.6370816230773926, 2.635227918624878) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8895351886749268, 2.2805936336517334) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0052268505096436, 1.9205081462860107) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9486887454986572, 1.5783112049102783) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.903721332550049, 1.3367083072662354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.828590154647827, 1.0831804275512695) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.993762969970703, 0.9562476277351379) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0097622871398926, 0.8231773972511292) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0452136993408203, 0.41332897543907166) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0747756958007812, 0.2976365089416504) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.65175199508667, 0.23845067620277405) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8517045974731445, 0.6349289417266846) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.020345687866211, 0.8671756386756897) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1548845767974854, 1.0334852933883667) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.362394094467163, 1.2931288480758667) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7858595848083496, 1.4543673992156982) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8725364208221436, 1.490599513053894) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.219186782836914, 1.669563889503479) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.508692264556885, 1.7818119525909424) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.718045234680176, 1.8315497636795044) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.990292072296143, 1.8828576803207397) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.160028457641602, 2.147019624710083) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.948875427246094, 2.310904026031494) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8057756423950195, 2.4862003326416016) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.0856170654296875, 2.6204335689544678) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.948875427246094, 2.310904026031494) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.314646244049072, 2.1416590213775635) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.76154088973999, 2.6167330741882324) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.453634738922119, 2.6898624897003174) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.76154088973999, 2.6167330741882324) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.969076156616211, 2.912829875946045) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.76154088973999, 2.6167330741882324) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.314646244049072, 2.1416590213775635) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.160028457641602, 2.147019624710083) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.0701680183410645, 1.7913763523101807) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0605902671813965, 1.5599461793899536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.079401969909668, 1.3846789598464966) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.08851957321167, 1.151634931564331) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.873760223388672, 0.9539605975151062) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,b,t,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,b,35]  [r3,t,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,b,53]  [r6,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 21420
RRG size = 1901

Movement Length = 26.947426
Remaining path Length = 0.0
Total path Length = 26.947426

Advice samples: [11, 6, 8, 5, 0, 0, 0, 0, 0, 0] (30)

Total time taken (in ms):8664.655826

Initialization time (in ms):602.402416
Sampling time (in ms):6748.298872
Advice time (in ms):8.113358
Path checking time (in ms):643.472611
Learning time (in ms):188.025766
Exploration time (in ms):0.0
Time taken other than these things (in ms):474.342803
Moving time (in ms):603.9798



