Parameters values: 
Environment: results/environments/env95/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.2519592561597517,0.007440805809789481), (1.5519592561597517,0.007440805809789481), (1.5519592561597517,0.5074408058097895), (1.2519592561597517,0.5074408058097895)]
[(0.6904266701914278,2.4876513450505837), (0.9904266701914277,2.4876513450505837), (0.9904266701914277,2.9876513450505837), (0.6904266701914278,2.9876513450505837)]
[(3.5516587823186967,0.0007730094823587338), (3.8516587823186965,0.0007730094823587338), (3.8516587823186965,0.5007730094823587), (3.5516587823186967,0.5007730094823587)]
[(2.343490598933809,2.6187662469808344), (2.843490598933809,2.6187662469808344), (2.843490598933809,2.918766246980834), (2.343490598933809,2.918766246980834)]
[(4.086842186598081,0.04056564425339714), (4.386842186598081,0.04056564425339714), (4.386842186598081,0.5405656442533971), (4.086842186598081,0.5405656442533971)]
[(5.084744752690545,2.650582512564423), (5.584744752690545,2.650582512564423), (5.584744752690545,2.9505825125644227), (5.084744752690545,2.9505825125644227)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.50672555,y=0.006223981,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.31996408,y=0.006223981,w=0.38676146,h=2.6509001]  java.awt.geom.Rectangle2D$Float[x=0.31996408,y=0.006223981,w=2.1630723,h=2.6509001]  java.awt.geom.Rectangle2D$Float[x=0.31996408,y=0.006223981,w=3.0982213,h=2.8897262]  java.awt.geom.Rectangle2D$Float[x=0.31996408,y=0.0034747587,w=4.992337,h=2.8924754]  java.awt.geom.Rectangle2D$Float[x=0.31996408,y=0.0034747587,w=4.992337,h=2.8924754]  
t: java.awt.geom.Rectangle2D$Float[x=1.1519593,y=0.0,w=0.5,h=0.6074408]  java.awt.geom.Rectangle2D$Float[x=0.5904267,y=0.0,w=1.0615326,h=3.0876513]  java.awt.geom.Rectangle2D$Float[x=0.5904267,y=0.0,w=3.361232,h=3.0876513]  java.awt.geom.Rectangle2D$Float[x=0.5904267,y=0.0,w=3.361232,h=3.0876513]  java.awt.geom.Rectangle2D$Float[x=0.5904267,y=0.0,w=3.8964155,h=3.0876513]  java.awt.geom.Rectangle2D$Float[x=0.5904267,y=0.0,w=5.0943184,h=3.0876513]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9649468, 1.5071588] with IG = 36.995228
Iter num: 2
Used frontier: Point2D.Float[0.98268557, 2.451544] with IG = 37.054607
Iter num: 3
Added advice frontier Point2D.Float[1.232403, 0.60500115]
Added advice frontier Point2D.Float[1.2336183, 0.7082456]
Added advice frontier Point2D.Float[0.3663378, 2.6423547]
Added advice frontier Point2D.Float[0.47706938, 2.9236495]
Added advice frontier Point2D.Float[0.6045522, 2.4675786]
Used Advice frontier: Point2D.Float[0.6045522, 2.4675786] with IG = 264.2195
Iter num: 4
Used Advice frontier: Point2D.Float[0.3663378, 2.6423547] with IG = 338.4627
Iter num: 5
Used Advice frontier: Point2D.Float[0.47706938, 2.9236495] with IG = 330.79184
Iter num: 6
Used Advice frontier: Point2D.Float[1.2336183, 0.7082456] with IG = 42.61379
Iter num: 7
Added advice frontier Point2D.Float[0.6968297, 0.051404815]
Added advice frontier Point2D.Float[0.50051445, 0.1614557]
Used Advice frontier: Point2D.Float[1.232403, 0.60500115] with IG = 968.5082
Iter num: 8
Used Advice frontier: Point2D.Float[0.6968297, 0.051404815] with IG = 129.66917
Iter num: 9
Used Advice frontier: Point2D.Float[0.50051445, 0.1614557] with IG = 444.3309
Iter num: 10
Used frontier: Point2D.Float[1.9171239, 1.4681476] with IG = 11.606505
Iter num: 11
Used frontier: Point2D.Float[2.8443768, 1.1610843] with IG = 23.532764
Iter num: 12
Added advice frontier Point2D.Float[2.70724, 0.4745364]
Added advice frontier Point2D.Float[2.9494624, 2.0394912]
Used Advice frontier: Point2D.Float[2.70724, 0.4745364] with IG = 142.83461
Iter num: 13
Added advice frontier Point2D.Float[2.4222012, 0.015890295]
Added advice frontier Point2D.Float[3.508833, 0.27356327]
Added advice frontier Point2D.Float[3.3590112, 0.20021033]
Used Advice frontier: Point2D.Float[2.4222012, 0.015890295] with IG = 185.1841
Iter num: 14
Used Advice frontier: Point2D.Float[3.3590112, 0.20021033] with IG = 99.41135
Iter num: 15
Used Advice frontier: Point2D.Float[3.508833, 0.27356327] with IG = 599.4668
Iter num: 16
Used Advice frontier: Point2D.Float[2.9494624, 2.0394912] with IG = 53.09036
Iter num: 17
Added advice frontier Point2D.Float[2.8510706, 2.6065898]
Added advice frontier Point2D.Float[2.477253, 2.4879646]
Added advice frontier Point2D.Float[3.3845866, 2.7691205]
Added advice frontier Point2D.Float[3.2687, 2.51755]
Used Advice frontier: Point2D.Float[2.8510706, 2.6065898] with IG = 173.22375
Iter num: 18
Used Advice frontier: Point2D.Float[2.477253, 2.4879646] with IG = 254.97961
Iter num: 19
Used Advice frontier: Point2D.Float[3.2687, 2.51755] with IG = 125.80562
Iter num: 20
Used Advice frontier: Point2D.Float[3.3845866, 2.7691205] with IG = 361.0381
Iter num: 21
Used frontier: Point2D.Float[3.6903498, 1.5251637] with IG = 18.4788
Iter num: 22
Used frontier: Point2D.Float[4.3912635, 1.5021069] with IG = 31.25692
Iter num: 23
Added advice frontier Point2D.Float[5.0869837, 0.87806773]
Added advice frontier Point2D.Float[5.077375, 2.0577357]
Added advice frontier Point2D.Float[5.073216, 1.0713143]
Used Advice frontier: Point2D.Float[5.073216, 1.0713143] with IG = 113.4608
Iter num: 24
Added advice frontier Point2D.Float[5.124825, 0.15665907]
Added advice frontier Point2D.Float[5.616868, 0.33885774]
Used Advice frontier: Point2D.Float[5.0869837, 0.87806773] with IG = 516.1652
Iter num: 25
Used Advice frontier: Point2D.Float[5.124825, 0.15665907] with IG = 112.76622
Iter num: 26
Added advice frontier Point2D.Float[4.389125, 0.21951117]
Used Advice frontier: Point2D.Float[5.616868, 0.33885774] with IG = 190.58766
Iter num: 27
Used Advice frontier: Point2D.Float[4.389125, 0.21951117] with IG = 76.66242
Iter num: 28
Used Advice frontier: Point2D.Float[5.077375, 2.0577357] with IG = 45.710922
Iter num: 29
Added advice frontier Point2D.Float[4.5729885, 2.6629183]
Added advice frontier Point2D.Float[5.6625834, 2.6460745]
Added advice frontier Point2D.Float[5.8842225, 2.2618945]
Added advice frontier Point2D.Float[4.3360844, 2.5245652]
Used Advice frontier: Point2D.Float[5.6625834, 2.6460745] with IG = 120.50716

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9649468064308167, 1.5071587562561035) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9826855659484863, 2.4515440464019775) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6045522093772888, 2.467578649520874) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3663378059864044, 2.642354726791382) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.4770693778991699, 2.923649549484253) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6045522093772888, 2.467578649520874) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8594636917114258, 1.9368940591812134) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0378313064575195, 1.339779019355774) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2336182594299316, 0.708245575428009) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.232403039932251, 0.6050011515617371) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1674219369888306, 0.5189896821975708) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6968296766281128, 0.051404815167188644) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5005144476890564, 0.16145570576190948) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7899695634841919, 0.5362069606781006) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0648301839828491, 0.8985974192619324) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2650580406188965, 1.1670067310333252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.714377999305725, 1.3662736415863037) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9171239137649536, 1.4681476354599) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5144083499908447, 1.2533247470855713) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.844376802444458, 1.1610842943191528) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.707240104675293, 0.47453638911247253) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.422201156616211, 0.015890294685959816) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.74788498878479, 0.010951618663966656) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1828689575195312, 0.03022269532084465) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.359011173248291, 0.2002103328704834) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5088329315185547, 0.2735632658004761) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.285085439682007, 0.8046109080314636) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0523693561553955, 1.194711446762085) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9600255489349365, 1.7151437997817993) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.949462413787842, 2.0394911766052246) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.953946113586426, 2.07895827293396) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8510706424713135, 2.6065897941589355) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.477252960205078, 2.487964630126953) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9815120697021484, 2.4742629528045654) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.268699884414673, 2.517549991607666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3845865726470947, 2.769120454788208) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.268699884414673, 2.517549991607666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.119295358657837, 2.1325323581695557) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1817758083343506, 1.8827265501022339) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5325770378112793, 1.627101182937622) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.690349817276001, 1.5251636505126953) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7928833961486816, 1.439004898071289) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.172153949737549, 1.4712589979171753) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.391263484954834, 1.5021069049835205) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.896993160247803, 1.3887704610824585) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.073215961456299, 1.0713143348693848) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.086983680725098, 0.8780677318572998) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.855934143066406, 0.43447229266166687) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1248250007629395, 0.1566590666770935) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.616868019104004, 0.3388577401638031) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1248250007629395, 0.1566590666770935) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.852617263793945, 0.20175175368785858) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.567322731018066, 0.3085204064846039) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.389124870300293, 0.21951116621494293) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.567322731018066, 0.3085204064846039) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.855934143066406, 0.43447229266166687) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.892378807067871, 0.692230224609375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.937328338623047, 1.1009107828140259) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.948184490203857, 1.3661080598831177) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.127567291259766, 1.736396312713623) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,b,21]  [r5,21]  [r5,b,21]  [r5,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  


Remaining path: 
[r6,t,21]  [r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 29
Total sampled points = 16195
RRG size = 1452

Movement Length = 24.642385
Remaining path Length = 1.9581972
Total path Length = 26.600582

Advice samples: [10, 8, 4, 0, 1, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):5243.371488

Initialization time (in ms):494.83312
Sampling time (in ms):3827.109308
Advice time (in ms):6.747738
Path checking time (in ms):449.721743
Learning time (in ms):157.476228
Exploration time (in ms):0.0
Time taken other than these things (in ms):307.483351
Moving time (in ms):872.4152



