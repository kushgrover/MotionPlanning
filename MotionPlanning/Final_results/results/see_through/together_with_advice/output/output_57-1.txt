Parameters values: 
Environment: results/environments/env57/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.7482913367681444,0.1551225605517834), (1.2482913367681445,0.1551225605517834), (1.2482913367681445,0.45512256055178335), (0.7482913367681444,0.45512256055178335)]
[(1.359007294237371,2.480998883110689), (1.859007294237371,2.480998883110689), (1.859007294237371,2.780998883110689), (1.359007294237371,2.780998883110689)]
[(2.4435106543063068,0.0041123019440345), (2.7435106543063066,0.0041123019440345), (2.7435106543063066,0.5041123019440344), (2.4435106543063068,0.5041123019440344)]
[(3.074546468756569,2.5907183537861886), (3.574546468756569,2.5907183537861886), (3.574546468756569,2.8907183537861885), (3.074546468756569,2.8907183537861885)]
[(5.189187558762413,0.1839873583460662), (5.689187558762413,0.1839873583460662), (5.689187558762413,0.4839873583460662), (5.189187558762413,0.4839873583460662)]
[(4.091934388456407,2.476517220870483), (4.391934388456407,2.476517220870483), (4.391934388456407,2.976517220870483), (4.091934388456407,2.976517220870483)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.05265907,y=0.22873856,w=0.20000002,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.05265907,y=0.22873856,w=0.60125315,h=2.5330637]  java.awt.geom.Rectangle2D$Float[x=0.05265907,y=0.04594989,w=3.2407043,h=2.7158523]  java.awt.geom.Rectangle2D$Float[x=0.05265907,y=0.04594989,w=3.2407043,h=2.7158523]  java.awt.geom.Rectangle2D$Float[x=0.05265907,y=0.04594989,w=5.1229496,h=2.7158523]  java.awt.geom.Rectangle2D$Float[x=0.05265907,y=0.04594989,w=5.1229496,h=2.7158523]  
t: java.awt.geom.Rectangle2D$Float[x=0.64829135,y=0.05512256,w=0.6999999,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.64829135,y=0.05512256,w=1.3107159,h=2.8258762]  java.awt.geom.Rectangle2D$Float[x=0.64829135,y=0.0,w=2.1952193,h=2.8809988]  java.awt.geom.Rectangle2D$Float[x=0.64829135,y=0.0,w=3.0262551,h=2.9907184]  java.awt.geom.Rectangle2D$Float[x=0.64829135,y=0.0,w=5.140896,h=2.9907184]  java.awt.geom.Rectangle2D$Float[x=0.64829135,y=0.0,w=5.140896,h=3.076517]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.93047154, 1.5020738] with IG = 38.532204
Iter num: 2
Used frontier: Point2D.Float[1.0846652, 0.65096813] with IG = 39.30816
Iter num: 3
Added advice frontier Point2D.Float[0.94003797, 0.4719628]
Added advice frontier Point2D.Float[0.8437285, 0.57751584]
Added advice frontier Point2D.Float[0.1827076, 0.3427581]
Added advice frontier Point2D.Float[0.20342085, 0.5926182]
Added advice frontier Point2D.Float[1.2821589, 2.398322]
Used Advice frontier: Point2D.Float[0.94003797, 0.4719628] with IG = 434.53653
Iter num: 4
Used Advice frontier: Point2D.Float[0.8437285, 0.57751584] with IG = 699.8492
Iter num: 5
Used Advice frontier: Point2D.Float[0.20342085, 0.5926182] with IG = 156.1315
Iter num: 6
Used Advice frontier: Point2D.Float[0.1827076, 0.3427581] with IG = 398.8557
Iter num: 7
Used Advice frontier: Point2D.Float[1.2821589, 2.398322] with IG = 41.544746
Iter num: 8
Added advice frontier Point2D.Float[0.59236, 2.7245262]
Added advice frontier Point2D.Float[0.6103684, 2.8168352]
Used Advice frontier: Point2D.Float[0.59236, 2.7245262] with IG = 126.07339
Iter num: 9
Used Advice frontier: Point2D.Float[0.6103684, 2.8168352] with IG = 1063.2733
Iter num: 10
Used frontier: Point2D.Float[1.8519326, 1.4836] with IG = 11.733725
Iter num: 11
Used frontier: Point2D.Float[2.6310759, 1.7178946] with IG = 27.831284
Iter num: 12
Added advice frontier Point2D.Float[3.3381608, 2.2547784]
Added advice frontier Point2D.Float[2.8715296, 0.9082545]
Added advice frontier Point2D.Float[2.7341301, 1.2188246]
Used Advice frontier: Point2D.Float[2.7341301, 1.2188246] with IG = 196.23279
Iter num: 13
Used Advice frontier: Point2D.Float[2.8715296, 0.9082545] with IG = 294.45865
Iter num: 14
Added advice frontier Point2D.Float[3.2280262, 0.15010247]
Added advice frontier Point2D.Float[3.5742831, 0.36293533]
Added advice frontier Point2D.Float[2.7784646, 0.32235062]
Used Advice frontier: Point2D.Float[2.7784646, 0.32235062] with IG = 145.75604
Iter num: 15
Used Advice frontier: Point2D.Float[3.2280262, 0.15010247] with IG = 207.7144
Iter num: 16
Used Advice frontier: Point2D.Float[3.5742831, 0.36293533] with IG = 246.04007
Iter num: 17
Used Advice frontier: Point2D.Float[3.3381608, 2.2547784] with IG = 47.580254
Iter num: 18
Added advice frontier Point2D.Float[3.2885237, 2.9017816]
Added advice frontier Point2D.Float[2.4083803, 2.583676]
Used Advice frontier: Point2D.Float[3.2885237, 2.9017816] with IG = 76.31462
Iter num: 19
Used Advice frontier: Point2D.Float[2.4083803, 2.583676] with IG = 98.52536
Iter num: 20
Used frontier: Point2D.Float[3.6340003, 1.4418125] with IG = 12.356183
Iter num: 21
Used frontier: Point2D.Float[1.7802423, 0.08833262] with IG = 1.9062905
Iter num: 22
Used frontier: Point2D.Float[4.3634295, 1.3110466] with IG = 5.170118
Iter num: 23
Used frontier: Point2D.Float[4.924622, 1.4074961] with IG = 57.953674
Iter num: 24
Added advice frontier Point2D.Float[5.182408, 0.51740205]
Added advice frontier Point2D.Float[5.0759745, 0.5233447]
Added advice frontier Point2D.Float[4.922319, 0.9635996]
Added advice frontier Point2D.Float[4.8452783, 1.0816667]
Used Advice frontier: Point2D.Float[4.8452783, 1.0816667] with IG = 298.19513
Iter num: 25
Added advice frontier Point2D.Float[4.995987, 2.1815214]
Used Advice frontier: Point2D.Float[4.922319, 0.9635996] with IG = 709.3251
Iter num: 26
Added advice frontier Point2D.Float[5.168751, 0.24463393]
Added advice frontier Point2D.Float[5.0076246, 0.32689676]
Used Advice frontier: Point2D.Float[5.0759745, 0.5233447] with IG = 167.93784
Iter num: 27
Used Advice frontier: Point2D.Float[5.182408, 0.51740205] with IG = 938.09357
Iter num: 28
Used Advice frontier: Point2D.Float[5.0076246, 0.32689676] with IG = 386.79166
Iter num: 29
Used Advice frontier: Point2D.Float[5.168751, 0.24463393] with IG = 552.7579
Iter num: 30
Used Advice frontier: Point2D.Float[4.995987, 2.1815214] with IG = 50.72709
Iter num: 31
Added advice frontier Point2D.Float[4.7466288, 2.5350788]
Added advice frontier Point2D.Float[4.4326, 2.5550594]
Added advice frontier Point2D.Float[5.031548, 2.6831353]
Used Advice frontier: Point2D.Float[4.7466288, 2.5350788] with IG = 228.96692

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9304715394973755, 1.5020737648010254) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0846651792526245, 0.6509681344032288) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9400379657745361, 0.4719628095626831) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8437284827232361, 0.5775158405303955) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.20342084765434265, 0.5926182270050049) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.18270759284496307, 0.34275808930397034) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5400080680847168, 0.6766549348831177) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8909798860549927, 1.0442441701889038) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1109421253204346, 1.7509299516677856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2821588516235352, 2.398322105407715) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9487836360931396, 2.675217390060425) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5923600196838379, 2.7245261669158936) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6103683710098267, 2.8168351650238037) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8165286779403687, 2.426744222640991) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9479763507843018, 2.137485980987549) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3254573345184326, 1.8478060960769653) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8519326448440552, 1.4836000204086304) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2153265476226807, 1.668516755104065) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.631075859069824, 1.7178945541381836) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7341301441192627, 1.2188246250152588) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8715295791625977, 0.9082545042037964) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.000499725341797, 0.7506380081176758) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7784645557403564, 0.3223506212234497) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.2280261516571045, 0.15010246634483337) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.5742831230163574, 0.362935334444046) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.401374340057373, 0.687089741230011) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1869802474975586, 0.9378437995910645) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.168193817138672, 1.4011073112487793) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1630923748016357, 1.6576906442642212) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.145282745361328, 1.956679344177246) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.327909469604492, 2.272106647491455) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.338160753250122, 2.2547783851623535) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1796319484710693, 2.335841178894043) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.839172124862671, 2.9270706176757812) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2885236740112305, 2.9017815589904785) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.839172124862671, 2.9270706176757812) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5799665451049805, 2.645988941192627) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4083802700042725, 2.5836760997772217) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.614448308944702, 2.266749143600464) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8928983211517334, 2.1289725303649902) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2875325679779053, 1.7494462728500366) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.634000301361084, 1.441812515258789) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.168193817138672, 1.4011073112487793) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9440674781799316, 1.3607099056243896) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.559581995010376, 1.316948413848877) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2038631439208984, 1.2487683296203613) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7094895839691162, 1.17439866065979) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.197967290878296, 1.0784000158309937) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1441315412521362, 1.0124986171722412) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2234957218170166, 0.9078978300094604) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4804407358169556, 0.5279069542884827) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7802423238754272, 0.08833262324333191) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4804407358169556, 0.5279069542884827) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2234957218170166, 0.9078978300094604) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1441315412521362, 1.0124986171722412) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.197967290878296, 1.0784000158309937) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7094895839691162, 1.17439866065979) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2038631439208984, 1.2487683296203613) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.559581995010376, 1.316948413848877) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9440674781799316, 1.3607099056243896) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.168193817138672, 1.4011073112487793) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.634000301361084, 1.441812515258789) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.034290790557861, 1.4879162311553955) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.363429546356201, 1.3110466003417969) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.924622058868408, 1.4074960947036743) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.845278263092041, 1.0816667079925537) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.922318935394287, 0.9635996222496033) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.902368545532227, 0.5433717966079712) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.075974464416504, 0.5233446955680847) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.182407855987549, 0.5174020528793335) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.007624626159668, 0.3268967568874359) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.168750762939453, 0.24463392794132233) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(5.182407855987549, 0.5174020528793335) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.005468845367432, 1.05800461769104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.034207820892334, 1.143347144126892) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.004998683929443, 1.5330076217651367) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.004683017730713, 1.7214555740356445) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9959869384765625, 2.181521415710449) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r1,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,b,21]  [r5,b,t,21]  [r5,t,21]  [h,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 31
Total sampled points = 17106
RRG size = 1551

Movement Length = 30.22106
Remaining path Length = 0.0
Total path Length = 30.22106

Advice samples: [12, 6, 3, 2, 0, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):5575.242189

Initialization time (in ms):556.347648
Sampling time (in ms):3942.726792
Advice time (in ms):8.04629
Path checking time (in ms):559.640649
Learning time (in ms):181.875971
Exploration time (in ms):0.0
Time taken other than these things (in ms):326.604839
Moving time (in ms):469.76205



