Parameters values: 
Environment: results/environments/env68/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.8954252276504072,0.20311360810568355), (1.3954252276504073,0.20311360810568355), (1.3954252276504073,0.5031136081056835), (0.8954252276504072,0.5031136081056835)]
[(0.355872380642126,2.6231142255295636), (0.855872380642126,2.6231142255295636), (0.855872380642126,2.9231142255295635), (0.355872380642126,2.9231142255295635)]
[(2.974022726205254,0.031906984478099296), (3.2740227262052537,0.031906984478099296), (3.2740227262052537,0.5319069844780993), (2.974022726205254,0.5319069844780993)]
[(3.0533537110996685,2.4983444834970197), (3.5533537110996685,2.4983444834970197), (3.5533537110996685,2.7983444834970195), (3.0533537110996685,2.7983444834970195)]
[(4.797814818012443,0.08683983328058655), (5.297814818012443,0.08683983328058655), (5.297814818012443,0.3868398332805865), (4.797814818012443,0.3868398332805865)]
[(5.2502397141982655,2.4633012176165927), (5.7502397141982655,2.4633012176165927), (5.7502397141982655,2.7633012176165925), (5.2502397141982655,2.7633012176165925)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.5067703,y=0.21261315,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.21261315,w=0.6857703,h=2.4572105]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.005347629,w=3.6421733,h=2.664476]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.005347629,w=3.6421733,h=2.664476]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.005347629,w=4.6982493,h=2.664476]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.005347629,w=4.6982493,h=2.7112648]  
t: java.awt.geom.Rectangle2D$Float[x=0.79542524,y=0.10311361,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.10311361,w=1.2395529,h=2.9200006]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.0,w=3.1181502,h=3.0231142]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.0,w=3.3974814,h=3.0231142]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.0,w=5.1419425,h=3.0231142]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.0,w=5.5943675,h=3.0231142]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0001928, 1.4652321] with IG = 35.521458
Iter num: 2
Used frontier: Point2D.Float[0.9489275, 0.5506609] with IG = 41.4844
Iter num: 3
Added advice frontier Point2D.Float[0.5546788, 0.34757075]
Added advice frontier Point2D.Float[0.27696642, 0.6563296]
Added advice frontier Point2D.Float[0.8344493, 0.34752098]
Used Advice frontier: Point2D.Float[0.8344493, 0.34752098] with IG = 253.3567
Iter num: 4
Used Advice frontier: Point2D.Float[0.5546788, 0.34757075] with IG = 357.43582
Iter num: 5
Used Advice frontier: Point2D.Float[0.27696642, 0.6563296] with IG = 240.80229
Iter num: 6
Used frontier: Point2D.Float[0.8695971, 2.3197045] with IG = 15.927938
Iter num: 7
Added advice frontier Point2D.Float[0.8454297, 2.5521939]
Added advice frontier Point2D.Float[0.8623508, 2.4843638]
Used Advice frontier: Point2D.Float[0.8623508, 2.4843638] with IG = 606.72754
Iter num: 8
Added advice frontier Point2D.Float[0.20598318, 2.5320807]
Added advice frontier Point2D.Float[0.28815594, 2.8995216]
Used Advice frontier: Point2D.Float[0.8454297, 2.5521939] with IG = 1430.4344
Iter num: 9
Used Advice frontier: Point2D.Float[0.20598318, 2.5320807] with IG = 156.30794
Iter num: 10
Used Advice frontier: Point2D.Float[0.28815594, 2.8995216] with IG = 265.5921
Iter num: 11
Used frontier: Point2D.Float[1.7717484, 2.5344758] with IG = 11.839524
Iter num: 12
Used frontier: Point2D.Float[1.8501549, 1.4156388] with IG = 12.146313
Iter num: 13
Used frontier: Point2D.Float[2.792791, 1.4866945] with IG = 23.250309
Iter num: 14
Added advice frontier Point2D.Float[3.113738, 0.67696136]
Added advice frontier Point2D.Float[2.8449688, 2.0147352]
Added advice frontier Point2D.Float[3.0458307, 1.9544531]
Added advice frontier Point2D.Float[2.9017134, 1.0303228]
Used Advice frontier: Point2D.Float[2.9017134, 1.0303228] with IG = 213.13329
Iter num: 15
Added advice frontier Point2D.Float[3.3137264, 0.58672076]
Added advice frontier Point2D.Float[3.4192846, 0.59067416]
Added advice frontier Point2D.Float[3.0240326, 2.398414]
Added advice frontier Point2D.Float[3.0069063, 2.1915624]
Used Advice frontier: Point2D.Float[3.113738, 0.67696136] with IG = 242.66501
Iter num: 16
Added advice frontier Point2D.Float[3.5254018, 0.19840643]
Added advice frontier Point2D.Float[3.414257, 0.08646605]
Used Advice frontier: Point2D.Float[3.3137264, 0.58672076] with IG = 455.7774
Iter num: 17
Used Advice frontier: Point2D.Float[3.4192846, 0.59067416] with IG = 946.6814
Iter num: 18
Used Advice frontier: Point2D.Float[3.5254018, 0.19840643] with IG = 246.08243
Iter num: 19
Used Advice frontier: Point2D.Float[3.414257, 0.08646605] with IG = 633.93036
Iter num: 20
Used Advice frontier: Point2D.Float[3.0458307, 1.9544531] with IG = 51.486374
Iter num: 21
Added advice frontier Point2D.Float[2.7524233, 2.6544588]
Added advice frontier Point2D.Float[2.7536716, 2.857489]
Added advice frontier Point2D.Float[3.0088377, 2.6735013]
Used Advice frontier: Point2D.Float[2.8449688, 2.0147352] with IG = 476.84268
Iter num: 22
Used Advice frontier: Point2D.Float[3.0069063, 2.1915624] with IG = 417.0593
Iter num: 23
Used Advice frontier: Point2D.Float[3.0240326, 2.398414] with IG = 481.7901
Iter num: 24
Used Advice frontier: Point2D.Float[3.0088377, 2.6735013] with IG = 362.96756
Iter num: 25
Used Advice frontier: Point2D.Float[2.7524233, 2.6544588] with IG = 388.92267
Iter num: 26
Used Advice frontier: Point2D.Float[2.7536716, 2.857489] with IG = 492.5279
Iter num: 27
Used frontier: Point2D.Float[3.7816951, 1.4398491] with IG = 14.856482
Iter num: 28
Used frontier: Point2D.Float[4.551898, 1.7749964] with IG = 26.862236
Iter num: 29
Used frontier: Point2D.Float[5.2323365, 1.3640728] with IG = 47.80518
Iter num: 30
Added advice frontier Point2D.Float[5.082225, 0.9683303]
Added advice frontier Point2D.Float[5.1020246, 1.0144367]
Used Advice frontier: Point2D.Float[5.1020246, 1.0144367] with IG = 268.00253
Iter num: 31
Added advice frontier Point2D.Float[5.216539, 0.41195196]
Added advice frontier Point2D.Float[5.44607, 0.52445304]
Added advice frontier Point2D.Float[4.552959, 0.27928844]
Added advice frontier Point2D.Float[4.757336, 0.49646574]
Added advice frontier Point2D.Float[4.870996, 2.0396678]
Used Advice frontier: Point2D.Float[5.082225, 0.9683303] with IG = 1992.9065
Iter num: 32
Used Advice frontier: Point2D.Float[4.757336, 0.49646574] with IG = 163.82007
Iter num: 33
Used Advice frontier: Point2D.Float[4.552959, 0.27928844] with IG = 335.32132
Iter num: 34
Added advice frontier Point2D.Float[4.7232223, 0.19513959]
Used Advice frontier: Point2D.Float[4.7232223, 0.19513959] with IG = 526.53015
Iter num: 35
Used Advice frontier: Point2D.Float[5.216539, 0.41195196] with IG = 113.67557
Iter num: 36
Used Advice frontier: Point2D.Float[5.44607, 0.52445304] with IG = 391.2071
Iter num: 37
Used Advice frontier: Point2D.Float[4.870996, 2.0396678] with IG = 57.954754
Iter num: 38
Added advice frontier Point2D.Float[5.1984997, 2.6530817]
Added advice frontier Point2D.Float[4.7138333, 0.33934703]
Used Advice frontier: Point2D.Float[5.1984997, 2.6530817] with IG = 138.57695
Iter num: 39
Used Advice frontier: Point2D.Float[4.7138333, 0.33934703] with IG = 39.887455
Iter num: 40
Added advice frontier Point2D.Float[4.266182, 2.6636565]
Added advice frontier Point2D.Float[4.265062, 2.8396437]
Used Advice frontier: Point2D.Float[4.266182, 2.6636565] with IG = 36.813927

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0001927614212036, 1.4652321338653564) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9489275217056274, 0.5506609082221985) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.916172444820404, 0.6378236413002014) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.834449291229248, 0.34752097725868225) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5546787977218628, 0.3475707471370697) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.2769664227962494, 0.6563295722007751) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7636252045631409, 0.8526116609573364) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8412540555000305, 1.0317291021347046) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8733455538749695, 1.5980674028396606) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8631119132041931, 2.0876739025115967) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8695970773696899, 2.319704532623291) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8623508214950562, 2.4843637943267822) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8454297184944153, 2.5521938800811768) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.20598317682743073, 2.53208065032959) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.2881559431552887, 2.899521589279175) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.20598317682743073, 2.53208065032959) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9169656038284302, 2.5461230278015137) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3088849782943726, 2.5329337120056152) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.771748423576355, 2.534475803375244) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5091681480407715, 2.3120830059051514) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0991439819335938, 1.980973482131958) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4732887744903564, 1.690245270729065) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8501548767089844, 1.41563880443573) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.334474802017212, 1.4313077926635742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7927908897399902, 1.4866944551467896) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9017133712768555, 1.030322790145874) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1137380599975586, 0.676961362361908) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3137264251708984, 0.5867207646369934) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.4192845821380615, 0.5906741619110107) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5254018306732178, 0.1984064280986786) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.414257049560547, 0.08646605163812637) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3137264251708984, 0.5867207646369934) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.139244318008423, 0.8869615793228149) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0086233615875244, 1.4128628969192505) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.045830726623535, 1.9544531106948853) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.844968795776367, 2.014735221862793) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.006906270980835, 2.1915624141693115) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0240325927734375, 2.398413896560669) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0088376998901367, 2.6735012531280518) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.7524232864379883, 2.65445876121521) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.753671646118164, 2.8574891090393066) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8714542388916016, 2.7599523067474365) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0240325927734375, 2.398413896560669) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.061060905456543, 2.1431658267974854) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.225879192352295, 1.9067035913467407) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4820194244384766, 1.6876963376998901) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7816951274871826, 1.4398491382598877) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.147047519683838, 1.509092092514038) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.551898002624512, 1.7749963998794556) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.232336521148682, 1.3640727996826172) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.102024555206299, 1.0144367218017578) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0822248458862305, 0.9683303236961365) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.031198501586914, 0.7104572057723999) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.757336139678955, 0.4964657425880432) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.552958965301514, 0.2792884409427643) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.723222255706787, 0.1951395869255066) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.757336139678955, 0.4964657425880432) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.910285949707031, 0.6279394030570984) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.216538906097412, 0.4119519591331482) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.446070194244385, 0.5244530439376831) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.259878635406494, 0.6180766224861145) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0822248458862305, 0.9683303236961365) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.010583877563477, 1.2460525035858154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.861755847930908, 1.5317960977554321) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.831924915313721, 1.6071995496749878) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.862496852874756, 1.9180858135223389) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.870995998382568, 2.039667844772339) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.128481388092041, 2.3174500465393066) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.19849967956543, 2.6530816555023193) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.128481388092041, 2.3174500465393066) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.010725975036621, 1.9819920063018799) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.931766033172607, 1.779152512550354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.874168395996094, 1.495748519897461) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.010583877563477, 1.2460525035858154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0822248458862305, 0.9683303236961365) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.910285949707031, 0.6279394030570984) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.713833332061768, 0.3393470346927643) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(4.910285949707031, 0.6279394030570984) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0822248458862305, 0.9683303236961365) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.010583877563477, 1.2460525035858154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.861755847930908, 1.5317960977554321) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.831924915313721, 1.6071995496749878) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.862496852874756, 1.9180858135223389) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.791769027709961, 2.1688733100891113) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.561331272125244, 2.386054039001465) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,t,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,b,22]  [r2,t,22]  [r2,b,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r5,35]  [r5,b,21]  [r5,t,21]  [r5,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [h,21]  [r5,21]  [r5,b,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21830
RRG size = 2001

Movement Length = 29.768412
Remaining path Length = 0.0
Total path Length = 29.768412

Advice samples: [17, 4, 5, 3, 2, 0, 0, 0, 0, 0] (31)

Total time taken (in ms):8015.931815

Initialization time (in ms):508.660344
Sampling time (in ms):5884.648421
Advice time (in ms):8.706088
Path checking time (in ms):809.647575
Learning time (in ms):196.937507
Exploration time (in ms):0.0
Time taken other than these things (in ms):607.33188
Moving time (in ms):1342.1772



