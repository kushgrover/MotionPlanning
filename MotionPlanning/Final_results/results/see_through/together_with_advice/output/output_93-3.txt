Parameters values: 
Environment: results/environments/env93/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.2055775115575231,0.0261172403192416), (1.5055775115575232,0.0261172403192416), (1.5055775115575232,0.5261172403192416), (1.2055775115575231,0.5261172403192416)]
[(0.8154766481140322,2.4611659312917658), (1.315476648114032,2.4611659312917658), (1.315476648114032,2.7611659312917656), (0.8154766481140322,2.7611659312917656)]
[(3.5483597585708004,0.037267940948356754), (3.8483597585708003,0.037267940948356754), (3.8483597585708003,0.5372679409483567), (3.5483597585708004,0.5372679409483567)]
[(2.2931552139582148,2.5833575871530914), (2.7931552139582148,2.5833575871530914), (2.7931552139582148,2.883357587153091), (2.2931552139582148,2.883357587153091)]
[(4.762753879852069,0.024486294182880307), (5.062753879852069,0.024486294182880307), (5.062753879852069,0.5244862941828803), (4.762753879852069,0.5244862941828803)]
[(4.553958656834876,2.486833717906787), (5.053958656834876,2.486833717906787), (5.053958656834876,2.786833717906787), (4.553958656834876,2.786833717906787)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.8494979,y=0.007084337,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.007084337,w=0.7921727,h=2.6599028]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.007084337,w=3.0996585,h=2.6599028]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.007084337,w=3.0996585,h=2.8598118]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.0030366436,w=5.261574,h=2.8638594]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.0030366436,w=5.261574,h=2.8638594]  
t: java.awt.geom.Rectangle2D$Float[x=1.1055775,y=0.0,w=0.5,h=0.6261172]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=0.89010084,h=2.861166]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=3.232883,h=2.861166]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=3.232883,h=2.9833577]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=4.4472775,h=2.9833577]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=4.4472775,h=2.9833577]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0061225, 1.4480478] with IG = 35.257412
Iter num: 2
Used frontier: Point2D.Float[1.0805694, 2.2987435] with IG = 35.130985
Iter num: 3
Added advice frontier Point2D.Float[0.29451165, 2.6151924]
Added advice frontier Point2D.Float[0.6608585, 2.8276799]
Used Advice frontier: Point2D.Float[0.6608585, 2.8276799] with IG = 128.6722
Iter num: 4
Used Advice frontier: Point2D.Float[0.29451165, 2.6151924] with IG = 236.12178
Iter num: 5
Used frontier: Point2D.Float[1.928104, 1.5042769] with IG = 11.57096
Iter num: 6
Used frontier: Point2D.Float[2.5954318, 1.6731489] with IG = 34.865307
Iter num: 7
Added advice frontier Point2D.Float[2.9859183, 0.9777464]
Added advice frontier Point2D.Float[3.0391495, 1.0473108]
Added advice frontier Point2D.Float[2.9856145, 2.0021284]
Added advice frontier Point2D.Float[3.1165338, 1.8036034]
Used Advice frontier: Point2D.Float[2.9856145, 2.0021284] with IG = 195.93909
Iter num: 8
Added advice frontier Point2D.Float[2.817583, 2.5414982]
Added advice frontier Point2D.Float[3.4140058, 2.6556036]
Added advice frontier Point2D.Float[3.2770867, 2.679042]
Added advice frontier Point2D.Float[3.2009149, 2.5859094]
Used Advice frontier: Point2D.Float[3.1165338, 1.8036034] with IG = 420.5097
Iter num: 9
Used Advice frontier: Point2D.Float[3.0391495, 1.0473108] with IG = 131.53719
Iter num: 10
Added advice frontier Point2D.Float[3.2995176, 0.21249793]
Added advice frontier Point2D.Float[3.164287, 0.40465054]
Added advice frontier Point2D.Float[3.498323, 0.23868549]
Added advice frontier Point2D.Float[3.3964133, 0.24844763]
Used Advice frontier: Point2D.Float[2.9859183, 0.9777464] with IG = 1141.6261
Iter num: 11
Used Advice frontier: Point2D.Float[3.164287, 0.40465054] with IG = 166.60782
Iter num: 12
Used Advice frontier: Point2D.Float[3.2995176, 0.21249793] with IG = 425.59003
Iter num: 13
Used Advice frontier: Point2D.Float[3.3964133, 0.24844763] with IG = 967.5889
Iter num: 14
Used Advice frontier: Point2D.Float[3.498323, 0.23868549] with IG = 976.79004
Iter num: 15
Used Advice frontier: Point2D.Float[2.817583, 2.5414982] with IG = 41.32435
Iter num: 16
Used Advice frontier: Point2D.Float[3.2009149, 2.5859094] with IG = 259.13727
Iter num: 17
Used Advice frontier: Point2D.Float[3.2770867, 2.679042] with IG = 831.1469
Iter num: 18
Used Advice frontier: Point2D.Float[3.4140058, 2.6556036] with IG = 719.88696
Iter num: 19
Used frontier: Point2D.Float[3.9458838, 1.4060825] with IG = 12.185002
Iter num: 20
Used frontier: Point2D.Float[4.4894166, 1.4907155] with IG = 40.71686
Iter num: 21
Added advice frontier Point2D.Float[5.126445, 2.0755997]
Added advice frontier Point2D.Float[4.9786906, 0.92206097]
Added advice frontier Point2D.Float[5.1380215, 1.0587013]
Added advice frontier Point2D.Float[5.191445, 1.7538725]
Used Advice frontier: Point2D.Float[4.9786906, 0.92206097] with IG = 131.94733
Iter num: 22
Added advice frontier Point2D.Float[4.9359655, 0.6221335]
Added advice frontier Point2D.Float[4.618687, 0.72748613]
Used Advice frontier: Point2D.Float[5.1380215, 1.0587013] with IG = 476.42337
Iter num: 23
Added advice frontier Point2D.Float[5.4256144, 0.061886117]
Used Advice frontier: Point2D.Float[4.9359655, 0.6221335] with IG = 194.98778
Iter num: 24
Added advice frontier Point2D.Float[5.147637, 0.115886025]
Used Advice frontier: Point2D.Float[4.618687, 0.72748613] with IG = 299.12146
Iter num: 25
Used Advice frontier: Point2D.Float[5.147637, 0.115886025] with IG = 101.5195
Iter num: 26
Used Advice frontier: Point2D.Float[5.4256144, 0.061886117] with IG = 353.13986
Iter num: 27
Used Advice frontier: Point2D.Float[5.191445, 1.7538725] with IG = 56.32195
Iter num: 28
Added advice frontier Point2D.Float[4.7124214, 2.4451325]
Added advice frontier Point2D.Float[4.8122387, 2.360957]
Used Advice frontier: Point2D.Float[5.126445, 2.0755997] with IG = 304.66663
Iter num: 29
Used Advice frontier: Point2D.Float[4.8122387, 2.360957] with IG = 235.60132
Iter num: 30
Used Advice frontier: Point2D.Float[4.7124214, 2.4451325] with IG = 765.86163
Iter num: 31
Added advice frontier Point2D.Float[4.4877796, 2.6280813]
Added advice frontier Point2D.Float[4.392978, 2.5210562]
Added advice frontier Point2D.Float[4.506914, 2.8684595]
Used Advice frontier: Point2D.Float[4.392978, 2.5210562] with IG = 304.5606
Iter num: 32
Used Advice frontier: Point2D.Float[4.4877796, 2.6280813] with IG = 699.42566
Iter num: 33
Used Advice frontier: Point2D.Float[4.506914, 2.8684595] with IG = 414.69943
Iter num: 34
Added advice frontier Point2D.Float[4.4146595, 2.6141815]
Used Advice frontier: Point2D.Float[4.4146595, 2.6141815] with IG = 369.69098
Iter num: 35
Used frontier: Point2D.Float[5.7071157, 2.712574] with IG = 11.245315
Iter num: 36
Used frontier: Point2D.Float[0.82921135, 0.53185487] with IG = 4.4964333
Iter num: 37
Added advice frontier Point2D.Float[0.966133, 0.027806705]
Added advice frontier Point2D.Float[0.51595074, 0.009048131]
Added advice frontier Point2D.Float[1.2006329, 0.0062349024]
Used Advice frontier: Point2D.Float[0.966133, 0.027806705] with IG = 151.34123

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0061224699020386, 1.4480477571487427) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0805693864822388, 2.298743486404419) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7772212028503418, 2.3791966438293457) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6608585119247437, 2.8276798725128174) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.2945116460323334, 2.615192413330078) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.41451120376586914, 2.486854314804077) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.166090488433838, 1.9010467529296875) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.928104043006897, 1.5042768716812134) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5954318046569824, 1.6731488704681396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.985614538192749, 2.0021283626556396) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1165337562561035, 1.8036034107208252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.039149522781372, 1.0473108291625977) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9859182834625244, 0.9777464270591736) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1642870903015137, 0.4046505391597748) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2995176315307617, 0.21249793469905853) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.3964133262634277, 0.24844762682914734) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4983229637145996, 0.2386854887008667) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.3695132732391357, 0.5030938982963562) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.219292640686035, 0.8853597044944763) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.12410306930542, 1.0538424253463745) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.101015329360962, 1.3276115655899048) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.999619722366333, 1.7334495782852173) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9261398315429688, 2.09826922416687) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8175830841064453, 2.5414981842041016) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2009148597717285, 2.585909366607666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2770867347717285, 2.679042100906372) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.414005756378174, 2.6556036472320557) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.063058853149414, 2.10817289352417) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.268110752105713, 1.8425025939941406) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6471188068389893, 1.512686848640442) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9458837509155273, 1.4060825109481812) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.323503494262695, 1.4039075374603271) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.489416599273682, 1.490715503692627) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.6046929359436035, 1.4196014404296875) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9786906242370605, 0.9220609664916992) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.138021469116211, 1.0587012767791748) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9786906242370605, 0.9220609664916992) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.935965538024902, 0.6221334934234619) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.618687152862549, 0.7274861335754395) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.935965538024902, 0.6221334934234619) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.213072776794434, 0.4111689627170563) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.147636890411377, 0.11588602513074875) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.425614356994629, 0.06188611686229706) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.283076286315918, 0.44110044836997986) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.148992538452148, 0.8318008780479431) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1804070472717285, 1.0494675636291504) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.291770935058594, 1.3303123712539673) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1914448738098145, 1.7538725137710571) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1264448165893555, 2.0755996704101562) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.812238693237305, 2.360956907272339) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.712421417236328, 2.4451324939727783) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.392978191375732, 2.5210561752319336) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.48777961730957, 2.6280813217163086) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:1>
(4.506914138793945, 2.868459463119507) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.41465950012207, 2.6141815185546875) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.562772750854492, 2.4261929988861084) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.812238693237305, 2.360956907272339) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.157486438751221, 2.1489381790161133) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.707115650177002, 2.712574005126953) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.157486438751221, 2.1489381790161133) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.803430080413818, 1.9500712156295776) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.494096279144287, 1.8815114498138428) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.319616794586182, 1.8546029329299927) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.996903419494629, 1.820205807685852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.668752670288086, 1.753515601158142) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3806545734405518, 1.6899515390396118) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.244840145111084, 1.6595878601074219) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9023194313049316, 1.5545998811721802) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6155529022216797, 1.46577787399292) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.362663984298706, 1.3987188339233398) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6555083990097046, 1.1772630214691162) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.359997272491455, 1.098752737045288) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1831457614898682, 1.0532195568084717) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0355948209762573, 0.8373735547065735) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8292113542556763, 0.5318548679351807) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [h,46]  [r4,46]  [h,46]  [r3,46]  [r3,b,32]  [r3,32]  [r3,t,32]  [r3,32]  [h,32]  [r4,32]  [r4,t,32]  [r4,32]  [r4,b,25]  [r4,25]  [h,25]  [r5,25]  [h,25]  [r5,25]  [r5,t,25]  [r5,25]  [r5,t,25]  [r5,25]  [r5,t,25]  [r5,b,42]  [r5,42]  [h,42]  [r6,42]  [r6,t,42]  [r6,42]  [r6,b,t,33]  [r6,t,33]  [r6,b,33]  [r6,t,33]  [r6,33]  [h,33]  [r1,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20806
RRG size = 1851

Movement Length = 28.34579
Remaining path Length = 0.0
Total path Length = 28.34579

Advice samples: [10, 8, 6, 1, 2, 2, 0, 0, 0, 0] (29)

Total time taken (in ms):8242.544875

Initialization time (in ms):674.116408
Sampling time (in ms):6158.654579
Advice time (in ms):9.862613
Path checking time (in ms):774.748606
Learning time (in ms):215.873847
Exploration time (in ms):0.0
Time taken other than these things (in ms):409.288822
Moving time (in ms):1610.6128



