Parameters values: 
Environment: results/environments/env60/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.20002434897286384,0.016058018028613074), (0.5000243489728639,0.016058018028613074), (0.5000243489728639,0.5160580180286131), (0.20002434897286384,0.5160580180286131)]
[(0.6702677824099635,2.6414287188664876), (1.1702677824099634,2.6414287188664876), (1.1702677824099634,2.9414287188664874), (0.6702677824099635,2.9414287188664874)]
[(3.0124567504930395,0.14423158156954774), (3.5124567504930395,0.14423158156954774), (3.5124567504930395,0.44423158156954773), (3.0124567504930395,0.44423158156954773)]
[(2.2305339462624283,2.5076496885715023), (2.7305339462624283,2.5076496885715023), (2.7305339462624283,2.807649688571502), (2.2305339462624283,2.807649688571502)]
[(5.073039253800532,0.049590439794048535), (5.373039253800532,0.049590439794048535), (5.373039253800532,0.5495904397940485), (5.073039253800532,0.5495904397940485)]
[(4.991242793062115,2.486027989407533), (5.291242793062115,2.486027989407533), (5.291242793062115,2.986027989407533), (4.991242793062115,2.986027989407533)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.6169832,y=0.041905288,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.041905288,w=1.6212,h=2.807913]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.041905288,w=2.0915399,h=2.807913]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.041905288,w=3.204024,h=2.807913]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.025445752,w=5.627618,h=2.8243728]  java.awt.geom.Rectangle2D$Float[x=0.19578318,y=0.025445752,w=5.627618,h=2.8243728]  
t: java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=0.5,h=0.616058]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=1.1702434,h=3.0414288]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=3.5124323,h=3.0414288]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=3.5124323,h=3.0414288]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=5.373015,h=3.0414288]  java.awt.geom.Rectangle2D$Float[x=0.10002435,y=0.0,w=5.373015,h=3.086028]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9814788, 1.4293276] with IG = 36.186516
Iter num: 2
Used frontier: Point2D.Float[0.9795347, 0.55960405] with IG = 45.991512
Iter num: 3
Added advice frontier Point2D.Float[1.7050717, 0.17371541]
Added advice frontier Point2D.Float[1.4335728, 0.24354206]
Added advice frontier Point2D.Float[0.576622, 0.48810714]
Used Advice frontier: Point2D.Float[0.576622, 0.48810714] with IG = 244.37505
Iter num: 4
Used Advice frontier: Point2D.Float[1.4335728, 0.24354206] with IG = 112.21255
Iter num: 5
Used Advice frontier: Point2D.Float[1.7050717, 0.17371541] with IG = 356.71674
Iter num: 6
Used frontier: Point2D.Float[0.9405881, 2.334038] with IG = 12.303058
Iter num: 7
Added advice frontier Point2D.Float[0.29437822, 2.761797]
Added advice frontier Point2D.Float[0.97516793, 2.5692275]
Added advice frontier Point2D.Float[0.54370195, 2.7647552]
Used Advice frontier: Point2D.Float[0.97516793, 2.5692275] with IG = 420.66653
Iter num: 8
Used Advice frontier: Point2D.Float[0.54370195, 2.7647552] with IG = 135.15376
Iter num: 9
Used Advice frontier: Point2D.Float[0.29437822, 2.761797] with IG = 401.05673
Iter num: 10
Used frontier: Point2D.Float[1.8391607, 2.5312424] with IG = 14.368694
Iter num: 11
Used frontier: Point2D.Float[1.8749858, 1.4627676] with IG = 11.932206
Iter num: 12
Used frontier: Point2D.Float[2.7565124, 1.4110938] with IG = 25.91334
Iter num: 13
Added advice frontier Point2D.Float[2.8570015, 2.289472]
Added advice frontier Point2D.Float[3.241332, 0.7727634]
Added advice frontier Point2D.Float[3.1366842, 1.165464]
Added advice frontier Point2D.Float[2.7448251, 2.72191]
Used Advice frontier: Point2D.Float[3.1366842, 1.165464] with IG = 220.93604
Iter num: 14
Added advice frontier Point2D.Float[3.1998758, 0.52619916]
Added advice frontier Point2D.Float[3.2197874, 0.5949212]
Used Advice frontier: Point2D.Float[3.241332, 0.7727634] with IG = 246.05997
Iter num: 15
Used Advice frontier: Point2D.Float[3.2197874, 0.5949212] with IG = 558.2149
Iter num: 16
Used Advice frontier: Point2D.Float[3.1998758, 0.52619916] with IG = 1397.6539
Iter num: 17
Added advice frontier Point2D.Float[2.2637305, 0.25537673]
Used Advice frontier: Point2D.Float[2.2637305, 0.25537673] with IG = 102.612854
Iter num: 18
Used Advice frontier: Point2D.Float[2.8570015, 2.289472] with IG = 44.059444
Iter num: 19
Added advice frontier Point2D.Float[3.2669702, 2.6353502]
Added advice frontier Point2D.Float[3.358493, 2.5051794]
Used Advice frontier: Point2D.Float[2.7448251, 2.72191] with IG = 223.83853
Iter num: 20
Used Advice frontier: Point2D.Float[3.2669702, 2.6353502] with IG = 178.8227
Iter num: 21
Used Advice frontier: Point2D.Float[3.358493, 2.5051794] with IG = 628.43524
Iter num: 22
Used frontier: Point2D.Float[3.9601505, 1.4519502] with IG = 14.06866
Iter num: 23
Used frontier: Point2D.Float[4.8431497, 1.4665465] with IG = 23.744276
Iter num: 24
Added advice frontier Point2D.Float[5.1305857, 0.92009485]
Added advice frontier Point2D.Float[4.9452953, 2.2894347]
Added advice frontier Point2D.Float[5.1538568, 1.1341908]
Added advice frontier Point2D.Float[5.1185684, 0.5586794]
Added advice frontier Point2D.Float[5.164236, 2.3949926]
Used Advice frontier: Point2D.Float[5.1538568, 1.1341908] with IG = 157.39557
Iter num: 25
Used Advice frontier: Point2D.Float[5.1305857, 0.92009485] with IG = 464.34534
Iter num: 26
Used Advice frontier: Point2D.Float[5.1185684, 0.5586794] with IG = 276.53705
Iter num: 27
Added advice frontier Point2D.Float[5.7009964, 0.11938233]
Added advice frontier Point2D.Float[5.7742844, 0.31216508]
Used Advice frontier: Point2D.Float[5.7742844, 0.31216508] with IG = 95.08291
Iter num: 28
Used Advice frontier: Point2D.Float[5.7009964, 0.11938233] with IG = 484.86414
Iter num: 29
Used Advice frontier: Point2D.Float[4.9452953, 2.2894347] with IG = 39.441223
Iter num: 30
Added advice frontier Point2D.Float[5.6907372, 2.6007733]
Added advice frontier Point2D.Float[5.859144, 2.2705698]
Used Advice frontier: Point2D.Float[5.164236, 2.3949926] with IG = 411.42328

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9814788103103638, 1.4293276071548462) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9795346856117249, 0.5596040487289429) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5766220092773438, 0.4881071448326111) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.433572769165039, 0.24354206025600433) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7050716876983643, 0.17371541261672974) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.4248703718185425, 0.5945289134979248) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.23702871799469, 0.830075204372406) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9839912056922913, 1.516121506690979) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9629641175270081, 1.881927251815796) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.940588116645813, 2.334038019180298) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9751679301261902, 2.569227457046509) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4794362485408783, 2.5307445526123047) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5437019467353821, 2.7647552490234375) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.29437822103500366, 2.7617969512939453) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.377355694770813, 2.660587787628174) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8663922548294067, 2.6253371238708496) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2832551002502441, 2.61769437789917) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.839160680770874, 2.5312423706054688) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3254070281982422, 2.2263619899749756) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1920338869094849, 2.150470495223999) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1952440738677979, 1.832337498664856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.297329306602478, 1.7635778188705444) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7000483274459839, 1.565351128578186) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8749858140945435, 1.4627676010131836) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3737056255340576, 1.4780579805374146) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.756512403488159, 1.411093831062317) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1366841793060303, 1.1654640436172485) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2413320541381836, 0.7727633714675903) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.219787359237671, 0.5949211716651917) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.199875831604004, 0.5261991620063782) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.656201124191284, 0.37047192454338074) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.263730525970459, 0.2553767263889313) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.4477555751800537, 0.5031317472457886) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.576183795928955, 0.7023347616195679) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8894126415252686, 0.9963639974594116) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8780970573425293, 1.3742727041244507) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8501150608062744, 1.7316844463348389) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.857001543045044, 2.2894721031188965) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7448251247406006, 2.721909999847412) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.791729688644409, 2.652637481689453) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.266970157623291, 2.635350227355957) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.3584930896759033, 2.5051794052124023) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2506978511810303, 2.4599180221557617) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.962261199951172, 2.1418423652648926) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.287576675415039, 1.795766830444336) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6431076526641846, 1.6006579399108887) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9601504802703857, 1.451950192451477) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.099167823791504, 1.2211129665374756) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.843149662017822, 1.4665465354919434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.210848331451416, 1.3869787454605103) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1538567543029785, 1.1341907978057861) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.130585670471191, 0.9200948476791382) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.118568420410156, 0.5586794018745422) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.454668045043945, 0.830265998840332) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.561586380004883, 0.547066330909729) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.774284362792969, 0.3121650815010071) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.700996398925781, 0.1193823292851448) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.561586380004883, 0.547066330909729) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.454668045043945, 0.830265998840332) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.130585670471191, 0.9200948476791382) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1538567543029785, 1.1341907978057861) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1521220207214355, 1.4951082468032837) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.173785209655762, 1.761902093887329) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.003026485443115, 1.9336637258529663) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  


Remaining path: 
[r6,t,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 30
Total sampled points = 17618
RRG size = 1501

Movement Length = 24.848492
Remaining path Length = 0.5652868
Total path Length = 25.413778

Advice samples: [9, 5, 6, 2, 0, 0, 0, 0, 0, 0] (22)

Total time taken (in ms):5150.352995

Initialization time (in ms):624.278243
Sampling time (in ms):3642.493047
Advice time (in ms):7.24094
Path checking time (in ms):383.944243
Learning time (in ms):145.602977
Exploration time (in ms):0.0
Time taken other than these things (in ms):346.793545
Moving time (in ms):201.3266



