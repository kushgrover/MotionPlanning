Parameters values: 
Environment: results/environments/env25/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.5937390829624685,0.004281899667891163), (0.8937390829624685,0.004281899667891163), (0.8937390829624685,0.5042818996678912), (0.5937390829624685,0.5042818996678912)]
[(1.2921973656492045,2.6178082612597757), (1.7921973656492045,2.6178082612597757), (1.7921973656492045,2.9178082612597755), (1.2921973656492045,2.9178082612597755)]
[(2.781999202671893,0.23776887899508192), (3.281999202671893,0.23776887899508192), (3.281999202671893,0.5377688789950819), (2.781999202671893,0.5377688789950819)]
[(2.8956815412845263,2.57881261952147), (3.3956815412845263,2.57881261952147), (3.3956815412845263,2.8788126195214696), (2.8956815412845263,2.8788126195214696)]
[(4.958039048205711,0.0584349063029868), (5.458039048205711,0.0584349063029868), (5.458039048205711,0.3584349063029868), (4.958039048205711,0.3584349063029868)]
[(5.3742646647603465,2.627869561579521), (5.8742646647603465,2.627869561579521), (5.8742646647603465,2.927869561579521), (5.3742646647603465,2.927869561579521)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=0.79806864,h=2.6309826]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=3.264,h=2.6309826]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=3.264,h=2.6775007]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=4.333941,h=2.6775007]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=4.333941,h=2.6775007]  
t: java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=0.5,h=0.6042819]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=1.3984582,h=3.0178082]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=2.8882601,h=3.0178082]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=3.0019424,h=3.0178082]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=5.0643,h=3.0178082]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=5.4805255,h=3.0278695]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9820725, 1.4327531] with IG = 36.17323
Iter num: 2
Used frontier: Point2D.Float[0.90630054, 1.9674858] with IG = 53.6963
Iter num: 3
Added advice frontier Point2D.Float[1.1320655, 2.847531]
Added advice frontier Point2D.Float[0.9199001, 2.6556773]
Added advice frontier Point2D.Float[0.9581207, 2.3598003]
Added advice frontier Point2D.Float[1.4633204, 2.5728283]
Used Advice frontier: Point2D.Float[0.9581207, 2.3598003] with IG = 252.70253
Iter num: 4
Used Advice frontier: Point2D.Float[0.9199001, 2.6556773] with IG = 335.19324
Iter num: 5
Used Advice frontier: Point2D.Float[1.1320655, 2.847531] with IG = 349.59473
Iter num: 6
Used Advice frontier: Point2D.Float[1.4633204, 2.5728283] with IG = 172.88907
Iter num: 7
Used frontier: Point2D.Float[1.9230262, 1.4658614] with IG = 13.903534
Iter num: 8
Used frontier: Point2D.Float[2.7220507, 1.2402649] with IG = 27.265831
Iter num: 9
Added advice frontier Point2D.Float[3.0568342, 0.92568594]
Added advice frontier Point2D.Float[3.1033177, 1.1710496]
Added advice frontier Point2D.Float[2.891682, 2.0345285]
Added advice frontier Point2D.Float[2.968441, 0.6169085]
Added advice frontier Point2D.Float[2.976665, 0.68901455]
Used Advice frontier: Point2D.Float[3.1033177, 1.1710496] with IG = 258.06528
Iter num: 10
Used Advice frontier: Point2D.Float[3.0568342, 0.92568594] with IG = 400.43576
Iter num: 11
Used Advice frontier: Point2D.Float[2.976665, 0.68901455] with IG = 400.1907
Iter num: 12
Added advice frontier Point2D.Float[3.5117848, 0.2718222]
Added advice frontier Point2D.Float[3.360823, 0.2818458]
Added advice frontier Point2D.Float[3.6376488, 0.37775683]
Used Advice frontier: Point2D.Float[2.968441, 0.6169085] with IG = 1377.9126
Iter num: 13
Used Advice frontier: Point2D.Float[3.6376488, 0.37775683] with IG = 133.21759
Iter num: 14
Added advice frontier Point2D.Float[3.3758278, 0.2600361]
Used Advice frontier: Point2D.Float[3.5117848, 0.2718222] with IG = 607.86176
Iter num: 15
Used Advice frontier: Point2D.Float[3.3758278, 0.2600361] with IG = 732.7783
Iter num: 16
Used Advice frontier: Point2D.Float[3.360823, 0.2818458] with IG = 3777.4622
Iter num: 17
Used Advice frontier: Point2D.Float[2.891682, 2.0345285] with IG = 54.83017
Iter num: 18
Added advice frontier Point2D.Float[2.5760744, 2.552001]
Added advice frontier Point2D.Float[2.3879037, 2.7196965]
Added advice frontier Point2D.Float[2.8900337, 2.6965272]
Added advice frontier Point2D.Float[2.67156, 2.9026043]
Used Advice frontier: Point2D.Float[2.5760744, 2.552001] with IG = 161.86292
Iter num: 19
Used Advice frontier: Point2D.Float[2.3879037, 2.7196965] with IG = 396.74423
Iter num: 20
Used Advice frontier: Point2D.Float[2.67156, 2.9026043] with IG = 296.28336
Iter num: 21
Used Advice frontier: Point2D.Float[2.8900337, 2.6965272] with IG = 332.96634
Iter num: 22
Used frontier: Point2D.Float[3.6880152, 2.4499652] with IG = 22.30332
Iter num: 23
Used frontier: Point2D.Float[3.950093, 1.5517622] with IG = 16.043621
Iter num: 24
Used frontier: Point2D.Float[4.8198867, 1.4415485] with IG = 23.826696
Iter num: 25
Added advice frontier Point2D.Float[5.3629837, 0.69975716]
Added advice frontier Point2D.Float[5.2032595, 2.1327026]
Added advice frontier Point2D.Float[4.9711704, 1.9540932]
Used Advice frontier: Point2D.Float[4.9711704, 1.9540932] with IG = 156.02122
Iter num: 26
Added advice frontier Point2D.Float[4.356102, 2.5038545]
Added advice frontier Point2D.Float[4.415082, 2.4509046]
Added advice frontier Point2D.Float[5.2899866, 2.6652663]
Added advice frontier Point2D.Float[5.0191145, 2.6806865]
Used Advice frontier: Point2D.Float[5.2032595, 2.1327026] with IG = 341.46075
Iter num: 27
Used Advice frontier: Point2D.Float[5.0191145, 2.6806865] with IG = 154.17175
Iter num: 28
Used Advice frontier: Point2D.Float[5.2899866, 2.6652663] with IG = 368.58112
Iter num: 29
Used Advice frontier: Point2D.Float[4.356102, 2.5038545] with IG = 95.91561
Iter num: 30
Used Advice frontier: Point2D.Float[4.415082, 2.4509046] with IG = 1261.6519
Iter num: 31
Used Advice frontier: Point2D.Float[5.3629837, 0.69975716] with IG = 44.80282
Iter num: 32
Added advice frontier Point2D.Float[5.5442233, 0.27827135]
Added advice frontier Point2D.Float[5.716966, 0.029799284]
Used Advice frontier: Point2D.Float[5.5442233, 0.27827135] with IG = 217.95955
Iter num: 33
Used Advice frontier: Point2D.Float[5.716966, 0.029799284] with IG = 330.44815
Iter num: 34
Used frontier: Point2D.Float[4.5996103, 0.43999425] with IG = 14.576808
Iter num: 35
Added advice frontier Point2D.Float[4.4943566, 0.13867003]
Added advice frontier Point2D.Float[4.3765755, 0.29431775]
Used Advice frontier: Point2D.Float[4.3765755, 0.29431775] with IG = 375.3827
Iter num: 36
Used Advice frontier: Point2D.Float[4.4943566, 0.13867003] with IG = 512.3248
Iter num: 37
Added advice frontier Point2D.Float[4.9622817, 0.02443268]
Used Advice frontier: Point2D.Float[4.9622817, 0.02443268] with IG = 207.61188
Iter num: 38
Used frontier: Point2D.Float[5.811044, 1.606318] with IG = 11.599907
Iter num: 39
Used frontier: Point2D.Float[1.1980553, 0.5297485] with IG = 4.2065516
Iter num: 40
Used frontier: Point2D.Float[0.6608029, 0.5376179] with IG = 42.61237
Iter num: 41
Used frontier: Point2D.Float[2.1855333, 0.13049097] with IG = 2.4935806
Iter num: 42
Used frontier: Point2D.Float[0.060944334, 2.1665673] with IG = 0.71392703
Exploration complete
Iter num: 43
Iter num: 44
Iter num: 45
Iter num: 46
Iter num: 47
Iter num: 48
Iter num: 49

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9820724725723267, 1.432753086090088) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9063005447387695, 1.967485785484314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9581207036972046, 2.359800338745117) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.919900119304657, 2.655677318572998) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1320655345916748, 2.8475310802459717) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0928070545196533, 2.6518774032592773) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.4633203744888306, 2.5728282928466797) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1711584329605103, 2.218698501586914) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1849702596664429, 1.8609565496444702) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.923026204109192, 1.465861439704895) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.484462022781372, 1.2379124164581299) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.722050666809082, 1.240264892578125) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1033177375793457, 1.1710495948791504) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0568342208862305, 0.9256859421730042) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9766650199890137, 0.6890145540237427) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9684410095214844, 0.6169084906578064) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1233091354370117, 0.6642006635665894) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.637648820877075, 0.37775683403015137) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.511784791946411, 0.2718222141265869) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.3758277893066406, 0.2600361108779907) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.360822916030884, 0.2818458080291748) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.3591744899749756, 0.4236747920513153) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.240846633911133, 0.8166784048080444) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.066793441772461, 1.2772878408432007) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.953565835952759, 1.8685609102249146) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8916819095611572, 2.0345284938812256) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.881776809692383, 2.1339118480682373) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5760743618011475, 2.5520009994506836) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.3879036903381348, 2.719696521759033) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.671560049057007, 2.902604341506958) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.890033721923828, 2.6965272426605225) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8788928985595703, 2.5964913368225098) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.960970640182495, 2.327669858932495) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.272608518600464, 2.3533902168273926) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6880152225494385, 2.449965238571167) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4704854488372803, 2.3492698669433594) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.141408920288086, 2.0459353923797607) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.207113742828369, 1.8747583627700806) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.683901309967041, 1.6369073390960693) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9500930309295654, 1.5517622232437134) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.16039514541626, 1.464750051498413) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.394750595092773, 1.2964825630187988) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.819886684417725, 1.441548466682434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.72437047958374, 1.742848515510559) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.971170425415039, 1.9540932178497314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.203259468078613, 2.132702589035034) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.016878604888916, 2.2549726963043213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.0191144943237305, 2.6806864738464355) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.289986610412598, 2.665266275405884) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.0191144943237305, 2.6806864738464355) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.613715648651123, 2.7542502880096436) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.356101989746094, 2.503854513168335) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.415081977844238, 2.450904607772827) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.647733211517334, 2.3460075855255127) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.857824802398682, 2.2350809574127197) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.850707054138184, 1.8442304134368896) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9258575439453125, 1.5482257604599) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.89726448059082, 1.375464677810669) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.949554443359375, 1.118163824081421) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.130357265472412, 0.8344429731369019) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.362983703613281, 0.6997571587562561) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.544223308563232, 0.278271347284317) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.716966152191162, 0.029799284413456917) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.544223308563232, 0.278271347284317) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.362983703613281, 0.6997571587562561) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.968639373779297, 0.6314900517463684) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.734781265258789, 0.5208613872528076) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.599610328674316, 0.4399942457675934) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.376575469970703, 0.29431775212287903) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.494356632232666, 0.13867002725601196) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.962281703948975, 0.024432679638266563) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.899163722991943, 0.2682155668735504) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.968639373779297, 0.6314900517463684) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.130357265472412, 0.8344429731369019) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.210628509521484, 1.1885966062545776) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.393298625946045, 1.2676774263381958) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.554731845855713, 1.4252078533172607) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.811044216156006, 1.6063179969787598) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.634484767913818, 1.6288564205169678) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.349747657775879, 1.5410399436950684) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0001959800720215, 1.4972115755081177) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.825139045715332, 1.5216885805130005) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.559175968170166, 1.463957667350769) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.16039514541626, 1.464750051498413) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.806856155395508, 1.4218957424163818) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3683528900146484, 1.3553662300109863) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9594802856445312, 1.2864412069320679) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.484462022781372, 1.2379124164581299) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.916333556175232, 1.172366738319397) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2217892408370972, 1.112930178642273) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1760170459747314, 1.007155179977417) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1826337575912476, 0.783356249332428) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1980552673339844, 0.5297484993934631) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1151728630065918, 0.5123939514160156) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6608029007911682, 0.5376179218292236) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9312961101531982, 0.8387753367424011) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1386240720748901, 1.058765172958374) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3779067993164062, 1.073306918144226) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.955259084701538, 1.0831879377365112) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2220137119293213, 1.08873450756073) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8166961669921875, 1.1095696687698364) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.818880319595337, 0.834016740322113) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5092477798461914, 0.519372284412384) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3667688369750977, 0.35822194814682007) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.185533285140991, 0.1304909735918045) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3667688369750977, 0.35822194814682007) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5092477798461914, 0.519372284412384) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.818880319595337, 0.834016740322113) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8166961669921875, 1.1095696687698364) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.510279417037964, 1.2595664262771606) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9344357252120972, 1.5164556503295898) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3276652097702026, 1.8115859031677246) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,b,46]  [r2,t,46]  [r2,46]  [h,46]  [r3,46]  [r3,t,46]  [r3,46]  [r3,b,32]  [r3,b,t,32]  [r3,t,32]  [r3,32]  [h,32]  [r4,32]  [r4,b,25]  [r4,25]  [r4,t,25]  [r4,25]  [h,25]  [r6,25]  [r6,t,25]  [r6,25]  [r6,b,27]  [r6,27]  [h,27]  [r5,27]  [r5,t,27]  [r5,27]  [r5,t,27]  [r5,27]  [r5,b,33]  [r5,t,33]  [r5,33]  [h,33]  [r1,33]  [r1,t,33]  [r1,33]  [h,33]  [r3,33]  [h,33]  [r2,33]  


Remaining path: 
[r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 49
Total sampled points = 26170
RRG size = 2451

Movement Length = 38.67339
Remaining path Length = 4.1345296
Total path Length = 42.80792

Advice samples: [12, 10, 4, 2, 1, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):11406.226757

Initialization time (in ms):493.00716
Sampling time (in ms):8937.849056
Advice time (in ms):8.92934
Path checking time (in ms):1289.171385
Learning time (in ms):200.086045
Exploration time (in ms):0.0
Time taken other than these things (in ms):477.183771
Moving time (in ms):1946.1571



