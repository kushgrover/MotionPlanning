Parameters values: 
Environment: results/environments/env7/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.45798842997240674,0.20320806098818242), (0.9579884299724067,0.20320806098818242), (0.9579884299724067,0.5032080609881824), (0.45798842997240674,0.5032080609881824)]
[(0.15064940767973892,2.6614375312127665), (0.6506494076797389,2.6614375312127665), (0.6506494076797389,2.9614375312127663), (0.15064940767973892,2.9614375312127663)]
[(3.337233300959369,0.040492437694537815), (3.837233300959369,0.040492437694537815), (3.837233300959369,0.3404924376945378), (3.337233300959369,0.3404924376945378)]
[(2.8410373893699594,2.453229257038431), (3.1410373893699592,2.453229257038431), (3.1410373893699592,2.953229257038431), (2.8410373893699594,2.953229257038431)]
[(4.793953835593923,0.04623404401637616), (5.293953835593923,0.04623404401637616), (5.293953835593923,0.34623404401637614), (4.793953835593923,0.34623404401637614)]
[(4.511697806781696,2.490182754065923), (5.011697806781696,2.490182754065923), (5.011697806781696,2.7901827540659228), (4.511697806781696,2.7901827540659228)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=0.43932533,h=2.7150483]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=2.2571568,h=2.7150483]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=2.4035554,h=2.7150483]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=3.241067,h=2.7150483]  java.awt.geom.Rectangle2D$Float[x=1.0651306,y=0.07940136,w=4.6056647,h=2.815751]  
t: java.awt.geom.Rectangle2D$Float[x=0.35798842,y=0.10320806,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.10320806,w=1.007339,h=2.9582295]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.0,w=3.8865838,h=3.0614376]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.0,w=3.8865838,h=3.0614376]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.0,w=5.343304,h=3.0614376]  java.awt.geom.Rectangle2D$Float[x=0.05064941,y=0.0,w=5.343304,h=3.0614376]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0000722, 1.4663724] with IG = 35.527916
Iter num: 2
Used frontier: Point2D.Float[1.0529741, 0.50684506] with IG = 39.54278
Iter num: 3
Added advice frontier Point2D.Float[1.130765, 0.25246698]
Added advice frontier Point2D.Float[1.2919762, 0.19149643]
Added advice frontier Point2D.Float[0.9711803, 0.10948847]
Used Advice frontier: Point2D.Float[1.130765, 0.25246698] with IG = 375.9302
Iter num: 4
Used Advice frontier: Point2D.Float[1.2919762, 0.19149643] with IG = 580.19556
Iter num: 5
Used Advice frontier: Point2D.Float[0.9711803, 0.10948847] with IG = 302.0124
Iter num: 6
Used frontier: Point2D.Float[0.30924916, 0.4458457] with IG = 18.817272
Iter num: 7
Used frontier: Point2D.Float[0.8527969, 2.3886323] with IG = 14.684656
Iter num: 8
Added advice frontier Point2D.Float[0.26960662, 2.654229]
Added advice frontier Point2D.Float[1.4316067, 2.6307576]
Added advice frontier Point2D.Float[0.49694198, 2.542466]
Added advice frontier Point2D.Float[1.2545017, 2.5887616]
Used Advice frontier: Point2D.Float[0.49694198, 2.542466] with IG = 257.9432
Iter num: 9
Used Advice frontier: Point2D.Float[0.26960662, 2.654229] with IG = 394.75354
Iter num: 10
Used Advice frontier: Point2D.Float[1.2545017, 2.5887616] with IG = 98.60633
Iter num: 11
Used Advice frontier: Point2D.Float[1.4316067, 2.6307576] with IG = 549.40216
Iter num: 12
Used frontier: Point2D.Float[1.9394721, 1.482579] with IG = 13.32778
Iter num: 13
Used frontier: Point2D.Float[2.7357955, 1.3346981] with IG = 28.3952
Iter num: 14
Added advice frontier Point2D.Float[3.0936606, 0.8225053]
Added advice frontier Point2D.Float[3.0042772, 2.0066428]
Added advice frontier Point2D.Float[3.369718, 1.619064]
Added advice frontier Point2D.Float[3.0905511, 1.0970411]
Used Advice frontier: Point2D.Float[3.0905511, 1.0970411] with IG = 234.18985
Iter num: 15
Added advice frontier Point2D.Float[3.5632353, 0.4055944]
Added advice frontier Point2D.Float[3.1254013, 0.34437087]
Added advice frontier Point2D.Float[3.0713224, 0.17158535]
Added advice frontier Point2D.Float[3.243877, 0.30363345]
Added advice frontier Point2D.Float[3.2325742, 0.3289108]
Added advice frontier Point2D.Float[3.4636476, 0.50457937]
Used Advice frontier: Point2D.Float[3.0936606, 0.8225053] with IG = 364.2278
Iter num: 16
Used Advice frontier: Point2D.Float[3.1254013, 0.34437087] with IG = 208.68687
Iter num: 17
Used Advice frontier: Point2D.Float[3.2325742, 0.3289108] with IG = 923.51184
Iter num: 18
Added advice frontier Point2D.Float[3.3194597, 0.17368487]
Used Advice frontier: Point2D.Float[3.243877, 0.30363345] with IG = 3611.5076
Iter num: 19
Used Advice frontier: Point2D.Float[3.3194597, 0.17368487] with IG = 665.19916
Iter num: 20
Used Advice frontier: Point2D.Float[3.0713224, 0.17158535] with IG = 402.98837
Iter num: 21
Used Advice frontier: Point2D.Float[3.4636476, 0.50457937] with IG = 194.32903
Iter num: 22
Used Advice frontier: Point2D.Float[3.5632353, 0.4055944] with IG = 712.1863
Iter num: 23
Used Advice frontier: Point2D.Float[3.369718, 1.619064] with IG = 71.70335
Iter num: 24
Added advice frontier Point2D.Float[2.8040557, 2.391847]
Used Advice frontier: Point2D.Float[3.0042772, 2.0066428] with IG = 187.72453
Iter num: 25
Added advice frontier Point2D.Float[3.3991785, 2.6923976]
Added advice frontier Point2D.Float[3.5378957, 2.428953]
Added advice frontier Point2D.Float[3.2397144, 2.8726985]
Used Advice frontier: Point2D.Float[2.8040557, 2.391847] with IG = 230.34453
Iter num: 26
Used Advice frontier: Point2D.Float[3.5378957, 2.428953] with IG = 126.82373
Iter num: 27
Used Advice frontier: Point2D.Float[3.3991785, 2.6923976] with IG = 335.87024
Iter num: 28
Used Advice frontier: Point2D.Float[3.2397144, 2.8726985] with IG = 415.4522
Iter num: 29
Used frontier: Point2D.Float[4.2136183, 1.3916225] with IG = 10.791883
Iter num: 30
Used frontier: Point2D.Float[4.895895, 1.664997] with IG = 56.1173
Iter num: 31
Added advice frontier Point2D.Float[4.918591, 2.419923]
Added advice frontier Point2D.Float[4.959971, 0.94022536]
Added advice frontier Point2D.Float[4.820876, 2.0096586]
Added advice frontier Point2D.Float[5.2594266, 2.2596524]
Added advice frontier Point2D.Float[5.641189, 1.2757738]
Added advice frontier Point2D.Float[5.07795, 1.9220114]
Used Advice frontier: Point2D.Float[5.07795, 1.9220114] with IG = 317.49963
Iter num: 32
Used Advice frontier: Point2D.Float[4.820876, 2.0096586] with IG = 368.1824
Iter num: 33
Added advice frontier Point2D.Float[5.5078573, 2.723047]
Added advice frontier Point2D.Float[5.513137, 2.6862512]
Used Advice frontier: Point2D.Float[4.918591, 2.419923] with IG = 233.02509
Iter num: 34
Used Advice frontier: Point2D.Float[5.2594266, 2.2596524] with IG = 265.5075
Iter num: 35
Added advice frontier Point2D.Float[5.077924, 2.8819957]
Used Advice frontier: Point2D.Float[5.513137, 2.6862512] with IG = 182.34875
Iter num: 36
Used Advice frontier: Point2D.Float[5.5078573, 2.723047] with IG = 2690.1475
Iter num: 37
Used Advice frontier: Point2D.Float[5.077924, 2.8819957] with IG = 218.16205
Iter num: 38
Used Advice frontier: Point2D.Float[5.641189, 1.2757738] with IG = 55.91345
Iter num: 39
Used Advice frontier: Point2D.Float[4.959971, 0.94022536] with IG = 131.6872
Iter num: 40
Added advice frontier Point2D.Float[4.7409577, 0.25567833]
Added advice frontier Point2D.Float[4.388016, 0.2531216]
Added advice frontier Point2D.Float[4.303167, 0.3799724]
Added advice frontier Point2D.Float[4.2960386, 0.50880945]
Used Advice frontier: Point2D.Float[4.7409577, 0.25567833] with IG = 136.96864

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0000722408294678, 1.4663723707199097) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0529741048812866, 0.5068450570106506) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1307649612426758, 0.25246697664260864) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2919762134552002, 0.19149643182754517) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9711803197860718, 0.10948847234249115) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4223589599132538, 0.056735046207904816) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3092491626739502, 0.44584569334983826) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.762843132019043, 0.8319028615951538) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8879390358924866, 1.1180474758148193) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8561251759529114, 1.9429675340652466) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8527969121932983, 2.388632297515869) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4969419836997986, 2.542465925216675) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.2696066200733185, 2.654228925704956) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4969419836997986, 2.542465925216675) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1431477069854736, 2.600672721862793) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2545017004013062, 2.588761568069458) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.431606650352478, 2.6307575702667236) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2235798835754395, 2.1945674419403076) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.161359429359436, 1.934091329574585) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3389742374420166, 1.8298989534378052) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9394720792770386, 1.482578992843628) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5876076221466064, 1.3583904504776) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.735795497894287, 1.3346980810165405) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0905511379241943, 1.097041130065918) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.093660593032837, 0.8225052952766418) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.125401258468628, 0.34437087178230286) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.232574224472046, 0.32891079783439636) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.2438769340515137, 0.303633451461792) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.3194596767425537, 0.17368486523628235) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.071322441101074, 0.171585351228714) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4636476039886475, 0.5045793652534485) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.563235282897949, 0.4055944085121155) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.4636476039886475, 0.5045793652534485) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.217531204223633, 0.80003821849823) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.163536548614502, 1.1825954914093018) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.313384532928467, 1.5238440036773682) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.369718074798584, 1.6190639734268188) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.004277229309082, 2.0066428184509277) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.804055690765381, 2.3918468952178955) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.925309896469116, 2.2938923835754395) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.290191173553467, 2.3329684734344482) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.537895679473877, 2.428952932357788) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3991785049438477, 2.6923975944519043) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.2397143840789795, 2.8726985454559326) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.3072407245635986, 2.632002830505371) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.2468154430389404, 2.4159417152404785) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.156196355819702, 2.1518757343292236) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.186397075653076, 1.9504008293151855) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3952202796936035, 1.793272614479065) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.762805461883545, 1.6043555736541748) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.924001932144165, 1.512526512145996) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.213618278503418, 1.391622543334961) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.315873622894287, 1.4916915893554688) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.895895004272461, 1.6649969816207886) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0779500007629395, 1.922011375427246) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.820876121520996, 2.0096585750579834) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.82084846496582, 2.176269054412842) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.918591022491455, 2.4199230670928955) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.259426593780518, 2.2596523761749268) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.50626277923584, 2.449120044708252) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.513136863708496, 2.686251163482666) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.507857322692871, 2.7230470180511475) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.077923774719238, 2.881995677947998) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.167137622833252, 2.530513286590576) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.156526565551758, 2.1685056686401367) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.155126571655273, 1.9746382236480713) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.332456111907959, 1.8337410688400269) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.5163140296936035, 1.5891247987747192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.641189098358154, 1.2757737636566162) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.959970951080322, 0.94022536277771) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,b,t,2]  [r3,t,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21522
RRG size = 2001

Movement Length = 24.717196
Remaining path Length = 1.6425515
Total path Length = 26.359747

Advice samples: [13, 5, 5, 5, 1, 3, 0, 0, 0, 0] (32)

Total time taken (in ms):8448.282861

Initialization time (in ms):666.146068
Sampling time (in ms):6402.645838
Advice time (in ms):9.51406
Path checking time (in ms):719.099711
Learning time (in ms):192.225427
Exploration time (in ms):0.0
Time taken other than these things (in ms):458.651757
Moving time (in ms):1140.8507



