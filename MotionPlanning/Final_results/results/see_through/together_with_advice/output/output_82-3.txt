Parameters values: 
Environment: results/environments/env82/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.22429528861020864,0.08591741363948323), (0.7242952886102086,0.08591741363948323), (0.7242952886102086,0.38591741363948323), (0.22429528861020864,0.38591741363948323)]
[(0.9020721818852151,2.560278604913877), (1.402072181885215,2.560278604913877), (1.402072181885215,2.860278604913877), (0.9020721818852151,2.860278604913877)]
[(2.6300295322791625,0.10570704546512527), (3.1300295322791625,0.10570704546512527), (3.1300295322791625,0.40570704546512526), (2.6300295322791625,0.40570704546512526)]
[(2.505145033718173,2.576587180023103), (3.005145033718173,2.576587180023103), (3.005145033718173,2.876587180023103), (2.505145033718173,2.876587180023103)]
[(4.680920781180385,0.041445982178426294), (4.980920781180385,0.041445982178426294), (4.980920781180385,0.5414459821784263), (4.680920781180385,0.5414459821784263)]
[(5.674388795572089,2.495657805141416), (5.9743887955720885,2.495657805141416), (5.9743887955720885,2.995657805141416), (5.674388795572089,2.995657805141416)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.7655495,y=0.10863759,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.10863759,w=0.3464954,h=2.761987]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.07357511,w=2.9677784,h=2.7970495]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.07357511,w=2.9677784,h=2.7970495]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.007389916,w=4.806885,h=2.8632345]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.007389916,w=4.806885,h=2.8632345]  
t: java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=0.7,h=0.48591742]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=1.377777,h=2.9602785]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=3.1057343,h=2.9602785]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=3.1057343,h=2.9765873]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=4.9566255,h=2.9765873]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=5.9500937,h=3.0956578]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9505482, 1.4099354] with IG = 37.413628
Iter num: 2
Used frontier: Point2D.Float[1.2377416, 0.56857705] with IG = 46.117985
Iter num: 3
Added advice frontier Point2D.Float[0.90329206, 0.19999303]
Added advice frontier Point2D.Float[0.67195165, 0.047917094]
Added advice frontier Point2D.Float[0.8057721, 0.19796781]
Added advice frontier Point2D.Float[0.8160776, 0.095192276]
Used Advice frontier: Point2D.Float[0.90329206, 0.19999303] with IG = 200.92206
Iter num: 4
Used Advice frontier: Point2D.Float[0.8057721, 0.19796781] with IG = 1025.2103
Iter num: 5
Used Advice frontier: Point2D.Float[0.8160776, 0.095192276] with IG = 968.13934
Iter num: 6
Used Advice frontier: Point2D.Float[0.67195165, 0.047917094] with IG = 659.2769
Iter num: 7
Used frontier: Point2D.Float[1.0417812, 2.3343751] with IG = 11.327384
Iter num: 8
Added advice frontier Point2D.Float[1.4675922, 2.4783292]
Added advice frontier Point2D.Float[1.4328157, 2.452462]
Added advice frontier Point2D.Float[0.69285727, 2.8620567]
Added advice frontier Point2D.Float[0.65012586, 2.6092546]
Added advice frontier Point2D.Float[0.84874016, 2.7375014]
Added advice frontier Point2D.Float[0.7670181, 2.7775784]
Used Advice frontier: Point2D.Float[1.4328157, 2.452462] with IG = 244.81255
Iter num: 9
Used Advice frontier: Point2D.Float[1.4675922, 2.4783292] with IG = 2307.2344
Iter num: 10
Used Advice frontier: Point2D.Float[0.65012586, 2.6092546] with IG = 118.94063
Iter num: 11
Added advice frontier Point2D.Float[0.80307907, 2.8679101]
Used Advice frontier: Point2D.Float[0.7670181, 2.7775784] with IG = 487.96936
Iter num: 12
Used Advice frontier: Point2D.Float[0.84874016, 2.7375014] with IG = 1098.6582
Iter num: 13
Used Advice frontier: Point2D.Float[0.80307907, 2.8679101] with IG = 723.7379
Iter num: 14
Used Advice frontier: Point2D.Float[0.69285727, 2.8620567] with IG = 905.98486
Iter num: 15
Used frontier: Point2D.Float[1.8729973, 1.4393762] with IG = 11.58864
Iter num: 16
Used frontier: Point2D.Float[2.6813328, 1.2900501] with IG = 26.583733
Iter num: 17
Added advice frontier Point2D.Float[3.1275024, 0.9538049]
Added advice frontier Point2D.Float[3.4004283, 1.5121933]
Added advice frontier Point2D.Float[3.1847088, 2.0974212]
Added advice frontier Point2D.Float[3.1610422, 1.8794261]
Used Advice frontier: Point2D.Float[3.1275024, 0.9538049] with IG = 178.99194
Iter num: 18
Added advice frontier Point2D.Float[3.1519103, 0.3504386]
Added advice frontier Point2D.Float[3.8197365, 0.4282343]
Added advice frontier Point2D.Float[3.5464292, 0.08191977]
Added advice frontier Point2D.Float[3.3780668, 0.098857984]
Used Advice frontier: Point2D.Float[3.1519103, 0.3504386] with IG = 165.39815
Iter num: 19
Used Advice frontier: Point2D.Float[3.3780668, 0.098857984] with IG = 295.60507
Iter num: 20
Used Advice frontier: Point2D.Float[3.5464292, 0.08191977] with IG = 590.9737
Iter num: 21
Used Advice frontier: Point2D.Float[3.8197365, 0.4282343] with IG = 226.67017
Iter num: 22
Used Advice frontier: Point2D.Float[3.4004283, 1.5121933] with IG = 67.07768
Iter num: 23
Used Advice frontier: Point2D.Float[3.1610422, 1.8794261] with IG = 228.11935
Iter num: 24
Added advice frontier Point2D.Float[3.0892556, 2.5852942]
Added advice frontier Point2D.Float[3.1490161, 2.8319745]
Added advice frontier Point2D.Float[3.2167752, 2.4654276]
Used Advice frontier: Point2D.Float[3.1847088, 2.0974212] with IG = 456.04633
Iter num: 25
Used Advice frontier: Point2D.Float[3.2167752, 2.4654276] with IG = 270.7086
Iter num: 26
Used Advice frontier: Point2D.Float[3.0892556, 2.5852942] with IG = 571.38885
Iter num: 27
Used Advice frontier: Point2D.Float[3.1490161, 2.8319745] with IG = 393.98645
Iter num: 28
Used frontier: Point2D.Float[2.723564, 2.4682226] with IG = 36.062027
Iter num: 29
Used frontier: Point2D.Float[4.267319, 1.4737853] with IG = 11.37101
Iter num: 30
Added advice frontier Point2D.Float[5.0828032, 0.99496406]
Added advice frontier Point2D.Float[5.1503234, 1.247269]
Added advice frontier Point2D.Float[5.0117426, 2.0218468]
Added advice frontier Point2D.Float[5.144138, 1.8655231]
Used Advice frontier: Point2D.Float[5.1503234, 1.247269] with IG = 95.20726
Iter num: 31
Added advice frontier Point2D.Float[4.9781804, 0.56994545]
Added advice frontier Point2D.Float[4.996015, 0.69894177]
Used Advice frontier: Point2D.Float[5.0828032, 0.99496406] with IG = 382.8727
Iter num: 32
Used Advice frontier: Point2D.Float[4.996015, 0.69894177] with IG = 324.1676
Iter num: 33
Added advice frontier Point2D.Float[5.40539, 0.10168338]
Added advice frontier Point2D.Float[5.1470585, 0.11235322]
Used Advice frontier: Point2D.Float[4.9781804, 0.56994545] with IG = 767.9114
Iter num: 34
Used Advice frontier: Point2D.Float[5.1470585, 0.11235322] with IG = 194.81532
Iter num: 35
Used Advice frontier: Point2D.Float[5.40539, 0.10168338] with IG = 386.77008
Iter num: 36
Used Advice frontier: Point2D.Float[5.144138, 1.8655231] with IG = 53.267838
Iter num: 37
Added advice frontier Point2D.Float[4.988085, 2.6607902]
Added advice frontier Point2D.Float[4.5734053, 2.624634]
Used Advice frontier: Point2D.Float[5.0117426, 2.0218468] with IG = 488.15

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9505481719970703, 1.4099353551864624) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2377415895462036, 0.5685770511627197) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9032920598983765, 0.19999302923679352) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8057721257209778, 0.19796781241893768) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.8160775899887085, 0.09519227594137192) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6719516515731812, 0.047917094081640244) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.81386399269104, 0.12332842499017715) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.854362428188324, 0.5808825492858887) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9505481719970703, 1.4099353551864624) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9971052408218384, 1.8574990034103394) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0417811870574951, 2.3343751430511475) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.432815670967102, 2.4524619579315186) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4675922393798828, 2.4783291816711426) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1333537101745605, 2.4592554569244385) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6501258611679077, 2.6092545986175537) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7670180797576904, 2.777578353881836) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8487401604652405, 2.737501382827759) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8030790686607361, 2.867910146713257) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.6928572654724121, 2.8620567321777344) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8999143242835999, 2.4471375942230225) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0811151266098022, 2.080129623413086) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3167035579681396, 1.8178153038024902) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5209717750549316, 1.6776586771011353) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8729972839355469, 1.4393762350082397) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.062991142272949, 1.5187546014785767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.68133282661438, 1.2900501489639282) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.12750244140625, 0.9538049101829529) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.122084617614746, 0.730083703994751) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1519103050231934, 0.35043859481811523) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.3780667781829834, 0.09885798394680023) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.54642915725708, 0.08191976696252823) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.8197364807128906, 0.4282343089580536) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.520163059234619, 0.6655764579772949) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.12750244140625, 0.9538049101829529) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.400428295135498, 1.5121933221817017) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1610422134399414, 1.879426121711731) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.184708833694458, 2.097421169281006) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2167751789093018, 2.4654276371002197) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.0892555713653564, 2.585294246673584) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1490161418914795, 2.831974506378174) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0892555713653564, 2.585294246673584) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.7235639095306396, 2.4682226181030273) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.896846294403076, 2.203259229660034) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1610422134399414, 1.879426121711731) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5435426235198975, 1.7570501565933228) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6879072189331055, 1.7093359231948853) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.205206871032715, 1.5634833574295044) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.267319202423096, 1.4737852811813354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.343188285827637, 1.3224589824676514) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.879271030426025, 1.43956458568573) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.150323390960693, 1.2472690343856812) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.082803249359131, 0.994964063167572) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.9960150718688965, 0.6989417672157288) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.978180408477783, 0.5699454545974731) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.077212810516357, 0.49537548422813416) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.147058486938477, 0.11235322058200836) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.405389785766602, 0.10168337821960449) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.304990291595459, 0.6167839169502258) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.288101673126221, 0.670392632484436) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.082803249359131, 0.994964063167572) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.150323390960693, 1.2472690343856812) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.247881889343262, 1.493460774421692) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,b,t,12]  [r1,t,12]  [r1,b,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,t,22]  [r2,b,t,22]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  


Remaining path: 
[r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20224
RRG size = 1852

Movement Length = 21.814247
Remaining path Length = 0.6393813
Total path Length = 22.453629

Advice samples: [11, 9, 4, 4, 1, 1, 0, 0, 0, 0] (30)

Total time taken (in ms):8125.921095

Initialization time (in ms):500.26772
Sampling time (in ms):6202.738365
Advice time (in ms):8.047544
Path checking time (in ms):655.006676
Learning time (in ms):206.248279
Exploration time (in ms):0.0
Time taken other than these things (in ms):553.612511
Moving time (in ms):1073.7418



