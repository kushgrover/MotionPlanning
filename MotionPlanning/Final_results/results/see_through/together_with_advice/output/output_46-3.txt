Parameters values: 
Environment: results/environments/env46/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.3894128487716697,0.039289316872941425), (1.6894128487716698,0.039289316872941425), (1.6894128487716698,0.5392893168729415), (1.3894128487716697,0.5392893168729415)]
[(1.4520520250416766,2.481448808500445), (1.7520520250416767,2.481448808500445), (1.7520520250416767,2.981448808500445), (1.4520520250416766,2.981448808500445)]
[(3.167089692495875,0.23908903056191635), (3.667089692495875,0.23908903056191635), (3.667089692495875,0.5390890305619164), (3.167089692495875,0.5390890305619164)]
[(2.8146729796212426,2.4550623872644257), (3.3146729796212426,2.4550623872644257), (3.3146729796212426,2.7550623872644255), (2.8146729796212426,2.7550623872644255)]
[(5.0757419258421095,0.03996213946118396), (5.375741925842109,0.03996213946118396), (5.375741925842109,0.539962139461184), (5.0757419258421095,0.539962139461184)]
[(5.2739720372703,2.5259212782368543), (5.7739720372703,2.5259212782368543), (5.7739720372703,2.825921278236854), (5.2739720372703,2.825921278236854)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0224276,y=0.0013820209,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.88877034,y=0.0013820209,w=0.33365715,h=2.675063]  java.awt.geom.Rectangle2D$Float[x=0.88877034,y=0.0013820209,w=1.62939,h=2.675063]  java.awt.geom.Rectangle2D$Float[x=0.88877034,y=0.0013820209,w=1.8889365,h=2.7241693]  java.awt.geom.Rectangle2D$Float[x=0.88877034,y=0.0013820209,w=3.8202431,h=2.7241693]  java.awt.geom.Rectangle2D$Float[x=0.88877034,y=0.0013820209,w=3.8322294,h=2.7241693]  
t: java.awt.geom.Rectangle2D$Float[x=1.2894129,y=0.0,w=0.5,h=0.6392893]  java.awt.geom.Rectangle2D$Float[x=1.2894129,y=0.0,w=0.5626391,h=3.0814488]  java.awt.geom.Rectangle2D$Float[x=1.2894129,y=0.0,w=2.4776769,h=3.0814488]  java.awt.geom.Rectangle2D$Float[x=1.2894129,y=0.0,w=2.4776769,h=3.0814488]  java.awt.geom.Rectangle2D$Float[x=1.2894129,y=0.0,w=4.186329,h=3.0814488]  java.awt.geom.Rectangle2D$Float[x=1.2894129,y=0.0,w=4.584559,h=3.0814488]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9582759, 1.6539903] with IG = 36.698055
Iter num: 2
Used frontier: Point2D.Float[1.2269205, 2.4914694] with IG = 55.71272
Iter num: 3
Added advice frontier Point2D.Float[1.5356804, 2.4063976]
Added advice frontier Point2D.Float[1.4476844, 2.3218577]
Added advice frontier Point2D.Float[1.0786008, 2.5751987]
Used Advice frontier: Point2D.Float[1.0786008, 2.5751987] with IG = 587.1258
Iter num: 4
Used Advice frontier: Point2D.Float[1.4476844, 2.3218577] with IG = 223.38107
Iter num: 5
Used Advice frontier: Point2D.Float[1.5356804, 2.4063976] with IG = 819.49896
Iter num: 6
Used frontier: Point2D.Float[0.13676742, 2.6170747] with IG = 16.945507
Iter num: 7
Used frontier: Point2D.Float[1.8712605, 1.4943992] with IG = 11.615394
Iter num: 8
Used frontier: Point2D.Float[2.7266653, 1.7021995] with IG = 26.67245
Iter num: 9
Added advice frontier Point2D.Float[3.0979602, 2.0124876]
Added advice frontier Point2D.Float[3.0845377, 1.9403974]
Added advice frontier Point2D.Float[3.214254, 2.3585215]
Added advice frontier Point2D.Float[3.4006023, 2.2008386]
Used Advice frontier: Point2D.Float[3.0845377, 1.9403974] with IG = 232.61414
Iter num: 10
Added advice frontier Point2D.Float[2.853401, 0.84413993]
Added advice frontier Point2D.Float[2.6873763, 2.665323]
Added advice frontier Point2D.Float[2.725642, 2.7381518]
Added advice frontier Point2D.Float[2.320693, 2.4667094]
Used Advice frontier: Point2D.Float[3.0979602, 2.0124876] with IG = 1363.7135
Iter num: 11
Added advice frontier Point2D.Float[2.7206104, 2.689971]
Used Advice frontier: Point2D.Float[3.4006023, 2.2008386] with IG = 280.5313
Iter num: 12
Used Advice frontier: Point2D.Float[3.214254, 2.3585215] with IG = 409.65158
Iter num: 13
Used Advice frontier: Point2D.Float[2.6873763, 2.665323] with IG = 149.3417
Iter num: 14
Used Advice frontier: Point2D.Float[2.7206104, 2.689971] with IG = 2416.8213
Iter num: 15
Used Advice frontier: Point2D.Float[2.725642, 2.7381518] with IG = 2064.2888
Iter num: 16
Used Advice frontier: Point2D.Float[2.320693, 2.4667094] with IG = 205.12459
Iter num: 17
Used Advice frontier: Point2D.Float[2.853401, 0.84413993] with IG = 50.23912
Iter num: 18
Added advice frontier Point2D.Float[2.374583, 0.4273439]
Added advice frontier Point2D.Float[2.8604112, 0.16201065]
Added advice frontier Point2D.Float[3.2545114, 0.18193182]
Added advice frontier Point2D.Float[3.1958406, 0.04746016]
Used Advice frontier: Point2D.Float[2.8604112, 0.16201065] with IG = 146.41806
Iter num: 19
Used Advice frontier: Point2D.Float[3.1958406, 0.04746016] with IG = 282.12735
Iter num: 20
Used Advice frontier: Point2D.Float[3.2545114, 0.18193182] with IG = 681.6
Iter num: 21
Used Advice frontier: Point2D.Float[2.374583, 0.4273439] with IG = 109.09591
Iter num: 22
Used frontier: Point2D.Float[3.8773372, 1.4324135] with IG = 15.64477
Iter num: 23
Used frontier: Point2D.Float[4.8467307, 1.473489] with IG = 20.527544
Iter num: 24
Added advice frontier Point2D.Float[4.8378525, 2.0079086]
Added advice frontier Point2D.Float[5.024314, 0.5337762]
Added advice frontier Point2D.Float[5.016585, 0.6431663]
Added advice frontier Point2D.Float[4.825336, 1.8262836]
Used Advice frontier: Point2D.Float[4.825336, 1.8262836] with IG = 282.9313
Iter num: 25
Added advice frontier Point2D.Float[5.1927366, 2.5624628]
Added advice frontier Point2D.Float[5.0563083, 2.3479965]
Added advice frontier Point2D.Float[1.5345868, 0.54558504]
Used Advice frontier: Point2D.Float[4.8378525, 2.0079086] with IG = 549.2822
Iter num: 26
Added advice frontier Point2D.Float[4.7001033, 2.6442075]
Added advice frontier Point2D.Float[4.45681, 2.5775065]
Added advice frontier Point2D.Float[5.1426587, 0.94212705]
Used Advice frontier: Point2D.Float[5.0563083, 2.3479965] with IG = 247.39842
Iter num: 27
Used Advice frontier: Point2D.Float[5.1927366, 2.5624628] with IG = 393.41882
Iter num: 28
Used Advice frontier: Point2D.Float[4.7001033, 2.6442075] with IG = 139.38132
Iter num: 29
Used Advice frontier: Point2D.Float[4.45681, 2.5775065] with IG = 396.39914
Iter num: 30
Used Advice frontier: Point2D.Float[5.1426587, 0.94212705] with IG = 54.423946
Iter num: 31
Added advice frontier Point2D.Float[4.7013087, 0.11894338]
Added advice frontier Point2D.Float[4.5810127, 0.3397064]
Added advice frontier Point2D.Float[5.041366, 0.062332578]
Used Advice frontier: Point2D.Float[5.016585, 0.6431663] with IG = 308.20755
Iter num: 32
Used Advice frontier: Point2D.Float[5.024314, 0.5337762] with IG = 911.8863
Iter num: 33
Used Advice frontier: Point2D.Float[4.7013087, 0.11894338] with IG = 190.20256
Iter num: 34
Used Advice frontier: Point2D.Float[4.5810127, 0.3397064] with IG = 397.75522
Iter num: 35
Used Advice frontier: Point2D.Float[5.041366, 0.062332578] with IG = 167.74353
Iter num: 36
Used Advice frontier: Point2D.Float[1.5345868, 0.54558504] with IG = 18.359856
Iter num: 37
Added advice frontier Point2D.Float[1.1013339, 0.1739291]
Added advice frontier Point2D.Float[1.2407019, 0.008094987]
Added advice frontier Point2D.Float[1.3090485, 0.3091883]
Used Advice frontier: Point2D.Float[1.1013339, 0.1739291] with IG = 100.781624

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9582759141921997, 1.6539902687072754) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.226920485496521, 2.491469383239746) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0786007642745972, 2.5751986503601074) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.447684407234192, 2.3218576908111572) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5356804132461548, 2.406397581100464) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2062426805496216, 2.440722703933716) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.40652474761009216, 2.5503551959991455) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.1367674171924591, 2.617074728012085) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7151796221733093, 2.2438526153564453) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.208674430847168, 1.9200953245162964) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7423601150512695, 1.5826524496078491) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8712605237960815, 1.4943991899490356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.31679368019104, 1.5067168474197388) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7266652584075928, 1.7021994590759277) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0845377445220947, 1.9403973817825317) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0979602336883545, 2.0124876499176025) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.400602340698242, 2.200838565826416) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2142539024353027, 2.3585214614868164) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9901914596557617, 2.3924436569213867) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.777411699295044, 2.467479944229126) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.6873762607574463, 2.66532301902771) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.7206103801727295, 2.6899709701538086) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.725641965866089, 2.738151788711548) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.320693016052246, 2.4667093753814697) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5430004596710205, 2.324885368347168) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.906956195831299, 2.175769329071045) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.868518590927124, 1.7169586420059204) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.852875232696533, 1.187458872795105) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.853400945663452, 0.8441399335861206) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8719186782836914, 0.5976334810256958) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8604111671447754, 0.16201065480709076) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.19584059715271, 0.0474601611495018) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2545113563537598, 0.18193182349205017) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.886303186416626, 0.24984081089496613) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7559869289398193, 0.2836339473724365) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3745830059051514, 0.4273439049720764) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.6503069400787354, 0.5527724027633667) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.853400945663452, 0.8441399335861206) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1374990940093994, 1.0807194709777832) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5528969764709473, 1.2201905250549316) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8773372173309326, 1.4324134588241577) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.141668796539307, 1.6980887651443481) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.722375392913818, 1.477311611175537) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.846730709075928, 1.4734890460968018) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.82533597946167, 1.826283574104309) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.837852478027344, 2.007908582687378) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.056308269500732, 2.347996473312378) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.192736625671387, 2.56246280670166) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.056308269500732, 2.347996473312378) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.700103282928467, 2.64420747756958) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.456809997558594, 2.5775065422058105) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.712241172790527, 2.3828959465026855) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.837852478027344, 2.007908582687378) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.943489074707031, 1.7257801294326782) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.059383869171143, 1.408666968345642) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1608428955078125, 1.0417574644088745) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.142658710479736, 0.9421270489692688) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.016584873199463, 0.6431663036346436) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.024313926696777, 0.5337762236595154) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.701308727264404, 0.11894337832927704) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.581012725830078, 0.3397063910961151) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.701308727264404, 0.11894337832927704) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.041366100311279, 0.062332578003406525) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.016413688659668, 0.40086227655410767) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.024313926696777, 0.5337762236595154) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.043952941894531, 0.8090516328811646) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.836008548736572, 1.135317087173462) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.507974624633789, 1.1141011714935303) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.127045154571533, 1.1006947755813599) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9664700031280518, 1.1105639934539795) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.622464179992676, 1.1171725988388062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3068530559539795, 1.1209689378738403) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.94346022605896, 1.120918869972229) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6374435424804688, 1.1034317016601562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.33839750289917, 1.0822770595550537) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9946388006210327, 1.0706394910812378) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7125695943832397, 1.0704405307769775) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3735568523406982, 1.0732932090759277) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1910920143127441, 1.0533514022827148) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.199224829673767, 0.935027539730072) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.224143147468567, 0.7857940196990967) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.534586787223816, 0.545585036277771) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1783676147460938, 0.7073121070861816) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r4,46]  [r4,t,46]  [r4,b,8]  [r4,b,t,8]  [r4,t,8]  [r4,8]  [h,8]  [r3,8]  [r3,t,8]  [r3,8]  [r3,b,25]  [r3,25]  [h,25]  [r6,25]  [r6,t,25]  [r6,25]  [r6,b,27]  [r6,27]  [h,27]  [r5,27]  [r5,t,27]  [r5,b,33]  [r5,33]  [r5,b,33]  [r5,t,33]  [r5,33]  [h,33]  [r1,33]  [r1,t,33]  [r1,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20040
RRG size = 1851

Movement Length = 28.537308
Remaining path Length = 0.0
Total path Length = 28.537308

Advice samples: [9, 12, 3, 6, 0, 0, 0, 0, 0, 0] (30)

Total time taken (in ms):7427.386302

Initialization time (in ms):688.108355
Sampling time (in ms):5518.356556
Advice time (in ms):8.227558
Path checking time (in ms):646.371354
Learning time (in ms):176.401355
Exploration time (in ms):0.0
Time taken other than these things (in ms):389.921124
Moving time (in ms):1073.7418



