Parameters values: 
Environment: results/environments/env21/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.5031038992222301,0.04180939818904401), (1.00310389922223,0.04180939818904401), (1.00310389922223,0.341809398189044), (0.5031038992222301,0.341809398189044)]
[(1.173343211046844,2.4621293487692637), (1.473343211046844,2.4621293487692637), (1.473343211046844,2.9621293487692637), (1.173343211046844,2.9621293487692637)]
[(3.1600174375443633,0.04792390697082467), (3.6600174375443633,0.04792390697082467), (3.6600174375443633,0.34792390697082465), (3.1600174375443633,0.34792390697082465)]
[(2.3975115207839894,2.618893938916532), (2.8975115207839894,2.618893938916532), (2.8975115207839894,2.918893938916532), (2.3975115207839894,2.918893938916532)]
[(4.372396017689072,0.0643798660059157), (4.872396017689072,0.0643798660059157), (4.872396017689072,0.3643798660059157), (4.372396017689072,0.3643798660059157)]
[(4.072981600435381,2.467103694186946), (4.372981600435381,2.467103694186946), (4.372981600435381,2.967103694186946), (4.072981600435381,2.967103694186946)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.2144022,y=0.049966194,w=0.19999993,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.073711134,y=0.049966194,w=1.340691,h=2.6439757]  java.awt.geom.Rectangle2D$Float[x=0.073711134,y=0.049966194,w=3.0540745,h=2.6439757]  java.awt.geom.Rectangle2D$Float[x=0.073711134,y=0.049966194,w=3.0773804,h=2.8036785]  java.awt.geom.Rectangle2D$Float[x=0.073711134,y=0.049966194,w=5.6040564,h=2.8036785]  java.awt.geom.Rectangle2D$Float[x=0.073711134,y=0.049966194,w=5.6040564,h=2.8036785]  
t: java.awt.geom.Rectangle2D$Float[x=0.4031039,y=0.0,w=0.7,h=0.4418094]  java.awt.geom.Rectangle2D$Float[x=0.4031039,y=0.0,w=1.1702392,h=3.0621293]  java.awt.geom.Rectangle2D$Float[x=0.4031039,y=0.0,w=3.3569136,h=3.0621293]  java.awt.geom.Rectangle2D$Float[x=0.4031039,y=0.0,w=3.3569136,h=3.0621293]  java.awt.geom.Rectangle2D$Float[x=0.4031039,y=0.0,w=4.569292,h=3.0621293]  java.awt.geom.Rectangle2D$Float[x=0.4031039,y=0.0,w=4.569292,h=3.0671036]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.89958, 1.4239914] with IG = 39.841404
Iter num: 2
Used frontier: Point2D.Float[1.1592253, 0.5040572] with IG = 40.800365
Iter num: 3
Added advice frontier Point2D.Float[0.8118632, 0.42992717]
Added advice frontier Point2D.Float[1.3598962, 0.07197173]
Added advice frontier Point2D.Float[1.336338, 0.038858872]
Added advice frontier Point2D.Float[1.097221, 2.3801925]
Added advice frontier Point2D.Float[0.83250004, 2.3947496]
Used Advice frontier: Point2D.Float[0.8118632, 0.42992717] with IG = 281.54416
Iter num: 4
Used Advice frontier: Point2D.Float[1.3598962, 0.07197173] with IG = 142.46606
Iter num: 5
Used Advice frontier: Point2D.Float[1.336338, 0.038858872] with IG = 2460.7507
Iter num: 6
Used Advice frontier: Point2D.Float[1.097221, 2.3801925] with IG = 42.42531
Iter num: 7
Added advice frontier Point2D.Float[0.24611202, 2.594344]
Used Advice frontier: Point2D.Float[0.83250004, 2.3947496] with IG = 377.18637
Iter num: 8
Used Advice frontier: Point2D.Float[0.24611202, 2.594344] with IG = 161.43974
Iter num: 9
Used frontier: Point2D.Float[1.8040006, 1.4371274] with IG = 10.819878
Iter num: 10
Used frontier: Point2D.Float[2.61285, 1.1750273] with IG = 27.143297
Iter num: 11
Added advice frontier Point2D.Float[2.9945457, 0.9523286]
Added advice frontier Point2D.Float[3.3029854, 1.628287]
Used Advice frontier: Point2D.Float[2.9945457, 0.9523286] with IG = 226.28934
Iter num: 12
Added advice frontier Point2D.Float[3.5024018, 0.4123603]
Added advice frontier Point2D.Float[3.6172361, 0.6260594]
Added advice frontier Point2D.Float[2.9566908, 0.22906567]
Added advice frontier Point2D.Float[3.1064386, 0.057219725]
Added advice frontier Point2D.Float[3.0732071, 0.37244684]
Added advice frontier Point2D.Float[3.0944722, 0.4180583]
Used Advice frontier: Point2D.Float[3.0944722, 0.4180583] with IG = 183.98085
Iter num: 13
Used Advice frontier: Point2D.Float[3.0732071, 0.37244684] with IG = 1987.0831
Iter num: 14
Added advice frontier Point2D.Float[2.8701022, 2.0790615]
Used Advice frontier: Point2D.Float[2.9566908, 0.22906567] with IG = 541.25885
Iter num: 15
Used Advice frontier: Point2D.Float[3.1064386, 0.057219725] with IG = 438.71698
Iter num: 16
Used Advice frontier: Point2D.Float[3.5024018, 0.4123603] with IG = 133.68617
Iter num: 17
Used Advice frontier: Point2D.Float[3.6172361, 0.6260594] with IG = 412.20303
Iter num: 18
Used Advice frontier: Point2D.Float[3.3029854, 1.628287] with IG = 75.55207
Iter num: 19
Used Advice frontier: Point2D.Float[2.8701022, 2.0790615] with IG = 159.1697
Iter num: 20
Added advice frontier Point2D.Float[3.0208495, 2.7549722]
Added advice frontier Point2D.Float[2.7577457, 2.5620165]
Added advice frontier Point2D.Float[2.4576015, 2.44387]
Used Advice frontier: Point2D.Float[2.7577457, 2.5620165] with IG = 161.82959
Iter num: 21
Added advice frontier Point2D.Float[2.9704435, 2.6142929]
Used Advice frontier: Point2D.Float[2.9704435, 2.6142929] with IG = 456.56314
Iter num: 22
Added advice frontier Point2D.Float[2.9549105, 2.797912]
Used Advice frontier: Point2D.Float[3.0208495, 2.7549722] with IG = 669.17786
Iter num: 23
Used Advice frontier: Point2D.Float[2.9549105, 2.797912] with IG = 1270.8461
Iter num: 24
Used Advice frontier: Point2D.Float[2.4576015, 2.44387] with IG = 137.76706
Iter num: 25
Used frontier: Point2D.Float[4.145944, 1.5194635] with IG = 12.196438
Iter num: 26
Used frontier: Point2D.Float[4.981363, 1.7122881] with IG = 39.29557
Iter num: 27
Added advice frontier Point2D.Float[4.9026036, 2.4189851]
Added advice frontier Point2D.Float[4.9753833, 0.9882463]
Added advice frontier Point2D.Float[5.0658927, 1.0845461]
Used Advice frontier: Point2D.Float[4.9026036, 2.4189851] with IG = 140.63269
Iter num: 28
Added advice frontier Point2D.Float[4.61974, 2.584725]
Added advice frontier Point2D.Float[4.634035, 2.7291205]
Added advice frontier Point2D.Float[4.432817, 2.7765758]
Used Advice frontier: Point2D.Float[4.61974, 2.584725] with IG = 305.02338
Iter num: 29
Used Advice frontier: Point2D.Float[4.634035, 2.7291205] with IG = 689.17285
Iter num: 30
Used Advice frontier: Point2D.Float[4.432817, 2.7765758] with IG = 483.70322
Iter num: 31
Used Advice frontier: Point2D.Float[5.0658927, 1.0845461] with IG = 51.70449
Iter num: 32
Added advice frontier Point2D.Float[4.6601357, 0.41308513]
Added advice frontier Point2D.Float[4.3396883, 0.5292116]
Used Advice frontier: Point2D.Float[4.9753833, 0.9882463] with IG = 756.67303
Iter num: 33
Used Advice frontier: Point2D.Float[4.6601357, 0.41308513] with IG = 143.23698
Iter num: 34
Added advice frontier Point2D.Float[5.626026, 0.35324332]
Added advice frontier Point2D.Float[5.74484, 0.7772551]
Used Advice frontier: Point2D.Float[4.3396883, 0.5292116] with IG = 293.39276

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8995800018310547, 1.4239914417266846) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.159225344657898, 0.5040572285652161) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8118631839752197, 0.42992717027664185) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2374351024627686, 0.2967941164970398) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.359896183013916, 0.07197172939777374) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3363380432128906, 0.03885887190699577) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2091890573501587, 0.7742552757263184) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1342774629592896, 1.4573692083358765) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.09722101688385, 2.380192518234253) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8325000405311584, 2.394749641418457) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.24611201882362366, 2.594343900680542) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7176541090011597, 2.2571635246276855) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0778772830963135, 1.9936541318893433) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8040006160736084, 1.4371273517608643) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.0509426593780518, 1.2350375652313232) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6128499507904053, 1.1750272512435913) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9945456981658936, 0.952328622341156) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0944721698760986, 0.418058305978775) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.073207139968872, 0.37244683504104614) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.956690788269043, 0.2290656715631485) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.106438636779785, 0.0572197251021862) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.073207139968872, 0.37244683504104614) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.502401828765869, 0.4123603105545044) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.6172361373901367, 0.6260594129562378) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2153854370117188, 0.7923440933227539) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1255626678466797, 1.299899935722351) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.302985429763794, 1.6282869577407837) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.107438325881958, 1.8782782554626465) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8701021671295166, 2.079061508178711) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.984515428543091, 2.395805597305298) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7577457427978516, 2.562016487121582) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9704434871673584, 2.614292860031128) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0208494663238525, 2.754972219467163) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.9549105167388916, 2.7979118824005127) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.9704434871673584, 2.614292860031128) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.7577457427978516, 2.562016487121582) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.457601547241211, 2.4438700675964355) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.653862476348877, 2.321782350540161) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8119423389434814, 2.131378650665283) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1022603511810303, 1.9948493242263794) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3840391635894775, 1.8451358079910278) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5895378589630127, 1.6969501972198486) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.037768840789795, 1.6060662269592285) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.145944118499756, 1.5194635391235352) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.285879135131836, 1.6895849704742432) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.981362819671631, 1.7122881412506104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.902603626251221, 2.41898512840271) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.619740009307861, 2.5847249031066895) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.634035110473633, 2.7291204929351807) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.432816982269287, 2.776575803756714) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.619740009307861, 2.5847249031066895) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.863736152648926, 2.3204007148742676) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.873622417449951, 1.9878779649734497) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.981362819671631, 1.7122881412506104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.150488376617432, 1.3377928733825684) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.065892696380615, 1.0845460891723633) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.975383281707764, 0.9882463216781616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.733207702636719, 0.7935251593589783) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,t,2]  [r3,b,2]  [r3,t,2]  [r3,b,t,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,b,35]  [r4,b,t,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 34
Total sampled points = 18705
RRG size = 1701

Movement Length = 22.485271
Remaining path Length = 1.5200043
Total path Length = 24.005276

Advice samples: [15, 5, 4, 2, 0, 1, 1, 0, 0, 0] (28)

Total time taken (in ms):6906.296806

Initialization time (in ms):522.299124
Sampling time (in ms):4950.040443
Advice time (in ms):8.669792
Path checking time (in ms):694.370859
Learning time (in ms):218.761485
Exploration time (in ms):0.0
Time taken other than these things (in ms):512.155103
Moving time (in ms):536.8709



