Parameters values: 
Environment: results/environments/env34/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.07012971210950994,0.008206016553493952), (0.37012971210950996,0.008206016553493952), (0.37012971210950996,0.508206016553494), (0.07012971210950994,0.508206016553494)]
[(0.8530976472399933,2.4863941177673836), (1.1530976472399932,2.4863941177673836), (1.1530976472399932,2.9863941177673836), (0.8530976472399933,2.9863941177673836)]
[(3.5272289108260013,0.0009762752748050116), (3.827228910826001,0.0009762752748050116), (3.827228910826001,0.500976275274805), (3.5272289108260013,0.500976275274805)]
[(2.1662173463219934,2.4511168849777687), (2.6662173463219934,2.4511168849777687), (2.6662173463219934,2.7511168849777685), (2.1662173463219934,2.7511168849777685)]
[(4.911307967794252,0.02049101097078131), (5.2113079677942515,0.02049101097078131), (5.2113079677942515,0.5204910109707813), (4.911307967794252,0.5204910109707813)]
[(5.150867157815469,2.465898143160138), (5.450867157815469,2.465898143160138), (5.450867157815469,2.965898143160138), (5.150867157815469,2.965898143160138)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.4196622,y=0.044992633,w=0.20000005,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.47626272,y=0.044992633,w=1.1433996,h=2.6409657]  java.awt.geom.Rectangle2D$Float[x=0.47626272,y=0.029717319,w=2.0336027,h=2.6562412]  java.awt.geom.Rectangle2D$Float[x=0.47626272,y=0.029717319,w=3.0408394,h=2.7263236]  java.awt.geom.Rectangle2D$Float[x=0.47626272,y=0.0047268607,w=4.0460305,h=2.751314]  java.awt.geom.Rectangle2D$Float[x=0.47626272,y=0.0047268607,w=4.0460305,h=2.751314]  
t: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=0.4701297,h=0.60820603]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.2530977,h=3.086394]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.927229,h=3.086394]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.927229,h=3.086394]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.311308,h=3.086394]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.550867,h=3.086394]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9247498, 1.572195] with IG = 38.651844
Iter num: 2
Used frontier: Point2D.Float[0.908395, 1.9916272] with IG = 35.73548
Iter num: 3
Added advice frontier Point2D.Float[0.98515314, 2.387774]
Added advice frontier Point2D.Float[0.52524, 2.678156]
Added advice frontier Point2D.Float[0.71544534, 2.9386506]
Added advice frontier Point2D.Float[0.77983594, 2.6875725]
Used Advice frontier: Point2D.Float[0.98515314, 2.387774] with IG = 247.82248
Iter num: 4
Used Advice frontier: Point2D.Float[0.77983594, 2.6875725] with IG = 203.62462
Iter num: 5
Used Advice frontier: Point2D.Float[0.52524, 2.678156] with IG = 392.51086
Iter num: 6
Used Advice frontier: Point2D.Float[0.71544534, 2.9386506] with IG = 310.03384
Iter num: 7
Used frontier: Point2D.Float[1.9462847, 2.6200123] with IG = 13.859908
Iter num: 8
Used frontier: Point2D.Float[0.9462686, 0.63647693] with IG = 11.583177
Iter num: 9
Added advice frontier Point2D.Float[1.5155904, 0.10086186]
Added advice frontier Point2D.Float[0.38993382, 0.6010474]
Added advice frontier Point2D.Float[0.5095782, 0.62277585]
Added advice frontier Point2D.Float[1.5429733, 0.31075874]
Used Advice frontier: Point2D.Float[0.5095782, 0.62277585] with IG = 228.88255
Iter num: 10
Used Advice frontier: Point2D.Float[0.38993382, 0.6010474] with IG = 822.3587
Iter num: 11
Used Advice frontier: Point2D.Float[1.5429733, 0.31075874] with IG = 83.769356
Iter num: 12
Used Advice frontier: Point2D.Float[1.5155904, 0.10086186] with IG = 472.42117
Iter num: 13
Used frontier: Point2D.Float[1.7962472, 1.2966145] with IG = 12.972923
Iter num: 14
Used frontier: Point2D.Float[2.6482646, 1.6335118] with IG = 23.915716
Iter num: 15
Added advice frontier Point2D.Float[2.8603597, 0.9202859]
Added advice frontier Point2D.Float[2.9985888, 1.0565544]
Added advice frontier Point2D.Float[3.2047205, 2.3566449]
Added advice frontier Point2D.Float[3.1149094, 1.9048951]
Used Advice frontier: Point2D.Float[3.1149094, 1.9048951] with IG = 185.24673
Iter num: 16
Added advice frontier Point2D.Float[3.3418262, 2.674493]
Added advice frontier Point2D.Float[3.3837917, 2.5490618]
Added advice frontier Point2D.Float[2.7392828, 2.684645]
Added advice frontier Point2D.Float[2.8345168, 2.835905]
Used Advice frontier: Point2D.Float[3.2047205, 2.3566449] with IG = 217.11244
Iter num: 17
Used Advice frontier: Point2D.Float[3.3837917, 2.5490618] with IG = 380.44336
Iter num: 18
Used Advice frontier: Point2D.Float[3.3418262, 2.674493] with IG = 756.0561
Iter num: 19
Used Advice frontier: Point2D.Float[2.8345168, 2.835905] with IG = 187.83965
Iter num: 20
Used Advice frontier: Point2D.Float[2.7392828, 2.684645] with IG = 559.46185
Iter num: 21
Used Advice frontier: Point2D.Float[2.9985888, 1.0565544] with IG = 59.882973
Iter num: 22
Added advice frontier Point2D.Float[3.4936533, 0.4623906]
Added advice frontier Point2D.Float[3.4324381, 0.62685823]
Used Advice frontier: Point2D.Float[2.8603597, 0.9202859] with IG = 515.1874
Iter num: 23
Used Advice frontier: Point2D.Float[3.4324381, 0.62685823] with IG = 153.40456
Iter num: 24
Added advice frontier Point2D.Float[2.3351884, 0.14955238]
Used Advice frontier: Point2D.Float[3.4936533, 0.4623906] with IG = 569.83154
Iter num: 25
Used Advice frontier: Point2D.Float[2.3351884, 0.14955238] with IG = 82.30744
Iter num: 26
Used frontier: Point2D.Float[3.9391325, 1.4508966] with IG = 10.923574
Iter num: 27
Used frontier: Point2D.Float[4.833423, 1.3133922] with IG = 14.689185
Iter num: 28
Added advice frontier Point2D.Float[4.925621, 2.029421]
Added advice frontier Point2D.Float[4.988366, 1.9512677]
Used Advice frontier: Point2D.Float[4.988366, 1.9512677] with IG = 60.462124
Iter num: 29
Added advice frontier Point2D.Float[5.213473, 2.4369748]
Added advice frontier Point2D.Float[5.009207, 2.4484618]
Used Advice frontier: Point2D.Float[4.925621, 2.029421] with IG = 997.7627
Iter num: 30
Added advice frontier Point2D.Float[5.1211753, 0.98899984]
Added advice frontier Point2D.Float[5.113569, 1.1073669]
Used Advice frontier: Point2D.Float[5.009207, 2.4484618] with IG = 205.73921
Iter num: 31
Added advice frontier Point2D.Float[5.172808, 0.5536319]
Added advice frontier Point2D.Float[5.087742, 0.6670891]
Used Advice frontier: Point2D.Float[5.213473, 2.4369748] with IG = 488.78528
Iter num: 32
Added advice frontier Point2D.Float[4.303247, 2.5533733]
Added advice frontier Point2D.Float[4.3662143, 2.3808103]
Used Advice frontier: Point2D.Float[4.3662143, 2.3808103] with IG = 116.48336
Iter num: 33
Used Advice frontier: Point2D.Float[4.303247, 2.5533733] with IG = 544.3883
Iter num: 34
Used Advice frontier: Point2D.Float[5.113569, 1.1073669] with IG = 49.38806
Iter num: 35
Used Advice frontier: Point2D.Float[5.1211753, 0.98899984] with IG = 843.09045
Iter num: 36
Used Advice frontier: Point2D.Float[5.087742, 0.6670891] with IG = 308.9831
Iter num: 37
Added advice frontier Point2D.Float[4.3562784, 0.11382393]
Added advice frontier Point2D.Float[4.268619, 0.24735135]
Added advice frontier Point2D.Float[4.8318477, 0.058474075]
Used Advice frontier: Point2D.Float[5.172808, 0.5536319] with IG = 705.191

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9247497916221619, 1.572195053100586) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.908394992351532, 1.9916272163391113) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9851531386375427, 2.3877739906311035) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7932894825935364, 2.388640880584717) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7798359394073486, 2.687572479248047) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5252400040626526, 2.6781558990478516) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.715445339679718, 2.938650608062744) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7932894825935364, 2.388640880584717) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.4932726621627808, 2.520020008087158) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9462846517562866, 2.6200122833251953) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.536991834640503, 2.3364973068237305) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2675771713256836, 2.1439177989959717) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0304867029190063, 1.8190184831619263) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9872199296951294, 1.4363276958465576) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.946268618106842, 0.6364769339561462) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5095782279968262, 0.6227758526802063) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.38993382453918457, 0.6010473966598511) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9772513508796692, 0.3984672725200653) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.542973279953003, 0.3107587397098541) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5155904293060303, 0.10086186230182648) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2636196613311768, 0.6192280650138855) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1720921993255615, 0.8817222118377686) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2072081565856934, 1.099124789237976) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7962472438812256, 1.2966145277023315) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.234729290008545, 1.5141665935516357) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6482646465301514, 1.6335117816925049) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1149094104766846, 1.9048950672149658) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2047204971313477, 2.356644868850708) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.38379168510437, 2.5490617752075195) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3418262004852295, 2.6744930744171143) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.834516763687134, 2.835905075073242) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7392828464508057, 2.684644937515259) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.887667417526245, 2.4039368629455566) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9372732639312744, 1.9228824377059937) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.974383592605591, 1.5606123208999634) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.998588800430298, 1.0565544366836548) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8603596687316895, 0.9202858805656433) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.021425724029541, 0.7811095118522644) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4324381351470947, 0.6268582344055176) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4936532974243164, 0.46239060163497925) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1672348976135254, 0.46007663011550903) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7546088695526123, 0.291374534368515) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.335188388824463, 0.1495523750782013) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.510490894317627, 0.33942538499832153) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.775620698928833, 0.6682276129722595) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9015285968780518, 0.7754784822463989) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.192645311355591, 1.094511866569519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.62117600440979, 1.287916898727417) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9391324520111084, 1.4508966207504272) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7804508209228516, 1.112020492553711) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.254831314086914, 1.095349669456482) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.708250045776367, 1.0817561149597168) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.833423137664795, 1.313392162322998) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.444290637969971, 1.2714425325393677) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.217805862426758, 1.6094858646392822) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.502462863922119, 1.8026341199874878) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.669155120849609, 1.883687138557434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.98836612701416, 1.9512677192687988) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.925621032714844, 2.029421091079712) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.0305938720703125, 2.0792105197906494) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.009206771850586, 2.4484617710113525) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.213472843170166, 2.4369747638702393) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.832853317260742, 2.4513306617736816) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.5642571449279785, 2.374209403991699) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.366214275360107, 2.380810260772705) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.303246974945068, 2.553373336791992) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.5642571449279785, 2.374209403991699) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.91808557510376, 2.412008762359619) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.925621032714844, 2.029421091079712) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.963798999786377, 1.7680996656417847) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.003448009490967, 1.5347862243652344) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.999342918395996, 1.2438591718673706) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1135687828063965, 1.107366919517517) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.121175289154053, 0.9889998435974121) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20141
RRG size = 1851

Movement Length = 27.228294
Remaining path Length = 1.3053181
Total path Length = 28.533613

Advice samples: [11, 8, 5, 3, 1, 1, 0, 0, 0, 0] (29)

Total time taken (in ms):6967.538227

Initialization time (in ms):493.806384
Sampling time (in ms):5117.893993
Advice time (in ms):7.673528
Path checking time (in ms):535.111637
Learning time (in ms):152.175099
Exploration time (in ms):0.0
Time taken other than these things (in ms):660.877586
Moving time (in ms):402.6532



