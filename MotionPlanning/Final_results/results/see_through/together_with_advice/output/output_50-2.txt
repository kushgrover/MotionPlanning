Parameters values: 
Environment: results/environments/env50/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.27538844399265894,0.11128085666601842), (0.7753884439926589,0.11128085666601842), (0.7753884439926589,0.41128085666601844), (0.27538844399265894,0.41128085666601844)]
[(0.8231904685441876,2.506554649993826), (1.3231904685441878,2.506554649993826), (1.3231904685441878,2.8065546499938256), (0.8231904685441876,2.8065546499938256)]
[(2.575872930327833,0.16310067000301773), (3.075872930327833,0.16310067000301773), (3.075872930327833,0.4631006700030177), (2.575872930327833,0.4631006700030177)]
[(3.3454892116391823,2.4941197304190794), (3.645489211639182,2.4941197304190794), (3.645489211639182,2.9941197304190794), (3.3454892116391823,2.9941197304190794)]
[(4.68907278552569,0.03259265555890535), (4.98907278552569,0.03259265555890535), (4.98907278552569,0.5325926555589053), (4.68907278552569,0.5325926555589053)]
[(4.274278986470623,2.493266540538939), (4.574278986470623,2.493266540538939), (4.574278986470623,2.993266540538939), (4.274278986470623,2.993266540538939)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.3667861,y=0.10285272,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.10285272,w=1.4842072,h=2.6910346]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.08059821,w=2.2432084,h=2.7132893]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.08059821,w=2.2432084,h=2.7132893]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.01453707,w=4.5918913,h=2.7793503]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.01453707,w=5.056247,h=2.7793503]  
t: java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.011280857,w=0.7,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.011280857,w=1.247802,h=2.895274]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.011280857,w=3.0004847,h=2.895274]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.011280857,w=3.5701008,h=3.082839]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.0,w=4.9136844,h=3.0941198]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.0,w=4.9136844,h=3.0941198]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.98816574, 1.482228] with IG = 36.022102
Iter num: 2
Used frontier: Point2D.Float[0.9142583, 0.6700011] with IG = 45.366344
Iter num: 3
Added advice frontier Point2D.Float[0.7471329, 0.44285727]
Added advice frontier Point2D.Float[1.1847483, 0.20184614]
Added advice frontier Point2D.Float[1.4586495, 0.1777705]
Added advice frontier Point2D.Float[1.5054134, 0.30760685]
Added advice frontier Point2D.Float[0.93255806, 2.441424]
Used Advice frontier: Point2D.Float[0.7471329, 0.44285727] with IG = 354.60724
Iter num: 4
Used Advice frontier: Point2D.Float[1.1847483, 0.20184614] with IG = 200.16277
Iter num: 5
Used Advice frontier: Point2D.Float[1.4586495, 0.1777705] with IG = 363.69284
Iter num: 6
Used Advice frontier: Point2D.Float[1.5054134, 0.30760685] with IG = 724.63116
Iter num: 7
Used Advice frontier: Point2D.Float[0.93255806, 2.441424] with IG = 44.799717
Iter num: 8
Added advice frontier Point2D.Float[0.11555334, 2.7709596]
Added advice frontier Point2D.Float[0.06636296, 2.6097794]
Used Advice frontier: Point2D.Float[0.11555334, 2.7709596] with IG = 113.44444
Iter num: 9
Used Advice frontier: Point2D.Float[0.06636296, 2.6097794] with IG = 593.4036
Iter num: 10
Used frontier: Point2D.Float[1.8760238, 2.4701874] with IG = 13.061948
Iter num: 11
Used frontier: Point2D.Float[1.913709, 1.5034052] with IG = 12.071188
Iter num: 12
Used frontier: Point2D.Float[2.7272813, 1.6721057] with IG = 27.359327
Iter num: 13
Added advice frontier Point2D.Float[2.9463236, 2.2415395]
Added advice frontier Point2D.Float[3.2729597, 2.418638]
Added advice frontier Point2D.Float[3.1946635, 2.3736396]
Added advice frontier Point2D.Float[2.9976523, 0.92582107]
Added advice frontier Point2D.Float[2.9399624, 1.0881246]
Used Advice frontier: Point2D.Float[2.9463236, 2.2415395] with IG = 163.90483
Iter num: 14
Used Advice frontier: Point2D.Float[3.1946635, 2.3736396] with IG = 355.50705
Iter num: 15
Added advice frontier Point2D.Float[2.288247, 2.5121567]
Added advice frontier Point2D.Float[2.290199, 2.364722]
Used Advice frontier: Point2D.Float[3.2729597, 2.418638] with IG = 1107.3478
Iter num: 16
Used Advice frontier: Point2D.Float[2.288247, 2.5121567] with IG = 98.98536
Iter num: 17
Used Advice frontier: Point2D.Float[2.290199, 2.364722] with IG = 678.2069
Iter num: 18
Used Advice frontier: Point2D.Float[2.9399624, 1.0881246] with IG = 59.117397
Iter num: 19
Added advice frontier Point2D.Float[3.1666484, 0.38780946]
Added advice frontier Point2D.Float[3.5506923, 0.51838493]
Used Advice frontier: Point2D.Float[2.9976523, 0.92582107] with IG = 580.5465
Iter num: 20
Used Advice frontier: Point2D.Float[3.1666484, 0.38780946] with IG = 174.43538
Iter num: 21
Used Advice frontier: Point2D.Float[3.5506923, 0.51838493] with IG = 246.52708
Iter num: 22
Used frontier: Point2D.Float[2.5943222, 0.8660193] with IG = 17.549196
Iter num: 23
Used frontier: Point2D.Float[3.6895206, 1.5969408] with IG = 16.968386
Iter num: 24
Used frontier: Point2D.Float[4.3905697, 1.0645624] with IG = 25.915474
Iter num: 25
Used frontier: Point2D.Float[5.162552, 1.4755808] with IG = 32.108383
Iter num: 26
Added advice frontier Point2D.Float[5.160317, 2.4035597]
Added advice frontier Point2D.Float[4.9328723, 0.6994886]
Added advice frontier Point2D.Float[5.069229, 1.9461405]
Used Advice frontier: Point2D.Float[5.160317, 2.4035597] with IG = 107.76076
Iter num: 27
Added advice frontier Point2D.Float[4.657973, 2.6734922]
Added advice frontier Point2D.Float[5.015722, 2.499325]
Added advice frontier Point2D.Float[4.87871, 0.63144726]
Added advice frontier Point2D.Float[2.31522, 0.15487821]
Added advice frontier Point2D.Float[4.838219, 2.3364487]
Used Advice frontier: Point2D.Float[5.015722, 2.499325] with IG = 576.59393
Iter num: 28
Added advice frontier Point2D.Float[2.3416722, 0.15104422]
Added advice frontier Point2D.Float[2.3243763, 0.09608059]
Used Advice frontier: Point2D.Float[4.838219, 2.3364487] with IG = 415.09897
Iter num: 29
Used Advice frontier: Point2D.Float[4.657973, 2.6734922] with IG = 261.63394
Iter num: 30
Used Advice frontier: Point2D.Float[5.069229, 1.9461405] with IG = 116.525856
Iter num: 31
Used Advice frontier: Point2D.Float[4.9328723, 0.6994886] with IG = 77.519196
Iter num: 32
Used Advice frontier: Point2D.Float[4.87871, 0.63144726] with IG = 1149.8661
Iter num: 33
Used Advice frontier: Point2D.Float[2.3416722, 0.15104422] with IG = 28.112993
Iter num: 34
Used Advice frontier: Point2D.Float[2.31522, 0.15487821] with IG = 3741.3289
Iter num: 35
Added advice frontier Point2D.Float[4.4799194, 0.04287543]
Added advice frontier Point2D.Float[4.462567, 0.19853565]
Added advice frontier Point2D.Float[4.667905, 0.10062695]
Added advice frontier Point2D.Float[4.660667, 0.25193247]
Used Advice frontier: Point2D.Float[2.3243763, 0.09608059] with IG = 1680.4948

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9881657361984253, 1.4822280406951904) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9142583012580872, 0.6700010895729065) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7471328973770142, 0.4428572654724121) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1847482919692993, 0.2018461376428604) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4586495161056519, 0.1777704954147339) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.5054134130477905, 0.30760684609413147) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2154090404510498, 0.867906928062439) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.083903193473816, 1.4101924896240234) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.021761178970337, 1.6945241689682007) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9325580596923828, 2.4414238929748535) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6198461651802063, 2.5516107082366943) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.1155533418059349, 2.7709596157073975) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.06636296212673187, 2.6097793579101562) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.26740655303001404, 2.5506627559661865) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9325580596923828, 2.4414238929748535) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.505046010017395, 2.391876220703125) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.876023769378662, 2.4701874256134033) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4151062965393066, 2.2107133865356445) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1955654621124268, 2.0729856491088867) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1944825649261475, 1.8275902271270752) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.479437232017517, 1.7062302827835083) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.913709044456482, 1.503405213356018) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3970518112182617, 1.4608802795410156) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.727281332015991, 1.6721056699752808) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9463236331939697, 2.241539478302002) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1946635246276855, 2.3736395835876465) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2729597091674805, 2.418637990951538) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.952833414077759, 2.494152069091797) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6634609699249268, 2.576014757156372) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.2882471084594727, 2.5121567249298096) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.290199041366577, 2.3647220134735107) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.346505641937256, 2.3081564903259277) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8355190753936768, 2.1832311153411865) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8557376861572266, 1.825046181678772) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8519387245178223, 1.4245846271514893) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.939962387084961, 1.0881246328353882) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.997652292251587, 0.92582106590271) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0539438724517822, 0.8653568029403687) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1666483879089355, 0.3878094553947449) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.550692319869995, 0.5183849334716797) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.097947359085083, 0.6301162838935852) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7294740676879883, 0.831306517124176) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5943222045898438, 0.8660193085670471) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.832984685897827, 0.8842549920082092) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1467955112457275, 1.107316017150879) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.320986747741699, 1.2553390264511108) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6895205974578857, 1.5969407558441162) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.007469654083252, 1.4251593351364136) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.390569686889648, 1.064562439918518) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.096798419952393, 1.2495146989822388) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1625518798828125, 1.4755808115005493) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1603169441223145, 2.403559684753418) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.015721797943115, 2.4993250370025635) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.838219165802002, 2.3364486694335938) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.657972812652588, 2.673492193222046) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.777933120727539, 2.3541524410247803) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.850268840789795, 2.1451549530029297) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.0692291259765625, 1.9461405277252197) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.025073051452637, 1.5977789163589478) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.876821041107178, 1.3046549558639526) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.86927604675293, 1.09584379196167) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.932872295379639, 0.6994885802268982) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.87870979309082, 0.6314472556114197) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.932872295379639, 0.6994885802268982) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.86927604675293, 1.09584379196167) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.589161396026611, 1.3029685020446777) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.319180488586426, 1.259382724761963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.123728275299072, 1.2244772911071777) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7411630153656006, 1.2303236722946167) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6042416095733643, 1.1847329139709473) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.255786418914795, 1.0869975090026855) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.997652292251587, 0.92582106590271) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.850304126739502, 0.8367720246315002) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.557941198348999, 0.6217952370643616) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.424949884414673, 0.2820347249507904) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.34167218208313, 0.15104421973228455) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [h,19]  [r6,19]  [r6,b,61]  [r6,61]  [r6,t,61]  [r6,61]  [h,61]  [r5,61]  [r5,t,61]  [r5,61]  [h,61]  [r3,61]  [r3,b,53]  


Remaining path: 
[r3,b,53]  [r3,53]  [h,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 35
Total sampled points = 20505
RRG size = 1751

Movement Length = 27.537014
Remaining path Length = 4.456906
Total path Length = 31.99392

Advice samples: [17, 4, 3, 1, 0, 1, 0, 0, 0, 0] (26)

Total time taken (in ms):6908.032577

Initialization time (in ms):584.850906
Sampling time (in ms):5055.94698
Advice time (in ms):7.736288
Path checking time (in ms):660.170438
Learning time (in ms):191.138479
Exploration time (in ms):0.0
Time taken other than these things (in ms):408.189486
Moving time (in ms):738.1975



