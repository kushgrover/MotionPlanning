Parameters values: 
Environment: results/environments/env74/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.2789792864532479,0.029548308544782218), (1.578979286453248,0.029548308544782218), (1.578979286453248,0.5295483085447822), (1.2789792864532479,0.5295483085447822)]
[(0.9491040714414313,2.4697950946231595), (1.2491040714414312,2.4697950946231595), (1.2491040714414312,2.9697950946231595), (0.9491040714414313,2.9697950946231595)]
[(2.5232895007729064,0.18011129466273954), (3.0232895007729064,0.18011129466273954), (3.0232895007729064,0.4801112946627395), (2.5232895007729064,0.4801112946627395)]
[(3.0597021026037963,2.4835468194611114), (3.5597021026037963,2.4835468194611114), (3.5597021026037963,2.7835468194611113), (3.0597021026037963,2.7835468194611113)]
[(5.321667878849414,0.20724884172772537), (5.821667878849414,0.20724884172772537), (5.821667878849414,0.5072488417277253), (5.321667878849414,0.5072488417277253)]
[(5.169240727108434,2.5509027029709936), (5.669240727108434,2.5509027029709936), (5.669240727108434,2.8509027029709935), (5.169240727108434,2.8509027029709935)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.4929771,y=0.015049594,w=0.20000002,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=0.4786633,h=2.6639643]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=3.381956,h=2.6639643]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=3.381956,h=2.80679]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.009827773,w=4.169133,h=2.812012]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.009827773,w=4.5778456,h=2.8811154]  
t: java.awt.geom.Rectangle2D$Float[x=1.1789793,y=0.0,w=0.5,h=0.6295483]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=0.82987523,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=2.2741857,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=2.810598,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=5.072564,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=5.072564,h=3.0697951]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.92881674, 1.5395583] with IG = 38.565357
Iter num: 2
Used frontier: Point2D.Float[0.93701977, 0.58196336] with IG = 32.371582
Iter num: 3
Added advice frontier Point2D.Float[0.49316007, 0.01964616]
Used Advice frontier: Point2D.Float[0.49316007, 0.01964616] with IG = 139.58911
Iter num: 4
Used frontier: Point2D.Float[1.8450081, 0.6738691] with IG = 15.214338
Iter num: 5
Used frontier: Point2D.Float[1.83903, 1.4645092] with IG = 13.414121
Iter num: 6
Used frontier: Point2D.Float[2.706988, 1.347638] with IG = 25.488379
Iter num: 7
Added advice frontier Point2D.Float[3.220814, 0.7834356]
Added advice frontier Point2D.Float[2.9764912, 2.0977368]
Added advice frontier Point2D.Float[3.08393, 0.54389143]
Used Advice frontier: Point2D.Float[3.220814, 0.7834356] with IG = 131.04219
Iter num: 8
Added advice frontier Point2D.Float[3.4071717, 0.19881463]
Added advice frontier Point2D.Float[3.8922954, 0.16517685]
Used Advice frontier: Point2D.Float[3.08393, 0.54389143] with IG = 362.45535
Iter num: 9
Used Advice frontier: Point2D.Float[3.4071717, 0.19881463] with IG = 211.49487
Iter num: 10
Used Advice frontier: Point2D.Float[3.8922954, 0.16517685] with IG = 205.63927
Iter num: 11
Used Advice frontier: Point2D.Float[2.9764912, 2.0977368] with IG = 44.778538
Iter num: 12
Added advice frontier Point2D.Float[3.077835, 2.3886437]
Added advice frontier Point2D.Float[2.9349747, 2.8746767]
Added advice frontier Point2D.Float[2.260986, 2.6689003]
Added advice frontier Point2D.Float[2.60935, 2.4695559]
Used Advice frontier: Point2D.Float[3.077835, 2.3886437] with IG = 324.61816
Iter num: 13
Used Advice frontier: Point2D.Float[2.60935, 2.4695559] with IG = 210.3399
Iter num: 14
Used Advice frontier: Point2D.Float[2.260986, 2.6689003] with IG = 249.14845
Iter num: 15
Used Advice frontier: Point2D.Float[2.9349747, 2.8746767] with IG = 141.904
Iter num: 16
Used frontier: Point2D.Float[3.6091928, 1.5245354] with IG = 15.751156
Iter num: 17
Used frontier: Point2D.Float[4.2098126, 1.6965657] with IG = 34.502644
Iter num: 18
Added advice frontier Point2D.Float[5.029916, 2.023479]
Used Advice frontier: Point2D.Float[5.029916, 2.023479] with IG = 90.902954
Iter num: 19
Added advice frontier Point2D.Float[5.132709, 2.8988996]
Added advice frontier Point2D.Float[4.6981196, 2.7464325]
Added advice frontier Point2D.Float[5.0965466, 2.9526381]
Used Advice frontier: Point2D.Float[5.132709, 2.8988996] with IG = 113.45136
Iter num: 20
Used Advice frontier: Point2D.Float[5.0965466, 2.9526381] with IG = 1543.8508
Iter num: 21
Used Advice frontier: Point2D.Float[4.6981196, 2.7464325] with IG = 222.90306
Iter num: 22
Used frontier: Point2D.Float[5.553089, 1.3212316] with IG = 31.000834
Iter num: 23
Added advice frontier Point2D.Float[4.9785585, 0.97263634]
Used Advice frontier: Point2D.Float[4.9785585, 0.97263634] with IG = 148.79822
Iter num: 24
Added advice frontier Point2D.Float[5.242215, 0.49644992]
Added advice frontier Point2D.Float[4.8071513, 0.2814726]
Used Advice frontier: Point2D.Float[5.242215, 0.49644992] with IG = 183.72038
Iter num: 25
Used Advice frontier: Point2D.Float[4.8071513, 0.2814726] with IG = 206.06699
Iter num: 26
Added advice frontier Point2D.Float[4.362361, 0.16784497]
Added advice frontier Point2D.Float[4.3835335, 0.1938796]
Used Advice frontier: Point2D.Float[4.3835335, 0.1938796] with IG = 231.17163
Iter num: 27
Used Advice frontier: Point2D.Float[4.362361, 0.16784497] with IG = 2979.9966
Iter num: 28
Used frontier: Point2D.Float[2.42387, 0.4480908] with IG = 5.8981705
Iter num: 29
Used frontier: Point2D.Float[1.1799159, 2.1915417] with IG = 5.103386
Iter num: 30
Used frontier: Point2D.Float[1.2022185, 2.441144] with IG = 35.914276
Iter num: 31
Added advice frontier Point2D.Float[0.34987625, 2.6652246]
Used Advice frontier: Point2D.Float[0.34987625, 2.6652246] with IG = 110.794205

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9288167357444763, 1.5395582914352417) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9370197653770447, 0.5819633603096008) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.49316006898880005, 0.019646160304546356) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1883463859558105, 0.6200971603393555) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.845008134841919, 0.6738690733909607) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4090487957000732, 0.7639573216438293) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1462674140930176, 0.9926241636276245) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2280083894729614, 1.1004009246826172) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8390300273895264, 1.4645092487335205) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8930848836898804, 1.3963217735290527) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7069880962371826, 1.3476380109786987) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2208139896392822, 0.783435583114624) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.083930015563965, 0.543891429901123) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.4071717262268066, 0.19881463050842285) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.8922953605651855, 0.1651768535375595) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.766465425491333, 0.2896246910095215) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.309243679046631, 0.75380939245224) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.204451084136963, 0.8762181997299194) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1425511837005615, 1.3353160619735718) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9764912128448486, 2.0977368354797363) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0778350830078125, 2.388643741607666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.6093499660491943, 2.4695558547973633) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.260986089706421, 2.66890025138855) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.9349746704101562, 2.8746767044067383) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0017201900482178, 2.5472095012664795) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0896053314208984, 2.018361806869507) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.516855239868164, 1.6074076890945435) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6091928482055664, 1.5245354175567627) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6060895919799805, 1.6102102994918823) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.209812641143799, 1.6965657472610474) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.420363426208496, 1.7065094709396362) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.82322359085083, 1.5988246202468872) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.029915809631348, 2.0234789848327637) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.13270902633667, 2.898899555206299) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.096546649932861, 2.9526381492614746) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.698119640350342, 2.7464325428009033) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.9261860847473145, 2.3241257667541504) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.029915809631348, 2.0234789848327637) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.152542591094971, 1.6516311168670654) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.305397033691406, 1.5065171718597412) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.553089141845703, 1.3212316036224365) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.332981109619141, 1.1837141513824463) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.978558540344238, 0.972636342048645) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.242215156555176, 0.49644991755485535) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.8071513175964355, 0.2814725935459137) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.383533477783203, 0.1938796043395996) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.362360954284668, 0.1678449660539627) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.5067009925842285, 0.5003212094306946) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.476057052612305, 0.799796998500824) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.884560585021973, 0.8269002437591553) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.802464485168457, 1.190170407295227) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.678926467895508, 1.1991221904754639) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.289684295654297, 1.1523243188858032) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.886181592941284, 1.0945513248443604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.472485303878784, 1.1186282634735107) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.183565616607666, 1.08901047706604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9233975410461426, 0.8358707427978516) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.423870086669922, 0.4480907917022705) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.6025819778442383, 0.5638771057128906) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8862686157226562, 0.9290434718132019) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.671048164367676, 1.2392334938049316) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2987301349639893, 1.395714282989502) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1463546752929688, 1.4733139276504517) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6499159336090088, 1.7206404209136963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.192819595336914, 1.9436373710632324) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1799159049987793, 2.1915416717529297) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2022185325622559, 2.4411439895629883) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7180541753768921, 2.4749433994293213) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,t,12]  [r1,12]  [h,12]  [r3,12]  [r3,t,12]  [r3,b,45]  [r3,45]  [h,45]  [r4,45]  [r4,t,45]  [r4,45]  [r4,b,34]  [r4,34]  [r4,t,34]  [r4,34]  [h,34]  [r6,34]  [r6,t,34]  [r6,34]  [r6,b,23]  [r6,23]  [h,23]  [r5,23]  [r5,t,23]  [r5,23]  [r5,b,37]  [r5,37]  [h,37]  [r3,37]  [r3,t,37]  [r3,37]  [h,37]  [r2,37]  [r2,t,37]  [r2,37]  [r2,b,63]  


Remaining path: 
[r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 31
Total sampled points = 18228
RRG size = 1551

Movement Length = 29.561102
Remaining path Length = 0.0
Total path Length = 29.561102

Advice samples: [13, 6, 1, 0, 0, 0, 0, 0, 0, 0] (20)

Total time taken (in ms):6568.969167

Initialization time (in ms):592.136294
Sampling time (in ms):4816.728731
Advice time (in ms):8.148436
Path checking time (in ms):596.460608
Learning time (in ms):178.695284
Exploration time (in ms):0.0
Time taken other than these things (in ms):376.799814
Moving time (in ms):1006.63293



