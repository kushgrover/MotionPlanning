Parameters values: 
Environment: results/environments/env83/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.5718061589161236,0.0015861111775070005), (0.8718061589161237,0.0015861111775070005), (0.8718061589161237,0.501586111177507), (0.5718061589161236,0.501586111177507)]
[(1.1159349828121368,2.5039075978926864), (1.6159349828121368,2.5039075978926864), (1.6159349828121368,2.803907597892686), (1.1159349828121368,2.803907597892686)]
[(3.410924737683777,0.212194141564766), (3.910924737683777,0.212194141564766), (3.910924737683777,0.512194141564766), (3.410924737683777,0.512194141564766)]
[(2.586333386851901,2.6776127442061344), (3.086333386851901,2.6776127442061344), (3.086333386851901,2.977612744206134), (2.586333386851901,2.977612744206134)]
[(4.635592079108181,0.2395424790675699), (5.135592079108181,0.2395424790675699), (5.135592079108181,0.5395424790675699), (4.635592079108181,0.5395424790675699)]
[(5.696668922858247,2.453188606374179), (5.996668922858247,2.453188606374179), (5.996668922858247,2.953188606374179), (5.696668922858247,2.953188606374179)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.4638225,y=0.0062035993,w=0.20000005,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.42663482,y=0.0062035993,w=1.2371877,h=2.8850002]  java.awt.geom.Rectangle2D$Float[x=0.42663482,y=0.0062035993,w=2.356351,h=2.8850002]  java.awt.geom.Rectangle2D$Float[x=0.42663482,y=0.0062035993,w=2.356351,h=2.8850002]  java.awt.geom.Rectangle2D$Float[x=0.42663482,y=0.0062035993,w=3.9159818,h=2.8850002]  java.awt.geom.Rectangle2D$Float[x=0.42663482,y=0.0062035993,w=4.187271,h=2.8850002]  
t: java.awt.geom.Rectangle2D$Float[x=0.47180617,y=0.0,w=0.5,h=0.6015861]  java.awt.geom.Rectangle2D$Float[x=0.47180617,y=0.0,w=1.2441288,h=2.9039075]  java.awt.geom.Rectangle2D$Float[x=0.47180617,y=0.0,w=3.5391188,h=2.9039075]  java.awt.geom.Rectangle2D$Float[x=0.47180617,y=0.0,w=3.5391188,h=3.0776126]  java.awt.geom.Rectangle2D$Float[x=0.47180617,y=0.0,w=4.763786,h=3.0776126]  java.awt.geom.Rectangle2D$Float[x=0.47180617,y=0.0,w=5.6248627,h=3.0776126]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9589275, 1.5824779] with IG = 37.08518
Iter num: 2
Used frontier: Point2D.Float[0.8764837, 1.1516513] with IG = 63.833076
Iter num: 3
Added advice frontier Point2D.Float[1.2591211, 2.4731917]
Added advice frontier Point2D.Float[1.284213, 2.2564785]
Used Advice frontier: Point2D.Float[1.284213, 2.2564785] with IG = 84.5049
Iter num: 4
Added advice frontier Point2D.Float[0.47735256, 2.7088625]
Added advice frontier Point2D.Float[0.5121308, 2.6045837]
Used Advice frontier: Point2D.Float[1.2591211, 2.4731917] with IG = 458.37714
Iter num: 5
Used Advice frontier: Point2D.Float[0.5121308, 2.6045837] with IG = 131.84648
Iter num: 6
Used Advice frontier: Point2D.Float[0.47735256, 2.7088625] with IG = 909.70776
Iter num: 7
Used frontier: Point2D.Float[1.3803674, 0.42142656] with IG = 15.385171
Iter num: 8
Added advice frontier Point2D.Float[1.6231749, 0.15631872]
Used Advice frontier: Point2D.Float[1.6231749, 0.15631872] with IG = 278.1669
Iter num: 9
Used frontier: Point2D.Float[0.58892125, 0.56199855] with IG = 21.371857
Iter num: 10
Used frontier: Point2D.Float[1.898663, 1.4982485] with IG = 13.639309
Iter num: 11
Used frontier: Point2D.Float[2.7685504, 1.7729014] with IG = 23.910751
Iter num: 12
Added advice frontier Point2D.Float[3.073454, 0.9844389]
Added advice frontier Point2D.Float[3.3216498, 2.3007383]
Added advice frontier Point2D.Float[2.9795332, 2.6584916]
Added advice frontier Point2D.Float[2.9970741, 2.538303]
Used Advice frontier: Point2D.Float[3.3216498, 2.3007383] with IG = 123.05779
Iter num: 13
Used Advice frontier: Point2D.Float[2.9970741, 2.538303] with IG = 248.61603
Iter num: 14
Used Advice frontier: Point2D.Float[2.9795332, 2.6584916] with IG = 823.3029
Iter num: 15
Used Advice frontier: Point2D.Float[3.073454, 0.9844389] with IG = 55.84634
Iter num: 16
Added advice frontier Point2D.Float[3.3950005, 0.24937476]
Added advice frontier Point2D.Float[2.6297162, 0.38643008]
Added advice frontier Point2D.Float[2.998724, 0.32392305]
Used Advice frontier: Point2D.Float[2.998724, 0.32392305] with IG = 134.84366
Iter num: 17
Added advice frontier Point2D.Float[2.5048985, 2.6593037]
Added advice frontier Point2D.Float[2.302472, 2.3780847]
Added advice frontier Point2D.Float[2.559344, 2.8338997]
Added advice frontier Point2D.Float[2.4715984, 2.704766]
Used Advice frontier: Point2D.Float[2.6297162, 0.38643008] with IG = 267.19073
Iter num: 18
Used Advice frontier: Point2D.Float[3.3950005, 0.24937476] with IG = 128.61867
Iter num: 19
Used Advice frontier: Point2D.Float[2.302472, 2.3780847] with IG = 37.5127
Iter num: 20
Used Advice frontier: Point2D.Float[2.5048985, 2.6593037] with IG = 288.6023
Iter num: 21
Used Advice frontier: Point2D.Float[2.4715984, 2.704766] with IG = 1774.5096
Iter num: 22
Used Advice frontier: Point2D.Float[2.559344, 2.8338997] with IG = 640.5151
Iter num: 23
Used frontier: Point2D.Float[3.7537072, 1.4077456] with IG = 15.02384
Iter num: 24
Used frontier: Point2D.Float[4.387599, 1.4212658] with IG = 30.849607
Iter num: 25
Added advice frontier Point2D.Float[4.8877387, 2.0265002]
Added advice frontier Point2D.Float[5.055803, 0.8197982]
Used Advice frontier: Point2D.Float[4.8877387, 2.0265002] with IG = 125.75384
Iter num: 26
Added advice frontier Point2D.Float[4.592504, 2.499915]
Added advice frontier Point2D.Float[4.739324, 2.6853468]
Used Advice frontier: Point2D.Float[4.592504, 2.499915] with IG = 179.23422
Iter num: 27
Added advice frontier Point2D.Float[5.653777, 2.599362]
Used Advice frontier: Point2D.Float[4.739324, 2.6853468] with IG = 422.79935
Iter num: 28
Used Advice frontier: Point2D.Float[5.653777, 2.599362] with IG = 105.614845
Iter num: 29
Used Advice frontier: Point2D.Float[5.055803, 0.8197982] with IG = 32.557396
Iter num: 30
Added advice frontier Point2D.Float[4.5841184, 0.18991756]
Added advice frontier Point2D.Float[4.8899217, 0.11498459]
Used Advice frontier: Point2D.Float[4.8899217, 0.11498459] with IG = 79.97346
Iter num: 31
Added advice frontier Point2D.Float[4.153289, 0.12165174]
Added advice frontier Point2D.Float[4.050481, 0.29348373]
Used Advice frontier: Point2D.Float[4.5841184, 0.18991756] with IG = 317.6114

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9589275121688843, 1.5824779272079468) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.876483678817749, 1.1516512632369995) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0951542854309082, 1.7505849599838257) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2268011569976807, 2.1858632564544678) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2842129468917847, 2.2564785480499268) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.259121060371399, 2.473191738128662) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5121307969093323, 2.604583740234375) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4773525595664978, 2.708862543106079) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.809184193611145, 2.1351258754730225) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0118173360824585, 1.4656728506088257) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2124292850494385, 0.8589185476303101) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.380367398262024, 0.42142656445503235) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6231749057769775, 0.15631872415542603) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1208864450454712, 0.4151122570037842) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8931655883789062, 0.5203161835670471) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5889212489128113, 0.5619985461235046) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9600884914398193, 0.8653420209884644) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3292474746704102, 1.149987816810608) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.89866304397583, 1.4982484579086304) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4068102836608887, 1.5962175130844116) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.768550395965576, 1.7729014158248901) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7427470684051514, 1.842759370803833) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3216497898101807, 2.3007383346557617) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9970741271972656, 2.5383028984069824) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9795331954956055, 2.658491611480713) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0418765544891357, 2.331289052963257) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.787494659423828, 1.8703540563583374) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.914234161376953, 1.4510221481323242) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.073453903198242, 0.9844388961791992) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.920217752456665, 0.8665134906768799) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9987239837646484, 0.3239230513572693) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.629716157913208, 0.3864300847053528) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9987239837646484, 0.3239230513572693) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.395000457763672, 0.24937476217746735) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.920217752456665, 0.8665134906768799) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.925354242324829, 1.252393364906311) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9244110584259033, 1.7507458925247192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9279253482818604, 1.9597795009613037) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6468725204467773, 2.298827886581421) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.3024721145629883, 2.378084659576416) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5048985481262207, 2.659303665161133) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.4715983867645264, 2.704766035079956) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.5593440532684326, 2.833899736404419) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.5048985481262207, 2.659303665161133) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.6468725204467773, 2.298827886581421) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0402309894561768, 1.97930109500885) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.369281530380249, 1.776729702949524) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.630509614944458, 1.5117390155792236) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.75370717048645, 1.407745599746704) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8397417068481445, 1.494395136833191) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.259751319885254, 1.6028485298156738) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.387598991394043, 1.4212658405303955) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.569576740264893, 1.7401646375656128) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8877387046813965, 2.0265002250671387) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.592504024505615, 2.4999148845672607) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.73932409286499, 2.685346841812134) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.009524345397949, 2.724699020385742) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.551979064941406, 2.67930269241333) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.653777122497559, 2.5993618965148926) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.551979064941406, 2.67930269241333) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.009524345397949, 2.724699020385742) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.73932409286499, 2.685346841812134) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.592504024505615, 2.4999148845672607) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.8877387046813965, 2.0265002250671387) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.005869388580322, 1.8618576526641846) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.206474304199219, 1.5421977043151855) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.195870876312256, 1.160912036895752) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.055802822113037, 0.8197981715202332) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.288384437561035, 0.013451382517814636) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,46]  [r1,b,22]  [r1,22]  [r1,t,22]  [r1,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,t,35]  [r4,b,35]  [r4,t,35]  [r4,b,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 31
Total sampled points = 17439
RRG size = 1551

Movement Length = 28.249973
Remaining path Length = 0.43620443
Total path Length = 28.686178

Advice samples: [10, 11, 2, 0, 0, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):5349.041693

Initialization time (in ms):498.567085
Sampling time (in ms):3784.333205
Advice time (in ms):8.104647
Path checking time (in ms):546.466872
Learning time (in ms):175.695486
Exploration time (in ms):0.0
Time taken other than these things (in ms):335.874398
Moving time (in ms):268.43546



