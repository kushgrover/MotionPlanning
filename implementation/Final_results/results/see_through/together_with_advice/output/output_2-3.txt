Parameters values: 
Environment: results/environments/env2/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.19668825345028892,0.19771416083247587), (0.696688253450289,0.19771416083247587), (0.696688253450289,0.4977141608324759), (0.19668825345028892,0.4977141608324759)]
[(0.39189452921092566,2.63892147394795), (0.8918945292109257,2.63892147394795), (0.8918945292109257,2.93892147394795), (0.39189452921092566,2.93892147394795)]
[(2.859893087699537,0.05290720785317192), (3.359893087699537,0.05290720785317192), (3.359893087699537,0.3529072078531719), (2.859893087699537,0.3529072078531719)]
[(2.665815360518983,2.542253249503729), (3.165815360518983,2.542253249503729), (3.165815360518983,2.8422532495037287), (2.665815360518983,2.8422532495037287)]
[(4.758434931057473,0.03028341222039891), (5.258434931057473,0.03028341222039891), (5.258434931057473,0.3302834122203989), (4.758434931057473,0.3302834122203989)]
[(4.8551102344265855,2.635894126682025), (5.3551102344265855,2.635894126682025), (5.3551102344265855,2.9358941266820247), (4.8551102344265855,2.9358941266820247)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=0.5243565,h=2.8285859]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=1.342168,h=2.8285859]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=2.3074641,h=2.859815]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=4.5513654,h=2.859815]  java.awt.geom.Rectangle2D$Float[x=1.1155502,y=0.031538937,w=4.5513654,h=2.859815]  
t: java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.09771416,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.09771416,w=0.8952063,h=2.9412072]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.0,w=3.3632047,h=3.0389214]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.0,w=3.3632047,h=3.0389214]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.0,w=5.261747,h=3.0389214]  java.awt.geom.Rectangle2D$Float[x=0.096688256,y=0.0,w=5.358422,h=3.0389214]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.94176954, 1.62548] with IG = 37.599697
Iter num: 2
Used frontier: Point2D.Float[1.0507023, 2.5357063] with IG = 49.08798
Iter num: 3
Added advice frontier Point2D.Float[1.5153456, 2.6707425]
Added advice frontier Point2D.Float[1.3700389, 2.6271183]
Used Advice frontier: Point2D.Float[1.3700389, 2.6271183] with IG = 301.05737
Iter num: 4
Used Advice frontier: Point2D.Float[1.5153456, 2.6707425] with IG = 659.13544
Iter num: 5
Used frontier: Point2D.Float[0.19879054, 2.614411] with IG = 17.368124
Iter num: 6
Used frontier: Point2D.Float[1.8366654, 1.4211209] with IG = 11.346775
Iter num: 7
Used frontier: Point2D.Float[2.5085807, 1.6077856] with IG = 32.981434
Iter num: 8
Added advice frontier Point2D.Float[3.1632125, 0.9275839]
Added advice frontier Point2D.Float[2.9371316, 1.0716685]
Added advice frontier Point2D.Float[3.038611, 2.0876265]
Added advice frontier Point2D.Float[3.084529, 1.9947678]
Used Advice frontier: Point2D.Float[2.9371316, 1.0716685] with IG = 145.69807
Iter num: 9
Added advice frontier Point2D.Float[3.0910604, 0.36585742]
Added advice frontier Point2D.Float[3.5936053, 0.37845576]
Used Advice frontier: Point2D.Float[3.1632125, 0.9275839] with IG = 373.00723
Iter num: 10
Used Advice frontier: Point2D.Float[3.0910604, 0.36585742] with IG = 176.57196
Iter num: 11
Used Advice frontier: Point2D.Float[3.5936053, 0.37845576] with IG = 198.9247
Iter num: 12
Added advice frontier Point2D.Float[2.4558232, 0.23796155]
Added advice frontier Point2D.Float[2.5097473, 0.3037713]
Used Advice frontier: Point2D.Float[2.5097473, 0.3037713] with IG = 78.2988
Iter num: 13
Used Advice frontier: Point2D.Float[2.4558232, 0.23796155] with IG = 1175.3544
Iter num: 14
Used Advice frontier: Point2D.Float[3.084529, 1.9947678] with IG = 53.175472
Iter num: 15
Added advice frontier Point2D.Float[2.7057724, 2.4491673]
Added advice frontier Point2D.Float[3.2629175, 2.8072648]
Added advice frontier Point2D.Float[3.5439508, 2.5296175]
Added advice frontier Point2D.Float[2.6313589, 2.2961838]
Added advice frontier Point2D.Float[3.0528646, 2.8906815]
Used Advice frontier: Point2D.Float[3.038611, 2.0876265] with IG = 965.3303
Iter num: 16
Added advice frontier Point2D.Float[3.374714, 2.8155994]
Added advice frontier Point2D.Float[3.3524444, 2.623087]
Used Advice frontier: Point2D.Float[2.6313589, 2.2961838] with IG = 218.55615
Iter num: 17
Used Advice frontier: Point2D.Float[2.7057724, 2.4491673] with IG = 587.8154
Iter num: 18
Used Advice frontier: Point2D.Float[3.3524444, 2.623087] with IG = 140.55486
Iter num: 19
Used Advice frontier: Point2D.Float[3.374714, 2.8155994] with IG = 516.00574
Iter num: 20
Used Advice frontier: Point2D.Float[3.2629175, 2.8072648] with IG = 892.0079
Iter num: 21
Used Advice frontier: Point2D.Float[3.0528646, 2.8906815] with IG = 442.45798
Iter num: 22
Used Advice frontier: Point2D.Float[3.5439508, 2.5296175] with IG = 161.01395
Iter num: 23
Used frontier: Point2D.Float[3.7616482, 1.6567099] with IG = 23.709242
Iter num: 24
Used frontier: Point2D.Float[4.693085, 1.6256292] with IG = 13.91707
Iter num: 25
Added advice frontier Point2D.Float[4.8846474, 2.0540042]
Added advice frontier Point2D.Float[5.1167192, 0.98079044]
Added advice frontier Point2D.Float[5.006659, 1.1177356]
Used Advice frontier: Point2D.Float[4.8846474, 2.0540042] with IG = 213.10329
Iter num: 26
Added advice frontier Point2D.Float[5.362504, 2.71128]
Added advice frontier Point2D.Float[5.5781493, 2.6418757]
Used Advice frontier: Point2D.Float[5.006659, 1.1177356] with IG = 101.70095
Iter num: 27
Added advice frontier Point2D.Float[4.7574368, 0.38746476]
Added advice frontier Point2D.Float[4.381637, 0.45549127]
Added advice frontier Point2D.Float[4.205629, 2.6803102]
Used Advice frontier: Point2D.Float[5.1167192, 0.98079044] with IG = 569.18195
Iter num: 28
Added advice frontier Point2D.Float[5.5929704, 0.20359829]
Added advice frontier Point2D.Float[5.722111, 0.5978305]
Used Advice frontier: Point2D.Float[4.7574368, 0.38746476] with IG = 144.05528
Iter num: 29
Used Advice frontier: Point2D.Float[4.381637, 0.45549127] with IG = 261.8438
Iter num: 30
Added advice frontier Point2D.Float[5.346285, 0.04799243]
Used Advice frontier: Point2D.Float[5.5929704, 0.20359829] with IG = 69.76055
Iter num: 31
Used Advice frontier: Point2D.Float[5.346285, 0.04799243] with IG = 342.8622
Iter num: 32
Used Advice frontier: Point2D.Float[5.722111, 0.5978305] with IG = 141.54135
Iter num: 33
Used Advice frontier: Point2D.Float[5.5781493, 2.6418757] with IG = 39.13125
Iter num: 34
Used Advice frontier: Point2D.Float[5.362504, 2.71128] with IG = 441.42532
Iter num: 35
Used Advice frontier: Point2D.Float[4.205629, 2.6803102] with IG = 68.157684
Iter num: 36
Used frontier: Point2D.Float[5.838932, 1.529478] with IG = 11.750467
Iter num: 37
Used frontier: Point2D.Float[0.99461627, 0.68478525] with IG = 4.84917
Iter num: 38
Added advice frontier Point2D.Float[0.28863764, 0.51549476]
Added advice frontier Point2D.Float[0.022896111, 0.7059308]
Added advice frontier Point2D.Float[1.1869605, 0.18454853]
Added advice frontier Point2D.Float[1.3838291, 0.31903708]
Used Advice frontier: Point2D.Float[1.1869605, 0.18454853] with IG = 160.53526

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.941769540309906, 1.625480055809021) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0507023334503174, 2.5357062816619873) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3700388669967651, 2.6271183490753174) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.515345573425293, 2.6707425117492676) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9798062443733215, 2.583306312561035) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.1987905353307724, 2.6144111156463623) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.37220191955566406, 2.4934206008911133) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0974677801132202, 1.9884854555130005) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.836665391921997, 1.4211208820343018) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5085806846618652, 1.6077855825424194) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.937131643295288, 1.0716685056686401) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.163212537765503, 0.9275838732719421) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0910604000091553, 0.36585742235183716) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.5936052799224854, 0.3784557580947876) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0910604000091553, 0.36585742235183716) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.694103717803955, 0.5733133554458618) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.509747266769409, 0.3037712872028351) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4558231830596924, 0.237961545586586) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7201485633850098, 0.75246262550354) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.877131223678589, 1.1377090215682983) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9629781246185303, 1.673829436302185) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.084528923034668, 1.9947677850723267) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0386109352111816, 2.0876264572143555) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6313588619232178, 2.2961838245391846) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7057723999023438, 2.449167251586914) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.031651496887207, 2.4128146171569824) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3524444103240967, 2.623086929321289) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.374713897705078, 2.8155994415283203) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.2629175186157227, 2.807264804840088) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.0528645515441895, 2.890681505203247) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2629175186157227, 2.807264804840088) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.5439507961273193, 2.5296175479888916) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.168837547302246, 2.1469945907592773) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.165119171142578, 1.9607760906219482) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3774006366729736, 1.8431940078735352) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.761648178100586, 1.656709909439087) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8525326251983643, 1.2659412622451782) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.439796447753906, 1.1353715658187866) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.445282936096191, 1.6086554527282715) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.693085193634033, 1.625629186630249) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.884647369384766, 2.054004192352295) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.051501750946045, 1.6423195600509644) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.000967979431152, 1.5611307621002197) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.006659030914307, 1.1177356243133545) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1167192459106445, 0.9807904362678528) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.098001480102539, 0.9602876901626587) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.757436752319336, 0.3874647617340088) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.381637096405029, 0.4554912745952606) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.568112373352051, 0.6206726431846619) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.859643936157227, 0.695692777633667) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.185377597808838, 0.4659053683280945) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.592970371246338, 0.203598290681839) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.346284866333008, 0.04799243062734604) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.592970371246338, 0.203598290681839) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.722111225128174, 0.5978304743766785) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.464569568634033, 0.7490435838699341) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.270248889923096, 0.8056541085243225) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1167192459106445, 0.9807904362678528) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0689592361450195, 1.3280142545700073) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.051501750946045, 1.6423195600509644) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.093163013458252, 1.9353610277175903) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.292178630828857, 2.165945053100586) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.418917655944824, 2.398482322692871) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.578149318695068, 2.641875743865967) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.362504005432129, 2.711280107498169) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.390619277954102, 2.6856601238250732) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.257379055023193, 2.413116693496704) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.089084148406982, 2.3460378646850586) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.652686595916748, 2.5088865756988525) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.395928382873535, 2.605062484741211) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.205628871917725, 2.6803102493286133) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.395928382873535, 2.605062484741211) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.632412433624268, 2.344434976577759) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.884647369384766, 2.054004192352295) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1372833251953125, 1.891005039215088) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.315125465393066, 1.7452685832977295) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.466427803039551, 1.6485158205032349) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.838932037353516, 1.5294779539108276) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.443699836730957, 1.5129656791687012) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.328005313873291, 1.5176273584365845) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.035379409790039, 1.4846861362457275) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.915534973144531, 1.4807323217391968) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.6186137199401855, 1.4330167770385742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.447525978088379, 1.4415593147277832) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.146058082580566, 1.4027730226516724) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.840276002883911, 1.3593244552612305) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4784107208251953, 1.327254295349121) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0439789295196533, 1.3108950853347778) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5527560710906982, 1.307783842086792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.223252773284912, 1.2845133543014526) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7026450634002686, 1.2534068822860718) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3799039125442505, 1.2305759191513062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1187090873718262, 0.9713274836540222) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9946162700653076, 0.6847852468490601) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,t,46]  [r2,46]  [h,46]  [r3,46]  [r3,t,46]  [r3,46]  [r3,t,46]  [r3,46]  [r3,b,32]  [r3,32]  [h,32]  [r4,32]  [r4,t,32]  [r4,32]  [r4,b,25]  [r4,b,t,25]  [r4,t,25]  [r4,b,t,25]  [r4,25]  [h,25]  [r6,25]  [h,25]  [r5,25]  [r5,t,25]  [r5,25]  [r5,b,42]  [r5,t,42]  [r5,b,42]  [r5,42]  [h,42]  [r6,42]  [r6,t,42]  [r6,42]  [r6,b,33]  [r6,33]  [h,33]  [r1,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20578
RRG size = 1901

Movement Length = 34.48475
Remaining path Length = 0.0
Total path Length = 34.48475

Advice samples: [10, 6, 6, 5, 2, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):8621.773589

Initialization time (in ms):595.48721
Sampling time (in ms):6394.636475
Advice time (in ms):9.272515
Path checking time (in ms):873.741683
Learning time (in ms):214.043583
Exploration time (in ms):0.0
Time taken other than these things (in ms):534.592123
Moving time (in ms):805.3064



