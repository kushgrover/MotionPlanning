Parameters values: 
Environment: results/environments/env69/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.10745431771495033,0.003997468827490117), (0.40745431771495033,0.003997468827490117), (0.40745431771495033,0.5039974688274901), (0.10745431771495033,0.5039974688274901)]
[(0.14946845700248387,2.4909827418388577), (0.44946845700248383,2.4909827418388577), (0.44946845700248383,2.9909827418388577), (0.14946845700248387,2.9909827418388577)]
[(2.9199233470017947,0.1270968808461362), (3.4199233470017947,0.1270968808461362), (3.4199233470017947,0.4270968808461362), (2.9199233470017947,0.4270968808461362)]
[(2.3878195564769675,2.4617363865451773), (2.6878195564769674,2.4617363865451773), (2.6878195564769674,2.9617363865451773), (2.3878195564769675,2.9617363865451773)]
[(4.271136460780502,0.027150745085215023), (4.571136460780502,0.027150745085215023), (4.571136460780502,0.527150745085215), (4.271136460780502,0.527150745085215)]
[(4.287270631307861,2.495712858582884), (4.58727063130786,2.495712858582884), (4.58727063130786,2.995712858582884), (4.287270631307861,2.995712858582884)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.2096251,y=0.009107857,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.2096251,y=0.009107857,w=0.43941557,h=2.648484]  java.awt.geom.Rectangle2D$Float[x=1.2096251,y=0.009107857,w=1.477487,h=2.648484]  java.awt.geom.Rectangle2D$Float[x=1.2096251,y=0.009107857,w=2.6238723,h=2.648484]  java.awt.geom.Rectangle2D$Float[x=1.2096251,y=0.009107857,w=4.0837746,h=2.648484]  java.awt.geom.Rectangle2D$Float[x=1.2096251,y=0.009107857,w=4.0837746,h=2.648484]  
t: java.awt.geom.Rectangle2D$Float[x=0.0074543175,y=0.0,w=0.5,h=0.60399747]  java.awt.geom.Rectangle2D$Float[x=0.0074543175,y=0.0,w=0.5420141,h=3.0909827]  java.awt.geom.Rectangle2D$Float[x=0.0074543175,y=0.0,w=3.512469,h=3.0909827]  java.awt.geom.Rectangle2D$Float[x=0.0074543175,y=0.0,w=3.512469,h=3.0909827]  java.awt.geom.Rectangle2D$Float[x=0.0074543175,y=0.0,w=4.663682,h=3.0909827]  java.awt.geom.Rectangle2D$Float[x=0.0074543175,y=0.0,w=4.6798162,h=3.095713]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9310123, 1.495111] with IG = 38.506584
Iter num: 2
Used frontier: Point2D.Float[0.8535004, 0.56432456] with IG = 38.543556
Iter num: 3
Added advice frontier Point2D.Float[1.3740481, 0.17874646]
Added advice frontier Point2D.Float[0.95653975, 0.14432387]
Added advice frontier Point2D.Float[0.5029879, 0.5502355]
Added advice frontier Point2D.Float[0.35589772, 0.70824]
Used Advice frontier: Point2D.Float[0.5029879, 0.5502355] with IG = 285.06635
Iter num: 4
Used Advice frontier: Point2D.Float[0.35589772, 0.70824] with IG = 463.2364
Iter num: 5
Used Advice frontier: Point2D.Float[0.95653975, 0.14432387] with IG = 121.37744
Iter num: 6
Used Advice frontier: Point2D.Float[1.3740481, 0.17874646] with IG = 238.70622
Iter num: 7
Used frontier: Point2D.Float[0.9260058, 2.4343984] with IG = 14.769025
Iter num: 8
Added advice frontier Point2D.Float[1.523776, 2.6367328]
Added advice frontier Point2D.Float[1.233694, 2.6656268]
Added advice frontier Point2D.Float[0.5025757, 2.572237]
Added advice frontier Point2D.Float[0.6141835, 2.6225061]
Used Advice frontier: Point2D.Float[0.6141835, 2.6225061] with IG = 274.59924
Iter num: 9
Used Advice frontier: Point2D.Float[0.5025757, 2.572237] with IG = 816.95197
Iter num: 10
Used Advice frontier: Point2D.Float[1.233694, 2.6656268] with IG = 135.26851
Iter num: 11
Used Advice frontier: Point2D.Float[1.523776, 2.6367328] with IG = 343.0325
Iter num: 12
Used frontier: Point2D.Float[1.87153, 1.426042] with IG = 13.12038
Iter num: 13
Used frontier: Point2D.Float[2.8008184, 1.3067907] with IG = 25.177677
Iter num: 14
Added advice frontier Point2D.Float[3.0858977, 2.0323384]
Added advice frontier Point2D.Float[2.9308317, 0.44183782]
Added advice frontier Point2D.Float[3.3368998, 0.5794116]
Added advice frontier Point2D.Float[3.1038003, 1.8137093]
Added advice frontier Point2D.Float[3.0480816, 0.9738071]
Added advice frontier Point2D.Float[3.2586057, 0.51371783]
Used Advice frontier: Point2D.Float[3.0480816, 0.9738071] with IG = 241.10938
Iter num: 15
Added advice frontier Point2D.Float[2.6529036, 0.19394952]
Added advice frontier Point2D.Float[2.7665744, 0.058239326]
Used Advice frontier: Point2D.Float[3.3368998, 0.5794116] with IG = 204.56628
Iter num: 16
Used Advice frontier: Point2D.Float[3.2586057, 0.51371783] with IG = 978.4365
Iter num: 17
Used Advice frontier: Point2D.Float[2.9308317, 0.44183782] with IG = 298.00656
Iter num: 18
Used Advice frontier: Point2D.Float[2.6529036, 0.19394952] with IG = 268.5179
Iter num: 19
Used Advice frontier: Point2D.Float[2.7665744, 0.058239326] with IG = 564.8878
Iter num: 20
Used Advice frontier: Point2D.Float[3.1038003, 1.8137093] with IG = 51.654774
Iter num: 21
Added advice frontier Point2D.Float[2.7318926, 2.4074216]
Used Advice frontier: Point2D.Float[3.0858977, 2.0323384] with IG = 455.86978
Iter num: 22
Added advice frontier Point2D.Float[3.698321, 2.5786908]
Added advice frontier Point2D.Float[3.441409, 2.690199]
Used Advice frontier: Point2D.Float[2.7318926, 2.4074216] with IG = 193.24916
Iter num: 23
Used Advice frontier: Point2D.Float[3.698321, 2.5786908] with IG = 87.513405
Iter num: 24
Used Advice frontier: Point2D.Float[3.441409, 2.690199] with IG = 357.0567
Iter num: 25
Used frontier: Point2D.Float[3.8316019, 1.584887] with IG = 14.982541
Iter num: 26
Used frontier: Point2D.Float[4.664719, 1.6042974] with IG = 27.06495
Iter num: 27
Added advice frontier Point2D.Float[5.029129, 2.2201865]
Added advice frontier Point2D.Float[5.1250515, 0.8873675]
Added advice frontier Point2D.Float[5.0467606, 1.9763575]
Added advice frontier Point2D.Float[4.596642, 2.8461564]
Added advice frontier Point2D.Float[5.1395946, 1.0288919]
Used Advice frontier: Point2D.Float[5.029129, 2.2201865] with IG = 139.73871
Iter num: 28
Used Advice frontier: Point2D.Float[5.0467606, 1.9763575] with IG = 409.0554
Iter num: 29
Used Advice frontier: Point2D.Float[4.596642, 2.8461564] with IG = 99.47186
Iter num: 30
Used Advice frontier: Point2D.Float[5.1395946, 1.0288919] with IG = 48.32717
Iter num: 31
Added advice frontier Point2D.Float[5.1279683, 0.15355478]
Added advice frontier Point2D.Float[5.153133, 0.4011336]
Added advice frontier Point2D.Float[4.605328, 0.26229516]
Used Advice frontier: Point2D.Float[5.1250515, 0.8873675] with IG = 702.8903
Iter num: 32
Added advice frontier Point2D.Float[4.685315, 0.2826192]
Added advice frontier Point2D.Float[4.423361, 0.57529896]
Used Advice frontier: Point2D.Float[5.153133, 0.4011336] with IG = 205.13403
Iter num: 33
Used Advice frontier: Point2D.Float[5.1279683, 0.15355478] with IG = 401.84134
Iter num: 34
Added advice frontier Point2D.Float[4.142869, 2.6284955]
Added advice frontier Point2D.Float[4.068288, 2.9199939]
Used Advice frontier: Point2D.Float[4.605328, 0.26229516] with IG = 187.32463

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9310122728347778, 1.4951109886169434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8535004258155823, 0.5643245577812195) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5029879212379456, 0.5502355098724365) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3558977246284485, 0.7082399725914001) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9565397500991821, 0.14432387053966522) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.374048113822937, 0.17874646186828613) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.133532166481018, 1.1266392469406128) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.088926076889038, 1.4424304962158203) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9599108099937439, 2.2248659133911133) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9260057806968689, 2.4343984127044678) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6141834855079651, 2.6225061416625977) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.502575695514679, 2.572237014770508) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9063679575920105, 2.595142126083374) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2336939573287964, 2.6656267642974854) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5237760543823242, 2.636732816696167) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2678617238998413, 2.2048516273498535) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1442139148712158, 1.9660899639129639) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8715300559997559, 1.4260419607162476) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.366044282913208, 1.4510416984558105) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.80081844329834, 1.3067907094955444) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.048081636428833, 0.9738070964813232) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.336899757385254, 0.5794116258621216) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.258605718612671, 0.5137178301811218) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.9308316707611084, 0.4418378174304962) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.6529035568237305, 0.19394952058792114) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7665743827819824, 0.058239325881004333) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6529035568237305, 0.19394952058792114) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9308316707611084, 0.4418378174304962) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.048081636428833, 0.9738070964813232) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0755138397216797, 1.3713425397872925) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1038002967834473, 1.8137092590332031) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.08589768409729, 2.0323383808135986) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7920384407043457, 2.3189523220062256) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7318925857543945, 2.407421588897705) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.135319948196411, 2.189756393432617) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6983211040496826, 2.578690767288208) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.441409111022949, 2.6901988983154297) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2849063873291016, 2.6820666790008545) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2292301654815674, 2.2808237075805664) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.08589768409729, 2.0323383808135986) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4540960788726807, 1.7110692262649536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.831601858139038, 1.5848870277404785) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.411092758178711, 1.738923192024231) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.664719104766846, 1.604297399520874) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0291290283203125, 2.220186471939087) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.046760559082031, 1.9763574600219727) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0291290283203125, 2.220186471939087) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.596642017364502, 2.846156358718872) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.0291290283203125, 2.220186471939087) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.058484077453613, 2.1034228801727295) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.233920097351074, 1.7537328004837036) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.343748092651367, 1.4105465412139893) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1733245849609375, 1.1449037790298462) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.139594554901123, 1.028891921043396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.125051498413086, 0.8873674869537354) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.123779773712158, 0.746107816696167) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.153132915496826, 0.40113359689712524) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [r3,b,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [h,35]  [r5,35]  [r5,b,21]  [r5,t,21]  


Remaining path: 
[r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 34
Total sampled points = 19084
RRG size = 1701

Movement Length = 24.079462
Remaining path Length = 3.6599827
Total path Length = 27.739445

Advice samples: [10, 8, 6, 2, 1, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):6366.820543

Initialization time (in ms):668.267126
Sampling time (in ms):4541.705416
Advice time (in ms):6.940735
Path checking time (in ms):464.577221
Learning time (in ms):164.624458
Exploration time (in ms):0.0
Time taken other than these things (in ms):520.705587
Moving time (in ms):335.5443



