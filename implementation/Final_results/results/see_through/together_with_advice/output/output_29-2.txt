Parameters values: 
Environment: results/environments/env29/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.05953928453227815,0.02587543873347168), (0.3595392845322781,0.02587543873347168), (0.3595392845322781,0.5258754387334716), (0.05953928453227815,0.5258754387334716)]
[(0.040654354913161855,2.493647905709949), (0.34065435491316187,2.493647905709949), (0.34065435491316187,2.993647905709949), (0.040654354913161855,2.993647905709949)]
[(2.346670935495066,0.030539243774115776), (2.6466709354950657,0.030539243774115776), (2.6466709354950657,0.5305392437741158), (2.346670935495066,0.5305392437741158)]
[(2.1159715387223,2.4897523711850935), (2.4159715387223,2.4897523711850935), (2.4159715387223,2.9897523711850935), (2.1159715387223,2.9897523711850935)]
[(5.384276196218397,0.09898095686135641), (5.884276196218397,0.09898095686135641), (5.884276196218397,0.3989809568613564), (5.384276196218397,0.3989809568613564)]
[(5.367057914432307,2.454511354071788), (5.6670579144323066,2.454511354071788), (5.6670579144323066,2.954511354071788), (5.367057914432307,2.954511354071788)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.4836665,y=0.018420536,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.2741972,y=0.018420536,w=0.40946937,h=2.6470785]  java.awt.geom.Rectangle2D$Float[x=1.2741972,y=0.018420536,w=1.7210778,h=2.6470785]  java.awt.geom.Rectangle2D$Float[x=1.2741972,y=0.018420536,w=2.1508179,h=2.680206]  java.awt.geom.Rectangle2D$Float[x=1.2741972,y=0.018420536,w=4.0281754,h=2.680206]  java.awt.geom.Rectangle2D$Float[x=1.2741972,y=0.018420536,w=4.0281754,h=2.680206]  
t: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=0.4595393,h=0.6258754]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=0.4595393,h=3.093648]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.746671,h=3.093648]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.746671,h=3.093648]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.9842763,h=3.093648]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.9842763,h=3.093648]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9040468, 1.5673234] with IG = 39.659897
Iter num: 2
Used frontier: Point2D.Float[1.0877435, 2.3216116] with IG = 50.23608
Iter num: 3
Added advice frontier Point2D.Float[0.35311034, 2.8679621]
Added advice frontier Point2D.Float[0.4682598, 2.866696]
Added advice frontier Point2D.Float[1.3692852, 2.6623056]
Added advice frontier Point2D.Float[1.0859118, 2.890216]
Used Advice frontier: Point2D.Float[1.3692852, 2.6623056] with IG = 226.25934
Iter num: 4
Used Advice frontier: Point2D.Float[1.0859118, 2.890216] with IG = 274.98718
Iter num: 5
Used Advice frontier: Point2D.Float[0.4682598, 2.866696] with IG = 161.78621
Iter num: 6
Used Advice frontier: Point2D.Float[0.35311034, 2.8679621] with IG = 868.38403
Iter num: 7
Used frontier: Point2D.Float[1.0186313, 0.6489514] with IG = 11.85098
Iter num: 8
Added advice frontier Point2D.Float[1.6599013, 0.025228094]
Added advice frontier Point2D.Float[1.545666, 0.4691112]
Added advice frontier Point2D.Float[0.43849295, 0.23815672]
Added advice frontier Point2D.Float[0.6293439, 0.05842098]
Used Advice frontier: Point2D.Float[1.545666, 0.4691112] with IG = 179.574
Iter num: 9
Used Advice frontier: Point2D.Float[1.6599013, 0.025228094] with IG = 218.17534
Iter num: 10
Used Advice frontier: Point2D.Float[0.6293439, 0.05842098] with IG = 95.43876
Iter num: 11
Used Advice frontier: Point2D.Float[0.43849295, 0.23815672] with IG = 381.4432
Iter num: 12
Used frontier: Point2D.Float[1.8257542, 1.4369911] with IG = 12.361376
Iter num: 13
Used frontier: Point2D.Float[2.639119, 1.5438839] with IG = 27.160723
Iter num: 14
Added advice frontier Point2D.Float[2.9290888, 0.7122593]
Added advice frontier Point2D.Float[3.007403, 2.0062714]
Used Advice frontier: Point2D.Float[2.9290888, 0.7122593] with IG = 113.54241
Iter num: 15
Added advice frontier Point2D.Float[2.6620224, 0.0058207023]
Added advice frontier Point2D.Float[3.022704, 0.11671358]
Added advice frontier Point2D.Float[2.8424046, 0.045580048]
Added advice frontier Point2D.Float[2.7733462, 0.0010276173]
Used Advice frontier: Point2D.Float[3.022704, 0.11671358] with IG = 165.87634
Iter num: 16
Used Advice frontier: Point2D.Float[2.8424046, 0.045580048] with IG = 515.9315
Iter num: 17
Used Advice frontier: Point2D.Float[2.7733462, 0.0010276173] with IG = 1216.8021
Iter num: 18
Used Advice frontier: Point2D.Float[2.6620224, 0.0058207023] with IG = 897.4488
Iter num: 19
Used Advice frontier: Point2D.Float[3.007403, 2.0062714] with IG = 48.81208
Iter num: 20
Added advice frontier Point2D.Float[3.3206077, 2.6201916]
Added advice frontier Point2D.Float[2.9618306, 2.8153136]
Added advice frontier Point2D.Float[2.4498024, 2.4862752]
Added advice frontier Point2D.Float[2.4179084, 2.2321825]
Used Advice frontier: Point2D.Float[3.3206077, 2.6201916] with IG = 144.96104
Iter num: 21
Used Advice frontier: Point2D.Float[2.9618306, 2.8153136] with IG = 244.85577
Iter num: 22
Used Advice frontier: Point2D.Float[2.4498024, 2.4862752] with IG = 158.04512
Iter num: 23
Used Advice frontier: Point2D.Float[2.4179084, 2.2321825] with IG = 390.49295
Iter num: 24
Used frontier: Point2D.Float[3.6830478, 1.46558] with IG = 21.57193
Iter num: 25
Used frontier: Point2D.Float[4.3901496, 1.3289363] with IG = 31.42048
Iter num: 26
Added advice frontier Point2D.Float[4.970135, 2.0303307]
Added advice frontier Point2D.Float[4.7919264, 1.663934]
Added advice frontier Point2D.Float[4.9796195, 0.98231035]
Used Advice frontier: Point2D.Float[4.7919264, 1.663934] with IG = 99.31552
Iter num: 27
Added advice frontier Point2D.Float[4.9679537, 2.4917772]
Added advice frontier Point2D.Float[5.332667, 2.4439137]
Added advice frontier Point2D.Float[5.353356, 2.2605464]
Used Advice frontier: Point2D.Float[4.970135, 2.0303307] with IG = 245.4367
Iter num: 28
Used Advice frontier: Point2D.Float[4.9679537, 2.4917772] with IG = 216.70741
Iter num: 29
Used Advice frontier: Point2D.Float[5.332667, 2.4439137] with IG = 271.85696
Iter num: 30
Used Advice frontier: Point2D.Float[5.353356, 2.2605464] with IG = 541.91516
Iter num: 31
Used Advice frontier: Point2D.Float[4.9796195, 0.98231035] with IG = 61.474487
Iter num: 32
Added advice frontier Point2D.Float[5.3398466, 0.28922653]
Added advice frontier Point2D.Float[5.420655, 0.5561678]
Added advice frontier Point2D.Float[5.2656417, 0.25472504]
Added advice frontier Point2D.Float[4.8109436, 0.023084309]
Added advice frontier Point2D.Float[5.2964354, 0.19156817]
Used Advice frontier: Point2D.Float[5.420655, 0.5561678] with IG = 153.02573

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9040467739105225, 1.5673234462738037) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0877435207366943, 2.3216116428375244) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.369285225868225, 2.6623055934906006) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.085911750793457, 2.890216112136841) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4682598114013672, 2.8666958808898926) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.35311034321784973, 2.867962121963501) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7300987243652344, 2.2497060298919678) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8834474682807922, 1.872327446937561) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9040467739105225, 1.5673234462738037) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9714274406433105, 1.0433682203292847) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0186313390731812, 0.6489514112472534) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.545665979385376, 0.46911120414733887) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6599012613296509, 0.025228094309568405) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0896587371826172, 0.13623526692390442) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6293439269065857, 0.05842097848653793) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.43849295377731323, 0.23815672099590302) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8363121747970581, 0.6747518181800842) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9592977166175842, 0.8738934993743896) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2967777252197266, 1.135431170463562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5027132034301758, 1.2578061819076538) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.825754165649414, 1.4369910955429077) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.123880624771118, 1.5793137550354004) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6391189098358154, 1.5438839197158813) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.929088830947876, 0.7122592926025391) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9533963203430176, 0.5563908219337463) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0227038860321045, 0.11671358346939087) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.84240460395813, 0.045580048114061356) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.773346185684204, 0.001027617254294455) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.662022352218628, 0.0058207022957503796) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.855616569519043, 0.5752553939819336) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.93412709236145, 1.0215404033660889) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.000490188598633, 1.3975706100463867) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0364575386047363, 1.6859859228134155) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0074028968811035, 2.0062713623046875) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1400060653686523, 2.298837184906006) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3206076622009277, 2.6201915740966797) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.9618306159973145, 2.8153135776519775) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.649794101715088, 2.7175168991088867) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4498023986816406, 2.4862751960754395) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.4179084300994873, 2.232182502746582) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6673882007598877, 2.302157402038574) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0074028968811035, 2.0062713623046875) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.287121295928955, 1.7572718858718872) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.478163003921509, 1.619204044342041) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6830477714538574, 1.4655799865722656) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.180351734161377, 1.4315273761749268) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.3901495933532715, 1.3289363384246826) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.322223663330078, 1.699318528175354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.674277305603027, 1.87137770652771) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.791926383972168, 1.6639339923858643) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.97013521194458, 2.0303306579589844) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.967953681945801, 2.491777181625366) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.332666873931885, 2.443913698196411) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.353355884552002, 2.2605464458465576) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.974142074584961, 2.17228102684021) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.842218399047852, 1.8285425901412964) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.845027923583984, 1.5281834602355957) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.95737886428833, 1.252244472503662) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.97961950302124, 0.9823103547096252) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0648345947265625, 0.8267314434051514) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,b,22]  [r1,22]  [r1,t,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 32
Total sampled points = 19260
RRG size = 1601

Movement Length = 23.440582
Remaining path Length = 0.33896428
Total path Length = 23.779547

Advice samples: [11, 9, 5, 0, 0, 0, 0, 0, 0, 0] (25)

Total time taken (in ms):5936.953995

Initialization time (in ms):650.688912
Sampling time (in ms):4275.892962
Advice time (in ms):7.995246
Path checking time (in ms):462.146698
Learning time (in ms):163.59747
Exploration time (in ms):0.0
Time taken other than these things (in ms):376.632707
Moving time (in ms):469.76205



