Parameters values: 
Environment: results/environments/env11/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.3399344738133632,0.047796538178637285), (1.6399344738133632,0.047796538178637285), (1.6399344738133632,0.5477965381786373), (1.3399344738133632,0.5477965381786373)]
[(0.8007009948322036,2.4503385590521), (1.1007009948322035,2.4503385590521), (1.1007009948322035,2.9503385590521), (0.8007009948322036,2.9503385590521)]
[(2.690144760840587,0.03263816623382704), (2.990144760840587,0.03263816623382704), (2.990144760840587,0.5326381662338271), (2.690144760840587,0.5326381662338271)]
[(3.2395111692934275,2.6833822250642276), (3.7395111692934275,2.6833822250642276), (3.7395111692934275,2.9833822250642275), (3.2395111692934275,2.9833822250642275)]
[(4.633308071145677,0.061024859211600266), (5.133308071145677,0.061024859211600266), (5.133308071145677,0.36102485921160027), (4.633308071145677,0.36102485921160027)]
[(4.468070792618362,2.5532100675276865), (4.968070792618362,2.5532100675276865), (4.968070792618362,2.8532100675276864), (4.468070792618362,2.8532100675276864)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.11876903,y=0.03357594,w=0.20000002,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.11876903,y=0.03357594,w=0.49580833,h=2.6499126]  java.awt.geom.Rectangle2D$Float[x=0.11876903,y=0.03357594,w=3.4359462,h=2.6499126]  java.awt.geom.Rectangle2D$Float[x=0.11876903,y=0.03357594,w=3.4359462,h=2.821141]  java.awt.geom.Rectangle2D$Float[x=0.11876903,y=0.03357594,w=4.148987,h=2.821141]  java.awt.geom.Rectangle2D$Float[x=0.11876903,y=0.03357594,w=5.5787935,h=2.821141]  
t: java.awt.geom.Rectangle2D$Float[x=1.2399344,y=0.0,w=0.5,h=0.6477965]  java.awt.geom.Rectangle2D$Float[x=0.700701,y=0.0,w=1.0392334,h=3.0503385]  java.awt.geom.Rectangle2D$Float[x=0.700701,y=0.0,w=2.3894439,h=3.0503385]  java.awt.geom.Rectangle2D$Float[x=0.700701,y=0.0,w=3.1388102,h=3.0833821]  java.awt.geom.Rectangle2D$Float[x=0.700701,y=0.0,w=4.532607,h=3.0833821]  java.awt.geom.Rectangle2D$Float[x=0.700701,y=0.0,w=4.532607,h=3.0833821]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.93191814, 1.5038373] with IG = 38.464912
Iter num: 2
Used frontier: Point2D.Float[1.0115408, 0.86809987] with IG = 53.06661
Iter num: 3
Used frontier: Point2D.Float[0.55503905, 0.33825666] with IG = 41.465496
Iter num: 4
Added advice frontier Point2D.Float[0.28784382, 0.19706869]
Added advice frontier Point2D.Float[0.039126623, 0.2977344]
Used Advice frontier: Point2D.Float[0.28784382, 0.19706869] with IG = 330.90216
Iter num: 5
Used Advice frontier: Point2D.Float[0.039126623, 0.2977344] with IG = 372.69397
Iter num: 6
Used frontier: Point2D.Float[1.8262664, 1.4600694] with IG = 10.314928
Iter num: 7
Used frontier: Point2D.Float[2.6665978, 1.2436631] with IG = 23.550386
Iter num: 8
Added advice frontier Point2D.Float[3.2344637, 0.8944356]
Added advice frontier Point2D.Float[3.0561614, 1.1346925]
Added advice frontier Point2D.Float[2.9288387, 2.08997]
Added advice frontier Point2D.Float[2.8649602, 1.9513639]
Used Advice frontier: Point2D.Float[3.0561614, 1.1346925] with IG = 247.20815
Iter num: 9
Added advice frontier Point2D.Float[3.0000334, 0.48542798]
Added advice frontier Point2D.Float[2.9548495, 0.75433195]
Used Advice frontier: Point2D.Float[3.2344637, 0.8944356] with IG = 334.23492
Iter num: 10
Added advice frontier Point2D.Float[3.3597348, 0.043379158]
Added advice frontier Point2D.Float[3.4607332, 0.27949545]
Added advice frontier Point2D.Float[3.4865766, 0.17716593]
Used Advice frontier: Point2D.Float[2.9548495, 0.75433195] with IG = 319.7433
Iter num: 11
Used Advice frontier: Point2D.Float[3.0000334, 0.48542798] with IG = 366.73874
Iter num: 12
Used Advice frontier: Point2D.Float[3.4607332, 0.27949545] with IG = 198.16458
Iter num: 13
Used Advice frontier: Point2D.Float[3.4865766, 0.17716593] with IG = 947.4859
Iter num: 14
Used Advice frontier: Point2D.Float[3.3597348, 0.043379158] with IG = 542.42395
Iter num: 15
Used Advice frontier: Point2D.Float[2.8649602, 1.9513639] with IG = 50.63433
Iter num: 16
Added advice frontier Point2D.Float[3.458179, 2.673106]
Added advice frontier Point2D.Float[3.6248631, 2.304047]
Used Advice frontier: Point2D.Float[2.9288387, 2.08997] with IG = 655.23224
Iter num: 17
Added advice frontier Point2D.Float[3.1316016, 2.7014625]
Used Advice frontier: Point2D.Float[3.1316016, 2.7014625] with IG = 149.66696
Iter num: 18
Added advice frontier Point2D.Float[3.175253, 2.7909176]
Added advice frontier Point2D.Float[3.062724, 2.794331]
Used Advice frontier: Point2D.Float[3.175253, 2.7909176] with IG = 1004.6493
Iter num: 19
Used Advice frontier: Point2D.Float[3.062724, 2.794331] with IG = 888.2528
Iter num: 20
Used Advice frontier: Point2D.Float[3.458179, 2.673106] with IG = 190.84016
Iter num: 21
Used Advice frontier: Point2D.Float[3.6248631, 2.304047] with IG = 246.9414
Iter num: 22
Used frontier: Point2D.Float[3.8283186, 1.5058684] with IG = 16.372845
Iter num: 23
Used frontier: Point2D.Float[3.9632733, 1.316881] with IG = 103.34748
Iter num: 24
Used frontier: Point2D.Float[4.7889476, 1.5752728] with IG = 24.229221
Iter num: 25
Added advice frontier Point2D.Float[5.1809, 2.2797027]
Added advice frontier Point2D.Float[4.9410257, 0.6554773]
Added advice frontier Point2D.Float[5.197436, 1.1079297]
Used Advice frontier: Point2D.Float[5.1809, 2.2797027] with IG = 124.04922
Iter num: 26
Added advice frontier Point2D.Float[5.6454844, 2.6553175]
Added advice frontier Point2D.Float[5.471599, 2.7438452]
Added advice frontier Point2D.Float[4.9970636, 2.518747]
Added advice frontier Point2D.Float[4.5757747, 2.3897033]
Used Advice frontier: Point2D.Float[4.9970636, 2.518747] with IG = 331.60962
Iter num: 27
Used Advice frontier: Point2D.Float[4.5757747, 2.3897033] with IG = 226.95836
Iter num: 28
Used Advice frontier: Point2D.Float[5.471599, 2.7438452] with IG = 102.451324
Iter num: 29
Used Advice frontier: Point2D.Float[5.6454844, 2.6553175] with IG = 512.49536
Iter num: 30
Used Advice frontier: Point2D.Float[5.197436, 1.1079297] with IG = 57.959465
Iter num: 31
Used Advice frontier: Point2D.Float[4.9410257, 0.6554773] with IG = 192.28659
Iter num: 32
Added advice frontier Point2D.Float[5.2117, 0.3752603]
Added advice frontier Point2D.Float[5.2803836, 0.50521976]
Used Advice frontier: Point2D.Float[5.2803836, 0.50521976] with IG = 269.44385
Iter num: 33
Used Advice frontier: Point2D.Float[5.2117, 0.3752603] with IG = 680.3051
Iter num: 34
Used frontier: Point2D.Float[4.8477554, 0.57058644] with IG = 21.556427
Iter num: 35
Used frontier: Point2D.Float[5.8938475, 1.7638811] with IG = 7.475038
Iter num: 36
Used frontier: Point2D.Float[1.1970727, 2.2333624] with IG = 3.7500746
Iter num: 37
Added advice frontier Point2D.Float[0.4298872, 2.5046334]
Added advice frontier Point2D.Float[0.5174682, 2.8182836]
Used Advice frontier: Point2D.Float[0.4298872, 2.5046334] with IG = 122.02092
Iter num: 38
Used Advice frontier: Point2D.Float[0.5174682, 2.8182836] with IG = 307.0797
Iter num: 39
Used frontier: Point2D.Float[1.3315097, 2.3827088] with IG = 7.3753414
Iter num: 40
Used frontier: Point2D.Float[1.7757074, 0.37347993] with IG = 6.0107417
Iter num: 41
Used frontier: Point2D.Float[2.175257, 2.7550385] with IG = 2.7937286
Iter num: 42
Used frontier: Point2D.Float[2.129595, 0.12033272] with IG = 2.2214735
Exploration complete
Iter num: 43
Iter num: 44
Iter num: 45
Iter num: 46
Iter num: 47
Iter num: 48
Iter num: 49
Iter num: 50
Iter num: 51
Iter num: 52

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9319181442260742, 1.5038373470306396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0115407705307007, 0.8680998682975769) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5550390481948853, 0.3382566571235657) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.28784382343292236, 0.1970686912536621) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.039126623421907425, 0.29773440957069397) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.19832618534564972, 0.4063873589038849) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8214756846427917, 0.8437297344207764) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9523892998695374, 0.9263052940368652) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.727128267288208, 1.397965908050537) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8262664079666138, 1.4600694179534912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.253671884536743, 1.1206666231155396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.666597843170166, 1.2436630725860596) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.056161403656006, 1.1346925497055054) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.234463691711426, 0.8944355845451355) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9548494815826416, 0.7543319463729858) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.000033378601074, 0.48542797565460205) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.46073317527771, 0.2794954478740692) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.486576557159424, 0.1771659255027771) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.3597347736358643, 0.04337915778160095) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.262730836868286, 0.5297372937202454) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1926519870758057, 0.8425976634025574) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0843207836151123, 1.332026720046997) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9467737674713135, 1.7051537036895752) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.864960193634033, 1.9513639211654663) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9288387298583984, 2.089970111846924) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.98248028755188, 2.5196056365966797) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.131601572036743, 2.701462507247925) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.175252914428711, 2.7909176349639893) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0627241134643555, 2.7943310737609863) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.131601572036743, 2.701462507247925) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.47198224067688, 2.6170880794525146) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.458178997039795, 2.6731059551239014) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.6248631477355957, 2.304047107696533) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.22383189201355, 2.1626856327056885) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1426167488098145, 2.0271708965301514) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2583155632019043, 1.8349937200546265) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.659472703933716, 1.5967597961425781) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8283185958862305, 1.5058684349060059) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.963273286819458, 1.3168809413909912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.041473388671875, 1.66930091381073) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.788947582244873, 1.575272798538208) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1809000968933105, 2.279702663421631) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.997063636779785, 2.518747091293335) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.575774669647217, 2.3897032737731934) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.997063636779785, 2.518747091293335) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.28359842300415, 2.7098450660705566) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.471599102020264, 2.743845224380493) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.645484447479248, 2.655317544937134) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.280953407287598, 2.266732692718506) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1722612380981445, 2.0138463973999023) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.184078693389893, 1.6913468837738037) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.244298458099365, 1.473101258277893) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1974358558654785, 1.1079297065734863) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.941025733947754, 0.6554772853851318) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.280383586883545, 0.5052197575569153) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.211699962615967, 0.37526029348373413) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.032811164855957, 0.5057474970817566) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.847755432128906, 0.5705864429473877) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.008976459503174, 0.7486581206321716) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1974358558654785, 1.1079297065734863) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.490711688995361, 1.4177666902542114) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.711517333984375, 1.6330996751785278) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.893847465515137, 1.7638810873031616) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.719801902770996, 1.665547490119934) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.438474655151367, 1.7249022722244263) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.071061134338379, 1.751753330230713) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.679291248321533, 1.7443923950195312) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.420978546142578, 1.7789714336395264) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.001420497894287, 1.840740442276001) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6759815216064453, 1.847116231918335) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2583155632019043, 1.8349937200546265) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8398115634918213, 1.8697385787963867) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.372265338897705, 1.8794724941253662) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.0802345275878906, 1.8906859159469604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6599435806274414, 1.9148916006088257) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.590361475944519, 1.9160412549972534) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1618494987487793, 1.9445061683654785) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1970727443695068, 2.2333624362945557) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7565721273422241, 2.3377983570098877) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.42988720536231995, 2.5046334266662598) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5174682140350342, 2.8182835578918457) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7958801984786987, 2.635197162628174) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7789651155471802, 2.4399733543395996) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8711822628974915, 2.432131290435791) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3315097093582153, 2.382708787918091) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2204852104187012, 2.1274242401123047) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1618494987487793, 1.9445061683654785) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1566412448883057, 1.5574798583984375) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1440465450286865, 1.377050518989563) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1362169981002808, 1.0132014751434326) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3958356380462646, 0.7441192269325256) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.568953037261963, 0.6770040392875671) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7757073640823364, 0.3734799325466156) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.568953037261963, 0.6770040392875671) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2228801250457764, 0.8019357919692993) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.180357575416565, 1.0239759683609009) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2134805917739868, 1.07078218460083) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7706600427627563, 1.3580820560455322) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3024840354919434, 1.6426172256469727) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8408939838409424, 1.9190704822540283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7877488136291504, 2.090700387954712) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.668092727661133, 2.2240192890167236) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.537677526473999, 2.355936288833618) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.30155348777771, 2.6087565422058105) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.1752569675445557, 2.7550384998321533) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.30155348777771, 2.6087565422058105) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.537677526473999, 2.355936288833618) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.668092727661133, 2.2240192890167236) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7877488136291504, 2.090700387954712) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8408939838409424, 1.9190704822540283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.845686197280884, 1.4029124975204468) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.837925672531128, 1.129392147064209) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.761828660964966, 0.7555345296859741) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r3,12]  [r3,t,12]  [r3,12]  [r3,b,45]  [r3,45]  [h,45]  [r4,45]  [r4,b,34]  [r4,t,34]  [r4,b,34]  [r4,t,34]  [r4,34]  [h,34]  [r6,34]  [r6,t,34]  [r6,34]  [r6,t,34]  [r6,34]  [r6,b,23]  [r6,23]  [h,23]  [r5,23]  [r5,t,23]  [r5,23]  [h,23]  [r2,23]  [r2,b,53]  [r2,53]  [r2,t,53]  [r2,53]  [h,53]  [r1,53]  [h,53]  [r4,53]  [h,53]  [r3,53]  


Remaining path: 
[r3,53]  [h,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 52
Total sampled points = 28699
RRG size = 2601

Movement Length = 38.904797
Remaining path Length = 4.976217
Total path Length = 43.881012

Advice samples: [11, 4, 6, 4, 2, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):12074.456256

Initialization time (in ms):574.196447
Sampling time (in ms):9594.229283
Advice time (in ms):9.383475
Path checking time (in ms):1202.262014
Learning time (in ms):161.921866
Exploration time (in ms):0.0
Time taken other than these things (in ms):532.463171
Moving time (in ms):2751.4634



