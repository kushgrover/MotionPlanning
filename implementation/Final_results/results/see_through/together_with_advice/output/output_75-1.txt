Parameters values: 
Environment: results/environments/env75/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.0046784470120502,0.20888578497069216), (1.5046784470120502,0.20888578497069216), (1.5046784470120502,0.5088857849706921), (1.0046784470120502,0.5088857849706921)]
[(0.33768745997417154,2.4842732117048585), (0.6376874599741715,2.4842732117048585), (0.6376874599741715,2.9842732117048585), (0.33768745997417154,2.9842732117048585)]
[(2.6006308217132212,0.004383289788441667), (2.900630821713221,0.004383289788441667), (2.900630821713221,0.5043832897884417), (2.6006308217132212,0.5043832897884417)]
[(2.890389793774743,2.4695444364623214), (3.190389793774743,2.4695444364623214), (3.190389793774743,2.9695444364623214), (2.890389793774743,2.9695444364623214)]
[(4.60640805461215,0.00018335428599908227), (5.10640805461215,0.00018335428599908227), (5.10640805461215,0.30018335428599907), (4.60640805461215,0.30018335428599907)]
[(4.127454020473715,2.454297213534866), (4.427454020473715,2.454297213534866), (4.427454020473715,2.954297213534866), (4.127454020473715,2.954297213534866)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=1.3065677,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=2.8305266,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=2.8305266,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=4.192007,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=4.4572687,h=2.6501615]  
t: java.awt.geom.Rectangle2D$Float[x=0.90467846,y=0.10888579,w=0.6999999,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.10888579,w=1.3669909,h=2.9753873]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=2.7629435,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=3.0527024,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=4.9687204,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=4.9687204,h=3.084273]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.8940214, 1.3902732] with IG = 39.921795
Iter num: 2
Used frontier: Point2D.Float[1.6326344, 1.4280676] with IG = 31.09876
Iter num: 3
Used frontier: Point2D.Float[2.3459325, 1.6542426] with IG = 30.736433
Iter num: 4
Added advice frontier Point2D.Float[2.9057884, 2.0015295]
Added advice frontier Point2D.Float[2.996417, 0.9555049]
Used Advice frontier: Point2D.Float[2.9057884, 2.0015295] with IG = 151.786
Iter num: 5
Added advice frontier Point2D.Float[2.800987, 2.744594]
Added advice frontier Point2D.Float[2.6453094, 2.4595249]
Added advice frontier Point2D.Float[2.2589757, 2.5918455]
Used Advice frontier: Point2D.Float[2.6453094, 2.4595249] with IG = 189.79428
Iter num: 6
Used Advice frontier: Point2D.Float[2.800987, 2.744594] with IG = 307.8746
Iter num: 7
Used Advice frontier: Point2D.Float[2.2589757, 2.5918455] with IG = 177.58087
Iter num: 8
Used Advice frontier: Point2D.Float[2.996417, 0.9555049] with IG = 52.13541
Iter num: 9
Added advice frontier Point2D.Float[2.9422731, 0.5006437]
Added advice frontier Point2D.Float[3.659484, 0.45815632]
Added advice frontier Point2D.Float[3.0178642, 0.138981]
Added advice frontier Point2D.Float[3.3573108, 0.064902455]
Used Advice frontier: Point2D.Float[2.9422731, 0.5006437] with IG = 218.3061
Iter num: 10
Used Advice frontier: Point2D.Float[3.0178642, 0.138981] with IG = 270.6522
Iter num: 11
Added advice frontier Point2D.Float[2.9449859, 0.21168183]
Added advice frontier Point2D.Float[2.9217067, 0.18993996]
Used Advice frontier: Point2D.Float[2.9449859, 0.21168183] with IG = 971.43866
Iter num: 12
Used Advice frontier: Point2D.Float[2.9217067, 0.18993996] with IG = 3139.3972
Iter num: 13
Used Advice frontier: Point2D.Float[3.3573108, 0.064902455] with IG = 220.65578
Iter num: 14
Used Advice frontier: Point2D.Float[3.659484, 0.45815632] with IG = 201.63701
Iter num: 15
Used frontier: Point2D.Float[3.6861973, 1.5694511] with IG = 27.664707
Iter num: 16
Used frontier: Point2D.Float[4.449606, 1.8345598] with IG = 28.169966
Iter num: 17
Used frontier: Point2D.Float[4.9981914, 1.9480833] with IG = 23.205647
Iter num: 18
Added advice frontier Point2D.Float[5.3023043, 2.4966278]
Added advice frontier Point2D.Float[4.7142806, 2.5997581]
Added advice frontier Point2D.Float[4.783401, 2.4981108]
Used Advice frontier: Point2D.Float[5.3023043, 2.4966278] with IG = 159.43758
Iter num: 19
Added advice frontier Point2D.Float[4.492353, 2.704864]
Added advice frontier Point2D.Float[4.56679, 2.8672407]
Used Advice frontier: Point2D.Float[4.783401, 2.4981108] with IG = 192.71335
Iter num: 20
Used Advice frontier: Point2D.Float[4.7142806, 2.5997581] with IG = 813.5239
Iter num: 21
Used Advice frontier: Point2D.Float[4.492353, 2.704864] with IG = 407.23444
Iter num: 22
Added advice frontier Point2D.Float[4.9726925, 0.9532303]
Used Advice frontier: Point2D.Float[4.56679, 2.8672407] with IG = 559.8305
Iter num: 23
Used Advice frontier: Point2D.Float[4.9726925, 0.9532303] with IG = 50.546135
Iter num: 24
Added advice frontier Point2D.Float[5.1411695, 0.055197347]
Added advice frontier Point2D.Float[5.678167, 0.30383033]
Used Advice frontier: Point2D.Float[5.1411695, 0.055197347] with IG = 90.002266
Iter num: 25
Used Advice frontier: Point2D.Float[5.678167, 0.30383033] with IG = 168.98633
Iter num: 26
Used frontier: Point2D.Float[5.7638364, 1.3336372] with IG = 14.631988
Iter num: 27
Used frontier: Point2D.Float[4.42198, 0.62408614] with IG = 11.154772
Iter num: 28
Added advice frontier Point2D.Float[4.4729643, 0.27011454]
Added advice frontier Point2D.Float[4.2605495, 0.24305044]
Used Advice frontier: Point2D.Float[4.4729643, 0.27011454] with IG = 279.62286
Iter num: 29
Added advice frontier Point2D.Float[4.580558, 0.20413777]
Used Advice frontier: Point2D.Float[4.580558, 0.20413777] with IG = 792.3218
Iter num: 30
Used Advice frontier: Point2D.Float[4.2605495, 0.24305044] with IG = 310.20694
Iter num: 31
Used frontier: Point2D.Float[3.7191877, 2.540633] with IG = 6.9759803
Iter num: 32
Used frontier: Point2D.Float[0.95652384, 2.3120039] with IG = 8.2265625
Iter num: 33
Added advice frontier Point2D.Float[0.6760847, 2.7047062]
Added advice frontier Point2D.Float[1.0763857, 2.7494528]
Added advice frontier Point2D.Float[1.4300805, 2.519772]
Added advice frontier Point2D.Float[1.3799583, 2.521002]
Used Advice frontier: Point2D.Float[1.3799583, 2.521002] with IG = 208.8108
Iter num: 34
Used Advice frontier: Point2D.Float[1.4300805, 2.519772] with IG = 1994.5209
Iter num: 35
Used Advice frontier: Point2D.Float[1.0763857, 2.7494528] with IG = 232.52225
Iter num: 36
Used Advice frontier: Point2D.Float[0.6760847, 2.7047062] with IG = 248.26573
Iter num: 37
Used frontier: Point2D.Float[0.81729317, 0.61778617] with IG = 9.471241
Iter num: 38
Added advice frontier Point2D.Float[0.48887935, 0.12036183]
Added advice frontier Point2D.Float[0.28429762, 0.52318823]
Used Advice frontier: Point2D.Float[0.48887935, 0.12036183] with IG = 132.51378

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8940213918685913, 1.3902732133865356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6326344013214111, 1.4280675649642944) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3459324836730957, 1.6542426347732544) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9057884216308594, 2.0015294551849365) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6453094482421875, 2.4595248699188232) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8009870052337646, 2.744594097137451) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.2589757442474365, 2.5918455123901367) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.797408103942871, 2.1742398738861084) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.956543445587158, 1.3987139463424683) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9964170455932617, 0.9555048942565918) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9422731399536133, 0.5006436705589294) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.017864227294922, 0.13898099958896637) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.944985866546631, 0.21168182790279388) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.9217066764831543, 0.1899399608373642) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.3573107719421387, 0.06490245461463928) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6594839096069336, 0.4581563174724579) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1433486938476562, 0.9220370650291443) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.287057399749756, 1.3265299797058105) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.686197280883789, 1.569451093673706) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.827094078063965, 1.603592872619629) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.30450439453125, 1.7338160276412964) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.449605941772461, 1.8345597982406616) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9981913566589355, 1.9480832815170288) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.302304267883301, 2.4966278076171875) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.783401012420654, 2.498110771179199) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.714280605316162, 2.5997581481933594) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.4923529624938965, 2.704864025115967) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.5667901039123535, 2.8672406673431396) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.666323184967041, 2.611664056777954) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.761774063110352, 2.1557846069335938) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9303812980651855, 1.7467294931411743) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.971832275390625, 1.3915133476257324) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.972692489624023, 0.9532303214073181) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.203186988830566, 0.9326831102371216) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.141169548034668, 0.055197346955537796) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.67816686630249, 0.3038303256034851) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.879502773284912, 0.6377922296524048) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.510873794555664, 0.8529778718948364) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.203186988830566, 0.9326831102371216) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0913286209106445, 1.177159309387207) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.360624313354492, 1.1472575664520264) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.76383638381958, 1.3336372375488281) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.360624313354492, 1.1472575664520264) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.972692489624023, 0.9532303214073181) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.737895488739014, 0.8561191558837891) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.421979904174805, 0.6240861415863037) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.472964286804199, 0.270114541053772) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.580557823181152, 0.20413777232170105) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.260549545288086, 0.2430504411458969) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.398305892944336, 0.42430102825164795) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.552268028259277, 0.7245969772338867) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.785110950469971, 0.8543060421943665) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.853801727294922, 1.0896244049072266) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.624619483947754, 1.1896445751190186) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.276154518127441, 1.3299927711486816) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8660922050476074, 1.5151677131652832) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5282371044158936, 1.6830576658248901) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.154454231262207, 1.8681855201721191) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2212882041931152, 2.1524364948272705) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3495030403137207, 2.2430083751678467) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.7191877365112305, 2.540632963180542) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4085559844970703, 2.3455214500427246) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9057884216308594, 2.0015294551849365) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6484622955322266, 1.8685190677642822) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.223419666290283, 1.8611716032028198) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8605053424835205, 1.8852916955947876) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4711565971374512, 1.9019442796707153) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.185691237449646, 1.9524290561676025) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9565238356590271, 2.3120038509368896) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.109114646911621, 2.3456692695617676) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3799582719802856, 2.5210020542144775) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.430080533027649, 2.5197720527648926) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3799582719802856, 2.5210020542144775) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.076385736465454, 2.749452829360962) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6760846972465515, 2.7047061920166016) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7644226551055908, 2.2956528663635254) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8770058155059814, 1.8036590814590454) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.809325635433197, 0.8761793971061707) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8172931671142578, 0.617786169052124) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r4,0]  [r4,t,0]  [r4,b,11]  [r4,11]  [h,11]  [r3,11]  [r3,t,11]  [r3,b,14]  [r3,b,t,14]  [r3,t,14]  [r3,14]  [h,14]  [r6,14]  [r6,b,20]  [r6,t,20]  [r6,20]  [r6,b,20]  [r6,20]  [h,20]  [r5,20]  [r5,t,20]  [r5,20]  [h,20]  [r5,20]  [r5,b,15]  [r5,t,15]  [r5,15]  [h,15]  [r4,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [r2,t,33]  [r2,33]  [h,33]  [r1,33]  [r1,t,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 21926
RRG size = 1902

Movement Length = 32.242218
Remaining path Length = 0.0
Total path Length = 32.242218

Advice samples: [15, 7, 4, 1, 0, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):8538.315174

Initialization time (in ms):616.046965
Sampling time (in ms):6633.857107
Advice time (in ms):9.317708
Path checking time (in ms):630.589674
Learning time (in ms):190.514302
Exploration time (in ms):0.0
Time taken other than these things (in ms):457.989418
Moving time (in ms):1677.7216



