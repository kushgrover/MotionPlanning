Parameters values: 
Environment: results/environments/env85/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.38239938711365895,0.010833366302302779), (0.882399387113659,0.010833366302302779), (0.882399387113659,0.3108333663023028), (0.38239938711365895,0.3108333663023028)]
[(0.42332126903366907,2.657070296113937), (0.9233212690336691,2.657070296113937), (0.9233212690336691,2.957070296113937), (0.42332126903366907,2.957070296113937)]
[(2.904432175848175,0.07737201955350319), (3.404432175848175,0.07737201955350319), (3.404432175848175,0.3773720195535032), (2.904432175848175,0.3773720195535032)]
[(3.4190442886541477,2.596009395383837), (3.9190442886541477,2.596009395383837), (3.9190442886541477,2.8960093953838366), (3.4190442886541477,2.8960093953838366)]
[(4.974155074927724,0.11684010352224011), (5.474155074927724,0.11684010352224011), (5.474155074927724,0.4168401035222401), (4.974155074927724,0.4168401035222401)]
[(4.959531408652381,2.4827758949566965), (5.459531408652381,2.4827758949566965), (5.459531408652381,2.7827758949566963), (4.959531408652381,2.7827758949566963)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.3004801,y=0.19351028,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.2752424,y=0.19351028,w=0.22523761,h=2.6910207]  java.awt.geom.Rectangle2D$Float[x=1.2752424,y=0.19351028,w=1.43495,h=2.6910207]  java.awt.geom.Rectangle2D$Float[x=1.2752424,y=0.19351028,w=1.43495,h=2.6910207]  java.awt.geom.Rectangle2D$Float[x=1.2752424,y=0.046270244,w=3.6569705,h=2.838261]  java.awt.geom.Rectangle2D$Float[x=1.2752424,y=0.046270244,w=3.6569705,h=2.838261]  
t: java.awt.geom.Rectangle2D$Float[x=0.2823994,y=0.0,w=0.70000005,h=0.41083336]  java.awt.geom.Rectangle2D$Float[x=0.2823994,y=0.0,w=0.74092185,h=3.0570703]  java.awt.geom.Rectangle2D$Float[x=0.2823994,y=0.0,w=3.2220328,h=3.0570703]  java.awt.geom.Rectangle2D$Float[x=0.2823994,y=0.0,w=3.736645,h=3.0570703]  java.awt.geom.Rectangle2D$Float[x=0.2823994,y=0.0,w=5.2917557,h=3.0570703]  java.awt.geom.Rectangle2D$Float[x=0.2823994,y=0.0,w=5.2917557,h=3.0570703]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0251896, 1.3745103] with IG = 34.27367
Iter num: 2
Used frontier: Point2D.Float[0.79978323, 0.50961006] with IG = 52.585064
Iter num: 3
Added advice frontier Point2D.Float[0.9525215, 0.15430254]
Added advice frontier Point2D.Float[1.2014737, 0.014256304]
Added advice frontier Point2D.Float[1.3968122, 0.35893947]
Added advice frontier Point2D.Float[1.4375404, 0.46395075]
Used Advice frontier: Point2D.Float[0.9525215, 0.15430254] with IG = 258.5677
Iter num: 4
Used Advice frontier: Point2D.Float[1.2014737, 0.014256304] with IG = 350.09116
Iter num: 5
Used Advice frontier: Point2D.Float[1.3968122, 0.35893947] with IG = 252.40648
Iter num: 6
Used Advice frontier: Point2D.Float[1.4375404, 0.46395075] with IG = 887.8405
Iter num: 7
Used frontier: Point2D.Float[1.9193696, 1.5218564] with IG = 14.121656
Iter num: 8
Used frontier: Point2D.Float[2.7781549, 1.4589689] with IG = 26.154062
Iter num: 9
Added advice frontier Point2D.Float[3.1066606, 2.0475264]
Added advice frontier Point2D.Float[3.1939988, 1.9658867]
Added advice frontier Point2D.Float[2.9368315, 0.9753282]
Used Advice frontier: Point2D.Float[2.9368315, 0.9753282] with IG = 196.46153
Iter num: 10
Added advice frontier Point2D.Float[3.304991, 0.41185603]
Added advice frontier Point2D.Float[3.685143, 0.5760417]
Used Advice frontier: Point2D.Float[3.304991, 0.41185603] with IG = 148.56982
Iter num: 11
Added advice frontier Point2D.Float[2.6931977, 0.26922923]
Added advice frontier Point2D.Float[2.4702718, 0.52835083]
Added advice frontier Point2D.Float[2.8637035, 0.11923637]
Used Advice frontier: Point2D.Float[3.685143, 0.5760417] with IG = 241.49202
Iter num: 12
Used Advice frontier: Point2D.Float[2.6931977, 0.26922923] with IG = 93.626915
Iter num: 13
Used Advice frontier: Point2D.Float[2.8637035, 0.11923637] with IG = 440.35315
Iter num: 14
Used Advice frontier: Point2D.Float[2.4702718, 0.52835083] with IG = 176.18222
Iter num: 15
Used Advice frontier: Point2D.Float[3.1939988, 1.9658867] with IG = 61.368008
Iter num: 16
Used Advice frontier: Point2D.Float[3.1066606, 2.0475264] with IG = 836.44696
Iter num: 17
Added advice frontier Point2D.Float[3.4202428, 2.918902]
Added advice frontier Point2D.Float[3.191054, 2.9820492]
Added advice frontier Point2D.Float[2.399441, 2.6362574]
Used Advice frontier: Point2D.Float[2.399441, 2.6362574] with IG = 106.7942
Iter num: 18
Used Advice frontier: Point2D.Float[3.4202428, 2.918902] with IG = 78.96121
Iter num: 19
Used Advice frontier: Point2D.Float[3.191054, 2.9820492] with IG = 420.6472
Iter num: 20
Used frontier: Point2D.Float[3.713781, 1.3564514] with IG = 14.0576
Iter num: 21
Used frontier: Point2D.Float[4.662688, 1.3100812] with IG = 26.28077
Iter num: 22
Added advice frontier Point2D.Float[4.894995, 0.9316161]
Added advice frontier Point2D.Float[5.195167, 1.0071045]
Used Advice frontier: Point2D.Float[4.894995, 0.9316161] with IG = 225.1872
Iter num: 23
Added advice frontier Point2D.Float[5.398091, 0.43899742]
Added advice frontier Point2D.Float[5.57114, 0.81612146]
Added advice frontier Point2D.Float[4.8260255, 0.21464708]
Added advice frontier Point2D.Float[4.725153, 0.26036632]
Added advice frontier Point2D.Float[4.9848895, 2.1780949]
Used Advice frontier: Point2D.Float[5.195167, 1.0071045] with IG = 323.08255
Iter num: 24
Added advice frontier Point2D.Float[5.0227118, 0.08088784]
Used Advice frontier: Point2D.Float[5.57114, 0.81612146] with IG = 188.18729
Iter num: 25
Added advice frontier Point2D.Float[4.897646, 0.23706025]
Used Advice frontier: Point2D.Float[5.398091, 0.43899742] with IG = 241.00339
Iter num: 26
Added advice frontier Point2D.Float[4.8890758, 0.06492654]
Added advice frontier Point2D.Float[4.8812814, 0.28603205]
Used Advice frontier: Point2D.Float[4.8812814, 0.28603205] with IG = 117.33179
Iter num: 27
Used Advice frontier: Point2D.Float[4.897646, 0.23706025] with IG = 1936.7205
Iter num: 28
Used Advice frontier: Point2D.Float[4.8260255, 0.21464708] with IG = 1332.5232
Iter num: 29
Used Advice frontier: Point2D.Float[4.725153, 0.26036632] with IG = 902.93634
Iter num: 30
Used Advice frontier: Point2D.Float[4.8890758, 0.06492654] with IG = 392.0291
Iter num: 31
Used Advice frontier: Point2D.Float[5.0227118, 0.08088784] with IG = 743.0203
Iter num: 32
Used Advice frontier: Point2D.Float[4.9848895, 2.1780949] with IG = 44.718773
Iter num: 33
Added advice frontier Point2D.Float[4.869654, 2.5203526]
Added advice frontier Point2D.Float[4.792751, 2.7209356]
Used Advice frontier: Point2D.Float[4.869654, 2.5203526] with IG = 276.90363
Iter num: 34
Added advice frontier Point2D.Float[4.234153, 2.6732013]
Used Advice frontier: Point2D.Float[4.792751, 2.7209356] with IG = 465.5059
Iter num: 35
Used Advice frontier: Point2D.Float[4.234153, 2.6732013] with IG = 164.40166
Iter num: 36
Used frontier: Point2D.Float[5.155026, 2.0438933] with IG = 17.417372
Iter num: 37
Used frontier: Point2D.Float[5.5419917, 1.5143577] with IG = 45.470654
Iter num: 38
Used frontier: Point2D.Float[5.607831, 2.45201] with IG = 11.197841
Iter num: 39
Used frontier: Point2D.Float[0.87249225, 2.2602196] with IG = 4.8019094
Iter num: 40
Added advice frontier Point2D.Float[1.3600228, 2.8101604]
Added advice frontier Point2D.Float[1.6450646, 2.6862192]
Added advice frontier Point2D.Float[0.7552966, 2.6514015]
Used Advice frontier: Point2D.Float[0.7552966, 2.6514015] with IG = 230.41989

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0251896381378174, 1.3745102882385254) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7997832298278809, 0.5096100568771362) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9525215029716492, 0.15430253744125366) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2014737129211426, 0.014256304129958153) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3968122005462646, 0.3589394688606262) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.4375404119491577, 0.4639507532119751) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2039573192596436, 0.768189013004303) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1379790306091309, 1.134417176246643) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5188902616500854, 1.301872968673706) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9193695783615112, 1.521856427192688) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3290951251983643, 1.6504907608032227) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7781548500061035, 1.4589688777923584) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.936831474304199, 0.9753282070159912) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3049910068511963, 0.4118560254573822) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.685142993927002, 0.5760416984558105) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1223058700561523, 0.5327613353729248) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.693197727203369, 0.2692292332649231) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.863703489303589, 0.11923637241125107) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.4702718257904053, 0.528350830078125) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8005316257476807, 0.9254493713378906) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9721171855926514, 1.4339113235473633) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1939988136291504, 1.9658867120742798) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1066606044769287, 2.0475263595581055) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.911531686782837, 2.156414747238159) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6190848350524902, 2.34440541267395) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.3994410037994385, 2.6362574100494385) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.8381917476654053, 2.491441488265991) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3213865756988525, 2.6354222297668457) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.4202427864074707, 2.9189019203186035) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.191054105758667, 2.9820492267608643) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3213865756988525, 2.6354222297668457) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.177245855331421, 2.3459513187408447) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1066606044769287, 2.0475263595581055) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3739991188049316, 1.721810221672058) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7137811183929443, 1.356451392173767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9251303672790527, 1.3259583711624146) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.6626877784729, 1.3100812435150146) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.894995212554932, 0.9316161274909973) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.195167064666748, 1.007104516029358) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.201473712921143, 0.846778154373169) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.571139812469482, 0.8161214590072632) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.398090839385986, 0.43899741768836975) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.062340259552002, 0.6836177110671997) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.88128137588501, 0.2860320508480072) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.897645950317383, 0.23706024885177612) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(4.826025485992432, 0.2146470844745636) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.725152969360352, 0.2603663206100464) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.889075756072998, 0.06492654234170914) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(5.022711753845215, 0.08088783919811249) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.826025485992432, 0.2146470844745636) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.88128137588501, 0.2860320508480072) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.90868616104126, 0.6714935302734375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.894995212554932, 0.9316161274909973) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.877405166625977, 1.3150378465652466) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9657769203186035, 1.6759822368621826) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.003871440887451, 1.9252097606658936) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.984889507293701, 2.1780948638916016) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.869654178619385, 2.520352602005005) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.792750835418701, 2.720935583114624) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.362691402435303, 2.5834579467773438) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.234152793884277, 2.673201322555542) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.362691402435303, 2.5834579467773438) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.7270026206970215, 2.679267168045044) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.869654178619385, 2.520352602005005) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.0098114013671875, 2.157026529312134) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.155025959014893, 2.043893337249756) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.223384857177734, 1.8998318910598755) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.457882404327393, 1.6262876987457275) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.541991710662842, 1.5143576860427856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.457882404327393, 1.6262876987457275) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.223384857177734, 1.8998318910598755) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.155025959014893, 2.043893337249756) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.206323146820068, 2.0876011848449707) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.522034645080566, 2.1826767921447754) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.607831001281738, 2.452009916305542) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.522034645080566, 2.1826767921447754) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.206323146820068, 2.0876011848449707) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.003871440887451, 1.9252097606658936) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.688249588012695, 1.7527395486831665) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.500676155090332, 1.7475345134735107) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.177818775177002, 1.783232569694519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.84898042678833, 1.779885172843933) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.660166025161743, 1.789728045463562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3971784114837646, 1.8019466400146484) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9759151935577393, 1.8166638612747192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3868207931518555, 1.829276442527771) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8437256813049316, 1.8588998317718506) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.395964503288269, 1.8706679344177246) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.287358045578003, 1.871279239654541) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9076126217842102, 2.212132692337036) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.872492253780365, 2.2602195739746094) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r3,12]  [r3,t,12]  [r3,12]  [r3,b,45]  [r3,t,45]  [r3,45]  [h,45]  [r4,45]  [r4,b,34]  [r4,34]  [r4,t,34]  [r4,34]  [r4,t,34]  [r4,34]  [h,34]  [r5,34]  [h,34]  [r5,34]  [r5,t,34]  [r5,34]  [r5,t,34]  [r5,b,t,47]  [r5,b,47]  [r5,47]  [r5,b,t,47]  [r5,t,47]  [r5,b,47]  [r5,t,47]  [r5,47]  [h,47]  [r6,47]  [r6,t,47]  [r6,47]  [r6,b,37]  [r6,37]  [r6,t,37]  [r6,37]  [h,37]  [r6,37]  [h,37]  [r2,37]  [r2,t,37]  


Remaining path: 
[r2,t,37]  [r2,37]  [r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21363
RRG size = 2001

Movement Length = 31.635303
Remaining path Length = 1.3658564
Total path Length = 33.00116

Advice samples: [16, 3, 8, 1, 1, 0, 1, 0, 0, 0] (30)

Total time taken (in ms):7649.539806

Initialization time (in ms):643.267574
Sampling time (in ms):5728.1678
Advice time (in ms):8.877855
Path checking time (in ms):690.295375
Learning time (in ms):177.600317
Exploration time (in ms):0.0
Time taken other than these things (in ms):401.330885
Moving time (in ms):738.1975



