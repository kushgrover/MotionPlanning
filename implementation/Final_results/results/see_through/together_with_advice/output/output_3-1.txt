Parameters values: 
Environment: results/environments/env3/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.5316647776071026,0.029906735253392273), (1.8316647776071027,0.029906735253392273), (1.8316647776071027,0.5299067352533923), (1.5316647776071026,0.5299067352533923)]
[(0.8916993769647183,2.573264270639125), (1.3916993769647183,2.573264270639125), (1.3916993769647183,2.8732642706391247), (0.8916993769647183,2.8732642706391247)]
[(2.822466880675265,0.011726331347083983), (3.322466880675265,0.011726331347083983), (3.322466880675265,0.311726331347084), (2.822466880675265,0.311726331347084)]
[(3.292119766684071,2.5542887391079483), (3.792119766684071,2.5542887391079483), (3.792119766684071,2.854288739107948), (3.292119766684071,2.854288739107948)]
[(4.506744772545506,0.04602612679720857), (4.806744772545506,0.04602612679720857), (4.806744772545506,0.5460261267972085), (4.506744772545506,0.5460261267972085)]
[(5.452111731413338,2.47834811035907), (5.752111731413338,2.47834811035907), (5.752111731413338,2.97834811035907), (5.452111731413338,2.97834811035907)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.105814,y=0.024023486,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.024023486,w=0.9972011,h=2.7794473]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.022553466,w=2.299967,h=2.7809174]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.022553466,w=2.299967,h=2.8262458]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.022553466,w=5.491236,h=2.8262458]  java.awt.geom.Rectangle2D$Float[x=0.3086129,y=0.022553466,w=5.491236,h=2.8262458]  
t: java.awt.geom.Rectangle2D$Float[x=1.4316648,y=0.0,w=0.5,h=0.6299067]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=1.1399655,h=2.9732642]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=2.6307676,h=2.9732642]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=3.1004205,h=2.9732642]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=4.1150455,h=2.9732642]  java.awt.geom.Rectangle2D$Float[x=0.79169935,y=0.0,w=5.0604124,h=3.0783482]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0102451, 1.5568736] with IG = 35.086945
Iter num: 2
Used frontier: Point2D.Float[0.98358, 0.8684902] with IG = 43.54771
Iter num: 3
Added advice frontier Point2D.Float[1.2710993, 0.09576384]
Added advice frontier Point2D.Float[1.5440538, 0.56915665]
Added advice frontier Point2D.Float[1.4748151, 0.6924643]
Used Advice frontier: Point2D.Float[1.4748151, 0.6924643] with IG = 191.63661
Iter num: 4
Used Advice frontier: Point2D.Float[1.5440538, 0.56915665] with IG = 707.12854
Iter num: 5
Used Advice frontier: Point2D.Float[1.2710993, 0.09576384] with IG = 183.00018
Iter num: 6
Used frontier: Point2D.Float[0.20714101, 0.27776915] with IG = 19.41024
Iter num: 7
Used frontier: Point2D.Float[0.9216944, 2.5157137] with IG = 16.129477
Iter num: 8
Added advice frontier Point2D.Float[0.40337878, 2.7196813]
Added advice frontier Point2D.Float[0.27580237, 2.8671095]
Used Advice frontier: Point2D.Float[0.40337878, 2.7196813] with IG = 179.53181
Iter num: 9
Used Advice frontier: Point2D.Float[0.27580237, 2.8671095] with IG = 512.916
Iter num: 10
Used frontier: Point2D.Float[1.5804638, 2.53012] with IG = 17.316885
Iter num: 11
Used frontier: Point2D.Float[1.9168588, 1.4583741] with IG = 14.239479
Iter num: 12
Used frontier: Point2D.Float[2.834685, 1.4871587] with IG = 25.029121
Iter num: 13
Added advice frontier Point2D.Float[2.8815098, 2.0947957]
Added advice frontier Point2D.Float[2.842322, 0.52238035]
Used Advice frontier: Point2D.Float[2.8815098, 2.0947957] with IG = 160.8359
Iter num: 14
Added advice frontier Point2D.Float[3.2777495, 2.8582993]
Added advice frontier Point2D.Float[2.4780023, 2.674328]
Added advice frontier Point2D.Float[2.4033072, 2.5955694]
Used Advice frontier: Point2D.Float[2.4033072, 2.5955694] with IG = 131.87708
Iter num: 15
Used Advice frontier: Point2D.Float[2.4780023, 2.674328] with IG = 921.26605
Iter num: 16
Used Advice frontier: Point2D.Float[3.2777495, 2.8582993] with IG = 121.68486
Iter num: 17
Used Advice frontier: Point2D.Float[2.842322, 0.52238035] with IG = 42.021255
Iter num: 18
Added advice frontier Point2D.Float[2.7597044, 0.1695027]
Added advice frontier Point2D.Float[2.6326709, 0.038387056]
Added advice frontier Point2D.Float[2.5435224, 0.20456107]
Added advice frontier Point2D.Float[2.3638558, 0.08576022]
Used Advice frontier: Point2D.Float[2.7597044, 0.1695027] with IG = 275.92288
Iter num: 19
Used Advice frontier: Point2D.Float[2.6326709, 0.038387056] with IG = 547.75964
Iter num: 20
Used Advice frontier: Point2D.Float[2.5435224, 0.20456107] with IG = 530.28754
Iter num: 21
Used Advice frontier: Point2D.Float[2.3638558, 0.08576022] with IG = 464.26987
Iter num: 22
Used frontier: Point2D.Float[3.7335045, 0.50037515] with IG = 15.759969
Iter num: 23
Used frontier: Point2D.Float[3.7480807, 1.4530505] with IG = 12.648613
Iter num: 24
Used frontier: Point2D.Float[4.6490803, 1.4863787] with IG = 24.539972
Iter num: 25
Added advice frontier Point2D.Float[5.0163674, 0.6072733]
Added advice frontier Point2D.Float[5.064736, 2.1077983]
Used Advice frontier: Point2D.Float[5.064736, 2.1077983] with IG = 105.50643
Iter num: 26
Added advice frontier Point2D.Float[5.8180084, 2.503078]
Added advice frontier Point2D.Float[5.786841, 2.3206618]
Added advice frontier Point2D.Float[4.612793, 2.5115423]
Added advice frontier Point2D.Float[4.807835, 2.7966475]
Used Advice frontier: Point2D.Float[4.612793, 2.5115423] with IG = 165.01076
Iter num: 27
Used Advice frontier: Point2D.Float[4.807835, 2.7966475] with IG = 289.48874
Iter num: 28
Used Advice frontier: Point2D.Float[5.8180084, 2.503078] with IG = 55.48949
Iter num: 29
Used Advice frontier: Point2D.Float[5.786841, 2.3206618] with IG = 540.3662
Iter num: 30
Used Advice frontier: Point2D.Float[5.0163674, 0.6072733] with IG = 39.128876
Iter num: 31
Added advice frontier Point2D.Float[5.71403, 0.12834427]
Added advice frontier Point2D.Float[5.469103, 0.43234774]
Added advice frontier Point2D.Float[4.466449, 0.5721511]
Added advice frontier Point2D.Float[4.302345, 0.4911723]
Used Advice frontier: Point2D.Float[4.466449, 0.5721511] with IG = 126.46971

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0102450847625732, 1.5568735599517822) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9835799932479858, 0.8684902191162109) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4748151302337646, 0.692464292049408) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5440537929534912, 0.5691566467285156) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.271099328994751, 0.09576383978128433) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8256503939628601, 0.20874959230422974) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.20714101195335388, 0.27776914834976196) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8005897998809814, 0.9006258845329285) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8539817333221436, 1.6047455072402954) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9216943979263306, 2.515713691711426) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.40337878465652466, 2.7196812629699707) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.2758023738861084, 2.867109537124634) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7371340394020081, 2.600731372833252) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0143101215362549, 2.526096820831299) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.5804637670516968, 2.5301198959350586) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2079386711120605, 2.12569260597229) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1850506067276, 1.9366695880889893) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.62118399143219, 1.6725928783416748) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9168587923049927, 1.4583741426467896) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.287982702255249, 1.4530221223831177) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8346850872039795, 1.4871586561203003) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7923989295959473, 1.662650227546692) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.881509780883789, 2.0947957038879395) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.688443422317505, 2.1080753803253174) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4033071994781494, 2.595569372177124) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4780023097991943, 2.674328088760376) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.6697518825531006, 2.7377142906188965) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.277749538421631, 2.8582992553710938) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.193509101867676, 2.3164467811584473) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1474812030792236, 1.8967784643173218) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.066884756088257, 1.6320008039474487) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9687836170196533, 1.0801230669021606) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8423221111297607, 0.5223803520202637) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.759704351425171, 0.16950270533561707) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.6326708793640137, 0.038387056440114975) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.543522357940674, 0.20456106960773468) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.3638558387756348, 0.0857602208852768) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7730207443237305, 0.3173803389072418) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.0247371196746826, 0.4205421507358551) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3169102668762207, 0.4163643717765808) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7335045337677, 0.5003751516342163) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3563365936279297, 0.584650993347168) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.064441204071045, 0.7770941853523254) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2367517948150635, 1.1397405862808228) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.631944417953491, 1.4054548740386963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7480807304382324, 1.4530504941940308) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7824997901916504, 1.4109208583831787) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.233284950256348, 1.5257751941680908) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.649080276489258, 1.4863786697387695) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.146282196044922, 1.7160874605178833) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0647358894348145, 2.1077983379364014) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.61279296875, 2.511542320251465) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.807835102081299, 2.796647548675537) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.61279296875, 2.511542320251465) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.0647358894348145, 2.1077983379364014) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.8180084228515625, 2.503077983856201) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.786840915679932, 2.320661783218384) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.8180084228515625, 2.503077983856201) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.0647358894348145, 2.1077983379364014) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.127245903015137, 1.7457839250564575) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.033688068389893, 1.3610538244247437) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.042990684509277, 1.0698126554489136) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0391669273376465, 0.704052209854126) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.016367435455322, 0.607273280620575) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [r3,t,35]  [r3,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 31
Total sampled points = 17012
RRG size = 1551

Movement Length = 28.052362
Remaining path Length = 1.6369334
Total path Length = 29.689297

Advice samples: [10, 5, 3, 3, 0, 0, 0, 0, 0, 0] (21)

Total time taken (in ms):6265.702211

Initialization time (in ms):649.980864
Sampling time (in ms):4363.464331
Advice time (in ms):7.647691
Path checking time (in ms):603.767561
Learning time (in ms):179.603807
Exploration time (in ms):0.0
Time taken other than these things (in ms):461.237957
Moving time (in ms):134.21773



