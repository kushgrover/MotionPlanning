Parameters values: 
Environment: results/environments/env19/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.17943210309120092,0.05207775645967032), (0.679432103091201,0.05207775645967032), (0.679432103091201,0.3520777564596703), (0.17943210309120092,0.3520777564596703)]
[(0.4527206736368159,2.4908623377729584), (0.7527206736368159,2.4908623377729584), (0.7527206736368159,2.9908623377729584), (0.4527206736368159,2.9908623377729584)]
[(2.0593898999116638,0.038733732464954804), (2.3593898999116636,0.038733732464954804), (2.3593898999116636,0.5387337324649548), (2.0593898999116638,0.5387337324649548)]
[(3.3381856931681178,2.4650063876680885), (3.6381856931681176,2.4650063876680885), (3.6381856931681176,2.9650063876680885), (3.3381856931681178,2.9650063876680885)]
[(4.176931487754255,0.10273608069913792), (4.676931487754255,0.10273608069913792), (4.676931487754255,0.4027360806991379), (4.176931487754255,0.4027360806991379)]
[(5.056207486876328,2.4503307829733694), (5.356207486876328,2.4503307829733694), (5.356207486876328,2.9503307829733694), (5.056207486876328,2.9503307829733694)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.2699472,y=0.06508329,w=0.20000005,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.06508329,w=0.6142312,h=2.601608]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.029881071,w=2.4481509,h=2.6368103]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.029881071,w=2.4481509,h=2.661614]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.029881071,w=4.5938616,h=2.661614]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.029881071,w=4.5938616,h=2.661614]  
t: java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=0.70000005,h=0.45207775]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=0.7732886,h=3.0908623]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=2.379958,h=3.0908623]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=3.6587536,h=3.0908623]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=4.6974993,h=3.0908623]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=5.3767753,h=3.0908623]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0371722, 1.4966317] with IG = 34.14505
Iter num: 2
Used frontier: Point2D.Float[0.9559374, 0.65340596] with IG = 41.315983
Iter num: 3
Added advice frontier Point2D.Float[1.3812436, 0.12071963]
Added advice frontier Point2D.Float[1.4741899, 0.37037787]
Added advice frontier Point2D.Float[0.5539192, 0.42707115]
Added advice frontier Point2D.Float[0.7418913, 0.5042101]
Used Advice frontier: Point2D.Float[0.7418913, 0.5042101] with IG = 383.27087
Iter num: 4
Added advice frontier Point2D.Float[0.8009553, 2.4122353]
Used Advice frontier: Point2D.Float[0.5539192, 0.42707115] with IG = 492.1635
Iter num: 5
Used Advice frontier: Point2D.Float[1.3812436, 0.12071963] with IG = 113.35006
Iter num: 6
Used Advice frontier: Point2D.Float[1.4741899, 0.37037787] with IG = 375.37723
Iter num: 7
Used Advice frontier: Point2D.Float[0.8009553, 2.4122353] with IG = 46.22956
Iter num: 8
Added advice frontier Point2D.Float[0.8850442, 2.5046165]
Used Advice frontier: Point2D.Float[0.8850442, 2.5046165] with IG = 800.50635
Iter num: 9
Used frontier: Point2D.Float[1.7937683, 2.4388547] with IG = 24.934805
Iter num: 10
Used frontier: Point2D.Float[1.9214436, 1.5345093] with IG = 12.847244
Iter num: 11
Used frontier: Point2D.Float[2.8405576, 1.393002] with IG = 24.336159
Iter num: 12
Added advice frontier Point2D.Float[2.8685043, 2.0936084]
Added advice frontier Point2D.Float[3.2323198, 0.8244349]
Used Advice frontier: Point2D.Float[2.8685043, 2.0936084] with IG = 142.62007
Iter num: 13
Added advice frontier Point2D.Float[3.3655243, 2.4294195]
Added advice frontier Point2D.Float[3.5949757, 2.3392818]
Used Advice frontier: Point2D.Float[3.3655243, 2.4294195] with IG = 166.71344
Iter num: 14
Used Advice frontier: Point2D.Float[3.5949757, 2.3392818] with IG = 405.6444
Iter num: 15
Added advice frontier Point2D.Float[2.3029418, 2.559645]
Added advice frontier Point2D.Float[2.3752766, 2.526853]
Used Advice frontier: Point2D.Float[2.3752766, 2.526853] with IG = 79.914505
Iter num: 16
Used Advice frontier: Point2D.Float[2.3029418, 2.559645] with IG = 1259.1199
Iter num: 17
Used Advice frontier: Point2D.Float[3.2323198, 0.8244349] with IG = 49.145107
Iter num: 18
Added advice frontier Point2D.Float[2.3358562, 0.63252395]
Added advice frontier Point2D.Float[3.1183677, 0.21288629]
Added advice frontier Point2D.Float[3.7353027, 0.090486445]
Used Advice frontier: Point2D.Float[3.1183677, 0.21288629] with IG = 159.73982
Iter num: 19
Used Advice frontier: Point2D.Float[3.7353027, 0.090486445] with IG = 158.99265
Iter num: 20
Used Advice frontier: Point2D.Float[2.3358562, 0.63252395] with IG = 65.13188
Iter num: 21
Used frontier: Point2D.Float[3.7630265, 1.3965553] with IG = 13.468076
Iter num: 22
Used frontier: Point2D.Float[4.338155, 1.6080601] with IG = 28.816315
Iter num: 23
Added advice frontier Point2D.Float[5.1246524, 2.0570688]
Added advice frontier Point2D.Float[4.815114, 1.8092785]
Used Advice frontier: Point2D.Float[5.1246524, 2.0570688] with IG = 110.418915
Iter num: 24
Added advice frontier Point2D.Float[5.107014, 2.4065518]
Added advice frontier Point2D.Float[4.8890977, 2.4646142]
Added advice frontier Point2D.Float[4.9830556, 0.9962395]
Added advice frontier Point2D.Float[4.9608912, 1.0069274]
Added advice frontier Point2D.Float[4.755549, 2.6042192]
Added advice frontier Point2D.Float[4.709329, 2.72134]
Used Advice frontier: Point2D.Float[5.107014, 2.4065518] with IG = 285.77322
Iter num: 25
Used Advice frontier: Point2D.Float[4.8890977, 2.4646142] with IG = 443.4216
Iter num: 26
Used Advice frontier: Point2D.Float[4.755549, 2.6042192] with IG = 517.6081
Iter num: 27
Used Advice frontier: Point2D.Float[4.709329, 2.72134] with IG = 794.2127
Iter num: 28
Used Advice frontier: Point2D.Float[4.815114, 1.8092785] with IG = 84.677
Iter num: 29
Used Advice frontier: Point2D.Float[4.9608912, 1.0069274] with IG = 122.460625
Iter num: 30
Added advice frontier Point2D.Float[5.2997355, 0.31053847]
Used Advice frontier: Point2D.Float[4.9830556, 0.9962395] with IG = 4063.9358

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0371721982955933, 1.4966317415237427) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.955937385559082, 0.6534059643745422) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7418913245201111, 0.5042101144790649) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5539191961288452, 0.42707115411758423) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3812435865402222, 0.12071962654590607) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.4741898775100708, 0.37037786841392517) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.176264762878418, 0.928912341594696) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0371721982955933, 1.4966317415237427) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8009552955627441, 2.4122352600097656) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8850442171096802, 2.5046164989471436) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0606019496917725, 2.4340126514434814) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.793768286705017, 2.438854694366455) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1771881580352783, 2.1110968589782715) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1806907653808594, 1.9429771900177002) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6330004930496216, 1.7002215385437012) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9214435815811157, 1.534509301185608) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9997036457061768, 1.5698113441467285) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.84055757522583, 1.3930020332336426) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.868504285812378, 2.0936083793640137) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3655242919921875, 2.42941951751709) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.594975709915161, 2.3392817974090576) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3655242919921875, 2.42941951751709) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.801576852798462, 2.4151649475097656) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.375276565551758, 2.526853084564209) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.3029417991638184, 2.559644937515259) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.5668132305145264, 2.29632568359375) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.844491481781006, 2.0480265617370605) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9419400691986084, 1.5450109243392944) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.014449119567871, 1.3411904573440552) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2323198318481445, 0.8244348764419556) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.233269691467285, 0.6619630455970764) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1183676719665527, 0.2128862887620926) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.735302686691284, 0.09048644453287125) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1183676719665527, 0.2128862887620926) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.735896110534668, 0.5208659172058105) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3358561992645264, 0.6325239539146423) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.722480297088623, 0.8450614809989929) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9722766876220703, 1.0547704696655273) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3681998252868652, 1.1768972873687744) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.763026475906372, 1.3965553045272827) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.238284111022949, 1.2795021533966064) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.3381547927856445, 1.6080601215362549) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.12465238571167, 2.0570688247680664) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.107014179229736, 2.4065518379211426) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.889097690582275, 2.464614152908325) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.75554895401001, 2.6042191982269287) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.709329128265381, 2.7213399410247803) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.901926040649414, 2.375321865081787) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.12465238571167, 2.0570688247680664) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8151140213012695, 1.8092784881591797) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8615241050720215, 1.6489652395248413) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.917793273925781, 1.2730625867843628) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,b,35]  [r3,35]  [r3,b,35]  [r3,35]  [r3,t,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 30
Total sampled points = 15417
RRG size = 1501

Movement Length = 23.257092
Remaining path Length = 1.1488081
Total path Length = 24.4059

Advice samples: [10, 8, 2, 3, 0, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):5976.332051

Initialization time (in ms):577.19337
Sampling time (in ms):4203.163703
Advice time (in ms):8.864469
Path checking time (in ms):610.912377
Learning time (in ms):189.544304
Exploration time (in ms):0.0
Time taken other than these things (in ms):386.653828
Moving time (in ms):201.3266



