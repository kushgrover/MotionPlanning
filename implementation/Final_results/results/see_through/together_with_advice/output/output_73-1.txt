Parameters values: 
Environment: results/environments/env73/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.2619032876713636,0.03973732928534768), (0.5619032876713637,0.03973732928534768), (0.5619032876713637,0.5397373292853477), (0.2619032876713636,0.5397373292853477)]
[(1.2864425655673826,2.6079084722417094), (1.7864425655673826,2.6079084722417094), (1.7864425655673826,2.9079084722417092), (1.2864425655673826,2.9079084722417092)]
[(2.7554584616531503,0.01646676604876351), (3.05545846165315,0.01646676604876351), (3.05545846165315,0.5164667660487635), (2.7554584616531503,0.5164667660487635)]
[(2.273420673543591,2.5665012858311536), (2.773420673543591,2.5665012858311536), (2.773420673543591,2.8665012858311534), (2.273420673543591,2.8665012858311534)]
[(4.8075040021409166,0.1442849701146298), (5.3075040021409166,0.1442849701146298), (5.3075040021409166,0.44428497011462975), (4.8075040021409166,0.44428497011462975)]
[(4.443166074575631,2.6135473649783583), (4.943166074575631,2.6135473649783583), (4.943166074575631,2.913547364978358), (4.443166074575631,2.913547364978358)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.6328118,y=0.019286212,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.0179586,y=0.019286212,w=0.8148531,h=2.7173302]  java.awt.geom.Rectangle2D$Float[x=1.0179586,y=0.013327094,w=2.2500174,h=2.7232893]  java.awt.geom.Rectangle2D$Float[x=1.0179586,y=0.013327094,w=2.2500174,h=2.7232893]  java.awt.geom.Rectangle2D$Float[x=1.0179586,y=0.013327094,w=3.4499054,h=2.7232893]  java.awt.geom.Rectangle2D$Float[x=1.0179586,y=0.013327094,w=4.2860103,h=2.7232893]  
t: java.awt.geom.Rectangle2D$Float[x=0.16190329,y=0.0,w=0.49999997,h=0.6397373]  java.awt.geom.Rectangle2D$Float[x=0.16190329,y=0.0,w=1.7245393,h=3.0079086]  java.awt.geom.Rectangle2D$Float[x=0.16190329,y=0.0,w=2.993555,h=3.0079086]  java.awt.geom.Rectangle2D$Float[x=0.16190329,y=0.0,w=2.993555,h=3.0079086]  java.awt.geom.Rectangle2D$Float[x=0.16190329,y=0.0,w=5.2456007,h=3.0079086]  java.awt.geom.Rectangle2D$Float[x=0.16190329,y=0.0,w=5.2456007,h=3.0135474]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.002745, 1.5236558] with IG = 35.435276
Iter num: 2
Used frontier: Point2D.Float[0.92247415, 2.3164663] with IG = 46.432022
Iter num: 3
Added advice frontier Point2D.Float[1.3604025, 2.5128124]
Added advice frontier Point2D.Float[1.0388619, 2.65355]
Added advice frontier Point2D.Float[1.2642779, 2.8248441]
Added advice frontier Point2D.Float[1.1961739, 2.709896]
Used Advice frontier: Point2D.Float[1.0388619, 2.65355] with IG = 280.41757
Iter num: 4
Used Advice frontier: Point2D.Float[1.1961739, 2.709896] with IG = 598.4488
Iter num: 5
Used Advice frontier: Point2D.Float[1.2642779, 2.8248441] with IG = 748.4558
Iter num: 6
Used Advice frontier: Point2D.Float[1.3604025, 2.5128124] with IG = 256.3124
Iter num: 7
Used frontier: Point2D.Float[1.090371, 0.6056212] with IG = 16.46428
Iter num: 8
Added advice frontier Point2D.Float[0.6181413, 0.33975112]
Added advice frontier Point2D.Float[1.7243696, 0.04344207]
Added advice frontier Point2D.Float[0.68261313, 0.43047768]
Added advice frontier Point2D.Float[1.7186835, 0.25996125]
Used Advice frontier: Point2D.Float[0.68261313, 0.43047768] with IG = 225.33627
Iter num: 9
Used Advice frontier: Point2D.Float[0.6181413, 0.33975112] with IG = 898.46405
Iter num: 10
Used Advice frontier: Point2D.Float[1.7186835, 0.25996125] with IG = 90.536194
Iter num: 11
Used Advice frontier: Point2D.Float[1.7243696, 0.04344207] with IG = 461.69366
Iter num: 12
Used frontier: Point2D.Float[1.9212606, 1.454591] with IG = 11.447335
Iter num: 13
Used frontier: Point2D.Float[2.8786197, 1.3658594] with IG = 23.375126
Iter num: 14
Added advice frontier Point2D.Float[3.228004, 2.1752024]
Added advice frontier Point2D.Float[3.2009838, 0.81926596]
Added advice frontier Point2D.Float[3.1016219, 0.55664265]
Used Advice frontier: Point2D.Float[3.2009838, 0.81926596] with IG = 157.21715
Iter num: 15
Added advice frontier Point2D.Float[3.220874, 0.13032596]
Added advice frontier Point2D.Float[3.1503255, 0.33621436]
Added advice frontier Point2D.Float[3.0908184, 0.054553118]
Used Advice frontier: Point2D.Float[3.1016219, 0.55664265] with IG = 356.1363
Iter num: 16
Used Advice frontier: Point2D.Float[3.1503255, 0.33621436] with IG = 442.9782
Iter num: 17
Used Advice frontier: Point2D.Float[3.220874, 0.13032596] with IG = 459.47455
Iter num: 18
Used Advice frontier: Point2D.Float[3.0908184, 0.054553118] with IG = 664.3675
Iter num: 19
Used Advice frontier: Point2D.Float[3.228004, 2.1752024] with IG = 46.779602
Iter num: 20
Added advice frontier Point2D.Float[2.7885523, 2.7553988]
Added advice frontier Point2D.Float[3.0174673, 2.76255]
Added advice frontier Point2D.Float[2.8815665, 2.589081]
Used Advice frontier: Point2D.Float[2.8815665, 2.589081] with IG = 158.20268
Iter num: 21
Used Advice frontier: Point2D.Float[2.7885523, 2.7553988] with IG = 524.7683
Iter num: 22
Used Advice frontier: Point2D.Float[3.0174673, 2.76255] with IG = 436.6304
Iter num: 23
Added advice frontier Point2D.Float[2.8415391, 2.5600593]
Used Advice frontier: Point2D.Float[2.8415391, 2.5600593] with IG = 372.7991
Iter num: 24
Used frontier: Point2D.Float[3.7812028, 1.5411795] with IG = 16.022316
Iter num: 25
Used frontier: Point2D.Float[4.141131, 1.5419785] with IG = 63.901485
Iter num: 26
Added advice frontier Point2D.Float[4.9438443, 2.036443]
Added advice frontier Point2D.Float[5.049897, 1.9210739]
Used Advice frontier: Point2D.Float[4.9438443, 2.036443] with IG = 106.06567
Iter num: 27
Added advice frontier Point2D.Float[4.991145, 2.92712]
Added advice frontier Point2D.Float[5.300578, 2.624067]
Added advice frontier Point2D.Float[5.130738, 2.9384534]
Used Advice frontier: Point2D.Float[5.049897, 1.9210739] with IG = 638.13153
Iter num: 28
Used Advice frontier: Point2D.Float[5.300578, 2.624067] with IG = 115.34487
Iter num: 29
Added advice frontier Point2D.Float[5.0910573, 0.96662754]
Used Advice frontier: Point2D.Float[5.130738, 2.9384534] with IG = 279.85358
Iter num: 30
Used Advice frontier: Point2D.Float[4.991145, 2.92712] with IG = 714.0206
Iter num: 31
Used Advice frontier: Point2D.Float[5.0910573, 0.96662754] with IG = 48.825638
Iter num: 32
Added advice frontier Point2D.Float[5.0544767, 0.5217198]
Added advice frontier Point2D.Float[5.5513644, 0.3987334]
Used Advice frontier: Point2D.Float[5.0544767, 0.5217198] with IG = 224.00981
Iter num: 33
Used Advice frontier: Point2D.Float[5.5513644, 0.3987334] with IG = 195.35759
Iter num: 34
Used frontier: Point2D.Float[5.0544767, 0.5217198] with IG = 48.839397
Iter num: 35
Used frontier: Point2D.Float[5.7578425, 1.3231566] with IG = 18.77434
Iter num: 36
Used frontier: Point2D.Float[5.0544767, 0.5217198] with IG = 20.40689
Iter num: 37
Added advice frontier Point2D.Float[4.4364095, 0.24203295]
Added advice frontier Point2D.Float[4.461701, 0.4064163]
Used Advice frontier: Point2D.Float[4.461701, 0.4064163] with IG = 165.23875

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0027450323104858, 1.5236557722091675) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9224741458892822, 2.3164663314819336) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.038861870765686, 2.653549909591675) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.196173906326294, 2.7098960876464844) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.2642779350280762, 2.8248441219329834) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.196173906326294, 2.7098960876464844) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.3604024648666382, 2.512812376022339) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2146189212799072, 2.1775739192962646) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1229456663131714, 1.4051252603530884) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.090371012687683, 0.6056212186813354) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6826131343841553, 0.43047767877578735) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6181412935256958, 0.33975112438201904) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2724909782409668, 0.3165833353996277) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7186834812164307, 0.25996124744415283) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7243696451187134, 0.04344207048416138) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3844146728515625, 0.5480208396911621) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.233894944190979, 0.8192315697669983) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.180118203163147, 1.0239657163619995) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2899354696273804, 1.178895354270935) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6964023113250732, 1.3494590520858765) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9212605953216553, 1.4545910358428955) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5157008171081543, 1.5020244121551514) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.87861967086792, 1.3658593893051147) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.020632028579712, 1.1667271852493286) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.200983762741089, 0.8192659616470337) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1016218662261963, 0.5566426515579224) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1503255367279053, 0.3362143635749817) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.220874071121216, 0.13032595813274384) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.090818405151367, 0.05455311760306358) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.1016218662261963, 0.5566426515579224) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.105830669403076, 1.0159980058670044) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.178590774536133, 1.365257740020752) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1644935607910156, 1.621805191040039) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1861486434936523, 2.0763769149780273) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.228003978729248, 2.1752023696899414) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0794339179992676, 2.1501829624176025) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8815665245056152, 2.589081048965454) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.7885522842407227, 2.755398750305176) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0174672603607178, 2.762550115585327) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.841539144515991, 2.5600593090057373) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.0515458583831787, 2.163774251937866) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1215977668762207, 2.0254709720611572) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.468961715698242, 1.6788244247436523) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.781202793121338, 1.5411795377731323) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.1411309242248535, 1.5419784784317017) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.453600883483887, 1.7303816080093384) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.943844318389893, 2.036442995071411) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.049897193908691, 1.9210739135742188) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.943844318389893, 2.036442995071411) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.036683559417725, 2.3612539768218994) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.3005781173706055, 2.6240670680999756) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.130737781524658, 2.938453435897827) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.991145133972168, 2.9271199703216553) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.05465030670166, 2.7172787189483643) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.036683559417725, 2.3612539768218994) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.943844318389893, 2.036442995071411) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.084742546081543, 1.6393485069274902) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.15390157699585, 1.5489684343338013) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.053833484649658, 1.2021609544754028) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.091057300567627, 0.9666275382041931) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.054476737976074, 0.5217198133468628) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.551364421844482, 0.3987334072589874) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.054476737976074, 0.5217198133468628) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.091057300567627, 0.9666275382041931) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.257971286773682, 1.1235017776489258) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.443368911743164, 1.1410930156707764) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.757842540740967, 1.3231565952301025) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.443368911743164, 1.1410930156707764) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.257971286773682, 1.1235017776489258) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.091057300567627, 0.9666275382041931) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.054476737976074, 0.5217198133468628) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,b,t,46]  [r2,t,46]  [r2,b,t,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,b,t,2]  [r3,t,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,35]  [r4,b,t,35]  [r4,35]  [h,35]  [r6,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,t,53]  [r5,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20301
RRG size = 1851

Movement Length = 25.36163
Remaining path Length = 0.1663176
Total path Length = 25.527946

Advice samples: [13, 10, 4, 0, 0, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):7759.61971

Initialization time (in ms):614.100033
Sampling time (in ms):5506.26036
Advice time (in ms):8.766448
Path checking time (in ms):940.997456
Learning time (in ms):247.119775
Exploration time (in ms):0.0
Time taken other than these things (in ms):442.375638
Moving time (in ms):1006.63293



