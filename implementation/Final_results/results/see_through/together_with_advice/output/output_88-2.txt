Parameters values: 
Environment: results/environments/env88/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.18852204260107985,0.02005075961083687), (0.48852204260107984,0.02005075961083687), (0.48852204260107984,0.5200507596108369), (0.18852204260107985,0.5200507596108369)]
[(1.4497144214397857,2.486131380617537), (1.7497144214397857,2.486131380617537), (1.7497144214397857,2.986131380617537), (1.4497144214397857,2.986131380617537)]
[(2.1412735903605546,0.2486321241574), (2.6412735903605546,0.2486321241574), (2.6412735903605546,0.5486321241573999), (2.1412735903605546,0.5486321241573999)]
[(2.509682449582955,2.4807208310721247), (2.809682449582955,2.4807208310721247), (2.809682449582955,2.9807208310721247), (2.509682449582955,2.9807208310721247)]
[(4.082086787537034,0.01576170863196005), (4.382086787537034,0.01576170863196005), (4.382086787537034,0.51576170863196), (4.082086787537034,0.51576170863196)]
[(4.717061288074511,2.4851427901170107), (5.217061288074511,2.4851427901170107), (5.217061288074511,2.7851427901170105), (4.717061288074511,2.7851427901170105)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.028877806,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.028877806,w=0.5271911,h=2.6384568]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.028877806,w=2.552269,h=2.6384568]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.028877806,w=2.552269,h=2.6384568]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.0048252963,w=5.1698246,h=2.6625092]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.0048252963,w=5.1698246,h=2.8346627]  
t: java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=0.49999997,h=0.6200508]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=1.7611923,h=3.0861313]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=2.6527517,h=3.0861313]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=2.8211606,h=3.0861313]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=4.3935647,h=3.0861313]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=5.2285395,h=3.0861313]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0347006, 1.4390944] with IG = 34.163113
Iter num: 2
Used frontier: Point2D.Float[1.0997957, 0.6521978] with IG = 51.926044
Iter num: 3
Added advice frontier Point2D.Float[0.7842586, 0.163021]
Added advice frontier Point2D.Float[0.99704444, 0.049512565]
Added advice frontier Point2D.Float[0.31781277, 0.61727387]
Added advice frontier Point2D.Float[0.24072304, 0.70473176]
Added advice frontier Point2D.Float[0.4939754, 0.24199665]
Used Advice frontier: Point2D.Float[0.7842586, 0.163021] with IG = 171.78743
Iter num: 4
Used Advice frontier: Point2D.Float[0.99704444, 0.049512565] with IG = 414.64877
Iter num: 5
Used Advice frontier: Point2D.Float[0.4939754, 0.24199665] with IG = 185.65419
Iter num: 6
Used Advice frontier: Point2D.Float[0.31781277, 0.61727387] with IG = 137.84557
Iter num: 7
Used Advice frontier: Point2D.Float[0.24072304, 0.70473176] with IG = 857.7544
Iter num: 8
Used frontier: Point2D.Float[0.9065843, 2.3277256] with IG = 13.992439
Iter num: 9
Added advice frontier Point2D.Float[1.4437442, 2.6077876]
Added advice frontier Point2D.Float[1.0741098, 2.4972491]
Added advice frontier Point2D.Float[1.040813, 2.8461869]
Used Advice frontier: Point2D.Float[1.0741098, 2.4972491] with IG = 419.57962
Iter num: 10
Used Advice frontier: Point2D.Float[1.040813, 2.8461869] with IG = 285.28815
Iter num: 11
Used Advice frontier: Point2D.Float[1.4437442, 2.6077876] with IG = 213.59538
Iter num: 12
Used frontier: Point2D.Float[1.9510387, 1.5188404] with IG = 13.11251
Iter num: 13
Used frontier: Point2D.Float[2.74231, 1.5271848] with IG = 28.846735
Iter num: 14
Added advice frontier Point2D.Float[2.938115, 0.8691331]
Added advice frontier Point2D.Float[2.8191795, 1.072298]
Added advice frontier Point2D.Float[2.8754458, 2.1040204]
Added advice frontier Point2D.Float[2.8423703, 1.9330981]
Used Advice frontier: Point2D.Float[2.8423703, 1.9330981] with IG = 239.19777
Iter num: 15
Added advice frontier Point2D.Float[3.0784316, 2.5875056]
Added advice frontier Point2D.Float[3.307748, 2.2645574]
Added advice frontier Point2D.Float[2.8765256, 2.6975198]
Added advice frontier Point2D.Float[2.8802829, 2.591317]
Added advice frontier Point2D.Float[2.9118204, 2.3902884]
Added advice frontier Point2D.Float[2.8343186, 2.542603]
Used Advice frontier: Point2D.Float[2.8754458, 2.1040204] with IG = 574.4052
Iter num: 16
Used Advice frontier: Point2D.Float[2.9118204, 2.3902884] with IG = 346.5367
Iter num: 17
Used Advice frontier: Point2D.Float[2.8343186, 2.542603] with IG = 585.1428
Iter num: 18
Used Advice frontier: Point2D.Float[2.8802829, 2.591317] with IG = 1493.0765
Iter num: 19
Used Advice frontier: Point2D.Float[2.8765256, 2.6975198] with IG = 941.0056
Iter num: 20
Used Advice frontier: Point2D.Float[3.0784316, 2.5875056] with IG = 434.9095
Iter num: 21
Used Advice frontier: Point2D.Float[3.307748, 2.2645574] with IG = 252.47246
Iter num: 22
Used Advice frontier: Point2D.Float[2.8191795, 1.072298] with IG = 75.860954
Iter num: 23
Added advice frontier Point2D.Float[2.7380345, 0.4146103]
Added advice frontier Point2D.Float[3.2226293, 0.27606493]
Used Advice frontier: Point2D.Float[2.938115, 0.8691331] with IG = 424.77646
Iter num: 24
Used Advice frontier: Point2D.Float[2.7380345, 0.4146103] with IG = 191.95505
Iter num: 25
Used Advice frontier: Point2D.Float[3.2226293, 0.27606493] with IG = 192.46384
Iter num: 26
Used frontier: Point2D.Float[3.645993, 1.453313] with IG = 15.609484
Iter num: 27
Used frontier: Point2D.Float[4.499378, 1.727559] with IG = 21.163816
Iter num: 28
Added advice frontier Point2D.Float[4.9093127, 0.9438008]
Added advice frontier Point2D.Float[5.097876, 2.077676]
Added advice frontier Point2D.Float[5.2083187, 1.498625]
Added advice frontier Point2D.Float[5.103374, 1.1203517]
Used Advice frontier: Point2D.Float[5.097876, 2.077676] with IG = 144.22017
Iter num: 29
Added advice frontier Point2D.Float[4.7581925, 2.4490016]
Added advice frontier Point2D.Float[4.54253, 2.562605]
Used Advice frontier: Point2D.Float[4.7581925, 2.4490016] with IG = 198.45193
Iter num: 30
Added advice frontier Point2D.Float[5.501096, 2.674059]
Added advice frontier Point2D.Float[5.4291487, 2.5114412]
Added advice frontier Point2D.Float[5.256347, 2.7143056]
Used Advice frontier: Point2D.Float[4.54253, 2.562605] with IG = 410.24963
Iter num: 31
Used Advice frontier: Point2D.Float[5.4291487, 2.5114412] with IG = 92.850914
Iter num: 32
Used Advice frontier: Point2D.Float[5.501096, 2.674059] with IG = 562.35803
Iter num: 33
Used Advice frontier: Point2D.Float[5.256347, 2.7143056] with IG = 403.1679
Iter num: 34
Used Advice frontier: Point2D.Float[5.2083187, 1.498625] with IG = 73.61336
Iter num: 35
Used Advice frontier: Point2D.Float[5.103374, 1.1203517] with IG = 254.73749
Iter num: 36
Added advice frontier Point2D.Float[4.4414344, 0.53215086]
Added advice frontier Point2D.Float[4.5390873, 0.6922916]
Used Advice frontier: Point2D.Float[4.9093127, 0.9438008] with IG = 381.16336
Iter num: 37
Used Advice frontier: Point2D.Float[4.5390873, 0.6922916] with IG = 210.75385
Iter num: 38
Used Advice frontier: Point2D.Float[4.4414344, 0.53215086] with IG = 533.1445
Iter num: 39
Used frontier: Point2D.Float[5.651618, 0.39141387] with IG = 16.893251
Iter num: 40
Added advice frontier Point2D.Float[5.7961106, 0.19640517]
Added advice frontier Point2D.Float[5.9419937, 0.17370777]
Used Advice frontier: Point2D.Float[5.7961106, 0.19640517] with IG = 412.02005

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.034700632095337, 1.4390944242477417) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0997956991195679, 0.6521977782249451) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7842586040496826, 0.1630209982395172) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9970444440841675, 0.04951256513595581) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4939754009246826, 0.2419966459274292) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5852810144424438, 0.2632378935813904) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.42201751470565796, 0.7201923727989197) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3178127706050873, 0.6172738671302795) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.24072304368019104, 0.7047317624092102) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6234725713729858, 0.8672559857368469) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.895476758480072, 0.9591037631034851) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8812299370765686, 1.255770206451416) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8774135708808899, 1.6712915897369385) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9065843224525452, 2.327725648880005) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0741097927093506, 2.497249126434326) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0408129692077637, 2.846186876296997) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.44374418258667, 2.607787609100342) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2404147386550903, 2.215397834777832) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1256847381591797, 1.9174845218658447) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5293885469436646, 1.7258235216140747) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9510387182235718, 1.5188404321670532) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.456364870071411, 1.4772109985351562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.742310047149658, 1.5271848440170288) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8423702716827393, 1.9330980777740479) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.87544584274292, 2.104020357131958) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.911820411682129, 2.3902883529663086) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8343186378479004, 2.542603015899658) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8802828788757324, 2.5913169384002686) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.876525640487671, 2.6975197792053223) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0784316062927246, 2.587505578994751) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.3077480792999268, 2.264557361602783) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.132054328918457, 2.0781631469726562) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0992746353149414, 1.7746211290359497) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0018091201782227, 1.4893723726272583) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8191795349121094, 1.0722980499267578) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.938114881515503, 0.8691331148147583) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9565956592559814, 0.749480128288269) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.73803448677063, 0.4146102964878082) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.989790201187134, 0.4082455635070801) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2226293087005615, 0.276064932346344) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.1864206790924072, 0.5619487166404724) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1378860473632812, 0.8030216097831726) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2051854133605957, 1.1163501739501953) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.285261631011963, 1.1773364543914795) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6459929943084717, 1.4533129930496216) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7739264965057373, 1.7884820699691772) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.499378204345703, 1.727558970451355) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.097876071929932, 2.0776760578155518) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.941580295562744, 2.2673826217651367) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.758192539215088, 2.4490015506744385) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.542530059814453, 2.5626049041748047) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.758192539215088, 2.4490015506744385) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.920270919799805, 2.3318161964416504) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1214213371276855, 2.2417917251586914) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.364192485809326, 2.422118902206421) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.4291486740112305, 2.511441230773926) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.501095771789551, 2.6740589141845703) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.256347179412842, 2.7143056392669678) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.364192485809326, 2.422118902206421) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.329020023345947, 2.267979860305786) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.097876071929932, 2.0776760578155518) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.208318710327148, 1.4986250400543213) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.103374004364014, 1.1203516721725464) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.909312725067139, 0.9438008069992065) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7793498039245605, 0.760441780090332) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.539087295532227, 0.6922916173934937) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.441434383392334, 0.5321508646011353) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.539087295532227, 0.6922916173934937) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7793498039245605, 0.760441780090332) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.099298477172852, 0.9288240075111389) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.350812911987305, 0.2220577895641327) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,b,t,19]  [r4,t,19]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21208
RRG size = 2001

Movement Length = 24.23236
Remaining path Length = 0.0
Total path Length = 24.23236

Advice samples: [11, 7, 4, 5, 2, 1, 2, 0, 0, 0] (32)

Total time taken (in ms):8088.965075

Initialization time (in ms):504.743499
Sampling time (in ms):6041.814599
Advice time (in ms):7.324018
Path checking time (in ms):843.078794
Learning time (in ms):194.332351
Exploration time (in ms):0.0
Time taken other than these things (in ms):497.671814
Moving time (in ms):1207.9596



