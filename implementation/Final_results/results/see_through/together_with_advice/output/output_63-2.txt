Parameters values: 
Environment: results/environments/env63/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.45750884220103394,0.05940857451603827), (0.9575088422010339,0.05940857451603827), (0.9575088422010339,0.35940857451603825), (0.45750884220103394,0.35940857451603825)]
[(1.4354667894088826,2.494280392875732), (1.7354667894088827,2.494280392875732), (1.7354667894088827,2.994280392875732), (1.4354667894088826,2.994280392875732)]
[(2.81356001758026,0.13377818056938148), (3.31356001758026,0.13377818056938148), (3.31356001758026,0.43377818056938144), (2.81356001758026,0.43377818056938144)]
[(2.6696991412960203,2.5929061754575824), (3.1696991412960203,2.5929061754575824), (3.1696991412960203,2.892906175457582), (2.6696991412960203,2.892906175457582)]
[(5.515594320200545,0.04783874179166155), (5.815594320200545,0.04783874179166155), (5.815594320200545,0.5478387417916616), (5.515594320200545,0.5478387417916616)]
[(4.88009813038543,2.4819202999518524), (5.18009813038543,2.4819202999518524), (5.18009813038543,2.9819202999518524), (4.88009813038543,2.9819202999518524)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.3121698,y=0.1744385,w=0.19999993,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=1.2190053,y=0.1744385,w=0.29316437,h=2.4974704]  java.awt.geom.Rectangle2D$Float[x=1.2190053,y=0.10036874,w=1.0454397,h=2.57154]  java.awt.geom.Rectangle2D$Float[x=1.2190053,y=0.10036874,w=2.4081447,h=2.6805456]  java.awt.geom.Rectangle2D$Float[x=1.2190053,y=0.0204811,w=3.5148628,h=2.7604332]  java.awt.geom.Rectangle2D$Float[x=1.2190053,y=0.0204811,w=3.6279795,h=2.7604332]  
t: java.awt.geom.Rectangle2D$Float[x=0.35750884,y=0.0,w=0.7,h=0.45940858]  java.awt.geom.Rectangle2D$Float[x=0.35750884,y=0.0,w=1.477958,h=3.0942805]  java.awt.geom.Rectangle2D$Float[x=0.35750884,y=0.0,w=3.056051,h=3.0942805]  java.awt.geom.Rectangle2D$Float[x=0.35750884,y=0.0,w=3.056051,h=3.0942805]  java.awt.geom.Rectangle2D$Float[x=0.35750884,y=0.0,w=5.5580854,h=3.0942805]  java.awt.geom.Rectangle2D$Float[x=0.35750884,y=0.0,w=5.5580854,h=3.0942805]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9598702, 1.450959] with IG = 37.15454
Iter num: 2
Used frontier: Point2D.Float[0.8737272, 0.7297221] with IG = 49.561993
Iter num: 3
Added advice frontier Point2D.Float[1.3138798, 0.20987369]
Added advice frontier Point2D.Float[1.6287919, 0.20746307]
Added advice frontier Point2D.Float[0.7881899, 0.43088052]
Added advice frontier Point2D.Float[0.35361314, 0.56956565]
Used Advice frontier: Point2D.Float[0.7881899, 0.43088052] with IG = 321.70654
Iter num: 4
Used Advice frontier: Point2D.Float[0.35361314, 0.56956565] with IG = 219.21681
Iter num: 5
Used Advice frontier: Point2D.Float[1.3138798, 0.20987369] with IG = 97.42532
Iter num: 6
Used Advice frontier: Point2D.Float[1.6287919, 0.20746307] with IG = 317.5396
Iter num: 7
Used frontier: Point2D.Float[0.9476248, 2.3877213] with IG = 12.876663
Iter num: 8
Added advice frontier Point2D.Float[1.4333925, 2.846193]
Added advice frontier Point2D.Float[1.3600475, 2.5430896]
Added advice frontier Point2D.Float[1.6308159, 2.2760425]
Added advice frontier Point2D.Float[1.2522922, 2.51968]
Used Advice frontier: Point2D.Float[1.2522922, 2.51968] with IG = 301.1894
Iter num: 9
Used Advice frontier: Point2D.Float[1.3600475, 2.5430896] with IG = 906.8746
Iter num: 10
Used Advice frontier: Point2D.Float[1.4333925, 2.846193] with IG = 320.6657
Iter num: 11
Used Advice frontier: Point2D.Float[1.6308159, 2.2760425] with IG = 146.76459
Iter num: 12
Used frontier: Point2D.Float[1.852166, 1.4777246] with IG = 14.794546
Iter num: 13
Used frontier: Point2D.Float[2.3776355, 1.8192279] with IG = 36.506462
Iter num: 14
Used frontier: Point2D.Float[3.1371994, 1.4198979] with IG = 33.794075
Iter num: 15
Added advice frontier Point2D.Float[3.1995094, 0.560963]
Added advice frontier Point2D.Float[3.0964053, 0.45620793]
Added advice frontier Point2D.Float[2.7599137, 0.8803757]
Added advice frontier Point2D.Float[3.1658072, 2.1044922]
Added advice frontier Point2D.Float[3.1397138, 1.892772]
Added advice frontier Point2D.Float[2.9515748, 1.0292052]
Used Advice frontier: Point2D.Float[2.9515748, 1.0292052] with IG = 231.1885
Iter num: 16
Used Advice frontier: Point2D.Float[2.7599137, 0.8803757] with IG = 412.09805
Iter num: 17
Added advice frontier Point2D.Float[2.1724958, 0.15959744]
Added advice frontier Point2D.Float[2.187416, 0.34064776]
Used Advice frontier: Point2D.Float[3.0964053, 0.45620793] with IG = 184.69656
Iter num: 18
Used Advice frontier: Point2D.Float[3.1995094, 0.560963] with IG = 680.3496
Iter num: 19
Used Advice frontier: Point2D.Float[2.187416, 0.34064776] with IG = 96.158066
Iter num: 20
Used Advice frontier: Point2D.Float[2.1724958, 0.15959744] with IG = 550.4666
Iter num: 21
Used Advice frontier: Point2D.Float[3.1397138, 1.892772] with IG = 48.80817
Iter num: 22
Added advice frontier Point2D.Float[3.2147026, 2.716664]
Used Advice frontier: Point2D.Float[3.1658072, 2.1044922] with IG = 468.77466
Iter num: 23
Added advice frontier Point2D.Float[3.4998848, 2.6510859]
Added advice frontier Point2D.Float[3.6843889, 2.325597]
Used Advice frontier: Point2D.Float[3.6843889, 2.325597] with IG = 168.92754
Iter num: 24
Used Advice frontier: Point2D.Float[3.4998848, 2.6510859] with IG = 267.27582
Iter num: 25
Used Advice frontier: Point2D.Float[3.2147026, 2.716664] with IG = 341.73425
Iter num: 26
Used frontier: Point2D.Float[2.3602855, 2.285298] with IG = 18.26845
Iter num: 27
Used frontier: Point2D.Float[3.9716215, 1.4336449] with IG = 10.398435
Iter num: 28
Used frontier: Point2D.Float[4.6937895, 1.359461] with IG = 33.101692
Iter num: 29
Added advice frontier Point2D.Float[5.201239, 0.8097677]
Added advice frontier Point2D.Float[5.160323, 2.0971198]
Added advice frontier Point2D.Float[5.063761, 1.7045491]
Added advice frontier Point2D.Float[5.1329155, 1.2018907]
Used Advice frontier: Point2D.Float[5.063761, 1.7045491] with IG = 197.08003
Iter num: 30
Added advice frontier Point2D.Float[4.9839487, 2.4407418]
Used Advice frontier: Point2D.Float[5.160323, 2.0971198] with IG = 247.3581
Iter num: 31
Used Advice frontier: Point2D.Float[4.9839487, 2.4407418] with IG = 258.90408
Iter num: 32
Added advice frontier Point2D.Float[4.655754, 2.4811978]
Added advice frontier Point2D.Float[4.6300077, 2.8236775]
Used Advice frontier: Point2D.Float[4.655754, 2.4811978] with IG = 302.40836
Iter num: 33
Added advice frontier Point2D.Float[4.809678, 2.5990903]
Added advice frontier Point2D.Float[4.757728, 2.6602607]
Added advice frontier Point2D.Float[4.8354397, 2.4560757]
Used Advice frontier: Point2D.Float[4.8354397, 2.4560757] with IG = 551.1668
Iter num: 34
Used Advice frontier: Point2D.Float[4.809678, 2.5990903] with IG = 688.1536
Iter num: 35
Used Advice frontier: Point2D.Float[4.757728, 2.6602607] with IG = 1246.0529
Iter num: 36
Used Advice frontier: Point2D.Float[4.6300077, 2.8236775] with IG = 482.14438
Iter num: 37
Used Advice frontier: Point2D.Float[5.1329155, 1.2018907] with IG = 58.320972
Iter num: 38
Used Advice frontier: Point2D.Float[5.201239, 0.8097677] with IG = 251.23682
Iter num: 39
Added advice frontier Point2D.Float[5.470242, 0.015606419]
Added advice frontier Point2D.Float[4.601957, 0.21475519]
Used Advice frontier: Point2D.Float[5.470242, 0.015606419] with IG = 116.98813

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9598702192306519, 1.4509589672088623) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8737272024154663, 0.7297220826148987) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7881898880004883, 0.43088051676750183) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.35361313819885254, 0.5695656538009644) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7881898880004883, 0.43088051676750183) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3138798475265503, 0.20987369120121002) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.6287919282913208, 0.2074630707502365) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2163236141204834, 0.815307080745697) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.11356520652771, 1.4165985584259033) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0139470100402832, 1.985796332359314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9476248025894165, 2.387721300125122) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2522921562194824, 2.5196800231933594) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.360047459602356, 2.5430896282196045) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.4333925247192383, 2.8461930751800537) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.4210758209228516, 2.5324347019195557) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.472225546836853, 2.3447511196136475) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.630815863609314, 2.2760424613952637) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3137882947921753, 2.2433035373687744) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1067620515823364, 1.97097909450531) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4443591833114624, 1.7491122484207153) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8521660566329956, 1.477724552154541) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.093181610107422, 1.5961905717849731) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3776354789733887, 1.819227933883667) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1371994018554688, 1.4198979139328003) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9515748023986816, 1.0292052030563354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.759913682937622, 0.8803756833076477) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.096405267715454, 0.45620793104171753) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.199509382247925, 0.560962975025177) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.168884038925171, 0.5421788096427917) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.689220666885376, 0.4107010066509247) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1874160766601562, 0.34064775705337524) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1724958419799805, 0.15959744155406952) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.28052020072937, 0.25076767802238464) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4661176204681396, 0.6295429468154907) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.759913682937622, 0.8803756833076477) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.960961103439331, 1.1643664836883545) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0763187408447266, 1.53826105594635) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.139713764190674, 1.8927719593048096) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1658072471618652, 2.1044921875) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.303784132003784, 2.256239414215088) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6843888759613037, 2.325597047805786) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.499884843826294, 2.65108585357666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.214702606201172, 2.7166640758514404) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1075778007507324, 2.3491263389587402) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.727980613708496, 2.396517276763916) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.360285520553589, 2.2852981090545654) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7197556495666504, 2.1425704956054688) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.984130382537842, 1.9684735536575317) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.139713764190674, 1.8927719593048096) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5145998001098633, 1.6790452003479004) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.910113573074341, 1.4765092134475708) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.971621513366699, 1.4336448907852173) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.347792148590088, 1.499671459197998) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.693789482116699, 1.3594609498977661) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.890720844268799, 1.5693693161010742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.063761234283447, 1.7045490741729736) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.160323143005371, 2.0971198081970215) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.983948707580566, 2.440741777420044) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.655754089355469, 2.4811978340148926) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.835439682006836, 2.456075668334961) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.809678077697754, 2.599090337753296) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:1>
(4.757728099822998, 2.6602606773376465) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.630007743835449, 2.8236775398254395) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.757728099822998, 2.6602606773376465) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.867221832275391, 2.2801241874694824) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.876821041107178, 2.1991126537323) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.966135025024414, 1.8606338500976562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.026853084564209, 1.5696643590927124) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.103041648864746, 1.3012142181396484) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.132915496826172, 1.2018907070159912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.201239109039307, 0.8097677230834961) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.297196865081787, 0.6298859715461731) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,b,t,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,b,53]  [r6,t,53]  [r6,b,t,53]  [r6,b,53]  [r6,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 39
Total sampled points = 20565
RRG size = 1951

Movement Length = 25.552668
Remaining path Length = 1.3468591
Total path Length = 26.899527

Advice samples: [9, 6, 9, 4, 0, 2, 0, 0, 0, 0] (30)

Total time taken (in ms):8482.208289

Initialization time (in ms):656.317502
Sampling time (in ms):6396.920246
Advice time (in ms):8.539526
Path checking time (in ms):764.654366
Learning time (in ms):226.626975
Exploration time (in ms):0.0
Time taken other than these things (in ms):429.149674
Moving time (in ms):1476.395



