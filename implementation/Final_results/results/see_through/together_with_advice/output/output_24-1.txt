Parameters values: 
Environment: results/environments/env24/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.58441901215613,0.049282330805020716), (1.88441901215613,0.049282330805020716), (1.88441901215613,0.5492823308050208), (1.58441901215613,0.5492823308050208)]
[(0.046429008169770684,2.473863075918571), (0.5464290081697707,2.473863075918571), (0.5464290081697707,2.773863075918571), (0.046429008169770684,2.773863075918571)]
[(2.7510971961522332,0.0684642513277053), (3.2510971961522332,0.0684642513277053), (3.2510971961522332,0.36846425132770527), (2.7510971961522332,0.36846425132770527)]
[(2.180412328852618,2.4727698660424173), (2.680412328852618,2.4727698660424173), (2.680412328852618,2.772769866042417), (2.180412328852618,2.772769866042417)]
[(4.404429897567912,0.07049556378131112), (4.904429897567912,0.07049556378131112), (4.904429897567912,0.3704955637813111), (4.404429897567912,0.3704955637813111)]
[(5.580568344786035,2.478458615358974), (5.880568344786035,2.478458615358974), (5.880568344786035,2.978458615358974), (5.580568344786035,2.978458615358974)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0495276,y=0.03311385,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.6048455,y=0.03311385,w=0.64468217,h=2.762949]  java.awt.geom.Rectangle2D$Float[x=0.6048455,y=0.02970771,w=2.9622622,h=2.7663553]  java.awt.geom.Rectangle2D$Float[x=0.6048455,y=0.02970771,w=2.9622622,h=2.8563294]  java.awt.geom.Rectangle2D$Float[x=0.6048455,y=0.02970771,w=4.60716,h=2.8563294]  java.awt.geom.Rectangle2D$Float[x=0.6048455,y=0.02970771,w=4.60716,h=2.8563294]  
t: java.awt.geom.Rectangle2D$Float[x=1.484419,y=0.0,w=0.5,h=0.64928234]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.984419,h=2.873863]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.351097,h=2.873863]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.351097,h=2.873863]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.00443,h=2.873863]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.9805684,h=3.0784585]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0291463, 1.372014] with IG = 34.11806
Iter num: 2
Used frontier: Point2D.Float[1.2291242, 0.4773161] with IG = 50.175915
Iter num: 3
Added advice frontier Point2D.Float[1.5028917, 0.46164513]
Added advice frontier Point2D.Float[1.3600706, 0.016590582]
Added advice frontier Point2D.Float[1.0833507, 0.055710576]
Added advice frontier Point2D.Float[1.0384821, 0.063661695]
Used Advice frontier: Point2D.Float[1.5028917, 0.46164513] with IG = 364.6765
Iter num: 4
Used Advice frontier: Point2D.Float[1.3600706, 0.016590582] with IG = 213.94527
Iter num: 5
Used Advice frontier: Point2D.Float[1.0833507, 0.055710576] with IG = 357.8183
Iter num: 6
Used Advice frontier: Point2D.Float[1.0384821, 0.063661695] with IG = 2194.5393
Iter num: 7
Used frontier: Point2D.Float[0.305108, 0.39888027] with IG = 31.0037
Iter num: 8
Used frontier: Point2D.Float[0.8866277, 2.2071822] with IG = 12.306089
Iter num: 9
Added advice frontier Point2D.Float[0.6035881, 2.8183832]
Added advice frontier Point2D.Float[0.6939242, 2.7138336]
Added advice frontier Point2D.Float[0.88196564, 2.7702737]
Used Advice frontier: Point2D.Float[0.6939242, 2.7138336] with IG = 184.48103
Iter num: 10
Added advice frontier Point2D.Float[0.6102209, 2.7924025]
Added advice frontier Point2D.Float[0.5852962, 2.771027]
Used Advice frontier: Point2D.Float[0.6102209, 2.7924025] with IG = 871.071
Iter num: 11
Used Advice frontier: Point2D.Float[0.6035881, 2.8183832] with IG = 3729.3928
Iter num: 12
Used Advice frontier: Point2D.Float[0.5852962, 2.771027] with IG = 1969.8188
Iter num: 13
Used Advice frontier: Point2D.Float[0.88196564, 2.7702737] with IG = 337.07443
Iter num: 14
Used frontier: Point2D.Float[1.847994, 2.3550262] with IG = 19.96023
Iter num: 15
Used frontier: Point2D.Float[1.9044123, 1.6165466] with IG = 13.912925
Iter num: 16
Used frontier: Point2D.Float[2.5858116, 1.6032436] with IG = 27.041174
Iter num: 17
Added advice frontier Point2D.Float[3.1536067, 2.1566763]
Added advice frontier Point2D.Float[3.0982072, 0.9987282]
Added advice frontier Point2D.Float[3.1070948, 1.3040267]
Added advice frontier Point2D.Float[2.9784038, 1.9339912]
Used Advice frontier: Point2D.Float[2.9784038, 1.9339912] with IG = 194.80095
Iter num: 18
Added advice frontier Point2D.Float[3.0159137, 2.8380425]
Added advice frontier Point2D.Float[3.2009203, 2.8196986]
Added advice frontier Point2D.Float[2.7134662, 2.7720673]
Added advice frontier Point2D.Float[2.8199987, 2.6009173]
Used Advice frontier: Point2D.Float[3.1536067, 2.1566763] with IG = 352.926
Iter num: 19
Used Advice frontier: Point2D.Float[2.8199987, 2.6009173] with IG = 178.30132
Iter num: 20
Used Advice frontier: Point2D.Float[2.7134662, 2.7720673] with IG = 496.03818
Iter num: 21
Used Advice frontier: Point2D.Float[3.0159137, 2.8380425] with IG = 323.0394
Iter num: 22
Used Advice frontier: Point2D.Float[3.2009203, 2.8196986] with IG = 537.88367
Iter num: 23
Used Advice frontier: Point2D.Float[3.1070948, 1.3040267] with IG = 64.24788
Iter num: 24
Added advice frontier Point2D.Float[3.103767, 0.40820318]
Used Advice frontier: Point2D.Float[3.0982072, 0.9987282] with IG = 327.40958
Iter num: 25
Used Advice frontier: Point2D.Float[3.103767, 0.40820318] with IG = 169.26062
Iter num: 26
Added advice frontier Point2D.Float[3.5201466, 0.18062823]
Added advice frontier Point2D.Float[3.6044083, 0.2219293]
Added advice frontier Point2D.Float[3.2567263, 0.1788988]
Used Advice frontier: Point2D.Float[3.5201466, 0.18062823] with IG = 77.132866
Iter num: 27
Used Advice frontier: Point2D.Float[3.6044083, 0.2219293] with IG = 1065.6521
Iter num: 28
Used Advice frontier: Point2D.Float[3.2567263, 0.1788988] with IG = 285.4413
Iter num: 29
Used frontier: Point2D.Float[2.249469, 0.41353685] with IG = 11.349081
Iter num: 30
Used frontier: Point2D.Float[3.9952261, 1.4789205] with IG = 10.626754
Iter num: 31
Used frontier: Point2D.Float[4.9490395, 1.6734442] with IG = 24.158812
Iter num: 32
Added advice frontier Point2D.Float[5.161033, 2.507611]
Added advice frontier Point2D.Float[4.8851914, 2.6062236]
Added advice frontier Point2D.Float[5.1910768, 0.78020746]
Added advice frontier Point2D.Float[4.8064227, 2.4742358]
Used Advice frontier: Point2D.Float[5.161033, 2.507611] with IG = 89.112686
Iter num: 33
Added advice frontier Point2D.Float[5.549142, 2.6960347]
Used Advice frontier: Point2D.Float[4.8851914, 2.6062236] with IG = 341.36835
Iter num: 34
Used Advice frontier: Point2D.Float[4.8064227, 2.4742358] with IG = 650.59595
Iter num: 35
Used Advice frontier: Point2D.Float[5.549142, 2.6960347] with IG = 125.25447
Iter num: 36
Used Advice frontier: Point2D.Float[5.1910768, 0.78020746] with IG = 43.198025
Iter num: 37
Added advice frontier Point2D.Float[4.7870626, 0.44809303]
Added advice frontier Point2D.Float[4.7257648, 0.72009885]
Used Advice frontier: Point2D.Float[4.7870626, 0.44809303] with IG = 191.20515
Iter num: 38
Added advice frontier Point2D.Float[5.1370664, 0.2563061]
Used Advice frontier: Point2D.Float[4.7257648, 0.72009885] with IG = 358.64508

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0291463136672974, 1.372014045715332) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2291241884231567, 0.47731611132621765) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5028916597366333, 0.46164512634277344) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3600705862045288, 0.016590582206845284) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.083350658416748, 0.055710576474666595) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0384820699691772, 0.06366169452667236) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3051080107688904, 0.398880273103714) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7809228897094727, 0.8093515038490295) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8401307463645935, 1.230582594871521) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8599100112915039, 1.5613278150558472) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8866276741027832, 2.2071821689605713) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6939241886138916, 2.7138335704803467) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6102209091186523, 2.792402505874634) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.6035881042480469, 2.81838321685791) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5852962136268616, 2.771027088165283) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8819656372070312, 2.7702736854553223) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2249441146850586, 2.6066737174987793) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6110199689865112, 2.443505048751831) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8479939699172974, 2.3550262451171875) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4653273820877075, 2.195282220840454) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.164228916168213, 2.0575499534606934) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.211821436882019, 1.909850001335144) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3031959533691406, 1.8742899894714355) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9044122695922852, 1.616546630859375) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9864912033081055, 1.3537336587905884) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5858116149902344, 1.6032435894012451) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9784038066864014, 1.9339911937713623) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.153606653213501, 2.1566762924194336) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0396056175231934, 2.3719093799591064) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8199987411499023, 2.600917339324951) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.713466167449951, 2.7720673084259033) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.015913724899292, 2.8380424976348877) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.200920343399048, 2.8196985721588135) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0396056175231934, 2.3719093799591064) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0727970600128174, 2.156620502471924) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1536383628845215, 1.7263538837432861) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1070947647094727, 1.30402672290802) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0982072353363037, 0.9987282156944275) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0919010639190674, 0.7843452095985413) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.103766918182373, 0.4082031846046448) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1449387073516846, 0.8248228430747986) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.512589693069458, 0.6522397398948669) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.520146608352661, 0.1806282252073288) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.6044082641601562, 0.22192929685115814) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2567262649536133, 0.17889879643917084) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.520146608352661, 0.1806282252073288) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.512589693069458, 0.6522397398948669) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4496583938598633, 0.6410603523254395) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0330471992492676, 0.5844095349311829) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7670719623565674, 0.5651893615722656) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.552950620651245, 0.5201236605644226) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.249469041824341, 0.41353684663772583) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.590998649597168, 0.5936110019683838) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7812459468841553, 0.7816193699836731) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0982072353363037, 0.9987282156944275) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3586719036102295, 1.1899831295013428) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7130305767059326, 1.4157590866088867) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9952261447906494, 1.4789204597473145) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.108127593994141, 1.5246845483779907) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.664011478424072, 1.70603346824646) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.949039459228516, 1.673444151878357) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7046380043029785, 1.787711501121521) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1610331535339355, 2.507611036300659) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.885191440582275, 2.6062235832214355) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.806422710418701, 2.474235773086548) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1610331535339355, 2.507611036300659) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.3476128578186035, 2.5448415279388428) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.549141883850098, 2.6960346698760986) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.3476128578186035, 2.5448415279388428) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.212982654571533, 2.193472146987915) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1132917404174805, 1.9594751596450806) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.176721096038818, 1.595655918121338) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.034520149230957, 1.2896381616592407) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8545050621032715, 1.1047390699386597) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.191076755523682, 0.7802074551582336) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,b,t,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [r3,t,35]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20437
RRG size = 1901

Movement Length = 27.242247
Remaining path Length = 1.4895762
Total path Length = 28.731823

Advice samples: [17, 5, 3, 1, 1, 1, 0, 0, 0, 0] (28)

Total time taken (in ms):7150.500311

Initialization time (in ms):651.913783
Sampling time (in ms):5327.484116
Advice time (in ms):7.702046
Path checking time (in ms):579.108853
Learning time (in ms):188.305901
Exploration time (in ms):0.0
Time taken other than these things (in ms):395.985612
Moving time (in ms):469.76205



