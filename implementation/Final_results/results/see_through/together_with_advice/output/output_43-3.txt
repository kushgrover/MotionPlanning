Parameters values: 
Environment: results/environments/env43/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.9464961852971374,0.044126745694382054), (1.2464961852971375,0.044126745694382054), (1.2464961852971375,0.544126745694382), (0.9464961852971374,0.544126745694382)]
[(0.9727464850309987,2.486878934212696), (1.4727464850309988,2.486878934212696), (1.4727464850309988,2.786878934212696), (0.9727464850309987,2.786878934212696)]
[(3.432239658554289,0.23801273828136338), (3.932239658554289,0.23801273828136338), (3.932239658554289,0.5380127382813633), (3.432239658554289,0.5380127382813633)]
[(2.3097636200998863,2.6550924622919516), (2.8097636200998863,2.6550924622919516), (2.8097636200998863,2.9550924622919514), (2.3097636200998863,2.9550924622919514)]
[(5.378278035170789,0.07541829192520734), (5.878278035170789,0.07541829192520734), (5.878278035170789,0.3754182919252073), (5.378278035170789,0.3754182919252073)]
[(5.5729060168562645,2.4935657537752576), (5.872906016856264,2.4935657537752576), (5.872906016856264,2.9935657537752576), (5.5729060168562645,2.9935657537752576)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.6154911,y=0.014554821,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=0.43962836,h=2.7991025]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=2.6898956,h=2.7991025]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=2.8611693,h=2.7991025]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=4.1118517,h=2.7991025]  java.awt.geom.Rectangle2D$Float[x=0.37586272,y=0.014554821,w=5.191603,h=2.7991025]  
t: java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=0.50000006,h=0.6441268]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=0.72625035,h=2.886879]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=3.1857433,h=2.886879]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=3.1857433,h=3.0550926]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=5.131782,h=3.0550926]  java.awt.geom.Rectangle2D$Float[x=0.84649616,y=0.0,w=5.131782,h=3.0935657]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0129387, 1.5051348] with IG = 35.051086
Iter num: 2
Used frontier: Point2D.Float[0.9430992, 2.3170342] with IG = 42.95018
Iter num: 3
Added advice frontier Point2D.Float[0.48437583, 2.7656944]
Added advice frontier Point2D.Float[0.7405653, 2.8711023]
Used Advice frontier: Point2D.Float[0.7405653, 2.8711023] with IG = 169.51309
Iter num: 4
Used Advice frontier: Point2D.Float[0.48437583, 2.7656944] with IG = 360.9758
Iter num: 5
Used frontier: Point2D.Float[1.7067887, 2.6838589] with IG = 18.26422
Iter num: 6
Used frontier: Point2D.Float[0.9264282, 0.7045055] with IG = 14.358787
Iter num: 7
Added advice frontier Point2D.Float[0.7966536, 0.11786398]
Added advice frontier Point2D.Float[0.6473083, 0.3707863]
Added advice frontier Point2D.Float[0.8752949, 0.2458105]
Used Advice frontier: Point2D.Float[0.6473083, 0.3707863] with IG = 229.85382
Iter num: 8
Used Advice frontier: Point2D.Float[0.8752949, 0.2458105] with IG = 384.6243
Iter num: 9
Used Advice frontier: Point2D.Float[0.7966536, 0.11786398] with IG = 665.8569
Iter num: 10
Used frontier: Point2D.Float[1.3380252, 0.45007253] with IG = 21.894934
Iter num: 11
Used frontier: Point2D.Float[1.9385532, 1.5001585] with IG = 14.281863
Iter num: 12
Used frontier: Point2D.Float[2.804788, 1.5781248] with IG = 19.147236
Iter num: 13
Added advice frontier Point2D.Float[3.315019, 2.2103934]
Added advice frontier Point2D.Float[3.1283607, 1.9591866]
Added advice frontier Point2D.Float[2.98042, 0.9089423]
Used Advice frontier: Point2D.Float[3.1283607, 1.9591866] with IG = 200.03706
Iter num: 14
Added advice frontier Point2D.Float[2.8706067, 2.6444855]
Added advice frontier Point2D.Float[3.1647122, 2.702196]
Added advice frontier Point2D.Float[2.9982812, 2.544282]
Used Advice frontier: Point2D.Float[3.315019, 2.2103934] with IG = 319.52603
Iter num: 15
Used Advice frontier: Point2D.Float[2.9982812, 2.544282] with IG = 217.28642
Iter num: 16
Used Advice frontier: Point2D.Float[2.8706067, 2.6444855] with IG = 616.13995
Iter num: 17
Used Advice frontier: Point2D.Float[3.1647122, 2.702196] with IG = 333.65128
Iter num: 18
Used Advice frontier: Point2D.Float[2.98042, 0.9089423] with IG = 55.02887
Iter num: 19
Added advice frontier Point2D.Float[3.001831, 0.39457673]
Added advice frontier Point2D.Float[3.3404834, 0.54238576]
Added advice frontier Point2D.Float[2.594902, 0.12665834]
Added advice frontier Point2D.Float[3.6902368, 0.8639861]
Used Advice frontier: Point2D.Float[3.001831, 0.39457673] with IG = 193.78738
Iter num: 20
Used Advice frontier: Point2D.Float[3.3404834, 0.54238576] with IG = 270.63333
Iter num: 21
Used Advice frontier: Point2D.Float[3.6902368, 0.8639861] with IG = 210.46605
Iter num: 22
Used Advice frontier: Point2D.Float[2.594902, 0.12665834] with IG = 75.083664
Iter num: 23
Used frontier: Point2D.Float[3.8781207, 1.5129036] with IG = 17.860792
Iter num: 24
Used frontier: Point2D.Float[4.836903, 1.6714513] with IG = 19.990868
Iter num: 25
Added advice frontier Point2D.Float[5.2373304, 2.3348234]
Added advice frontier Point2D.Float[4.922851, 0.830066]
Added advice frontier Point2D.Float[4.911437, 1.1851373]
Used frontier: Point2D.Float[4.951157, 1.7106581] with IG = 198.68567
Iter num: 26
Added advice frontier Point2D.Float[5.390282, 2.5516698]
Used Advice frontier: Point2D.Float[5.2373304, 2.3348234] with IG = 109.16353
Iter num: 27
Added advice frontier Point2D.Float[5.539733, 2.5387127]
Used Advice frontier: Point2D.Float[5.390282, 2.5516698] with IG = 376.8447
Iter num: 28
Added advice frontier Point2D.Float[5.611491, 2.4184604]
Added advice frontier Point2D.Float[5.86399, 2.2133565]
Used Advice frontier: Point2D.Float[5.539733, 2.5387127] with IG = 666.61597
Iter num: 29
Used Advice frontier: Point2D.Float[5.611491, 2.4184604] with IG = 714.1057
Iter num: 30
Used Advice frontier: Point2D.Float[5.86399, 2.2133565] with IG = 307.40408
Iter num: 31
Used Advice frontier: Point2D.Float[4.911437, 1.1851373] with IG = 57.386265
Iter num: 32
Added advice frontier Point2D.Float[5.3564067, 0.47530985]
Added advice frontier Point2D.Float[5.2214355, 0.71189696]
Used Advice frontier: Point2D.Float[4.922851, 0.830066] with IG = 281.4882
Iter num: 33
Added advice frontier Point2D.Float[4.474448, 0.3224218]
Added advice frontier Point2D.Float[4.3969502, 0.055433635]
Used Advice frontier: Point2D.Float[5.2214355, 0.71189696] with IG = 311.41223

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0129387378692627, 1.5051348209381104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9430992007255554, 2.3170342445373535) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.740565299987793, 2.8711023330688477) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.48437583446502686, 2.7656943798065186) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.262162685394287, 2.945294141769409) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7067886590957642, 2.683858871459961) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.629536509513855, 2.617316246032715) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0763766765594482, 1.9730494022369385) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0129387378692627, 1.5051348209381104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9264281988143921, 0.7045055031776428) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6473082900047302, 0.37078630924224854) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8752949237823486, 0.24581049382686615) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7966536283493042, 0.1178639829158783) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8240982294082642, 0.5391094088554382) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2584227323532104, 0.5736150741577148) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3380252122879028, 0.4500725269317627) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1198848485946655, 0.9157950282096863) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2058839797973633, 1.0698769092559814) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.533366084098816, 1.2639023065567017) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9385532140731812, 1.5001585483551025) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9952808618545532, 1.6481679677963257) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6826980113983154, 1.829582691192627) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.804788112640381, 1.578124761581421) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1283607482910156, 1.9591865539550781) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.315018892288208, 2.2103934288024902) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.998281240463257, 2.5442819595336914) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8706066608428955, 2.6444854736328125) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1647121906280518, 2.702195882797241) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.0539610385894775, 2.238255023956299) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.055715322494507, 1.6965793371200562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.97029185295105, 1.3648735284805298) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9804201126098633, 0.9089422821998596) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9704482555389404, 0.7735224962234497) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0018310546875, 0.3945767283439636) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.3404834270477295, 0.5423857569694519) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.690236806869507, 0.863986074924469) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3404834270477295, 0.5423857569694519) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.0018310546875, 0.3945767283439636) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.5949020385742188, 0.1266583353281021) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.650660276412964, 0.17631080746650696) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.786266803741455, 0.5896825790405273) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8980069160461426, 0.7870237827301025) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.218604564666748, 1.071895718574524) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4381484985351562, 1.239824891090393) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8781206607818604, 1.5129035711288452) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.978307008743286, 1.7781437635421753) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.547966480255127, 1.6808726787567139) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.836903095245361, 1.6714513301849365) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.951157093048096, 1.710658073425293) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.771335124969482, 1.7830817699432373) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.237330436706543, 2.3348233699798584) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.390282154083252, 2.5516698360443115) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.539732933044434, 2.538712739944458) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:1>
(5.6114912033081055, 2.4184603691101074) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.86398983001709, 2.2133564949035645) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.4509077072143555, 2.257397413253784) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.239500999450684, 2.2451817989349365) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.103869438171387, 1.904737949371338) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.017207622528076, 1.7099404335021973) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.984097957611084, 1.4964253902435303) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.911437034606934, 1.1851372718811035) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [r1,t,22]  [r1,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,b,35]  [r3,t,35]  [r3,35]  [r3,t,35]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,b,t,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 33
Total sampled points = 18877
RRG size = 1652

Movement Length = 24.368382
Remaining path Length = 1.0412896
Total path Length = 25.409672

Advice samples: [9, 9, 4, 1, 0, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):6040.491659

Initialization time (in ms):533.693223
Sampling time (in ms):4179.861271
Advice time (in ms):8.679639
Path checking time (in ms):629.913051
Learning time (in ms):184.672896
Exploration time (in ms):0.0
Time taken other than these things (in ms):503.671579
Moving time (in ms):268.43546



