Parameters values: 
Environment: results/environments/env41/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.8831627126263896,0.028744105961240843), (1.1831627126263895,0.028744105961240843), (1.1831627126263895,0.5287441059612409), (0.8831627126263896,0.5287441059612409)]
[(0.01669831846640773,2.630080232461658), (0.5166983184664077,2.630080232461658), (0.5166983184664077,2.9300802324616577), (0.01669831846640773,2.9300802324616577)]
[(3.364222098321576,0.027304357389090046), (3.864222098321576,0.027304357389090046), (3.864222098321576,0.32730435738909003), (3.364222098321576,0.32730435738909003)]
[(3.101025745695026,2.6124682471727394), (3.601025745695026,2.6124682471727394), (3.601025745695026,2.912468247172739), (3.101025745695026,2.912468247172739)]
[(5.084056786317554,0.022847228549644286), (5.3840567863175535,0.022847228549644286), (5.3840567863175535,0.5228472285496443), (5.084056786317554,0.5228472285496443)]
[(5.376002595388802,2.458396637593127), (5.676002595388802,2.458396637593127), (5.676002595388802,2.958396637593127), (5.376002595388802,2.958396637593127)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.25995117,y=0.01614505,w=0.20000002,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.25995117,y=0.01614505,w=1.2234755,h=2.797881]  java.awt.geom.Rectangle2D$Float[x=0.25995117,y=0.0035765886,w=2.2662985,h=2.8104494]  java.awt.geom.Rectangle2D$Float[x=0.25995117,y=0.0035765886,w=2.4370847,h=2.8883789]  java.awt.geom.Rectangle2D$Float[x=0.25995117,y=0.0035765886,w=4.630232,h=2.8883789]  java.awt.geom.Rectangle2D$Float[x=0.25995117,y=0.0035765886,w=4.630232,h=2.8883789]  
t: java.awt.geom.Rectangle2D$Float[x=0.7831627,y=0.0,w=0.5,h=0.6287441]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.2831627,h=3.0300803]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.9642222,h=3.0300803]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.9642222,h=3.0300803]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.484057,h=3.0300803]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.7760024,h=3.0583966]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.99522233, 1.5753578] with IG = 35.619335
Iter num: 2
Used frontier: Point2D.Float[0.8202488, 2.4377155] with IG = 45.458168
Iter num: 3
Added advice frontier Point2D.Float[0.5692002, 2.603455]
Added advice frontier Point2D.Float[0.31195605, 2.4497633]
Added advice frontier Point2D.Float[1.4104483, 2.7150688]
Added advice frontier Point2D.Float[1.2600516, 2.363972]
Added advice frontier Point2D.Float[1.125469, 0.61795396]
Used Advice frontier: Point2D.Float[0.5692002, 2.603455] with IG = 332.42047
Iter num: 4
Used Advice frontier: Point2D.Float[0.31195605, 2.4497633] with IG = 333.71225
Iter num: 5
Used Advice frontier: Point2D.Float[1.2600516, 2.363972] with IG = 105.04541
Iter num: 6
Used Advice frontier: Point2D.Float[1.4104483, 2.7150688] with IG = 261.81223
Iter num: 7
Used Advice frontier: Point2D.Float[1.125469, 0.61795396] with IG = 46.72836
Iter num: 8
Added advice frontier Point2D.Float[0.32801843, 0.12028074]
Added advice frontier Point2D.Float[0.61480343, 0.23310226]
Used Advice frontier: Point2D.Float[0.61480343, 0.23310226] with IG = 132.30083
Iter num: 9
Used Advice frontier: Point2D.Float[0.32801843, 0.12028074] with IG = 324.4867
Iter num: 10
Used frontier: Point2D.Float[1.9441222, 1.494377] with IG = 10.239349
Iter num: 11
Used frontier: Point2D.Float[2.6036682, 1.366699] with IG = 32.547577
Iter num: 12
Added advice frontier Point2D.Float[3.1744063, 0.8288697]
Added advice frontier Point2D.Float[3.1556902, 1.0174546]
Added advice frontier Point2D.Float[2.93726, 2.1943781]
Used Advice frontier: Point2D.Float[3.1556902, 1.0174546] with IG = 149.13377
Iter num: 13
Added advice frontier Point2D.Float[3.359219, 0.08409915]
Used Advice frontier: Point2D.Float[3.1744063, 0.8288697] with IG = 527.6728
Iter num: 14
Used Advice frontier: Point2D.Float[3.359219, 0.08409915] with IG = 129.37204
Iter num: 15
Used Advice frontier: Point2D.Float[2.93726, 2.1943781] with IG = 46.236515
Iter num: 16
Added advice frontier Point2D.Float[2.4276786, 0.10716862]
Added advice frontier Point2D.Float[2.4919734, 0.21268441]
Added advice frontier Point2D.Float[3.2136986, 2.5722418]
Added advice frontier Point2D.Float[3.6722076, 2.3354378]
Added advice frontier Point2D.Float[2.6732824, 2.7009044]
Added advice frontier Point2D.Float[2.950599, 2.972051]
Used Advice frontier: Point2D.Float[3.2136986, 2.5722418] with IG = 213.58975
Iter num: 17
Used Advice frontier: Point2D.Float[3.6722076, 2.3354378] with IG = 193.78003
Iter num: 18
Used Advice frontier: Point2D.Float[2.6732824, 2.7009044] with IG = 73.91936
Iter num: 19
Used Advice frontier: Point2D.Float[2.950599, 2.972051] with IG = 257.83395
Iter num: 20
Used Advice frontier: Point2D.Float[2.4919734, 0.21268441] with IG = 34.22595
Iter num: 21
Used Advice frontier: Point2D.Float[2.4276786, 0.10716862] with IG = 809.31464
Iter num: 22
Used frontier: Point2D.Float[3.6396277, 1.4239424] with IG = 18.353407
Iter num: 23
Used frontier: Point2D.Float[4.5927243, 1.3337322] with IG = 22.238749
Iter num: 24
Added advice frontier Point2D.Float[5.2773905, 0.89861035]
Added advice frontier Point2D.Float[4.887202, 2.128064]
Used Advice frontier: Point2D.Float[5.2773905, 0.89861035] with IG = 123.26917
Iter num: 25
Added advice frontier Point2D.Float[5.0286455, 0.48453522]
Added advice frontier Point2D.Float[5.04318, 0.68578374]
Used Advice frontier: Point2D.Float[5.04318, 0.68578374] with IG = 315.9913
Iter num: 26
Added advice frontier Point2D.Float[4.7499557, 0.112416446]
Added advice frontier Point2D.Float[4.34836, 0.37082657]
Used Advice frontier: Point2D.Float[5.0286455, 0.48453522] with IG = 495.6072
Iter num: 27
Used Advice frontier: Point2D.Float[4.7499557, 0.112416446] with IG = 215.09584
Iter num: 28
Used Advice frontier: Point2D.Float[4.34836, 0.37082657] with IG = 209.40178
Iter num: 29
Used Advice frontier: Point2D.Float[4.887202, 2.128064] with IG = 47.323227
Iter num: 30
Added advice frontier Point2D.Float[5.347302, 2.7227166]
Added advice frontier Point2D.Float[5.107981, 2.6973195]
Added advice frontier Point2D.Float[4.5732, 2.5558133]
Added advice frontier Point2D.Float[4.3409944, 2.5833824]
Used Advice frontier: Point2D.Float[4.5732, 2.5558133] with IG = 184.8786

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9952223300933838, 1.5753577947616577) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8202487826347351, 2.437715530395508) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5692002177238464, 2.603455066680908) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3119560480117798, 2.449763298034668) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2600516080856323, 2.3639719486236572) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4104483127593994, 2.715068817138672) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2098100185394287, 2.083958148956299) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1388777494430542, 1.8463858366012573) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1591068506240845, 1.110841989517212) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1254689693450928, 0.6179539561271667) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9292293787002563, 0.6832045316696167) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6148034334182739, 0.23310226202011108) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3280184268951416, 0.12028074264526367) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8196259140968323, 0.6957587003707886) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0616822242736816, 0.9658711552619934) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5725029706954956, 1.2883238792419434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9441221952438354, 1.4943770170211792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4107439517974854, 1.3697203397750854) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.603668212890625, 1.366698980331421) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.711402416229248, 1.2193599939346313) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1556901931762695, 1.0174546241760254) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1744062900543213, 0.8288697004318237) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1817567348480225, 0.6312927603721619) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3592190742492676, 0.08409915119409561) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1817567348480225, 0.6312927603721619) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1744062900543213, 0.8288697004318237) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.070869207382202, 1.3572121858596802) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9610228538513184, 1.7952301502227783) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9372599124908447, 2.194378137588501) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.213698625564575, 2.57224178314209) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.6722075939178467, 2.335437774658203) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.292198657989502, 2.3559317588806152) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9723896980285645, 2.2678050994873047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.688976287841797, 2.3582115173339844) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6732823848724365, 2.700904369354248) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.950598955154419, 2.972050905227661) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0483169555664062, 2.5381388664245605) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1261532306671143, 2.1670587062835693) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.095482110977173, 1.714426040649414) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.070869207382202, 1.3572121858596802) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.873774290084839, 0.878476619720459) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.643980026245117, 0.5143661499023438) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.491973400115967, 0.21268440783023834) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4276785850524902, 0.10716862231492996) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.518778085708618, 0.24124959111213684) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.785583257675171, 0.5703748464584351) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.886566400527954, 0.6835547685623169) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1938834190368652, 1.0536495447158813) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4062345027923584, 1.2267569303512573) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.639627695083618, 1.4239424467086792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8452486991882324, 1.5678176879882812) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.592724323272705, 1.3337322473526) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.277390480041504, 0.8986103534698486) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.043179988861084, 0.6857837438583374) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0286455154418945, 0.48453521728515625) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.749955654144287, 0.11241644620895386) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.348360061645508, 0.3708265721797943) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.497768402099609, 0.5027207732200623) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.808493614196777, 0.715604305267334) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.058650016784668, 1.011112093925476) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.047291278839111, 1.3292820453643799) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.021799564361572, 1.67271089553833) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.926608085632324, 2.1026830673217773) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.88720178604126, 2.128063917160034) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 30
Total sampled points = 16472
RRG size = 1501

Movement Length = 27.065542
Remaining path Length = 0.0
Total path Length = 27.065542

Advice samples: [10, 8, 6, 0, 0, 0, 0, 0, 0, 0] (24)

Total time taken (in ms):5782.921303

Initialization time (in ms):480.442036
Sampling time (in ms):4262.547696
Advice time (in ms):7.219208
Path checking time (in ms):474.110634
Learning time (in ms):173.930028
Exploration time (in ms):0.0
Time taken other than these things (in ms):384.671701
Moving time (in ms):536.8709



