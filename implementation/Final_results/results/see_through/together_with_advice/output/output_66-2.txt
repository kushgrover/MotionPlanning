Parameters values: 
Environment: results/environments/env66/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.0264625476542988,0.1616520429954778), (1.5264625476542988,0.1616520429954778), (1.5264625476542988,0.4616520429954778), (1.0264625476542988,0.4616520429954778)]
[(1.2522884758090795,2.455105208615378), (1.7522884758090795,2.455105208615378), (1.7522884758090795,2.7551052086153778), (1.2522884758090795,2.7551052086153778)]
[(2.8193931138741215,0.05094975195336228), (3.3193931138741215,0.05094975195336228), (3.3193931138741215,0.35094975195336225), (2.8193931138741215,0.35094975195336225)]
[(3.175025333763873,2.527453170367295), (3.675025333763873,2.527453170367295), (3.675025333763873,2.8274531703672947), (3.175025333763873,2.8274531703672947)]
[(5.313417510927025,0.04837721649515871), (5.613417510927025,0.04837721649515871), (5.613417510927025,0.5483772164951587), (5.313417510927025,0.5483772164951587)]
[(4.077180688526457,2.459408612908671), (4.377180688526457,2.459408612908671), (4.377180688526457,2.959408612908671), (4.077180688526457,2.959408612908671)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.091815986,w=0.19999999,h=0.20000002]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.091815986,w=0.43292272,h=2.736914]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.056382038,w=2.032403,h=2.772348]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.056382038,w=2.032403,h=2.772348]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.032435782,w=3.6768131,h=2.796294]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.032435782,w=4.2153854,h=2.796294]  
t: java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.061652042,w=0.70000005,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.061652042,w=0.92582595,h=2.7934532]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.0,w=2.4929304,h=2.8551052]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.0,w=2.8485627,h=2.9274533]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.0,w=4.786955,h=2.9274533]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.0,w=4.786955,h=3.0594087]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.99560326, 1.4083928] with IG = 35.54465
Iter num: 2
Used frontier: Point2D.Float[0.84443295, 0.6969428] with IG = 32.997257
Iter num: 3
Added advice frontier Point2D.Float[0.7649419, 0.09535693]
Added advice frontier Point2D.Float[0.8654496, 0.055623304]
Used Advice frontier: Point2D.Float[0.7649419, 0.09535693] with IG = 164.79488
Iter num: 4
Used Advice frontier: Point2D.Float[0.8654496, 0.055623304] with IG = 925.2691
Iter num: 5
Used frontier: Point2D.Float[1.6976748, 0.49423978] with IG = 18.674486
Iter num: 6
Used frontier: Point2D.Float[0.9628055, 2.29677] with IG = 13.533668
Iter num: 7
Added advice frontier Point2D.Float[0.90882564, 2.747315]
Added advice frontier Point2D.Float[1.5245781, 2.7759202]
Added advice frontier Point2D.Float[0.93745875, 2.9429574]
Added advice frontier Point2D.Float[1.4395782, 2.4212995]
Used Advice frontier: Point2D.Float[0.90882564, 2.747315] with IG = 220.37743
Iter num: 8
Used Advice frontier: Point2D.Float[0.93745875, 2.9429574] with IG = 505.74866
Iter num: 9
Used Advice frontier: Point2D.Float[1.5245781, 2.7759202] with IG = 163.82207
Iter num: 10
Used Advice frontier: Point2D.Float[1.4395782, 2.4212995] with IG = 78.412796
Iter num: 11
Used frontier: Point2D.Float[1.9456431, 1.4782441] with IG = 14.836499
Iter num: 12
Used frontier: Point2D.Float[2.7658546, 1.270651] with IG = 24.454311
Iter num: 13
Added advice frontier Point2D.Float[3.3434253, 0.76891816]
Added advice frontier Point2D.Float[3.0046892, 2.050325]
Added advice frontier Point2D.Float[2.9819438, 1.8767393]
Added advice frontier Point2D.Float[3.1175063, 1.0265648]
Added advice frontier Point2D.Float[3.039905, 0.42049998]
Used Advice frontier: Point2D.Float[3.1175063, 1.0265648] with IG = 233.6111
Iter num: 14
Used Advice frontier: Point2D.Float[3.3434253, 0.76891816] with IG = 291.82782
Iter num: 15
Added advice frontier Point2D.Float[2.593029, 0.2531656]
Added advice frontier Point2D.Float[2.8155081, 0.051889207]
Used Advice frontier: Point2D.Float[3.039905, 0.42049998] with IG = 216.4118
Iter num: 16
Used Advice frontier: Point2D.Float[2.593029, 0.2531656] with IG = 200.2643
Iter num: 17
Used Advice frontier: Point2D.Float[2.8155081, 0.051889207] with IG = 333.3164
Iter num: 18
Used Advice frontier: Point2D.Float[2.9819438, 1.8767393] with IG = 53.749374
Iter num: 19
Added advice frontier Point2D.Float[3.2882473, 2.457774]
Added advice frontier Point2D.Float[3.0917473, 2.4264872]
Used Advice frontier: Point2D.Float[3.0046892, 2.050325] with IG = 571.2017
Iter num: 20
Added advice frontier Point2D.Float[2.4146008, 2.6757193]
Added advice frontier Point2D.Float[2.3017623, 2.3931756]
Used Advice frontier: Point2D.Float[3.0917473, 2.4264872] with IG = 258.9968
Iter num: 21
Used Advice frontier: Point2D.Float[3.2882473, 2.457774] with IG = 502.5752
Iter num: 22
Used Advice frontier: Point2D.Float[2.4146008, 2.6757193] with IG = 111.015366
Iter num: 23
Used Advice frontier: Point2D.Float[2.3017623, 2.3931756] with IG = 328.68527
Iter num: 24
Used frontier: Point2D.Float[3.8183475, 1.4283258] with IG = 14.428291
Iter num: 25
Used frontier: Point2D.Float[4.5063343, 1.4689354] with IG = 29.219292
Iter num: 26
Added advice frontier Point2D.Float[5.1272125, 0.89177054]
Added advice frontier Point2D.Float[5.4217105, 1.6061505]
Used Advice frontier: Point2D.Float[5.1272125, 0.89177054] with IG = 107.61951
Iter num: 27
Added advice frontier Point2D.Float[5.337778, 0.6363315]
Added advice frontier Point2D.Float[5.127392, 0.29945508]
Added advice frontier Point2D.Float[5.0640283, 2.1320052]
Used Advice frontier: Point2D.Float[5.337778, 0.6363315] with IG = 302.07898
Iter num: 28
Used Advice frontier: Point2D.Float[5.127392, 0.29945508] with IG = 251.77808
Iter num: 29
Used Advice frontier: Point2D.Float[5.4217105, 1.6061505] with IG = 72.2499
Iter num: 30
Used Advice frontier: Point2D.Float[5.0640283, 2.1320052] with IG = 156.9926
Iter num: 31
Added advice frontier Point2D.Float[4.7131248, 2.5328434]
Added advice frontier Point2D.Float[5.259256, 2.950456]
Added advice frontier Point2D.Float[4.410271, 2.7979374]
Used Advice frontier: Point2D.Float[4.410271, 2.7979374] with IG = 87.6722
Iter num: 32
Used Advice frontier: Point2D.Float[4.7131248, 2.5328434] with IG = 248.45572
Iter num: 33
Added advice frontier Point2D.Float[4.2667356, 0.038559698]
Used Advice frontier: Point2D.Float[5.259256, 2.950456] with IG = 145.45406

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9956032633781433, 1.4083927869796753) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8444329500198364, 0.6969428062438965) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7649418711662292, 0.09535692632198334) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8654496073722839, 0.05562330409884453) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6444810628890991, 0.10003058612346649) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6976747512817383, 0.49423977732658386) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3372424840927124, 0.7687679529190063) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1166976690292358, 1.0396007299423218) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0441770553588867, 1.6570262908935547) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9628055095672607, 2.2967700958251953) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9088256359100342, 2.747314929962158) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9374587535858154, 2.9429574012756348) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5245780944824219, 2.7759201526641846) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.044385313987732, 2.855379343032837) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0266457796096802, 2.485048770904541) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4395781755447388, 2.421299457550049) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1702769994735718, 2.115233898162842) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1712768077850342, 1.9435333013534546) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5069445371627808, 1.736472249031067) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9456430673599243, 1.4782440662384033) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4184296131134033, 1.1531482934951782) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.765854597091675, 1.2706509828567505) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.117506265640259, 1.0265648365020752) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3434252738952637, 0.7689181566238403) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.039905071258545, 0.4204999804496765) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.597965955734253, 0.2919318675994873) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.593029022216797, 0.253165602684021) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.8155081272125244, 0.05188920721411705) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7328667640686035, 0.5044346451759338) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.782013416290283, 0.6009030938148499) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.878248691558838, 1.0932992696762085) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9230849742889404, 1.5008183717727661) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9819438457489014, 1.876739263534546) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0046892166137695, 2.0503249168395996) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.091747283935547, 2.4264872074127197) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2882473468780518, 2.4577739238739014) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.232544183731079, 2.473252058029175) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.7782626152038574, 2.5735599994659424) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4146008491516113, 2.6757192611694336) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.301762342453003, 2.3931756019592285) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.514294147491455, 2.297518730163574) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.806389331817627, 2.3843278884887695) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9889423847198486, 2.111570119857788) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3582749366760254, 1.8137255907058716) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5499205589294434, 1.653090238571167) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.818347454071045, 1.4283257722854614) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.899494171142578, 1.6094571352005005) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.50633430480957, 1.4689353704452515) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.456875324249268, 1.3867536783218384) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1272125244140625, 0.8917705416679382) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.337778091430664, 0.6363314986228943) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.127391815185547, 0.29945507645606995) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.054142951965332, 0.5166947841644287) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1272125244140625, 0.8917705416679382) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.42171049118042, 1.606150507926941) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.299678325653076, 1.816392421722412) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.064028263092041, 2.132005214691162) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.762197971343994, 2.0895988941192627) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.549865245819092, 2.740867853164673) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.410271167755127, 2.7979373931884766) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,b,53]  [r6,53]  


Remaining path: 
[r6,53]  [h,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 33
Total sampled points = 18027
RRG size = 1651

Movement Length = 25.078968
Remaining path Length = 3.68145
Total path Length = 28.760418

Advice samples: [15, 5, 4, 1, 0, 0, 0, 0, 0, 0] (25)

Total time taken (in ms):6042.492144

Initialization time (in ms):533.697576
Sampling time (in ms):4458.131864
Advice time (in ms):8.822164
Path checking time (in ms):475.146455
Learning time (in ms):181.935659
Exploration time (in ms):0.0
Time taken other than these things (in ms):384.758426
Moving time (in ms):469.76205



