Parameters values: 
Environment: results/environments/env45/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.0414612390743465,0.0913882808610111), (1.5414612390743465,0.0913882808610111), (1.5414612390743465,0.3913882808610111), (1.0414612390743465,0.3913882808610111)]
[(0.3016633932512532,2.5167992848139655), (0.8016633932512531,2.5167992848139655), (0.8016633932512531,2.8167992848139654), (0.3016633932512532,2.8167992848139654)]
[(2.1816145182366697,0.19940016608353875), (2.6816145182366697,0.19940016608353875), (2.6816145182366697,0.49940016608353877), (2.1816145182366697,0.49940016608353877)]
[(3.6137192438836863,2.466916020051804), (3.913719243883686,2.466916020051804), (3.913719243883686,2.966916020051804), (3.6137192438836863,2.966916020051804)]
[(4.871228070092762,0.0007507501517266986), (5.171228070092762,0.0007507501517266986), (5.171228070092762,0.5007507501517267), (4.871228070092762,0.5007507501517267)]
[(4.550193159024707,2.5145707269055646), (5.050193159024707,2.5145707269055646), (5.050193159024707,2.8145707269055644), (4.550193159024707,2.8145707269055644)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=0.38018495,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=2.5806332,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=2.5806332,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=5.072231,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=5.072231,h=2.8607683]  
t: java.awt.geom.Rectangle2D$Float[x=0.94146127,y=0.0,w=0.7,h=0.4913883]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=1.4397979,h=2.9167993]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=2.579951,h=2.9167993]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=3.8120556,h=3.066916]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=5.0695643,h=3.066916]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=5.0695643,h=3.066916]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9431937, 1.4333305] with IG = 37.832874
Iter num: 2
Used frontier: Point2D.Float[1.0997468, 0.60470086] with IG = 47.433334
Iter num: 3
Added advice frontier Point2D.Float[1.1013695, 0.46868077]
Added advice frontier Point2D.Float[0.8692655, 0.17804582]
Added advice frontier Point2D.Float[0.7455615, 0.18107842]
Added advice frontier Point2D.Float[1.0025445, 0.13638678]
Used Advice frontier: Point2D.Float[1.1013695, 0.46868077] with IG = 735.1331
Iter num: 4
Added advice frontier Point2D.Float[0.95031935, 0.20380968]
Added advice frontier Point2D.Float[1.0109617, 0.25780922]
Used Advice frontier: Point2D.Float[0.8692655, 0.17804582] with IG = 268.859
Iter num: 5
Used Advice frontier: Point2D.Float[0.95031935, 0.20380968] with IG = 1175.7788
Iter num: 6
Used Advice frontier: Point2D.Float[1.0109617, 0.25780922] with IG = 1231.5272
Iter num: 7
Used Advice frontier: Point2D.Float[1.0025445, 0.13638678] with IG = 821.5993
Iter num: 8
Used Advice frontier: Point2D.Float[0.7455615, 0.18107842] with IG = 383.37643
Iter num: 9
Used frontier: Point2D.Float[0.86139315, 2.3865461] with IG = 13.125112
Iter num: 10
Added advice frontier Point2D.Float[0.37224102, 2.433539]
Added advice frontier Point2D.Float[0.45842603, 2.309113]
Added advice frontier Point2D.Float[1.0567714, 2.7065063]
Added advice frontier Point2D.Float[0.87353194, 2.6827116]
Added advice frontier Point2D.Float[0.94940406, 2.982982]
Added advice frontier Point2D.Float[0.9445014, 2.8084078]
Used Advice frontier: Point2D.Float[0.87353194, 2.6827116] with IG = 337.3658
Iter num: 11
Used Advice frontier: Point2D.Float[0.9445014, 2.8084078] with IG = 692.77277
Iter num: 12
Used Advice frontier: Point2D.Float[1.0567714, 2.7065063] with IG = 659.5457
Iter num: 13
Used Advice frontier: Point2D.Float[0.94940406, 2.982982] with IG = 337.164
Iter num: 14
Used Advice frontier: Point2D.Float[0.45842603, 2.309113] with IG = 107.359665
Iter num: 15
Used Advice frontier: Point2D.Float[0.37224102, 2.433539] with IG = 660.6793
Iter num: 16
Used frontier: Point2D.Float[1.8450555, 1.5238667] with IG = 12.706017
Iter num: 17
Used frontier: Point2D.Float[2.4064498, 1.5224657] with IG = 40.706097
Iter num: 18
Added advice frontier Point2D.Float[3.0658007, 0.9621349]
Added advice frontier Point2D.Float[3.0676425, 1.2912306]
Added advice frontier Point2D.Float[3.1530604, 2.0999067]
Used Advice frontier: Point2D.Float[3.0676425, 1.2912306] with IG = 142.0492
Iter num: 19
Added advice frontier Point2D.Float[2.7360055, 0.465535]
Used Advice frontier: Point2D.Float[3.0658007, 0.9621349] with IG = 303.85825
Iter num: 20
Added advice frontier Point2D.Float[3.1937997, 0.36926663]
Added advice frontier Point2D.Float[3.4007564, 0.23138715]
Used Advice frontier: Point2D.Float[2.7360055, 0.465535] with IG = 166.62103
Iter num: 21
Used Advice frontier: Point2D.Float[3.1937997, 0.36926663] with IG = 213.7635
Iter num: 22
Used Advice frontier: Point2D.Float[3.4007564, 0.23138715] with IG = 402.12305
Iter num: 23
Used Advice frontier: Point2D.Float[3.1530604, 2.0999067] with IG = 51.81247
Iter num: 24
Added advice frontier Point2D.Float[3.58386, 2.5111501]
Added advice frontier Point2D.Float[3.4686787, 2.5247185]
Added advice frontier Point2D.Float[2.7048166, 2.6080685]
Added advice frontier Point2D.Float[2.5187078, 2.6379712]
Used Advice frontier: Point2D.Float[2.7048166, 2.6080685] with IG = 147.05771
Iter num: 25
Used Advice frontier: Point2D.Float[2.5187078, 2.6379712] with IG = 530.5158
Iter num: 26
Used Advice frontier: Point2D.Float[3.4686787, 2.5247185] with IG = 97.93007
Iter num: 27
Used Advice frontier: Point2D.Float[3.58386, 2.5111501] with IG = 862.23517
Iter num: 28
Used frontier: Point2D.Float[4.0016294, 1.4235313] with IG = 13.700515
Iter num: 29
Used frontier: Point2D.Float[4.947807, 1.4877261] with IG = 17.753588
Iter num: 30
Added advice frontier Point2D.Float[5.2646227, 0.7077547]
Added advice frontier Point2D.Float[4.987986, 0.5096132]
Added advice frontier Point2D.Float[4.8377085, 0.66018546]
Added advice frontier Point2D.Float[5.114149, 2.0444143]
Used Advice frontier: Point2D.Float[5.114149, 2.0444143] with IG = 142.43275
Iter num: 31
Added advice frontier Point2D.Float[5.090537, 2.5145543]
Added advice frontier Point2D.Float[5.6244483, 2.7586532]
Used Advice frontier: Point2D.Float[5.090537, 2.5145543] with IG = 201.39696
Iter num: 32
Used Advice frontier: Point2D.Float[5.6244483, 2.7586532] with IG = 170.33884
Iter num: 33
Used Advice frontier: Point2D.Float[4.8377085, 0.66018546] with IG = 39.97641
Iter num: 34
Added advice frontier Point2D.Float[4.3200436, 2.8070974]
Added advice frontier Point2D.Float[4.622272, 2.9417737]
Used Advice frontier: Point2D.Float[4.987986, 0.5096132] with IG = 470.07266
Iter num: 35
Added advice frontier Point2D.Float[4.5134325, 2.6786761]
Added advice frontier Point2D.Float[4.5064754, 2.4934657]
Added advice frontier Point2D.Float[4.4392824, 2.5896819]
Used Advice frontier: Point2D.Float[5.2646227, 0.7077547] with IG = 293.87897
Iter num: 36
Added advice frontier Point2D.Float[5.7519007, 0.15269206]
Added advice frontier Point2D.Float[5.9551387, 0.13259722]
Used Advice frontier: Point2D.Float[5.7519007, 0.15269206] with IG = 102.11944

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9431936740875244, 1.4333305358886719) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.099746823310852, 0.6047008633613586) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1013695001602173, 0.4686807692050934) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8692654967308044, 0.1780458241701126) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9503193497657776, 0.2038096785545349) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.010961651802063, 0.25780922174453735) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0025445222854614, 0.13638678193092346) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7455614805221558, 0.18107841908931732) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7700358033180237, 0.5968220829963684) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8447194695472717, 1.4763715267181396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.86139315366745, 2.3865461349487305) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8735319375991821, 2.682711601257324) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9445013999938965, 2.808407783508301) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0567713975906372, 2.7065062522888184) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9494040608406067, 2.9829819202423096) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8735319375991821, 2.682711601257324) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.74465012550354, 2.3831706047058105) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.45842602849006653, 2.309113025665283) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3722410202026367, 2.4335389137268066) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8586012721061707, 2.1527302265167236) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3673627376556396, 1.8267511129379272) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8450554609298706, 1.5238666534423828) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9041796922683716, 1.5038771629333496) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.406449794769287, 1.522465705871582) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.804872512817383, 1.4198336601257324) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0676424503326416, 1.29123055934906) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.065800666809082, 0.9621348977088928) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.856590986251831, 0.59029620885849) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7360055446624756, 0.4655350148677826) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1937997341156006, 0.3692666292190552) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.400756359100342, 0.2313871532678604) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.318089008331299, 0.3610191345214844) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.1705288887023926, 0.7437916398048401) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.188369035720825, 1.1252809762954712) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.20894193649292, 1.5620149374008179) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.195366382598877, 2.0030250549316406) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1530604362487793, 2.0999066829681396) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9691007137298584, 2.351435661315918) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7048165798187256, 2.6080684661865234) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.518707752227783, 2.6379711627960205) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7496137619018555, 2.7642526626586914) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1743478775024414, 2.6185874938964844) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4686787128448486, 2.5247185230255127) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.583859920501709, 2.5111501216888428) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.400200366973877, 2.313161611557007) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1530604362487793, 2.0999066829681396) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.230332374572754, 1.8392560482025146) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2963011264801025, 1.8156626224517822) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.706901788711548, 1.6451423168182373) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.00162935256958, 1.4235312938690186) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.99082088470459, 1.1855522394180298) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.919280052185059, 1.1913042068481445) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9478068351745605, 1.487726092338562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.204288482666016, 1.664191722869873) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.11414909362793, 2.0444142818450928) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.02793025970459, 2.222712993621826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.090537071228027, 2.514554262161255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.624448299407959, 2.758653163909912) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.090537071228027, 2.514554262161255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.02793025970459, 2.222712993621826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1131205558776855, 1.846371054649353) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9915924072265625, 1.5929204225540161) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.919280052185059, 1.1913042068481445) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8608903884887695, 1.0067660808563232) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.837708473205566, 0.6601854562759399) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.987986087799072, 0.5096132159233093) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.264622688293457, 0.7077546715736389) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,b,t,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,t,35]  [r6,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  


Remaining path: 
[r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 19676
RRG size = 1801

Movement Length = 24.544716
Remaining path Length = 3.571047
Total path Length = 28.115763

Advice samples: [8, 8, 7, 4, 1, 1, 0, 0, 0, 0] (29)

Total time taken (in ms):7842.280082

Initialization time (in ms):503.551565
Sampling time (in ms):6074.079876
Advice time (in ms):7.325803
Path checking time (in ms):450.344812
Learning time (in ms):206.56365
Exploration time (in ms):0.0
Time taken other than these things (in ms):600.414376
Moving time (in ms):1744.8304



