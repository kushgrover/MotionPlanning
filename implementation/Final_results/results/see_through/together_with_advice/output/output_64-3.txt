Parameters values: 
Environment: results/environments/env64/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.0226945417747266,0.007225558078483602), (1.3226945417747267,0.007225558078483602), (1.3226945417747267,0.5072255580784836), (1.0226945417747266,0.5072255580784836)]
[(0.25076855567809064,2.4917365820351627), (0.5507685556780906,2.4917365820351627), (0.5507685556780906,2.9917365820351627), (0.25076855567809064,2.9917365820351627)]
[(2.0912914409968737,0.2347902543175968), (2.5912914409968737,0.2347902543175968), (2.5912914409968737,0.5347902543175969), (2.0912914409968737,0.5347902543175969)]
[(2.437332178629169,2.6462906137155895), (2.937332178629169,2.6462906137155895), (2.937332178629169,2.9462906137155893), (2.437332178629169,2.9462906137155893)]
[(4.434419540713758,0.10954436955121247), (4.934419540713758,0.10954436955121247), (4.934419540713758,0.40954436955121243), (4.434419540713758,0.40954436955121243)]
[(4.153096590170196,2.4611472024871395), (4.453096590170196,2.4611472024871395), (4.453096590170196,2.9611472024871395), (4.153096590170196,2.9611472024871395)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=0.51167583,h=2.6485834]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=2.3117003,h=2.6485834]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=2.3117003,h=2.779823]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=4.916024,h=2.779823]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=5.147233,h=2.779823]  
t: java.awt.geom.Rectangle2D$Float[x=0.92269456,y=0.0,w=0.5,h=0.60722554]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=1.271926,h=3.0917366]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=2.5405228,h=3.0917366]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=2.8865638,h=3.0917366]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=4.883651,h=3.0917366]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=4.883651,h=3.0917366]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9173624, 1.4017725] with IG = 38.870636
Iter num: 2
Used frontier: Point2D.Float[1.110016, 2.3438244] with IG = 28.079681
Iter num: 3
Added advice frontier Point2D.Float[1.1376054, 2.5149255]
Added advice frontier Point2D.Float[1.1876017, 2.6310058]
Added advice frontier Point2D.Float[0.60647935, 2.9901967]
Used Advice frontier: Point2D.Float[1.1376054, 2.5149255] with IG = 576.9968
Iter num: 4
Used Advice frontier: Point2D.Float[1.1876017, 2.6310058] with IG = 791.2061
Iter num: 5
Used Advice frontier: Point2D.Float[0.60647935, 2.9901967] with IG = 146.37645
Iter num: 6
Used frontier: Point2D.Float[1.8076177, 1.48217] with IG = 11.509845
Iter num: 7
Used frontier: Point2D.Float[2.7501788, 1.5457526] with IG = 25.217491
Iter num: 8
Added advice frontier Point2D.Float[3.2405436, 2.2371407]
Added advice frontier Point2D.Float[3.266922, 0.757499]
Added advice frontier Point2D.Float[2.9122822, 1.0505024]
Used Advice frontier: Point2D.Float[2.9122822, 1.0505024] with IG = 191.89995
Iter num: 9
Added advice frontier Point2D.Float[2.670137, 0.43293813]
Added advice frontier Point2D.Float[3.0257185, 0.20244144]
Used Advice frontier: Point2D.Float[3.266922, 0.757499] with IG = 217.38083
Iter num: 10
Added advice frontier Point2D.Float[2.8268013, 0.10812597]
Used Advice frontier: Point2D.Float[3.0257185, 0.20244144] with IG = 165.2344
Iter num: 11
Used Advice frontier: Point2D.Float[2.8268013, 0.10812597] with IG = 454.24783
Iter num: 12
Used Advice frontier: Point2D.Float[2.670137, 0.43293813] with IG = 277.30032
Iter num: 13
Used Advice frontier: Point2D.Float[3.2405436, 2.2371407] with IG = 52.690777
Iter num: 14
Added advice frontier Point2D.Float[2.9706764, 2.999649]
Used Advice frontier: Point2D.Float[2.9706764, 2.999649] with IG = 123.42281
Iter num: 15
Used frontier: Point2D.Float[2.6911614, 2.1958988] with IG = 17.76679
Iter num: 16
Used frontier: Point2D.Float[3.7917492, 1.4187574] with IG = 17.02897
Iter num: 17
Used frontier: Point2D.Float[4.5353026, 1.347309] with IG = 24.952517
Iter num: 18
Added advice frontier Point2D.Float[4.907425, 0.940262]
Added advice frontier Point2D.Float[5.205879, 1.4205582]
Added advice frontier Point2D.Float[5.026864, 2.1011522]
Used Advice frontier: Point2D.Float[4.907425, 0.940262] with IG = 181.32068
Iter num: 19
Added advice frontier Point2D.Float[5.0053177, 0.43505836]
Added advice frontier Point2D.Float[5.082757, 0.49154004]
Added advice frontier Point2D.Float[2.2250583, 2.7872462]
Used Advice frontier: Point2D.Float[5.082757, 0.49154004] with IG = 207.5722
Iter num: 20
Added advice frontier Point2D.Float[5.523585, 0.017357439]
Added advice frontier Point2D.Float[2.3537247, 2.7243936]
Used Advice frontier: Point2D.Float[5.0053177, 0.43505836] with IG = 1043.3079
Iter num: 21
Used Advice frontier: Point2D.Float[5.523585, 0.017357439] with IG = 142.24756
Iter num: 22
Used Advice frontier: Point2D.Float[5.205879, 1.4205582] with IG = 62.50946
Iter num: 23
Used Advice frontier: Point2D.Float[5.026864, 2.1011522] with IG = 127.02872
Iter num: 24
Added advice frontier Point2D.Float[4.409328, 2.4173782]
Added advice frontier Point2D.Float[4.6175184, 2.4032562]
Used Advice frontier: Point2D.Float[4.6175184, 2.4032562] with IG = 189.20578
Iter num: 25
Added advice frontier Point2D.Float[5.7589254, 2.6468158]
Added advice frontier Point2D.Float[5.479058, 2.616455]
Used Advice frontier: Point2D.Float[4.409328, 2.4173782] with IG = 479.22818
Iter num: 26
Used Advice frontier: Point2D.Float[5.479058, 2.616455] with IG = 72.30974
Iter num: 27
Used Advice frontier: Point2D.Float[5.7589254, 2.6468158] with IG = 355.22763
Iter num: 28
Used Advice frontier: Point2D.Float[2.3537247, 2.7243936] with IG = 24.910204
Iter num: 29
Used Advice frontier: Point2D.Float[2.2250583, 2.7872462] with IG = 698.3367
Iter num: 30
Used frontier: Point2D.Float[0.80861026, 0.6488293] with IG = 5.00701
Iter num: 31
Added advice frontier Point2D.Float[0.6779246, 0.15140973]
Added advice frontier Point2D.Float[0.8757473, 0.17469177]
Used Advice frontier: Point2D.Float[0.8757473, 0.17469177] with IG = 208.5806

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9173623919487, 1.4017724990844727) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1100159883499146, 2.3438243865966797) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1376054286956787, 2.514925479888916) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1876016855239868, 2.6310057640075684) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6064793467521667, 2.990196704864502) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8889545202255249, 2.264437437057495) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2843191623687744, 1.8116252422332764) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8076176643371582, 1.4821699857711792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3337249755859375, 1.575026512145996) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.750178813934326, 1.5457526445388794) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9122822284698486, 1.0505024194717407) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2669219970703125, 0.7574989795684814) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0257184505462646, 0.20244143903255463) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.826801300048828, 0.1081259697675705) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.6701369285583496, 0.4329381287097931) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8283145427703857, 1.0083022117614746) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9933016300201416, 1.553939938545227) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0986766815185547, 1.9633760452270508) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2405436038970947, 2.237140655517578) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1679654121398926, 2.5093605518341064) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9706764221191406, 2.9996490478515625) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0148398876190186, 2.3439321517944336) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6911613941192627, 2.1958987712860107) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0986766815185547, 1.9633760452270508) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5427677631378174, 1.6150791645050049) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7917492389678955, 1.418757438659668) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.835520029067993, 1.2152520418167114) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.329019546508789, 1.2871085405349731) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.535302639007568, 1.3473089933395386) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9074249267578125, 0.9402620196342468) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.082756996154785, 0.4915400445461273) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.005317687988281, 0.4350583553314209) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.317751884460449, 0.3281666934490204) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.523584842681885, 0.017357438802719116) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.317751884460449, 0.3281666934490204) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.082756996154785, 0.4915400445461273) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.186975955963135, 0.9640522599220276) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.205879211425781, 1.420558214187622) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.291564464569092, 1.7874572277069092) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.026864051818848, 2.101152181625366) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.7767229080200195, 2.19677734375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.617518424987793, 2.4032561779022217) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.409327983856201, 2.4173781871795654) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.7767229080200195, 2.19677734375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.026864051818848, 2.101152181625366) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.229222297668457, 2.3602144718170166) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.479057788848877, 2.616455078125) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.758925437927246, 2.646815776824951) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.560354709625244, 2.563281297683716) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.265566825866699, 2.324695587158203) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.026864051818848, 2.101152181625366) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.742804050445557, 1.8636366128921509) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.605595111846924, 1.8860681056976318) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.168593406677246, 1.8723825216293335) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.86031436920166, 1.8922984600067139) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5249478816986084, 1.8848432302474976) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0986766815185547, 1.9633760452270508) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.875304937362671, 2.2289931774139404) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.60009765625, 2.4536094665527344) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.353724718093872, 2.724393606185913) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.2250583171844482, 2.7872462272644043) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.3703114986419678, 2.6279428005218506) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.6359405517578125, 2.3088178634643555) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7630560398101807, 2.215789318084717) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.879862070083618, 1.8552170991897583) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6123485565185547, 1.7172447443008423) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3172860145568848, 1.586854100227356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8716171979904175, 1.386062502861023) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6343938112258911, 1.271981954574585) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2150585651397705, 1.0631814002990723) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1356995105743408, 1.0137653350830078) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8086102604866028, 0.6488292813301086) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r3,46]  [r3,b,32]  [r3,t,32]  [h,32]  [r4,32]  [r4,t,32]  [r4,32]  [h,32]  [r5,32]  [r5,t,32]  [r5,32]  [r5,b,43]  [r5,43]  [h,43]  [r6,43]  [r6,t,43]  [r6,43]  [r6,b,24]  [r6,24]  [h,24]  [r4,24]  [r4,t,24]  [r4,b,33]  [r4,t,33]  [r4,33]  [h,33]  [r1,33]  


Remaining path: 
[r1,33]  [r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 31
Total sampled points = 16916
RRG size = 1552

Movement Length = 28.731125
Remaining path Length = 0.19918808
Total path Length = 28.930313

Advice samples: [9, 4, 6, 4, 0, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):6244.906907

Initialization time (in ms):682.83665
Sampling time (in ms):4424.952982
Advice time (in ms):8.888968
Path checking time (in ms):553.384301
Learning time (in ms):155.258532
Exploration time (in ms):0.0
Time taken other than these things (in ms):419.585474
Moving time (in ms):1140.8507



