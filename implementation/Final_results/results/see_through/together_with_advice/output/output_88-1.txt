Parameters values: 
Environment: results/environments/env88/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.18852204260107985,0.02005075961083687), (0.48852204260107984,0.02005075961083687), (0.48852204260107984,0.5200507596108369), (0.18852204260107985,0.5200507596108369)]
[(1.4497144214397857,2.486131380617537), (1.7497144214397857,2.486131380617537), (1.7497144214397857,2.986131380617537), (1.4497144214397857,2.986131380617537)]
[(2.1412735903605546,0.2486321241574), (2.6412735903605546,0.2486321241574), (2.6412735903605546,0.5486321241573999), (2.1412735903605546,0.5486321241573999)]
[(2.509682449582955,2.4807208310721247), (2.809682449582955,2.4807208310721247), (2.809682449582955,2.9807208310721247), (2.509682449582955,2.9807208310721247)]
[(4.082086787537034,0.01576170863196005), (4.382086787537034,0.01576170863196005), (4.382086787537034,0.51576170863196), (4.082086787537034,0.51576170863196)]
[(4.717061288074511,2.4851427901170107), (5.217061288074511,2.4851427901170107), (5.217061288074511,2.7851427901170105), (4.717061288074511,2.7851427901170105)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.028877806,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.028877806,w=0.5271911,h=2.6384568]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.028877806,w=2.552269,h=2.6384568]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.028877806,w=2.552269,h=2.6384568]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.0048252963,w=5.1698246,h=2.6625092]  java.awt.geom.Rectangle2D$Float[x=0.68147177,y=0.0048252963,w=5.1698246,h=2.8346627]  
t: java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=0.49999997,h=0.6200508]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=1.7611923,h=3.0861313]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=2.6527517,h=3.0861313]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=2.8211606,h=3.0861313]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=4.3935647,h=3.0861313]  java.awt.geom.Rectangle2D$Float[x=0.08852204,y=0.0,w=5.2285395,h=3.0861313]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.962548, 1.5194753] with IG = 37.08993
Iter num: 2
Used frontier: Point2D.Float[1.0458245, 2.383124] with IG = 40.338642
Iter num: 3
Added advice frontier Point2D.Float[1.6856226, 2.4069579]
Added advice frontier Point2D.Float[1.1884884, 2.5471582]
Added advice frontier Point2D.Float[1.3856078, 2.7570736]
Added advice frontier Point2D.Float[1.7756143, 2.2448123]
Used Advice frontier: Point2D.Float[1.1884884, 2.5471582] with IG = 459.9942
Iter num: 4
Used Advice frontier: Point2D.Float[1.3856078, 2.7570736] with IG = 347.27127
Iter num: 5
Used Advice frontier: Point2D.Float[1.6856226, 2.4069579] with IG = 134.26425
Iter num: 6
Used Advice frontier: Point2D.Float[1.7756143, 2.2448123] with IG = 539.24457
Iter num: 7
Used frontier: Point2D.Float[0.15739428, 2.4038692] with IG = 15.986079
Iter num: 8
Used frontier: Point2D.Float[1.0282848, 0.61316586] with IG = 14.600211
Iter num: 9
Added advice frontier Point2D.Float[0.567971, 0.57116127]
Added advice frontier Point2D.Float[0.8063723, 0.13731459]
Added advice frontier Point2D.Float[1.1945004, 0.13975255]
Added advice frontier Point2D.Float[0.5619744, 0.7566833]
Added advice frontier Point2D.Float[0.5389622, 0.09939888]
Used Advice frontier: Point2D.Float[0.567971, 0.57116127] with IG = 216.34422
Iter num: 10
Used Advice frontier: Point2D.Float[0.5619744, 0.7566833] with IG = 538.7382
Iter num: 11
Used Advice frontier: Point2D.Float[0.5389622, 0.09939888] with IG = 152.04799
Iter num: 12
Used Advice frontier: Point2D.Float[0.8063723, 0.13731459] with IG = 370.25418
Iter num: 13
Used Advice frontier: Point2D.Float[1.1945004, 0.13975255] with IG = 257.64175
Iter num: 14
Used frontier: Point2D.Float[1.8976688, 1.4189577] with IG = 13.407136
Iter num: 15
Used frontier: Point2D.Float[2.6968937, 1.58263] with IG = 23.179903
Iter num: 16
Added advice frontier Point2D.Float[2.9585555, 0.90039796]
Added advice frontier Point2D.Float[3.195774, 1.0677644]
Added advice frontier Point2D.Float[2.8885992, 2.1868675]
Used Advice frontier: Point2D.Float[2.8885992, 2.1868675] with IG = 140.58759
Iter num: 17
Added advice frontier Point2D.Float[2.781461, 2.4631052]
Added advice frontier Point2D.Float[3.5410938, 2.726286]
Used Advice frontier: Point2D.Float[2.781461, 2.4631052] with IG = 337.51083
Iter num: 18
Used Advice frontier: Point2D.Float[3.5410938, 2.726286] with IG = 124.38869
Iter num: 19
Added advice frontier Point2D.Float[2.9357612, 2.569907]
Added advice frontier Point2D.Float[2.9146445, 2.7754507]
Added advice frontier Point2D.Float[2.9069757, 2.6676662]
Used Advice frontier: Point2D.Float[2.9357612, 2.569907] with IG = 159.80258
Iter num: 20
Used Advice frontier: Point2D.Float[2.9069757, 2.6676662] with IG = 981.26624
Iter num: 21
Added advice frontier Point2D.Float[2.8836696, 2.625241]
Used Advice frontier: Point2D.Float[2.8836696, 2.625241] with IG = 2065.891
Iter num: 22
Used Advice frontier: Point2D.Float[2.9146445, 2.7754507] with IG = 652.0176
Iter num: 23
Used Advice frontier: Point2D.Float[3.195774, 1.0677644] with IG = 57.225582
Iter num: 24
Added advice frontier Point2D.Float[3.1820266, 0.22937278]
Added advice frontier Point2D.Float[2.7899122, 0.20739289]
Added advice frontier Point2D.Float[2.6947396, 0.6079816]
Added advice frontier Point2D.Float[2.467176, 0.82837117]
Used Advice frontier: Point2D.Float[2.9585555, 0.90039796] with IG = 344.45056
Iter num: 25
Used Advice frontier: Point2D.Float[2.6947396, 0.6079816] with IG = 253.91335
Iter num: 26
Used Advice frontier: Point2D.Float[2.467176, 0.82837117] with IG = 315.6652
Iter num: 27
Used Advice frontier: Point2D.Float[2.7899122, 0.20739289] with IG = 141.0594
Iter num: 28
Used Advice frontier: Point2D.Float[3.1820266, 0.22937278] with IG = 254.62788
Iter num: 29
Used frontier: Point2D.Float[3.8983545, 1.6056783] with IG = 15.826063
Iter num: 30
Used frontier: Point2D.Float[4.752608, 1.7750963] with IG = 11.954594
Iter num: 31
Added advice frontier Point2D.Float[5.3657117, 2.4162598]
Added advice frontier Point2D.Float[5.066284, 2.460687]
Used Advice frontier: Point2D.Float[5.3657117, 2.4162598] with IG = 112.72395
Iter num: 32
Added advice frontier Point2D.Float[5.559746, 2.743376]
Added advice frontier Point2D.Float[5.79296, 2.8817575]
Used Advice frontier: Point2D.Float[5.066284, 2.460687] with IG = 330.35413
Iter num: 33
Added advice frontier Point2D.Float[4.881453, 0.9569706]
Added advice frontier Point2D.Float[5.034845, 1.0015649]
Added advice frontier Point2D.Float[5.2361794, 2.8157105]
Used Advice frontier: Point2D.Float[5.559746, 2.743376] with IG = 146.40433
Iter num: 34
Used Advice frontier: Point2D.Float[5.79296, 2.8817575] with IG = 368.75928
Iter num: 35
Used Advice frontier: Point2D.Float[5.2361794, 2.8157105] with IG = 165.911
Iter num: 36
Used Advice frontier: Point2D.Float[5.034845, 1.0015649] with IG = 46.774094
Iter num: 37
Used Advice frontier: Point2D.Float[4.881453, 0.9569706] with IG = 626.00696
Iter num: 38
Added advice frontier Point2D.Float[4.440216, 0.3940692]
Added advice frontier Point2D.Float[4.3274665, 0.7053978]
Used Advice frontier: Point2D.Float[4.440216, 0.3940692] with IG = 64.99772
Iter num: 39
Used Advice frontier: Point2D.Float[4.3274665, 0.7053978] with IG = 302.00873
Iter num: 40
Used frontier: Point2D.Float[5.7170734, 0.3625468] with IG = 20.035646
Iter num: 41
Added advice frontier Point2D.Float[5.7187033, 0.0072787255]
Used Advice frontier: Point2D.Float[5.7187033, 0.0072787255] with IG = 281.47464

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.962548017501831, 1.5194753408432007) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0458245277404785, 2.3831241130828857) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1884883642196655, 2.5471582412719727) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3856078386306763, 2.7570736408233643) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.354479193687439, 2.3495445251464844) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6856225728988647, 2.4069578647613525) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.7756142616271973, 2.244812250137329) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4423854351043701, 2.263366222381592) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7233592867851257, 2.3383681774139404) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.15739427506923676, 2.403869152069092) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5494978427886963, 2.3410754203796387) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8883681297302246, 1.9561246633529663) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9590326547622681, 1.3384312391281128) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0282847881317139, 0.6131658554077148) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5679709911346436, 0.5711612701416016) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5619744062423706, 0.7566832900047302) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.538962185382843, 0.09939888119697571) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8063722848892212, 0.1373145878314972) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.19450044631958, 0.1397525519132614) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1823114156723022, 0.673106849193573) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1847820281982422, 1.0536298751831055) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5681588649749756, 1.264872670173645) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8976688385009766, 1.4189577102661133) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9179707765579224, 1.577444314956665) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.687594175338745, 1.599625587463379) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6968936920166016, 1.5826300382614136) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9592905044555664, 1.8808516263961792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.888599157333374, 2.1868674755096436) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.781461000442505, 2.4631052017211914) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.5410938262939453, 2.726285934448242) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.096752405166626, 2.6237194538116455) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9357612133026123, 2.5699069499969482) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.906975746154785, 2.66766619682312) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.88366961479187, 2.6252410411834717) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(2.914644479751587, 2.7754507064819336) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9460489749908447, 2.2850024700164795) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0309808254241943, 1.9117101430892944) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.193889617919922, 1.4724311828613281) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1957740783691406, 1.067764401435852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9585554599761963, 0.9003979563713074) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.694739580154419, 0.6079816222190857) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.4671759605407715, 0.8283711671829224) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.676327705383301, 0.5485773086547852) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.789912223815918, 0.2073928862810135) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1820266246795654, 0.2293727844953537) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.292189121246338, 0.4828287363052368) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1885414123535156, 0.7695724964141846) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1957740783691406, 1.067764401435852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5415515899658203, 1.390708565711975) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8983545303344727, 1.6056783199310303) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7698752880096436, 1.2332855463027954) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.145120620727539, 1.2023568153381348) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.534732818603516, 1.0668574571609497) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.752607822418213, 1.7750962972640991) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.365711688995361, 2.416259765625) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.0662841796875, 2.4606869220733643) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.365711688995361, 2.416259765625) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.559745788574219, 2.7433760166168213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.792960166931152, 2.8817574977874756) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.559745788574219, 2.7433760166168213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.236179351806641, 2.8157105445861816) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.347376346588135, 2.4805948734283447) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.365711688995361, 2.416259765625) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.752607822418213, 1.7750962972640991) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7740702629089355, 1.6743550300598145) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.855527400970459, 1.3323802947998047) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.034844875335693, 1.001564860343933) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.881453037261963, 0.9569705724716187) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.994977951049805, 0.14261531829833984) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.693634986877441, 0.47653260827064514) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.440216064453125, 0.39406919479370117) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.3274664878845215, 0.7053977847099304) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.553313732147217, 0.5768229961395264) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.693634986877441, 0.47653260827064514) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.994977951049805, 0.14261531829833984) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.278196334838867, 0.2745342552661896) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.464805603027344, 0.34547892212867737) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,t,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,t,19]  [r4,b,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,b,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 41
Total sampled points = 23550
RRG size = 2051

Movement Length = 30.881676
Remaining path Length = 0.0
Total path Length = 30.881676

Advice samples: [15, 5, 10, 2, 0, 0, 0, 0, 0, 0] (32)

Total time taken (in ms):7735.43346

Initialization time (in ms):500.999476
Sampling time (in ms):5778.273501
Advice time (in ms):8.475997
Path checking time (in ms):795.677235
Learning time (in ms):196.285141
Exploration time (in ms):0.0
Time taken other than these things (in ms):455.72211
Moving time (in ms):201.3266



