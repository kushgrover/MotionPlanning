Parameters values: 
Environment: results/environments/env70/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.12406573663366516,0.18989088303821902), (0.6240657366336652,0.18989088303821902), (0.6240657366336652,0.48989088303821904), (0.12406573663366516,0.48989088303821904)]
[(0.5771800612511483,2.476109834786034), (0.8771800612511482,2.476109834786034), (0.8771800612511482,2.976109834786034), (0.5771800612511483,2.976109834786034)]
[(2.586516139371338,0.028511469742159203), (2.886516139371338,0.028511469742159203), (2.886516139371338,0.5285114697421592), (2.586516139371338,0.5285114697421592)]
[(2.9807945255071226,2.4519361683764913), (3.2807945255071225,2.4519361683764913), (3.2807945255071225,2.9519361683764913), (2.9807945255071226,2.9519361683764913)]
[(5.23566523877313,0.01749268777741178), (5.53566523877313,0.01749268777741178), (5.53566523877313,0.5174926877774118), (5.23566523877313,0.5174926877774118)]
[(4.979301716175358,2.678182321412847), (5.479301716175358,2.678182321412847), (5.479301716175358,2.978182321412847), (4.979301716175358,2.978182321412847)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.3164647,y=0.18144955,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.3141162,y=0.18144955,w=0.20234847,h=2.4717102]  java.awt.geom.Rectangle2D$Float[x=1.3141162,y=0.028540442,w=2.063699,h=2.6246195]  java.awt.geom.Rectangle2D$Float[x=1.3141162,y=0.028540442,w=2.2515905,h=2.6704757]  java.awt.geom.Rectangle2D$Float[x=1.3141162,y=0.0100870235,w=2.9963114,h=2.688929]  java.awt.geom.Rectangle2D$Float[x=1.3141162,y=0.0100870235,w=3.6377966,h=2.688929]  
t: java.awt.geom.Rectangle2D$Float[x=0.024065737,y=0.08989088,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.024065737,y=0.08989088,w=0.95311433,h=2.986219]  java.awt.geom.Rectangle2D$Float[x=0.024065737,y=0.0,w=2.9624505,h=3.07611]  java.awt.geom.Rectangle2D$Float[x=0.024065737,y=0.0,w=3.3567288,h=3.07611]  java.awt.geom.Rectangle2D$Float[x=0.024065737,y=0.0,w=5.6115994,h=3.07611]  java.awt.geom.Rectangle2D$Float[x=0.024065737,y=0.0,w=5.6115994,h=3.0781822]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.97811806, 1.5714701] with IG = 36.321465
Iter num: 2
Used frontier: Point2D.Float[0.95441693, 0.7075884] with IG = 33.55678
Iter num: 3
Added advice frontier Point2D.Float[0.84800714, 2.439708]
Added advice frontier Point2D.Float[0.57585466, 0.49191177]
Added advice frontier Point2D.Float[1.3799703, 0.3598816]
Added advice frontier Point2D.Float[1.5335697, 0.60832226]
Used Advice frontier: Point2D.Float[0.57585466, 0.49191177] with IG = 229.52098
Iter num: 4
Used Advice frontier: Point2D.Float[1.3799703, 0.3598816] with IG = 118.50206
Iter num: 5
Used Advice frontier: Point2D.Float[1.5335697, 0.60832226] with IG = 342.3623
Iter num: 6
Used Advice frontier: Point2D.Float[0.84800714, 2.439708] with IG = 49.37106
Iter num: 7
Added advice frontier Point2D.Float[1.5101178, 2.5875437]
Added advice frontier Point2D.Float[1.6501832, 2.4901338]
Used Advice frontier: Point2D.Float[1.5101178, 2.5875437] with IG = 147.40256
Iter num: 8
Used Advice frontier: Point2D.Float[1.6501832, 2.4901338] with IG = 586.1396
Iter num: 9
Used frontier: Point2D.Float[1.8702307, 1.4336898] with IG = 13.159725
Iter num: 10
Used frontier: Point2D.Float[2.6826649, 1.3926351] with IG = 29.229595
Iter num: 11
Added advice frontier Point2D.Float[3.291732, 0.782435]
Added advice frontier Point2D.Float[2.8832245, 2.017995]
Added advice frontier Point2D.Float[3.1013484, 1.8988008]
Added advice frontier Point2D.Float[2.763968, 0.54455173]
Added advice frontier Point2D.Float[3.020082, 0.65691304]
Used Advice frontier: Point2D.Float[2.8832245, 2.017995] with IG = 148.86531
Iter num: 12
Added advice frontier Point2D.Float[3.4378226, 2.5224693]
Added advice frontier Point2D.Float[3.3979435, 2.3719869]
Added advice frontier Point2D.Float[3.2947366, 2.8454697]
Added advice frontier Point2D.Float[3.368035, 2.651251]
Added advice frontier Point2D.Float[3.469052, 2.7140508]
Added advice frontier Point2D.Float[3.330133, 2.597435]
Used Advice frontier: Point2D.Float[3.1013484, 1.8988008] with IG = 402.30676
Iter num: 13
Used Advice frontier: Point2D.Float[3.3979435, 2.3719869] with IG = 179.06499
Iter num: 14
Used Advice frontier: Point2D.Float[3.4378226, 2.5224693] with IG = 642.3561
Iter num: 15
Used Advice frontier: Point2D.Float[3.330133, 2.597435] with IG = 762.1182
Iter num: 16
Used Advice frontier: Point2D.Float[3.368035, 2.651251] with IG = 1519.2128
Iter num: 17
Used Advice frontier: Point2D.Float[3.469052, 2.7140508] with IG = 840.71515
Iter num: 18
Used Advice frontier: Point2D.Float[3.2947366, 2.8454697] with IG = 458.07593
Iter num: 19
Used Advice frontier: Point2D.Float[3.291732, 0.782435] with IG = 46.68217
Iter num: 20
Added advice frontier Point2D.Float[3.3716602, 0.060364842]
Added advice frontier Point2D.Float[3.1272936, 0.047589175]
Used Advice frontier: Point2D.Float[3.020082, 0.65691304] with IG = 334.1707
Iter num: 21
Used Advice frontier: Point2D.Float[2.763968, 0.54455173] with IG = 357.5548
Iter num: 22
Used Advice frontier: Point2D.Float[3.1272936, 0.047589175] with IG = 142.0301
Iter num: 23
Used Advice frontier: Point2D.Float[3.3716602, 0.060364842] with IG = 408.66306
Iter num: 24
Used frontier: Point2D.Float[3.8225265, 1.4245161] with IG = 15.851401
Iter num: 25
Used frontier: Point2D.Float[4.673795, 1.5964204] with IG = 18.371223
Iter num: 26
Added advice frontier Point2D.Float[5.1429763, 0.85981035]
Added advice frontier Point2D.Float[5.2121153, 1.2299047]
Added advice frontier Point2D.Float[4.9529862, 2.1298568]
Added advice frontier Point2D.Float[4.8412766, 1.9226847]
Used Advice frontier: Point2D.Float[4.8412766, 1.9226847] with IG = 272.67258
Iter num: 27
Added advice frontier Point2D.Float[4.9411855, 2.4698796]
Added advice frontier Point2D.Float[4.702037, 2.5518804]
Added advice frontier Point2D.Float[5.41514, 2.678028]
Used Advice frontier: Point2D.Float[4.9529862, 2.1298568] with IG = 424.86182
Iter num: 28
Used Advice frontier: Point2D.Float[4.9411855, 2.4698796] with IG = 293.92096
Iter num: 29
Added advice frontier Point2D.Float[5.0543933, 2.603707]
Used Advice frontier: Point2D.Float[5.0543933, 2.603707] with IG = 570.4905
Iter num: 30
Used Advice frontier: Point2D.Float[4.702037, 2.5518804] with IG = 280.7825
Iter num: 31
Used Advice frontier: Point2D.Float[5.41514, 2.678028] with IG = 138.03183
Iter num: 32
Used Advice frontier: Point2D.Float[5.2121153, 1.2299047] with IG = 61.842743
Iter num: 33
Used Advice frontier: Point2D.Float[5.1429763, 0.85981035] with IG = 265.60635
Iter num: 34
Added advice frontier Point2D.Float[5.431839, 0.6153602]
Added advice frontier Point2D.Float[5.821884, 0.3154311]
Used Advice frontier: Point2D.Float[5.431839, 0.6153602] with IG = 264.2605
Iter num: 35
Used Advice frontier: Point2D.Float[5.821884, 0.3154311] with IG = 203.23999
Iter num: 36
Used frontier: Point2D.Float[4.4141517, 0.67827845] with IG = 18.255735
Iter num: 37
Used frontier: Point2D.Float[2.2279594, 2.3541603] with IG = 4.3213277
Iter num: 38
Used frontier: Point2D.Float[5.764399, 1.7718991] with IG = 1.6335763
Iter num: 39
Added advice frontier Point2D.Float[4.299134, 0.11252914]
Added advice frontier Point2D.Float[4.3561997, 0.14316505]
Used Advice frontier: Point2D.Float[4.3561997, 0.14316505] with IG = 41.72215

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,b,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9781180620193481, 1.5714701414108276) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9544169306755066, 0.7075883746147156) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5758546590805054, 0.49191176891326904) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0808206796646118, 0.5177322030067444) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3799703121185303, 0.35988160967826843) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.5335696935653687, 0.608322262763977) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1839587688446045, 0.9196370840072632) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0476551055908203, 1.636016607284546) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8480071425437927, 2.4397079944610596) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.510117769241333, 2.5875437259674072) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.6501832008361816, 2.490133762359619) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.182768702507019, 2.096672534942627) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1856316328048706, 1.8238816261291504) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.645664930343628, 1.56132173538208) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8702306747436523, 1.433689832687378) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.0990793704986572, 1.371603012084961) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6826648712158203, 1.3926351070404053) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7748310565948486, 1.881360650062561) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8832244873046875, 2.0179951190948486) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.101348400115967, 1.8988008499145508) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3979434967041016, 2.3719868659973145) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4378225803375244, 2.5224692821502686) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.3301329612731934, 2.5974349975585938) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.368035078048706, 2.6512510776519775) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:1>
(3.4690520763397217, 2.714050769805908) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.294736623764038, 2.8454697132110596) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.304403781890869, 2.484218120574951) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2758395671844482, 2.2336325645446777) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.103137254714966, 1.8847042322158813) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1389198303222656, 1.373209834098816) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1576242446899414, 1.020203709602356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2917320728302, 0.7824349999427795) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0200819969177246, 0.6569130420684814) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.763967990875244, 0.5445517301559448) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.9014639854431152, 0.5450955629348755) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.0864648818969727, 0.318890780210495) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.127293586730957, 0.047589175403118134) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3716602325439453, 0.06036484241485596) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.2893004417419434, 0.4338243007659912) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2272560596466064, 0.8401130437850952) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1576242446899414, 1.020203709602356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.397096633911133, 1.1951467990875244) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.822526454925537, 1.4245160818099976) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.927079677581787, 1.61130690574646) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.095087051391602, 1.9099291563034058) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.653824329376221, 1.7686296701431274) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.673795223236084, 1.596420407295227) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8412766456604, 1.922684669494629) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.952986240386963, 2.129856824874878) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.941185474395752, 2.469879627227783) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.054393291473389, 2.6037070751190186) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.7020368576049805, 2.551880359649658) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.054393291473389, 2.6037070751190186) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.415140151977539, 2.678028106689453) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.167585372924805, 2.3035242557525635) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.214721202850342, 2.089247226715088) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.035740375518799, 1.7775627374649048) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.197359085083008, 1.4808907508850098) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.212115287780762, 1.2299046516418457) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1429762840271, 0.8598103523254395) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.4318389892578125, 0.6153602004051208) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.8218841552734375, 0.3154310882091522) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.4318389892578125, 0.6153602004051208) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.146538734436035, 0.8192690014839172) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.764459609985352, 0.7459214925765991) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.414151668548584, 0.6782784461975098) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.764459609985352, 0.7459214925765991) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.85770320892334, 0.9168700575828552) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.748514652252197, 1.2983490228652954) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.551629543304443, 1.3305567502975464) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.241203308105469, 1.3781225681304932) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9608054161071777, 1.5443388223648071) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6290457248687744, 1.7141804695129395) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2633557319641113, 1.850157618522644) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0444679260253906, 1.955059289932251) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7918598651885986, 2.070037364959717) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.49889874458313, 2.22623348236084) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.227959394454956, 2.3541603088378906) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.49889874458313, 2.22623348236084) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7918598651885986, 2.070037364959717) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0444679260253906, 1.955059289932251) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4840095043182373, 1.8529541492462158) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9784483909606934, 1.8019237518310547) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.301468849182129, 1.7705644369125366) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.395138263702393, 1.7623569965362549) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.729745388031006, 1.8130676746368408) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0682902336120605, 1.7503979206085205) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.413207054138184, 1.6819862127304077) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.76439905166626, 1.7718991041183472) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.624189376831055, 1.5980913639068604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.440744400024414, 1.3600187301635742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.238519668579102, 1.184506893157959) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1429762840271, 0.8598103523254395) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.977651596069336, 0.511650800704956) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.85373592376709, 0.2654517590999603) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,t,19]  [r4,b,t,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,t,53]  [r5,53]  [h,53]  [r4,53]  [h,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 39
Total sampled points = 21482
RRG size = 1953

Movement Length = 34.018635
Remaining path Length = 0.06476946
Total path Length = 34.083405

Advice samples: [9, 9, 4, 3, 4, 0, 1, 0, 0, 0] (30)

Total time taken (in ms):8470.914306

Initialization time (in ms):683.505981
Sampling time (in ms):5952.110366
Advice time (in ms):9.274828
Path checking time (in ms):1048.591537
Learning time (in ms):210.924617
Exploration time (in ms):0.0
Time taken other than these things (in ms):566.506977
Moving time (in ms):1275.0684



