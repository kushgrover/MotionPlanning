Parameters values: 
Environment: results/environments/env50/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.27538844399265894,0.11128085666601842), (0.7753884439926589,0.11128085666601842), (0.7753884439926589,0.41128085666601844), (0.27538844399265894,0.41128085666601844)]
[(0.8231904685441876,2.506554649993826), (1.3231904685441878,2.506554649993826), (1.3231904685441878,2.8065546499938256), (0.8231904685441876,2.8065546499938256)]
[(2.575872930327833,0.16310067000301773), (3.075872930327833,0.16310067000301773), (3.075872930327833,0.4631006700030177), (2.575872930327833,0.4631006700030177)]
[(3.3454892116391823,2.4941197304190794), (3.645489211639182,2.4941197304190794), (3.645489211639182,2.9941197304190794), (3.3454892116391823,2.9941197304190794)]
[(4.68907278552569,0.03259265555890535), (4.98907278552569,0.03259265555890535), (4.98907278552569,0.5325926555589053), (4.68907278552569,0.5325926555589053)]
[(4.274278986470623,2.493266540538939), (4.574278986470623,2.493266540538939), (4.574278986470623,2.993266540538939), (4.274278986470623,2.993266540538939)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.3667861,y=0.10285272,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.10285272,w=1.4842072,h=2.6910346]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.08059821,w=2.2432084,h=2.7132893]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.08059821,w=2.2432084,h=2.7132893]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.01453707,w=4.5918913,h=2.7793503]  java.awt.geom.Rectangle2D$Float[x=0.08257903,y=0.01453707,w=5.056247,h=2.7793503]  
t: java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.011280857,w=0.7,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.011280857,w=1.247802,h=2.895274]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.011280857,w=3.0004847,h=2.895274]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.011280857,w=3.5701008,h=3.082839]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.0,w=4.9136844,h=3.0941198]  java.awt.geom.Rectangle2D$Float[x=0.17538844,y=0.0,w=4.9136844,h=3.0941198]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0343764, 1.45379] with IG = 34.205635
Iter num: 2
Used frontier: Point2D.Float[0.9492926, 0.6564574] with IG = 44.895657
Iter num: 3
Added advice frontier Point2D.Float[1.405812, 0.28157002]
Added advice frontier Point2D.Float[1.0774281, 0.10842777]
Added advice frontier Point2D.Float[0.23276582, 0.4754248]
Added advice frontier Point2D.Float[0.040059235, 0.42390552]
Added advice frontier Point2D.Float[1.0254197, 2.41922]
Used Advice frontier: Point2D.Float[1.0774281, 0.10842777] with IG = 177.67982
Iter num: 4
Used Advice frontier: Point2D.Float[1.405812, 0.28157002] with IG = 269.3723
Iter num: 5
Used Advice frontier: Point2D.Float[0.23276582, 0.4754248] with IG = 82.31662
Iter num: 6
Used Advice frontier: Point2D.Float[0.040059235, 0.42390552] with IG = 501.3173
Iter num: 7
Used Advice frontier: Point2D.Float[1.0254197, 2.41922] with IG = 41.025913
Iter num: 8
Added advice frontier Point2D.Float[0.17994875, 2.6953368]
Added advice frontier Point2D.Float[0.5877803, 2.8329175]
Used Advice frontier: Point2D.Float[0.5877803, 2.8329175] with IG = 147.30252
Iter num: 9
Used Advice frontier: Point2D.Float[0.17994875, 2.6953368] with IG = 232.3352
Iter num: 10
Used frontier: Point2D.Float[1.9997019, 1.4704952] with IG = 10.006535
Iter num: 11
Used frontier: Point2D.Float[2.8504415, 1.4347733] with IG = 28.170761
Iter num: 12
Added advice frontier Point2D.Float[3.2373734, 0.6922663]
Added advice frontier Point2D.Float[3.0217094, 2.1118011]
Added advice frontier Point2D.Float[2.7303438, 1.8761015]
Used Advice frontier: Point2D.Float[2.7303438, 1.8761015] with IG = 218.63786
Iter num: 13
Added advice frontier Point2D.Float[3.3511968, 2.4514983]
Added advice frontier Point2D.Float[3.3413022, 2.3394768]
Added advice frontier Point2D.Float[2.934557, 0.4707677]
Used Advice frontier: Point2D.Float[3.0217094, 2.1118011] with IG = 266.83438
Iter num: 14
Used Advice frontier: Point2D.Float[3.3413022, 2.3394768] with IG = 254.84367
Iter num: 15
Added advice frontier Point2D.Float[2.2499053, 2.543963]
Used Advice frontier: Point2D.Float[3.3511968, 2.4514983] with IG = 889.2242
Iter num: 16
Used Advice frontier: Point2D.Float[2.2499053, 2.543963] with IG = 89.438736
Iter num: 17
Used Advice frontier: Point2D.Float[3.2373734, 0.6922663] with IG = 44.90584
Iter num: 18
Used Advice frontier: Point2D.Float[2.934557, 0.4707677] with IG = 266.53934
Iter num: 19
Used frontier: Point2D.Float[2.7863367, 0.5642395] with IG = 17.120165
Iter num: 20
Used frontier: Point2D.Float[3.7551146, 1.4504005] with IG = 15.686917
Iter num: 21
Used frontier: Point2D.Float[4.7375593, 1.374421] with IG = 24.256037
Iter num: 22
Added advice frontier Point2D.Float[5.071924, 2.1680214]
Added advice frontier Point2D.Float[5.04948, 0.92141545]
Added advice frontier Point2D.Float[4.8753037, 0.53968525]
Used Advice frontier: Point2D.Float[5.04948, 0.92141545] with IG = 161.57439
Iter num: 23
Added advice frontier Point2D.Float[2.3195815, 0.19526199]
Used Advice frontier: Point2D.Float[4.8753037, 0.53968525] with IG = 238.32822
Iter num: 24
Added advice frontier Point2D.Float[4.4896965, 0.0847729]
Added advice frontier Point2D.Float[4.4309707, 0.07526661]
Added advice frontier Point2D.Float[4.6268697, 0.01641052]
Added advice frontier Point2D.Float[4.8264894, 0.013376227]
Used Advice frontier: Point2D.Float[4.4896965, 0.0847729] with IG = 106.33312
Iter num: 25
Added advice frontier Point2D.Float[2.4764712, 0.10191356]
Used Advice frontier: Point2D.Float[4.4309707, 0.07526661] with IG = 1680.9469
Iter num: 26
Added advice frontier Point2D.Float[4.637434, 0.21998213]
Used Advice frontier: Point2D.Float[4.6268697, 0.01641052] with IG = 488.87943
Iter num: 27
Used Advice frontier: Point2D.Float[4.8264894, 0.013376227] with IG = 500.8945
Iter num: 28
Used Advice frontier: Point2D.Float[4.637434, 0.21998213] with IG = 247.83861
Iter num: 29
Used Advice frontier: Point2D.Float[5.071924, 2.1680214] with IG = 43.916256
Iter num: 30
Added advice frontier Point2D.Float[4.657785, 2.8731813]
Added advice frontier Point2D.Float[4.9992476, 2.6656888]
Added advice frontier Point2D.Float[5.1367073, 2.7101972]
Used Advice frontier: Point2D.Float[4.9992476, 2.6656888] with IG = 118.39124

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0343763828277588, 1.4537899494171143) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9492926001548767, 0.6564574241638184) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0774281024932861, 0.10842777043581009) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4058120250701904, 0.2815700173377991) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0632187128067017, 0.35765016078948975) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3588058650493622, 0.5320894122123718) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.2327658236026764, 0.47542479634284973) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.04005923494696617, 0.42390552163124084) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7430753111839294, 0.8938049077987671) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8850446343421936, 1.033850073814392) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9312558770179749, 1.477420687675476) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0254197120666504, 2.419219970703125) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.907131016254425, 2.4024899005889893) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6820803880691528, 2.571333646774292) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5877802968025208, 2.8329174518585205) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.17994874715805054, 2.6953368186950684) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.702025830745697, 2.295503854751587) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.24185049533844, 1.8949893712997437) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5798218250274658, 1.7149288654327393) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9997018575668335, 1.4704952239990234) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.225761890411377, 1.473344087600708) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8504414558410645, 1.434773325920105) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.730343818664551, 1.8761014938354492) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.021709442138672, 2.1118011474609375) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3413021564483643, 2.3394768238067627) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.351196765899658, 2.45149827003479) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9042413234710693, 2.5024919509887695) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5841338634490967, 2.587432384490967) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.2499053478240967, 2.5439629554748535) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.68577241897583, 2.2818453311920166) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.957195997238159, 1.897810935974121) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0542404651641846, 1.5942201614379883) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1964564323425293, 1.0872339010238647) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1894912719726562, 0.8381553888320923) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2373733520507812, 0.6922662854194641) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9345569610595703, 0.47076770663261414) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.786336660385132, 0.564239501953125) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.026369094848633, 0.7938165664672852) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1964564323425293, 1.0872339010238647) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4048209190368652, 1.2447034120559692) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7551145553588867, 1.450400471687317) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7812297344207764, 1.5097243785858154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7375593185424805, 1.3744210004806519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.91274356842041, 1.3400318622589111) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.049479961395264, 0.9214154481887817) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.875303745269775, 0.5396852493286133) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.470532417297363, 0.6118829250335693) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.462246417999268, 0.26558718085289) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.489696502685547, 0.08477289974689484) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.430970668792725, 0.07526660710573196) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6268696784973145, 0.016410520300269127) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(4.826489448547363, 0.013376226648688316) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.6268696784973145, 0.016410520300269127) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(4.637434005737305, 0.21998213231563568) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.470532417297363, 0.6118829250335693) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.747426986694336, 0.8770617842674255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.954978942871094, 0.9615185856819153) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.91274356842041, 1.3400318622589111) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.083444118499756, 1.7435401678085327) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.071924209594727, 2.1680214405059814) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.957038879394531, 2.2131316661834717) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [h,19]  [r5,19]  [r5,t,19]  [r5,19]  [r5,b,38]  [r5,38]  [r5,b,t,38]  [r5,t,38]  [r5,b,t,38]  [r5,t,38]  [r5,38]  [h,38]  [r6,38]  [r6,b,48]  


Remaining path: 
[r6,b,48]  [r6,48]  [h,48]  [r3,48]  [r3,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 30
Total sampled points = 16714
RRG size = 1502

Movement Length = 24.252567
Remaining path Length = 4.7319436
Total path Length = 28.98451

Advice samples: [8, 6, 7, 2, 0, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):5942.375948

Initialization time (in ms):497.725841
Sampling time (in ms):4319.002644
Advice time (in ms):8.235888
Path checking time (in ms):555.620117
Learning time (in ms):182.55119
Exploration time (in ms):0.0
Time taken other than these things (in ms):379.240268
Moving time (in ms):738.1975



