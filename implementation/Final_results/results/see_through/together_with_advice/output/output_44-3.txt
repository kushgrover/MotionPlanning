Parameters values: 
Environment: results/environments/env44/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.4092945036159357,0.2197365764177202), (0.9092945036159357,0.2197365764177202), (0.9092945036159357,0.5197365764177202), (0.4092945036159357,0.5197365764177202)]
[(0.9588932779350468,2.6925252479899155), (1.4588932779350468,2.6925252479899155), (1.4588932779350468,2.9925252479899154), (0.9588932779350468,2.9925252479899154)]
[(3.3261892092272247,0.041264965286923395), (3.8261892092272247,0.041264965286923395), (3.8261892092272247,0.3412649652869234), (3.3261892092272247,0.3412649652869234)]
[(2.0745801449989503,2.45708047091434), (2.37458014499895,2.45708047091434), (2.37458014499895,2.95708047091434), (2.0745801449989503,2.95708047091434)]
[(4.257513690420927,0.2179818045865434), (4.757513690420927,0.2179818045865434), (4.757513690420927,0.5179818045865434), (4.257513690420927,0.5179818045865434)]
[(5.475018301581811,2.600347802274735), (5.975018301581811,2.600347802274735), (5.975018301581811,2.9003478022747347), (5.475018301581811,2.9003478022747347)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.2228005,y=0.13560244,w=0.19999993,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.13560244,w=0.97006786,h=2.5558476]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.13560244,w=2.8416464,h=2.5558476]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.13560244,w=3.3536506,h=2.563453]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.0833595,w=4.777772,h=2.615696]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.0833595,w=4.777772,h=2.647909]  
t: java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.119736575,w=0.70000005,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.119736575,w=1.2495989,h=2.9727886]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.0,w=3.6168947,h=3.0925252]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.0,w=3.6168947,h=3.0925252]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.0,w=4.548219,h=3.0925252]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.0,w=5.7657237,h=3.0925252]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.89242804, 1.5485154] with IG = 40.306744
Iter num: 2
Used frontier: Point2D.Float[1.0433959, 2.337068] with IG = 44.83892
Iter num: 3
Added advice frontier Point2D.Float[0.6203712, 2.6590624]
Added advice frontier Point2D.Float[0.6209431, 2.8931038]
Added advice frontier Point2D.Float[0.870779, 2.7507195]
Used Advice frontier: Point2D.Float[0.870779, 2.7507195] with IG = 223.10307
Iter num: 4
Added advice frontier Point2D.Float[0.8702371, 0.55802536]
Used Advice frontier: Point2D.Float[0.6203712, 2.6590624] with IG = 375.0159
Iter num: 5
Used Advice frontier: Point2D.Float[0.6209431, 2.8931038] with IG = 427.27344
Iter num: 6
Used Advice frontier: Point2D.Float[0.8702371, 0.55802536] with IG = 42.27975
Iter num: 7
Added advice frontier Point2D.Float[1.2570896, 0.17429656]
Added advice frontier Point2D.Float[1.623413, 0.24358861]
Used Advice frontier: Point2D.Float[1.2570896, 0.17429656] with IG = 158.38002
Iter num: 8
Used Advice frontier: Point2D.Float[1.623413, 0.24358861] with IG = 268.22647
Iter num: 9
Used frontier: Point2D.Float[1.7510273, 1.45094] with IG = 12.261132
Iter num: 10
Used frontier: Point2D.Float[2.6979606, 1.3266138] with IG = 23.949186
Iter num: 11
Added advice frontier Point2D.Float[3.0005434, 0.84896725]
Added advice frontier Point2D.Float[3.0270994, 2.0630255]
Used Advice frontier: Point2D.Float[3.0005434, 0.84896725] with IG = 176.85892
Iter num: 12
Added advice frontier Point2D.Float[3.4476318, 0.35059875]
Added advice frontier Point2D.Float[3.3325694, 0.5726952]
Added advice frontier Point2D.Float[3.2066076, 0.3819265]
Added advice frontier Point2D.Float[2.7169166, 0.36270615]
Used Advice frontier: Point2D.Float[3.3325694, 0.5726952] with IG = 231.51651
Iter num: 13
Used Advice frontier: Point2D.Float[3.2066076, 0.3819265] with IG = 437.44067
Iter num: 14
Used Advice frontier: Point2D.Float[3.4476318, 0.35059875] with IG = 411.43512
Iter num: 15
Added advice frontier Point2D.Float[3.2619112, 0.3878136]
Added advice frontier Point2D.Float[3.2528863, 0.21505818]
Used Advice frontier: Point2D.Float[3.2619112, 0.3878136] with IG = 527.9481
Iter num: 16
Used Advice frontier: Point2D.Float[3.2528863, 0.21505818] with IG = 578.0648
Iter num: 17
Used Advice frontier: Point2D.Float[2.7169166, 0.36270615] with IG = 178.84883
Iter num: 18
Used Advice frontier: Point2D.Float[3.0270994, 2.0630255] with IG = 57.39049
Iter num: 19
Added advice frontier Point2D.Float[3.6604218, 2.61241]
Added advice frontier Point2D.Float[3.1906025, 2.9078565]
Added advice frontier Point2D.Float[2.4296927, 2.5683203]
Added advice frontier Point2D.Float[2.6351962, 2.6967585]
Used Advice frontier: Point2D.Float[2.6351962, 2.6967585] with IG = 134.05084
Iter num: 20
Used Advice frontier: Point2D.Float[2.4296927, 2.5683203] with IG = 412.64557
Iter num: 21
Used Advice frontier: Point2D.Float[3.1906025, 2.9078565] with IG = 113.246216
Iter num: 22
Used Advice frontier: Point2D.Float[3.6604218, 2.61241] with IG = 180.18202
Iter num: 23
Used frontier: Point2D.Float[3.5696511, 1.4775741] with IG = 19.289927
Iter num: 24
Used frontier: Point2D.Float[4.4264245, 1.5969038] with IG = 20.160833
Iter num: 25
Added advice frontier Point2D.Float[5.1621804, 2.1658251]
Added advice frontier Point2D.Float[4.97991, 1.9146087]
Used Advice frontier: Point2D.Float[5.1621804, 2.1658251] with IG = 107.52015
Iter num: 26
Added advice frontier Point2D.Float[5.4705243, 2.6508052]
Added advice frontier Point2D.Float[5.2909665, 2.8058991]
Used Advice frontier: Point2D.Float[4.97991, 1.9146087] with IG = 322.19156
Iter num: 27
Added advice frontier Point2D.Float[5.1695213, 0.9713]
Added advice frontier Point2D.Float[4.953025, 1.278934]
Used Advice frontier: Point2D.Float[5.4705243, 2.6508052] with IG = 112.98469
Iter num: 28
Used Advice frontier: Point2D.Float[5.2909665, 2.8058991] with IG = 421.468
Iter num: 29
Used Advice frontier: Point2D.Float[4.953025, 1.278934] with IG = 61.22214
Iter num: 30
Added advice frontier Point2D.Float[4.781159, 0.3805667]
Used Advice frontier: Point2D.Float[5.1695213, 0.9713] with IG = 265.83206
Iter num: 31
Added advice frontier Point2D.Float[5.0748277, 0.08394068]
Added advice frontier Point2D.Float[5.2322173, 0.1548459]
Added advice frontier Point2D.Float[5.183493, 0.25120905]
Used Advice frontier: Point2D.Float[5.183493, 0.25120905] with IG = 138.49706
Iter num: 32
Used Advice frontier: Point2D.Float[5.2322173, 0.1548459] with IG = 926.08856
Iter num: 33
Used Advice frontier: Point2D.Float[5.0748277, 0.08394068] with IG = 579.2937
Iter num: 34
Used Advice frontier: Point2D.Float[4.781159, 0.3805667] with IG = 239.57451
Iter num: 35
Used frontier: Point2D.Float[5.8285756, 1.6599611] with IG = 11.224503
Iter num: 36
Used frontier: Point2D.Float[4.3964033, 2.3077075] with IG = 15.162255
Iter num: 37
Added advice frontier Point2D.Float[4.189593, 2.7242289]
Added advice frontier Point2D.Float[4.051988, 2.540173]
Used Advice frontier: Point2D.Float[4.189593, 2.7242289] with IG = 145.11696

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8924280405044556, 1.5485154390335083) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0433958768844604, 2.3370680809020996) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8707789778709412, 2.7507195472717285) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6203712224960327, 2.659062385559082) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6209431290626526, 2.893103837966919) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6983197331428528, 2.744690418243408) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8229957222938538, 1.994645595550537) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8301863670349121, 1.546293020248413) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8702371120452881, 0.5580253601074219) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9247310757637024, 0.6153765320777893) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.257089614868164, 0.1742965579032898) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.6234129667282104, 0.2435886114835739) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3513474464416504, 0.6893892288208008) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1148911714553833, 1.0726990699768066) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7510273456573486, 1.4509400129318237) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9737136363983154, 1.3877191543579102) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5066311359405518, 1.3185902833938599) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.697960615158081, 1.3266137838363647) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0005433559417725, 0.8489672541618347) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3325693607330322, 0.5726951956748962) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2066075801849365, 0.3819265067577362) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.4476318359375, 0.3505987524986267) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.261911153793335, 0.38781359791755676) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.2528862953186035, 0.21505817770957947) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7894797325134277, 0.32073163986206055) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.716916561126709, 0.36270615458488464) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.781731605529785, 0.8065869808197021) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.852297306060791, 1.1254841089248657) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.824223756790161, 1.2702405452728271) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9666104316711426, 1.7293494939804077) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.027099370956421, 2.06302547454834) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.806978702545166, 2.4524176120758057) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6351962089538574, 2.696758508682251) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4296927452087402, 2.5683202743530273) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.6351962089538574, 2.696758508682251) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9423584938049316, 2.93807315826416) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1906025409698486, 2.9078564643859863) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.660421848297119, 2.612410068511963) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.3639986515045166, 2.3586506843566895) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1608738899230957, 2.115720272064209) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.166991949081421, 1.9314889907836914) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2911903858184814, 1.8441306352615356) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5696511268615723, 1.477574110031128) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9435794353485107, 1.3277504444122314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.147311687469482, 1.1564644575119019) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.426424503326416, 1.5969038009643555) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.162180423736572, 2.165825128555298) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.979909896850586, 1.9146087169647217) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.162180423736572, 2.165825128555298) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.470524311065674, 2.6508052349090576) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.290966510772705, 2.805899143218994) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.123587131500244, 2.433485984802246) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.162180423736572, 2.165825128555298) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.979909896850586, 1.9146087169647217) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.013758659362793, 1.5345754623413086) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.953024864196777, 1.2789340019226074) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.169521331787109, 0.9713000059127808) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.151184558868408, 0.5998823642730713) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.183493137359619, 0.2512090504169464) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.232217311859131, 0.15484589338302612) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.074827671051025, 0.08394067734479904) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.781158924102783, 0.38056668639183044) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.93793249130249, 0.6605151295661926) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.169521331787109, 0.9713000059127808) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.186633110046387, 1.2613106966018677) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.215185165405273, 1.4628534317016602) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.429263591766357, 1.6230533123016357) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.828575611114502, 1.6599611043930054) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.567463397979736, 1.7531813383102417) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.315597057342529, 1.838217854499817) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.924216270446777, 1.998339295387268) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.584324836730957, 2.1526145935058594) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.3964033126831055, 2.3077075481414795) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,t,2]  [r3,b,t,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [h,35]  [r5,35]  [r5,b,21]  [r5,21]  [r5,b,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20254
RRG size = 1851

Movement Length = 27.776646
Remaining path Length = 0.0
Total path Length = 27.776646

Advice samples: [15, 5, 7, 2, 0, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):7682.51526

Initialization time (in ms):588.594467
Sampling time (in ms):5664.75886
Advice time (in ms):8.884753
Path checking time (in ms):782.812069
Learning time (in ms):202.498901
Exploration time (in ms):0.0
Time taken other than these things (in ms):434.96621
Moving time (in ms):1275.0684



