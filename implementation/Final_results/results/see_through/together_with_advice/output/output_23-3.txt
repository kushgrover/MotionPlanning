Parameters values: 
Environment: results/environments/env23/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.2157226293405783,0.04055244830813173), (1.5157226293405783,0.04055244830813173), (1.5157226293405783,0.5405524483081318), (1.2157226293405783,0.5405524483081318)]
[(0.3576645860585022,2.593201535157728), (0.8576645860585022,2.593201535157728), (0.8576645860585022,2.893201535157728), (0.3576645860585022,2.893201535157728)]
[(2.856455974652672,0.04661123323166423), (3.1564559746526717,0.04661123323166423), (3.1564559746526717,0.5466112332316643), (2.856455974652672,0.5466112332316643)]
[(2.439977136056974,2.6041272805916598), (2.939977136056974,2.6041272805916598), (2.939977136056974,2.9041272805916596), (2.439977136056974,2.9041272805916596)]
[(4.462141000053162,0.03110407394402779), (4.762141000053162,0.03110407394402779), (4.762141000053162,0.5311040739440278), (4.462141000053162,0.5311040739440278)]
[(5.240185086464032,2.4996318482786917), (5.540185086464032,2.4996318482786917), (5.540185086464032,2.9996318482786917), (5.240185086464032,2.9996318482786917)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.041052807,w=0.2,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.041052807,w=1.5149511,h=2.7990265]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.0011094679,w=3.3497689,h=2.83897]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.0011094679,w=3.4383087,h=2.83897]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.0011094679,w=5.0334105,h=2.83897]  java.awt.geom.Rectangle2D$Float[x=0.07497759,y=0.0011094679,w=5.1516094,h=2.83897]  
t: java.awt.geom.Rectangle2D$Float[x=1.1157227,y=0.0,w=0.5,h=0.64055246]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=1.3580581,h=2.9932015]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=2.9987912,h=2.9932015]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=2.9987912,h=3.0041273]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=4.6044765,h=3.0041273]  java.awt.geom.Rectangle2D$Float[x=0.2576646,y=0.0,w=5.38252,h=3.0996318]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.96275014, 1.4124589] with IG = 36.90122
Iter num: 2
Used frontier: Point2D.Float[0.92572314, 2.291099] with IG = 31.839167
Iter num: 3
Added advice frontier Point2D.Float[0.9296612, 2.9513578]
Added advice frontier Point2D.Float[1.4967798, 2.6606162]
Added advice frontier Point2D.Float[1.6971889, 2.3260717]
Used Advice frontier: Point2D.Float[0.9296612, 2.9513578] with IG = 151.45308
Iter num: 4
Used Advice frontier: Point2D.Float[1.4967798, 2.6606162] with IG = 156.9114
Iter num: 5
Used Advice frontier: Point2D.Float[1.6971889, 2.3260717] with IG = 256.42395
Iter num: 6
Used frontier: Point2D.Float[1.8237447, 1.4763747] with IG = 14.399505
Iter num: 7
Used frontier: Point2D.Float[2.7495432, 1.5276827] with IG = 24.159918
Iter num: 8
Added advice frontier Point2D.Float[3.0979466, 2.107406]
Added advice frontier Point2D.Float[2.9686337, 1.926332]
Added advice frontier Point2D.Float[2.95621, 0.90957385]
Added advice frontier Point2D.Float[2.9969478, 0.6143275]
Added advice frontier Point2D.Float[3.1808257, 0.73164034]
Used Advice frontier: Point2D.Float[2.9686337, 1.926332] with IG = 219.83496
Iter num: 9
Added advice frontier Point2D.Float[2.746257, 2.5051832]
Added advice frontier Point2D.Float[3.5036955, 2.6082475]
Added advice frontier Point2D.Float[2.6707022, 2.2035942]
Added advice frontier Point2D.Float[3.1658301, 2.6436975]
Used Advice frontier: Point2D.Float[3.0979466, 2.107406] with IG = 449.42294
Iter num: 10
Used Advice frontier: Point2D.Float[2.6707022, 2.2035942] with IG = 228.34264
Iter num: 11
Used Advice frontier: Point2D.Float[2.746257, 2.5051832] with IG = 321.63742
Iter num: 12
Used Advice frontier: Point2D.Float[3.1658301, 2.6436975] with IG = 226.32326
Iter num: 13
Used Advice frontier: Point2D.Float[3.5036955, 2.6082475] with IG = 294.36002
Iter num: 14
Used Advice frontier: Point2D.Float[2.95621, 0.90957385] with IG = 55.169243
Iter num: 15
Added advice frontier Point2D.Float[3.3948448, 0.103564285]
Added advice frontier Point2D.Float[3.3972225, 0.26207286]
Added advice frontier Point2D.Float[3.2053595, 0.13359053]
Used Advice frontier: Point2D.Float[3.1808257, 0.73164034] with IG = 348.97562
Iter num: 16
Used Advice frontier: Point2D.Float[2.9969478, 0.6143275] with IG = 458.4774
Iter num: 17
Used Advice frontier: Point2D.Float[3.3972225, 0.26207286] with IG = 136.0277
Iter num: 18
Used Advice frontier: Point2D.Float[3.3948448, 0.103564285] with IG = 630.8097
Iter num: 19
Added advice frontier Point2D.Float[3.2372913, 0.11702856]
Added advice frontier Point2D.Float[3.2031407, 0.04892699]
Used Advice frontier: Point2D.Float[3.2372913, 0.11702856] with IG = 632.4002
Iter num: 20
Used Advice frontier: Point2D.Float[3.2053595, 0.13359053] with IG = 2779.9836
Iter num: 21
Used Advice frontier: Point2D.Float[3.2031407, 0.04892699] with IG = 1180.7405
Iter num: 22
Used frontier: Point2D.Float[3.778708, 1.5037096] with IG = 13.346139
Iter num: 23
Used frontier: Point2D.Float[4.70391, 1.5118681] with IG = 24.672358
Iter num: 24
Added advice frontier Point2D.Float[5.0203505, 0.90035707]
Added advice frontier Point2D.Float[5.150823, 2.2135804]
Added advice frontier Point2D.Float[5.031668, 1.2876282]
Used Advice frontier: Point2D.Float[5.031668, 1.2876282] with IG = 251.80922
Iter num: 25
Added advice frontier Point2D.Float[4.8273034, 0.39754137]
Used Advice frontier: Point2D.Float[5.0203505, 0.90035707] with IG = 258.10684
Iter num: 26
Used Advice frontier: Point2D.Float[4.8273034, 0.39754137] with IG = 184.61932
Iter num: 27
Added advice frontier Point2D.Float[5.0974936, 0.12916507]
Added advice frontier Point2D.Float[5.2252164, 0.068395615]
Added advice frontier Point2D.Float[4.8201504, 0.027012952]
Used Advice frontier: Point2D.Float[4.8201504, 0.027012952] with IG = 269.83453
Iter num: 28
Used Advice frontier: Point2D.Float[5.0974936, 0.12916507] with IG = 338.34344
Iter num: 29
Used Advice frontier: Point2D.Float[5.2252164, 0.068395615] with IG = 707.0003
Iter num: 30
Used Advice frontier: Point2D.Float[5.150823, 2.2135804] with IG = 45.515274
Iter num: 31
Added advice frontier Point2D.Float[5.4407663, 2.448456]
Used Advice frontier: Point2D.Float[5.4407663, 2.448456] with IG = 267.99573
Iter num: 32
Added advice frontier Point2D.Float[5.1720586, 2.637615]
Added advice frontier Point2D.Float[5.07328, 2.6514614]
Used Advice frontier: Point2D.Float[5.1720586, 2.637615] with IG = 183.81401
Iter num: 33
Added advice frontier Point2D.Float[5.2011642, 2.8444285]
Used Advice frontier: Point2D.Float[5.07328, 2.6514614] with IG = 1002.5618
Iter num: 34
Used Advice frontier: Point2D.Float[5.2011642, 2.8444285] with IG = 431.9715
Iter num: 35
Used frontier: Point2D.Float[4.3842754, 2.745655] with IG = 24.905344
Iter num: 36
Used frontier: Point2D.Float[5.7320085, 1.6403843] with IG = 6.2572694
Iter num: 37
Used frontier: Point2D.Float[0.7601361, 0.617273] with IG = 4.7848616
Iter num: 38
Added advice frontier Point2D.Float[0.07920051, 0.19646764]
Added advice frontier Point2D.Float[0.14235851, 0.3355765]
Used Advice frontier: Point2D.Float[0.07920051, 0.19646764] with IG = 100.202644

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9627501368522644, 1.412458896636963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.925723135471344, 2.2910990715026855) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.929661214351654, 2.951357841491699) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.4967797994613647, 2.660616159439087) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.6971888542175293, 2.3260717391967773) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.179582118988037, 2.2068710327148438) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1954337358474731, 1.8975938558578491) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8237446546554565, 1.4763747453689575) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.253984212875366, 1.3925336599349976) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7495431900024414, 1.5276826620101929) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9686336517333984, 1.9263319969177246) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0979466438293457, 2.1074059009552) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6707022190093994, 2.203594207763672) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7462570667266846, 2.505183219909668) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.165830135345459, 2.643697500228882) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.503695487976074, 2.6082475185394287) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.260195016860962, 2.199847459793091) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0719785690307617, 1.7658792734146118) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.021820545196533, 1.3921071290969849) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.956209897994995, 0.9095738530158997) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.180825710296631, 0.7316403388977051) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.996947765350342, 0.6143274903297424) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.180825710296631, 0.7316403388977051) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3972225189208984, 0.2620728611946106) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3948447704315186, 0.10356428474187851) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.2372913360595703, 0.11702855676412582) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.20535945892334, 0.13359053432941437) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.2031407356262207, 0.04892699047923088) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.363307476043701, 0.3181088864803314) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.180825710296631, 0.7316403388977051) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.104508638381958, 0.9496312141418457) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2777397632598877, 1.1408305168151855) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6428489685058594, 1.4175304174423218) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.778707981109619, 1.5037095546722412) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.422568321228027, 1.3699015378952026) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.703909873962402, 1.5118681192398071) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.031668186187744, 1.287628173828125) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.020350456237793, 0.9003570675849915) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.940118789672852, 0.6117115020751953) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.827303409576416, 0.3975413739681244) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.820150375366211, 0.02701295167207718) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.097493648529053, 0.12916506826877594) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.225216388702393, 0.06839561462402344) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.144908428192139, 0.269791841506958) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.052180767059326, 0.5324085354804993) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.020350456237793, 0.9003570675849915) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.031668186187744, 1.287628173828125) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.067004680633545, 1.5857104063034058) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.04107141494751, 1.8352559804916382) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.15082311630249, 2.213580369949341) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.440766334533691, 2.448456048965454) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.154365539550781, 2.387108325958252) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.172058582305908, 2.6376149654388428) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:1>
(5.073279857635498, 2.651461362838745) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.201164245605469, 2.844428539276123) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.000633716583252, 2.951765537261963) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.663817882537842, 2.8856983184814453) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.384275436401367, 2.745655059814453) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.684523582458496, 2.8847591876983643) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.000633716583252, 2.951765537261963) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.100747585296631, 2.6087377071380615) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.15082311630249, 2.213580369949341) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.207374095916748, 1.865859031677246) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.471700191497803, 1.6036276817321777) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.732008457183838, 1.640384316444397) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.424647331237793, 1.6003276109695435) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.067004680633545, 1.5857104063034058) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.702038288116455, 1.560295820236206) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.415762424468994, 1.5222834348678589) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.049220085144043, 1.4162766933441162) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6993966102600098, 1.4151411056518555) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4459586143493652, 1.3806082010269165) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0000178813934326, 1.3256404399871826) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3537144660949707, 1.2677206993103027) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.0322699546813965, 1.2255724668502808) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5023592710494995, 1.1542329788208008) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.244482159614563, 1.1196104288101196) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1128379106521606, 0.9852825403213501) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7601361274719238, 0.6172729730606079) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6719714403152466, 0.5102266073226929) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [h,46]  [r4,46]  [r4,t,46]  [r4,46]  [r4,b,8]  [r4,8]  [h,8]  [r3,8]  [r3,t,8]  [r3,8]  [r3,b,25]  [r3,b,t,25]  [r3,t,25]  [r3,25]  [h,25]  [r5,25]  [r5,t,25]  [r5,b,42]  [r5,42]  [h,42]  [r6,42]  [r6,t,42]  [r6,42]  [r6,b,t,33]  [r6,b,33]  [r6,t,33]  [r6,33]  [r6,b,33]  [r6,33]  [h,33]  [r1,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 22222
RRG size = 1902

Movement Length = 29.60954
Remaining path Length = 0.0
Total path Length = 29.60954

Advice samples: [16, 7, 1, 3, 1, 1, 0, 0, 0, 0] (29)

Total time taken (in ms):7652.313081

Initialization time (in ms):542.69555
Sampling time (in ms):5660.962612
Advice time (in ms):8.409237
Path checking time (in ms):729.890911
Learning time (in ms):221.972174
Exploration time (in ms):0.0
Time taken other than these things (in ms):488.382597
Moving time (in ms):1073.7418



