Parameters values: 
Environment: results/environments/env65/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.30625089278162054,0.08105992361863325), (0.8062508927816205,0.08105992361863325), (0.8062508927816205,0.3810599236186332), (0.30625089278162054,0.3810599236186332)]
[(0.34756409308190833,2.4617846584390666), (0.6475640930819083,2.4617846584390666), (0.6475640930819083,2.9617846584390666), (0.34756409308190833,2.9617846584390666)]
[(3.4488708460433837,0.008881052295225424), (3.7488708460433835,0.008881052295225424), (3.7488708460433835,0.5088810522952254), (3.4488708460433837,0.5088810522952254)]
[(2.983546675069148,2.454758104649557), (3.283546675069148,2.454758104649557), (3.283546675069148,2.954758104649557), (2.983546675069148,2.954758104649557)]
[(5.325742055046789,0.03386050746043865), (5.825742055046789,0.03386050746043865), (5.825742055046789,0.33386050746043866), (5.325742055046789,0.33386050746043866)]
[(5.281398833374705,2.4814737383539365), (5.581398833374704,2.4814737383539365), (5.581398833374704,2.9814737383539365), (5.281398833374705,2.9814737383539365)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0029259,y=0.20896177,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.20896177,w=0.27702224,h=2.448612]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=2.2932663,h=2.6392937]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=2.2932663,h=2.6513338]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=3.696938,h=2.6513338]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=4.188627,h=2.6574256]  
t: java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=0.7,h=0.4810599]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=0.7,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=3.6426198,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=3.6426198,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=5.7194915,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=5.7194915,h=3.0814738]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.96761066, 1.6035352] with IG = 36.62306
Iter num: 2
Used frontier: Point2D.Float[1.1779172, 2.4142296] with IG = 52.53551
Iter num: 3
Added advice frontier Point2D.Float[0.4071456, 2.4615822]
Added advice frontier Point2D.Float[0.40188238, 2.299598]
Added advice frontier Point2D.Float[1.0725901, 2.6225383]
Added advice frontier Point2D.Float[0.7269965, 2.914196]
Used Advice frontier: Point2D.Float[1.0725901, 2.6225383] with IG = 428.40674
Iter num: 4
Used Advice frontier: Point2D.Float[0.7269965, 2.914196] with IG = 221.13333
Iter num: 5
Used Advice frontier: Point2D.Float[0.4071456, 2.4615822] with IG = 107.787476
Iter num: 6
Used Advice frontier: Point2D.Float[0.40188238, 2.299598] with IG = 617.0185
Iter num: 7
Used frontier: Point2D.Float[1.8776497, 1.459151] with IG = 13.535308
Iter num: 8
Used frontier: Point2D.Float[2.537652, 1.2085834] with IG = 32.5795
Iter num: 9
Added advice frontier Point2D.Float[3.102427, 0.99535745]
Added advice frontier Point2D.Float[2.9154723, 1.120957]
Added advice frontier Point2D.Float[2.961536, 2.0082576]
Used Advice frontier: Point2D.Float[2.9154723, 1.120957] with IG = 257.83258
Iter num: 10
Added advice frontier Point2D.Float[3.0987325, 0.17145129]
Added advice frontier Point2D.Float[2.853708, 0.1619936]
Added advice frontier Point2D.Float[3.5456972, 0.5119771]
Added advice frontier Point2D.Float[3.4134011, 0.75867635]
Used Advice frontier: Point2D.Float[3.102427, 0.99535745] with IG = 443.99597
Iter num: 11
Used Advice frontier: Point2D.Float[3.4134011, 0.75867635] with IG = 255.88687
Iter num: 12
Added advice frontier Point2D.Float[3.440543, 0.048643]
Used Advice frontier: Point2D.Float[3.5456972, 0.5119771] with IG = 357.22763
Iter num: 13
Used Advice frontier: Point2D.Float[3.0987325, 0.17145129] with IG = 122.00002
Iter num: 14
Used Advice frontier: Point2D.Float[2.853708, 0.1619936] with IG = 407.81885
Iter num: 15
Used Advice frontier: Point2D.Float[3.440543, 0.048643] with IG = 167.31311
Iter num: 16
Used Advice frontier: Point2D.Float[2.961536, 2.0082576] with IG = 49.410637
Iter num: 17
Added advice frontier Point2D.Float[2.9174125, 2.6939025]
Added advice frontier Point2D.Float[2.6806211, 2.8994777]
Added advice frontier Point2D.Float[2.7164166, 2.6475062]
Added advice frontier Point2D.Float[2.500746, 2.3102567]
Used frontier: Point2D.Float[3.0196931, 2.241786] with IG = 162.0536
Iter num: 18
Used Advice frontier: Point2D.Float[2.9174125, 2.6939025] with IG = 215.73045
Iter num: 19
Used Advice frontier: Point2D.Float[2.7164166, 2.6475062] with IG = 484.7749
Iter num: 20
Used Advice frontier: Point2D.Float[2.6806211, 2.8994777] with IG = 392.92517
Iter num: 21
Used Advice frontier: Point2D.Float[2.500746, 2.3102567] with IG = 161.76305
Iter num: 22
Used frontier: Point2D.Float[3.8929825, 1.512325] with IG = 19.911001
Iter num: 23
Used frontier: Point2D.Float[4.360836, 1.8150066] with IG = 39.44284
Iter num: 24
Added advice frontier Point2D.Float[5.1089864, 2.0165217]
Added advice frontier Point2D.Float[5.1678753, 1.4539201]
Used Advice frontier: Point2D.Float[5.1089864, 2.0165217] with IG = 129.06317
Iter num: 25
Added advice frontier Point2D.Float[5.503757, 2.4677575]
Added advice frontier Point2D.Float[5.378225, 2.3012245]
Added advice frontier Point2D.Float[5.0314016, 2.6314893]
Added advice frontier Point2D.Float[4.484051, 2.7022076]
Used Advice frontier: Point2D.Float[5.378225, 2.3012245] with IG = 255.20087
Iter num: 26
Added advice frontier Point2D.Float[5.268475, 2.9775262]
Used Advice frontier: Point2D.Float[5.503757, 2.4677575] with IG = 479.50983
Iter num: 27
Used Advice frontier: Point2D.Float[5.0314016, 2.6314893] with IG = 145.46237
Iter num: 28
Used Advice frontier: Point2D.Float[5.268475, 2.9775262] with IG = 238.40266
Iter num: 29
Used Advice frontier: Point2D.Float[4.484051, 2.7022076] with IG = 102.948616
Iter num: 30
Used Advice frontier: Point2D.Float[5.1678753, 1.4539201] with IG = 67.55294
Iter num: 31
Added advice frontier Point2D.Float[4.8455877, 0.7296299]
Used Advice frontier: Point2D.Float[4.8455877, 0.7296299] with IG = 125.21717
Iter num: 32
Added advice frontier Point2D.Float[5.424985, 0.33859548]
Added advice frontier Point2D.Float[5.208835, 0.4717227]
Added advice frontier Point2D.Float[4.5294237, 0.3589506]
Used Advice frontier: Point2D.Float[4.5294237, 0.3589506] with IG = 205.25496
Iter num: 33
Used Advice frontier: Point2D.Float[5.208835, 0.4717227] with IG = 139.06573
Iter num: 34
Used Advice frontier: Point2D.Float[5.424985, 0.33859548] with IG = 393.9219
Iter num: 35
Used frontier: Point2D.Float[0.985453, 0.6731866] with IG = 4.623808
Iter num: 36
Added advice frontier Point2D.Float[0.88670516, 0.3255585]
Added advice frontier Point2D.Float[0.9903946, 0.16767515]
Used Advice frontier: Point2D.Float[0.88670516, 0.3255585] with IG = 276.71603
Iter num: 37
Added advice frontier Point2D.Float[1.1493267, 0.2814159]
Added advice frontier Point2D.Float[1.2415389, 0.4151217]
Used Advice frontier: Point2D.Float[0.9903946, 0.16767515] with IG = 529.4144

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9676106572151184, 1.6035351753234863) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.177917242050171, 2.41422963142395) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0725901126861572, 2.6225383281707764) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7269964814186096, 2.914196014404297) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8470043540000916, 2.441753625869751) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.40714558959007263, 2.4615821838378906) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4018823802471161, 2.299597978591919) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9713000059127808, 1.9438035488128662) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3604992628097534, 1.7401726245880127) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8776496648788452, 1.459151029586792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.537652015686035, 1.2085833549499512) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9154722690582275, 1.1209570169448853) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1024270057678223, 0.9953574538230896) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4134011268615723, 0.7586763501167297) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5456972122192383, 0.5119770765304565) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.59794020652771, 0.5830163955688477) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.136387825012207, 0.40537238121032715) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0987324714660645, 0.17145128548145294) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.853708028793335, 0.1619935929775238) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4405429363250732, 0.048643000423908234) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.3435590267181396, 0.5384652614593506) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2159008979797363, 0.8530778288841248) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1298043727874756, 1.2670987844467163) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.020254611968994, 1.854560136795044) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.961535930633545, 2.0082576274871826) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.01969313621521, 2.241786003112793) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.917412519454956, 2.6939024925231934) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.716416597366333, 2.6475062370300293) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.6806211471557617, 2.89947772026062) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.631920337677002, 2.6538991928100586) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.500746011734009, 2.3102567195892334) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9356026649475098, 2.105726957321167) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3446879386901855, 1.8531891107559204) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6182515621185303, 1.672992467880249) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8929824829101562, 1.5123250484466553) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.038673400878906, 1.5931923389434814) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.360836029052734, 1.8150066137313843) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1089863777160645, 2.016521692276001) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.378224849700928, 2.30122447013855) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.503756999969482, 2.4677574634552) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.378224849700928, 2.30122447013855) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.031401634216309, 2.6314892768859863) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.26847505569458, 2.9775261878967285) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.031401634216309, 2.6314892768859863) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.48405122756958, 2.702207565307617) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.629780292510986, 2.3823611736297607) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.836177349090576, 2.039733409881592) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8438262939453125, 2.0119948387145996) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.150518894195557, 1.750351905822754) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.167875289916992, 1.4539201259613037) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.97912073135376, 1.1478379964828491) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.845587730407715, 0.7296298742294312) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.529423713684082, 0.35895058512687683) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.882445812225342, 0.3127392530441284) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.208835124969482, 0.47172269225120544) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.424984931945801, 0.3385954797267914) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.845587730407715, 0.7296298742294312) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.97912073135376, 1.1478379964828491) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.688549518585205, 1.207688570022583) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.348021030426025, 1.2166032791137695) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.097576141357422, 1.194403052330017) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.852250576019287, 1.1753828525543213) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3850748538970947, 1.1441811323165894) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9154722690582275, 1.1209570169448853) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3597474098205566, 1.098981499671936) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7362772226333618, 1.078230619430542) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3330734968185425, 1.0655359029769897) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1518179178237915, 1.0686018466949463) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0942860841751099, 0.8794006705284119) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9854530096054077, 0.6731866002082825) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,t,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r3,46]  [r3,t,46]  [r3,46]  [r3,b,32]  [r3,32]  [r3,t,32]  [r3,32]  [h,32]  [r4,32]  [r4,t,32]  [r4,b,25]  [r4,25]  [r4,b,25]  [r4,25]  [h,25]  [r6,25]  [r6,t,25]  [r6,25]  [r6,b,27]  [r6,t,27]  [r6,b,27]  [r6,27]  [h,27]  [r5,27]  [r5,b,33]  [r5,33]  [r5,t,33]  [r5,33]  [h,33]  [r1,33]  [r1,t,33]  [r1,33]  


Remaining path: 
[r1,33]  [r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 19278
RRG size = 1851

Movement Length = 27.95993
Remaining path Length = 0.1954389
Total path Length = 28.155369

Advice samples: [13, 9, 5, 1, 1, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):7508.556963

Initialization time (in ms):521.440682
Sampling time (in ms):5751.804014
Advice time (in ms):8.159949
Path checking time (in ms):539.326624
Learning time (in ms):167.764157
Exploration time (in ms):0.0
Time taken other than these things (in ms):520.061537
Moving time (in ms):1073.7418



