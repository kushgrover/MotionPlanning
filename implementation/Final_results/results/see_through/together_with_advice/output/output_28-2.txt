Parameters values: 
Environment: results/environments/env28/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.6101796761957051,0.14839020489954563), (1.1101796761957052,0.14839020489954563), (1.1101796761957052,0.4483902048995456), (0.6101796761957051,0.4483902048995456)]
[(0.908276641730173,2.471230770734804), (1.208276641730173,2.471230770734804), (1.208276641730173,2.971230770734804), (0.908276641730173,2.971230770734804)]
[(2.2669186865007642,0.1703640427149787), (2.7669186865007642,0.1703640427149787), (2.7669186865007642,0.47036404271497867), (2.2669186865007642,0.47036404271497867)]
[(3.353869154051022,2.4898944423626546), (3.653869154051022,2.4898944423626546), (3.653869154051022,2.9898944423626546), (3.353869154051022,2.9898944423626546)]
[(4.468832562000204,0.13955484259054554), (4.968832562000204,0.13955484259054554), (4.968832562000204,0.43955484259054556), (4.468832562000204,0.43955484259054556)]
[(5.401908813098459,2.4656137053668368), (5.901908813098459,2.4656137053668368), (5.901908813098459,2.7656137053668366), (5.401908813098459,2.7656137053668366)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.23730773,w=0.20000002,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.23730773,w=0.55302286,h=2.4338634]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.05440262,w=3.165023,h=2.6167686]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.05440262,w=3.165023,h=2.6167686]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.021676494,w=4.164619,h=2.6494946]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.021676494,w=4.4553485,h=2.7406814]  
t: java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.048390206,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.048390206,w=0.79809695,h=3.0228407]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.048390206,w=2.356739,h=3.0228407]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.048390206,w=3.2436893,h=3.0415044]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.03955484,w=4.558653,h=3.0503397]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.03955484,w=5.4917293,h=3.0503397]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9806356, 1.4655482] with IG = 36.309616
Iter num: 2
Used frontier: Point2D.Float[0.9109444, 0.56452376] with IG = 40.942085
Iter num: 3
Added advice frontier Point2D.Float[0.6863486, 0.4557154]
Added advice frontier Point2D.Float[0.34638563, 0.4138709]
Added advice frontier Point2D.Float[0.050106905, 0.58200043]
Added advice frontier Point2D.Float[0.5379926, 0.12228245]
Used Advice frontier: Point2D.Float[0.6863486, 0.4557154] with IG = 400.69772
Iter num: 4
Used Advice frontier: Point2D.Float[0.34638563, 0.4138709] with IG = 257.7143
Iter num: 5
Used Advice frontier: Point2D.Float[0.050106905, 0.58200043] with IG = 293.54855
Iter num: 6
Used Advice frontier: Point2D.Float[0.5379926, 0.12228245] with IG = 149.17514
Iter num: 7
Used frontier: Point2D.Float[1.8326203, 0.4194383] with IG = 18.26363
Iter num: 8
Used frontier: Point2D.Float[0.90318507, 2.4074485] with IG = 13.6579075
Iter num: 9
Added advice frontier Point2D.Float[0.66797566, 2.5072784]
Used Advice frontier: Point2D.Float[0.66797566, 2.5072784] with IG = 391.3618
Iter num: 10
Used frontier: Point2D.Float[1.2189823, 2.3973925] with IG = 44.495308
Iter num: 11
Added advice frontier Point2D.Float[0.8261823, 2.66155]
Used Advice frontier: Point2D.Float[0.8261823, 2.66155] with IG = 176.93837
Iter num: 12
Used frontier: Point2D.Float[1.8864278, 1.4287121] with IG = 13.123421
Iter num: 13
Used frontier: Point2D.Float[2.7258286, 1.4973735] with IG = 20.302958
Iter num: 14
Added advice frontier Point2D.Float[2.994874, 2.1028438]
Added advice frontier Point2D.Float[3.0665035, 1.8379664]
Added advice frontier Point2D.Float[3.0470188, 0.6930909]
Used Advice frontier: Point2D.Float[3.0665035, 1.8379664] with IG = 207.58554
Iter num: 15
Added advice frontier Point2D.Float[2.9902213, 2.5368626]
Added advice frontier Point2D.Float[2.7549448, 2.4224203]
Added advice frontier Point2D.Float[3.3134751, 2.708422]
Used Advice frontier: Point2D.Float[2.994874, 2.1028438] with IG = 364.44257
Iter num: 16
Used Advice frontier: Point2D.Float[2.7549448, 2.4224203] with IG = 250.2385
Iter num: 17
Used Advice frontier: Point2D.Float[2.9902213, 2.5368626] with IG = 382.2141
Iter num: 18
Used Advice frontier: Point2D.Float[3.3134751, 2.708422] with IG = 273.25497
Iter num: 19
Used Advice frontier: Point2D.Float[3.0470188, 0.6930909] with IG = 48.39024
Iter num: 20
Added advice frontier Point2D.Float[3.430355, 0.1982502]
Added advice frontier Point2D.Float[3.8363829, 0.4837909]
Added advice frontier Point2D.Float[2.8346338, 0.39320102]
Added advice frontier Point2D.Float[3.0586126, 0.107857615]
Used Advice frontier: Point2D.Float[2.8346338, 0.39320102] with IG = 272.12387
Iter num: 21
Used Advice frontier: Point2D.Float[3.0586126, 0.107857615] with IG = 275.67218
Iter num: 22
Used Advice frontier: Point2D.Float[3.430355, 0.1982502] with IG = 261.38696
Iter num: 23
Used Advice frontier: Point2D.Float[3.8363829, 0.4837909] with IG = 201.45898
Iter num: 24
Used frontier: Point2D.Float[3.861965, 1.3978205] with IG = 14.143947
Iter num: 25
Used frontier: Point2D.Float[4.4187818, 1.4573824] with IG = 42.343094
Iter num: 26
Added advice frontier Point2D.Float[5.1055093, 0.96508205]
Added advice frontier Point2D.Float[4.9401555, 1.0750418]
Added advice frontier Point2D.Float[5.0071907, 2.0872388]
Added advice frontier Point2D.Float[5.0237336, 1.7877842]
Used Advice frontier: Point2D.Float[5.1055093, 0.96508205] with IG = 118.34905
Iter num: 27
Added advice frontier Point2D.Float[4.6151958, 0.5176099]
Added advice frontier Point2D.Float[4.5888314, 0.6120142]
Used Advice frontier: Point2D.Float[4.9401555, 1.0750418] with IG = 503.5818
Iter num: 28
Used Advice frontier: Point2D.Float[4.6151958, 0.5176099] with IG = 138.77872
Iter num: 29
Used Advice frontier: Point2D.Float[4.5888314, 0.6120142] with IG = 1020.2358
Iter num: 30
Used Advice frontier: Point2D.Float[5.0237336, 1.7877842] with IG = 59.87796
Iter num: 31
Added advice frontier Point2D.Float[5.3928022, 2.4432738]
Added advice frontier Point2D.Float[5.2048388, 2.4264352]
Used Advice frontier: Point2D.Float[5.0071907, 2.0872388] with IG = 333.43204
Iter num: 32
Added advice frontier Point2D.Float[4.7298717, 2.5928185]
Added advice frontier Point2D.Float[4.9156866, 2.5284092]
Used Advice frontier: Point2D.Float[5.2048388, 2.4264352] with IG = 254.7252
Iter num: 33
Used Advice frontier: Point2D.Float[5.3928022, 2.4432738] with IG = 529.8962
Iter num: 34
Used Advice frontier: Point2D.Float[4.9156866, 2.5284092] with IG = 201.8885
Iter num: 35
Used Advice frontier: Point2D.Float[4.7298717, 2.5928185] with IG = 508.48816
Iter num: 36
Used frontier: Point2D.Float[5.7213078, 1.4502994] with IG = 8.811706
Iter num: 37
Added advice frontier Point2D.Float[4.3320026, 0.14976121]
Added advice frontier Point2D.Float[4.366682, 0.011438915]
Added advice frontier Point2D.Float[4.378845, 0.21012764]
Added advice frontier Point2D.Float[4.196662, 0.31812534]
Used Advice frontier: Point2D.Float[4.196662, 0.31812534] with IG = 51.232315

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9806355834007263, 1.4655481576919556) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.910944402217865, 0.5645237565040588) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6863486170768738, 0.4557153880596161) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5391412973403931, 0.5280211567878723) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3463856279850006, 0.4138709008693695) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.05010690540075302, 0.5820004343986511) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5379925966262817, 0.12228245288133621) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2978283166885376, 0.12813568115234375) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8326202630996704, 0.41943830251693726) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.502600073814392, 0.6540502905845642) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1038408279418945, 1.0365934371948242) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9769695997238159, 1.9147980213165283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9031850695610046, 2.4074485301971436) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.667975664138794, 2.5072784423828125) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2189823389053345, 2.397392511367798) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.874040424823761, 2.450798988342285) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8261823058128357, 2.6615500450134277) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.0413240194320679, 2.14798903465271) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0972936153411865, 2.044236660003662) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2157717943191528, 1.9319736957550049) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3861366510391235, 1.8030591011047363) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8864277601242065, 1.4287121295928955) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.290135383605957, 1.8416876792907715) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7258286476135254, 1.4973734617233276) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0665035247802734, 1.8379664421081543) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9948740005493164, 2.102843761444092) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7549448013305664, 2.4224202632904053) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9902212619781494, 2.53686261177063) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.3134751319885254, 2.7084219455718994) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1787431240081787, 2.201753854751587) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0665035247802734, 1.8379664421081543) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0840351581573486, 1.4935357570648193) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9847097396850586, 1.028304934501648) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0470187664031982, 0.6930909156799316) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8346338272094727, 0.3932010233402252) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.058612585067749, 0.1078576147556305) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4303550720214844, 0.1982502043247223) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.8363828659057617, 0.48379090428352356) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4698731899261475, 0.5629440546035767) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.197632312774658, 0.810596227645874) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.16025447845459, 1.150854468345642) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4548397064208984, 1.3158735036849976) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8619649410247803, 1.3978204727172852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.110577583312988, 1.3807108402252197) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.418781757354736, 1.4573824405670166) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.105509281158447, 0.965082049369812) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.940155506134033, 1.0750417709350586) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.98417329788208, 0.8677830696105957) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6151957511901855, 0.5176098942756653) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.588831424713135, 0.6120141744613647) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.766264915466309, 0.5267711281776428) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.98417329788208, 0.8677830696105957) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.088055610656738, 1.0746290683746338) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.194139003753662, 1.2653764486312866) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.253920555114746, 1.538097620010376) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.023733615875244, 1.787784218788147) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.007190704345703, 2.0872387886047363) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.204838752746582, 2.4264352321624756) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.3928022384643555, 2.4432737827301025) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.204838752746582, 2.4264352321624756) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.91568660736084, 2.528409242630005) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.72987174987793, 2.59281849861145) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.808761119842529, 2.3517327308654785) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.007190704345703, 2.0872387886047363) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.157312393188477, 1.7601937055587769) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.4268693923950195, 1.6334761381149292) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.721307754516602, 1.4502993822097778) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.568127155303955, 1.3966516256332397) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.3091654777526855, 1.2786238193511963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.105509281158447, 0.965082049369812) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.98417329788208, 0.8677830696105957) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6151957511901855, 0.5176098942756653) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,22]  [r2,t,22]  [r2,b,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20778
RRG size = 1851

Movement Length = 27.847363
Remaining path Length = 0.21601754
Total path Length = 28.06338

Advice samples: [15, 6, 5, 1, 0, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):6847.239841

Initialization time (in ms):581.138205
Sampling time (in ms):4884.936557
Advice time (in ms):7.959853
Path checking time (in ms):688.271375
Learning time (in ms):210.343845
Exploration time (in ms):0.0
Time taken other than these things (in ms):474.590006
Moving time (in ms):402.6532



