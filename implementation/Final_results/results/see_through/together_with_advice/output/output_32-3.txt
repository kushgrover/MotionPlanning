Parameters values: 
Environment: results/environments/env32/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.5475398324971722,0.1862257482975482), (1.047539832497172,0.1862257482975482), (1.047539832497172,0.48622574829754817), (0.5475398324971722,0.48622574829754817)]
[(0.0029883741527253925,2.53420841332515), (0.5029883741527253,2.53420841332515), (0.5029883741527253,2.83420841332515), (0.0029883741527253925,2.83420841332515)]
[(3.05610160664274,0.10796930555065609), (3.55610160664274,0.10796930555065609), (3.55610160664274,0.4079693055506561), (3.05610160664274,0.4079693055506561)]
[(3.0450914342350215,2.623360796549322), (3.5450914342350215,2.623360796549322), (3.5450914342350215,2.923360796549322), (3.0450914342350215,2.923360796549322)]
[(5.348736536630485,0.014332734992248299), (5.6487365366304845,0.014332734992248299), (5.6487365366304845,0.5143327349922483), (5.348736536630485,0.5143327349922483)]
[(4.209435194196274,2.6481388456059483), (4.709435194196274,2.6481388456059483), (4.709435194196274,2.948138845605948), (4.209435194196274,2.948138845605948)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.24693377,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.24693377,w=0.22016501,h=2.4949033]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.1711807,w=1.1581243,h=2.5706563]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.1711807,w=1.1847764,h=2.634231]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.0046474733,w=3.8434415,h=2.8007643]  java.awt.geom.Rectangle2D$Float[x=1.1485809,y=0.0046474733,w=4.239521,h=2.8007643]  
t: java.awt.geom.Rectangle2D$Float[x=0.44753984,y=0.08622575,w=0.70000005,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.08622575,w=1.1475399,h=2.8479826]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.007969306,w=3.6561017,h=2.926239]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.007969306,w=3.6561017,h=3.0153913]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.7487364,h=3.0233607]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.7487364,h=3.0481389]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9982548, 1.5026083] with IG = 35.624485
Iter num: 2
Used frontier: Point2D.Float[0.84829575, 1.076751] with IG = 70.87662
Iter num: 3
Used frontier: Point2D.Float[1.3434844, 0.33984444] with IG = 55.190712
Iter num: 4
Added advice frontier Point2D.Float[1.0112736, 0.10598027]
Used Advice frontier: Point2D.Float[1.0112736, 0.10598027] with IG = 246.14088
Iter num: 5
Used frontier: Point2D.Float[0.49153307, 0.09302248] with IG = 53.8563
Iter num: 6
Used frontier: Point2D.Float[0.9568773, 2.474957] with IG = 13.291202
Iter num: 7
Added advice frontier Point2D.Float[0.22098273, 2.4960663]
Added advice frontier Point2D.Float[0.14686541, 2.3919399]
Added advice frontier Point2D.Float[1.2209072, 2.7299433]
Added advice frontier Point2D.Float[1.2590985, 2.8375869]
Used Advice frontier: Point2D.Float[1.2209072, 2.7299433] with IG = 272.4383
Iter num: 8
Used Advice frontier: Point2D.Float[1.2590985, 2.8375869] with IG = 875.5197
Iter num: 9
Used Advice frontier: Point2D.Float[0.22098273, 2.4960663] with IG = 89.19826
Iter num: 10
Used Advice frontier: Point2D.Float[0.14686541, 2.3919399] with IG = 782.4043
Iter num: 11
Used frontier: Point2D.Float[1.8778995, 1.5027251] with IG = 11.298142
Iter num: 12
Used frontier: Point2D.Float[2.490806, 1.7606938] with IG = 36.089252
Iter num: 13
Added advice frontier Point2D.Float[3.258955, 2.2234735]
Added advice frontier Point2D.Float[2.877486, 0.93096375]
Added advice frontier Point2D.Float[3.0769255, 1.002109]
Used Advice frontier: Point2D.Float[3.258955, 2.2234735] with IG = 108.28562
Iter num: 14
Added advice frontier Point2D.Float[3.041102, 2.5506794]
Added advice frontier Point2D.Float[2.6539993, 2.2977123]
Used Advice frontier: Point2D.Float[3.041102, 2.5506794] with IG = 254.39145
Iter num: 15
Used Advice frontier: Point2D.Float[2.6539993, 2.2977123] with IG = 216.24931
Iter num: 16
Used Advice frontier: Point2D.Float[3.0769255, 1.002109] with IG = 71.840485
Iter num: 17
Added advice frontier Point2D.Float[3.0148728, 0.19709377]
Added advice frontier Point2D.Float[2.5956643, 0.45471582]
Added advice frontier Point2D.Float[2.231361, 2.6769478]
Added advice frontier Point2D.Float[2.6065688, 2.7672207]
Used Advice frontier: Point2D.Float[2.877486, 0.93096375] with IG = 472.2565
Iter num: 18
Added advice frontier Point2D.Float[2.2868838, 0.3695693]
Added advice frontier Point2D.Float[2.4131074, 0.3135654]
Used Advice frontier: Point2D.Float[2.5956643, 0.45471582] with IG = 171.05316
Iter num: 19
Used Advice frontier: Point2D.Float[2.4131074, 0.3135654] with IG = 433.34955
Iter num: 20
Used Advice frontier: Point2D.Float[2.2868838, 0.3695693] with IG = 724.1659
Iter num: 21
Used Advice frontier: Point2D.Float[3.0148728, 0.19709377] with IG = 132.18637
Iter num: 22
Used Advice frontier: Point2D.Float[2.6065688, 2.7672207] with IG = 38.08315
Iter num: 23
Used Advice frontier: Point2D.Float[2.231361, 2.6769478] with IG = 259.1246
Iter num: 24
Used frontier: Point2D.Float[3.633822, 1.3102131] with IG = 21.2377
Iter num: 25
Used frontier: Point2D.Float[4.122788, 1.4261934] with IG = 47.67769
Iter num: 26
Used frontier: Point2D.Float[4.9392657, 1.9106476] with IG = 34.89854
Iter num: 27
Added advice frontier Point2D.Float[4.8139873, 2.3843524]
Added advice frontier Point2D.Float[4.713362, 2.7669706]
Added advice frontier Point2D.Float[4.8445954, 2.862438]
Added advice frontier Point2D.Float[4.939831, 0.95766264]
Added advice frontier Point2D.Float[5.2867126, 2.6869452]
Used Advice frontier: Point2D.Float[4.8139873, 2.3843524] with IG = 182.87614
Iter num: 28
Used Advice frontier: Point2D.Float[4.713362, 2.7669706] with IG = 252.76222
Iter num: 29
Used Advice frontier: Point2D.Float[4.8445954, 2.862438] with IG = 616.2028
Iter num: 30
Used Advice frontier: Point2D.Float[5.2867126, 2.6869452] with IG = 193.04135
Iter num: 31
Used Advice frontier: Point2D.Float[4.939831, 0.95766264] with IG = 52.78387
Iter num: 32
Added advice frontier Point2D.Float[4.8173237, 0.035226796]
Added advice frontier Point2D.Float[5.304649, 0.28922552]
Added advice frontier Point2D.Float[4.380003, 0.297345]
Used Advice frontier: Point2D.Float[4.8173237, 0.035226796] with IG = 98.243546

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9982547760009766, 1.502608299255371) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8482957482337952, 1.0767509937286377) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3434844017028809, 0.3398444354534149) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0112736225128174, 0.1059802696108818) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4915330708026886, 0.09302248060703278) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4838809072971344, 0.4071541130542755) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0001246929168701, 1.079242467880249) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9732304215431213, 1.9204767942428589) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9568772912025452, 2.47495698928833) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.220907211303711, 2.72994327545166) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2590985298156738, 2.8375868797302246) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8814682960510254, 2.5842111110687256) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.22098273038864136, 2.4960663318634033) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.14686541259288788, 2.391939878463745) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.2682243883609772, 2.331026792526245) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8884292840957642, 2.045919418334961) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6275187730789185, 1.6464793682098389) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8778995275497437, 1.5027251243591309) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2047111988067627, 1.6439704895019531) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4908061027526855, 1.7606937885284424) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.897019624710083, 1.8772218227386475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2589550018310547, 2.22347354888916) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0411019325256348, 2.5506794452667236) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.6539993286132812, 2.2977123260498047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.944533109664917, 1.8464820384979248) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0084593296051025, 1.5392515659332275) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.07692551612854, 1.0021090507507324) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.877485990524292, 0.9309637546539307) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.688586473464966, 0.7926856875419617) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5956642627716064, 0.4547158181667328) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.413107395172119, 0.3135654032230377) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.28688383102417, 0.3695693016052246) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.5877811908721924, 0.24116986989974976) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0148727893829346, 0.19709376990795135) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.02742600440979, 0.6371667385101318) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.989377498626709, 1.0536737442016602) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.959357261657715, 1.4348751306533813) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.897019624710083, 1.8772218227386475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7467844486236572, 2.2411949634552) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.670595169067383, 2.5080811977386475) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6065688133239746, 2.7672207355499268) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.231360912322998, 2.676947832107544) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.391117572784424, 2.47613263130188) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7117605209350586, 2.1992897987365723) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.00669527053833, 1.802298903465271) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.397429943084717, 1.5556023120880127) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.633821964263916, 1.3102130889892578) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.811265468597412, 1.3667865991592407) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.122787952423096, 1.426193356513977) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.851995468139648, 1.9281160831451416) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.939265727996826, 1.9106476306915283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.851995468139648, 1.9281160831451416) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8139872550964355, 2.384352445602417) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.713362216949463, 2.766970634460449) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.844595432281494, 2.8624379634857178) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.04141902923584, 2.8910841941833496) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.286712646484375, 2.6869451999664307) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.988129138946533, 2.428448438644409) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.048032283782959, 2.27823543548584) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.939265727996826, 1.9106476306915283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.938296794891357, 1.5617148876190186) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.959770202636719, 1.3344392776489258) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.939830780029297, 0.9576626420021057) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,b,12]  [r1,t,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 32
Total sampled points = 18213
RRG size = 1601

Movement Length = 26.159105
Remaining path Length = 0.0
Total path Length = 26.159105

Advice samples: [12, 4, 4, 1, 1, 0, 0, 0, 0, 0] (22)

Total time taken (in ms):5936.631964

Initialization time (in ms):536.130762
Sampling time (in ms):4385.84688
Advice time (in ms):6.85041
Path checking time (in ms):494.45059
Learning time (in ms):142.414337
Exploration time (in ms):0.0
Time taken other than these things (in ms):370.938985
Moving time (in ms):671.0886



