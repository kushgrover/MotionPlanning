Parameters values: 
Environment: results/environments/env13/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.7419050633091845,0.045996937647569236), (1.0419050633091844,0.045996937647569236), (1.0419050633091844,0.5459969376475693), (0.7419050633091845,0.5459969376475693)]
[(0.08272631374419225,2.627826310907215), (0.5827263137441923,2.627826310907215), (0.5827263137441923,2.9278263109072147), (0.08272631374419225,2.9278263109072147)]
[(3.489835898223501,0.04877177830396033), (3.789835898223501,0.04877177830396033), (3.789835898223501,0.5487717783039603), (3.489835898223501,0.5487717783039603)]
[(2.183709508615356,2.6046146046632317), (2.683709508615356,2.6046146046632317), (2.683709508615356,2.9046146046632315), (2.183709508615356,2.9046146046632315)]
[(4.615275965042565,0.12488219450610469), (5.115275965042565,0.12488219450610469), (5.115275965042565,0.42488219450610465), (4.615275965042565,0.42488219450610465)]
[(4.114223886503797,2.4966719041854013), (4.414223886503796,2.4966719041854013), (4.414223886503796,2.9966719041854013), (4.114223886503797,2.9966719041854013)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.24657245,y=0.0027956434,w=0.2,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.24657245,y=0.0027956434,w=1.1544284,h=2.8642702]  java.awt.geom.Rectangle2D$Float[x=0.24657245,y=0.0027956434,w=2.8593905,h=2.8642702]  java.awt.geom.Rectangle2D$Float[x=0.24657245,y=0.0027956434,w=2.8593905,h=2.8642702]  java.awt.geom.Rectangle2D$Float[x=0.24657245,y=0.0027956434,w=5.2628527,h=2.8642702]  java.awt.geom.Rectangle2D$Float[x=0.24657245,y=0.0027956434,w=5.2628527,h=2.8642702]  
t: java.awt.geom.Rectangle2D$Float[x=0.64190507,y=0.0,w=0.5,h=0.6459969]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.1419051,h=3.0278263]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.8898358,h=3.0278263]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.8898358,h=3.0278263]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.215276,h=3.0278263]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.215276,h=3.0966718]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.97388417, 1.5248553] with IG = 36.603325
Iter num: 2
Used frontier: Point2D.Float[0.8139115, 2.2156038] with IG = 50.773525
Iter num: 3
Added advice frontier Point2D.Float[1.323223, 2.84957]
Added advice frontier Point2D.Float[1.4836862, 2.7762947]
Added advice frontier Point2D.Float[0.34807584, 2.6264777]
Added advice frontier Point2D.Float[0.3130677, 2.3150094]
Used Advice frontier: Point2D.Float[0.3130677, 2.3150094] with IG = 195.84291
Iter num: 4
Used Advice frontier: Point2D.Float[0.34807584, 2.6264777] with IG = 319.0509
Iter num: 5
Used Advice frontier: Point2D.Float[1.323223, 2.84957] with IG = 97.951035
Iter num: 6
Used Advice frontier: Point2D.Float[1.4836862, 2.7762947] with IG = 566.8865
Iter num: 7
Used frontier: Point2D.Float[0.9878516, 0.6238633] with IG = 14.8142605
Iter num: 8
Added advice frontier Point2D.Float[0.30341172, 0.07092415]
Added advice frontier Point2D.Float[0.4912012, 0.18526375]
Used Advice frontier: Point2D.Float[0.4912012, 0.18526375] with IG = 133.41022
Iter num: 9
Used Advice frontier: Point2D.Float[0.30341172, 0.07092415] with IG = 454.83484
Iter num: 10
Used frontier: Point2D.Float[1.7808702, 0.3857238] with IG = 15.128266
Iter num: 11
Used frontier: Point2D.Float[1.8646932, 1.4676083] with IG = 12.343744
Iter num: 12
Used frontier: Point2D.Float[2.6656697, 1.4600329] with IG = 29.844854
Iter num: 13
Added advice frontier Point2D.Float[2.8128078, 0.99408853]
Added advice frontier Point2D.Float[3.2396677, 2.1793168]
Added advice frontier Point2D.Float[3.087878, 1.890309]
Used Advice frontier: Point2D.Float[2.8128078, 0.99408853] with IG = 151.25955
Iter num: 14
Added advice frontier Point2D.Float[3.4005232, 0.5105496]
Added advice frontier Point2D.Float[3.1804955, 0.6763403]
Used Advice frontier: Point2D.Float[3.1804955, 0.6763403] with IG = 205.77779
Iter num: 15
Used Advice frontier: Point2D.Float[3.4005232, 0.5105496] with IG = 362.98
Iter num: 16
Added advice frontier Point2D.Float[3.0950792, 0.0658115]
Used Advice frontier: Point2D.Float[3.0950792, 0.0658115] with IG = 185.34796
Iter num: 17
Used Advice frontier: Point2D.Float[3.087878, 1.890309] with IG = 52.062225
Iter num: 18
Added advice frontier Point2D.Float[2.6886075, 2.665872]
Added advice frontier Point2D.Float[2.9481356, 2.6840672]
Used Advice frontier: Point2D.Float[3.2396677, 2.1793168] with IG = 306.33136
Iter num: 19
Used Advice frontier: Point2D.Float[2.9481356, 2.6840672] with IG = 167.9077
Iter num: 20
Used Advice frontier: Point2D.Float[2.6886075, 2.665872] with IG = 384.3712
Iter num: 21
Used frontier: Point2D.Float[3.6501985, 1.4026531] with IG = 16.929817
Iter num: 22
Used frontier: Point2D.Float[3.8898785, 1.5773834] with IG = 74.17159
Iter num: 23
Used frontier: Point2D.Float[4.5066023, 1.0779934] with IG = 20.268322
Iter num: 24
Used frontier: Point2D.Float[5.0660233, 1.6306214] with IG = 31.283697
Iter num: 25
Added advice frontier Point2D.Float[5.0750837, 2.2189834]
Added advice frontier Point2D.Float[5.195168, 0.7979236]
Added advice frontier Point2D.Float[5.0178413, 1.9459205]
Used Advice frontier: Point2D.Float[5.0178413, 1.9459205] with IG = 313.51968
Iter num: 26
Added advice frontier Point2D.Float[5.190583, 2.6831777]
Added advice frontier Point2D.Float[5.034921, 2.499451]
Added advice frontier Point2D.Float[4.4350257, 2.6327312]
Added advice frontier Point2D.Float[4.580733, 2.7257764]
Used Advice frontier: Point2D.Float[5.0750837, 2.2189834] with IG = 358.4251
Iter num: 27
Used Advice frontier: Point2D.Float[5.034921, 2.499451] with IG = 352.94714
Iter num: 28
Used Advice frontier: Point2D.Float[5.190583, 2.6831777] with IG = 415.27676
Iter num: 29
Used Advice frontier: Point2D.Float[4.580733, 2.7257764] with IG = 163.05276
Iter num: 30
Used Advice frontier: Point2D.Float[4.4350257, 2.6327312] with IG = 578.4312
Iter num: 31
Used Advice frontier: Point2D.Float[5.195168, 0.7979236] with IG = 45.58049
Iter num: 32
Added advice frontier Point2D.Float[4.9503613, 0.51850325]
Added advice frontier Point2D.Float[4.906451, 0.7387568]
Added advice frontier Point2D.Float[5.39499, 0.22667186]
Added advice frontier Point2D.Float[5.6439905, 0.18363912]
Used Advice frontier: Point2D.Float[4.906451, 0.7387568] with IG = 339.30856

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9738841652870178, 1.5248552560806274) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.813911497592926, 2.215603828430176) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3130677044391632, 2.315009355545044) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.34807583689689636, 2.6264777183532715) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5121955871582031, 2.5876572132110596) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3232229948043823, 2.8495700359344482) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.4836862087249756, 2.776294708251953) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2838677167892456, 2.354207992553711) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1189815998077393, 1.7679219245910645) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.015448808670044, 0.8495750427246094) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.987851619720459, 0.6238632798194885) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8141452074050903, 0.658024251461029) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4912011921405792, 0.1852637529373169) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.30341172218322754, 0.07092414796352386) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5785526037216187, 0.005634607747197151) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1196742057800293, 0.005924195051193237) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.4653171300888062, 0.2015233188867569) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7808701992034912, 0.3857237994670868) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.428348183631897, 0.5844448804855347) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1655577421188354, 1.0002886056900024) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2945809364318848, 1.2390187978744507) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6284945011138916, 1.3783950805664062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8646931648254395, 1.4676083326339722) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4614017009735107, 1.4309632778167725) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6656696796417236, 1.4600329399108887) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9731831550598145, 1.1324691772460938) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.81280779838562, 0.9940885305404663) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.180495500564575, 0.6763402819633484) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4005231857299805, 0.5105496048927307) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.095079183578491, 0.06581149995326996) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.948305606842041, 0.2383461743593216) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9075632095336914, 0.6831905245780945) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9731831550598145, 1.1324691772460938) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.943397045135498, 1.607188105583191) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0878779888153076, 1.8903089761734009) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2396676540374756, 2.179316759109497) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0774223804473877, 2.3414669036865234) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9481356143951416, 2.6840672492980957) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.6886074542999268, 2.665872097015381) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9276678562164307, 2.2542693614959717) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2133727073669434, 1.8975707292556763) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.31723952293396, 1.747969388961792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.650198459625244, 1.4026530981063843) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.889878511428833, 1.5773833990097046) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.791088581085205, 1.1769355535507202) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.5066022872924805, 1.077993392944336) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.081073760986328, 1.1940639019012451) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.066023349761963, 1.6306214332580566) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.017841339111328, 1.945920467376709) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0750837326049805, 2.2189834117889404) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.034921169281006, 2.499450922012329) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.190583229064941, 2.6831777095794678) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.938226222991943, 2.725031614303589) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.580732822418213, 2.725776433944702) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.435025691986084, 2.6327311992645264) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.789022445678711, 2.3974530696868896) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.0750837326049805, 2.2189834117889404) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.066023349761963, 1.6306214332580566) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.134679317474365, 1.268002986907959) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.176358222961426, 1.0042647123336792) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [r1,t,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 32
Total sampled points = 17644
RRG size = 1601

Movement Length = 24.485577
Remaining path Length = 0.99278903
Total path Length = 25.478365

Advice samples: [8, 6, 6, 2, 0, 0, 0, 0, 0, 0] (22)

Total time taken (in ms):5708.476381

Initialization time (in ms):606.520344
Sampling time (in ms):3995.467791
Advice time (in ms):8.859357
Path checking time (in ms):522.972967
Learning time (in ms):165.995573
Exploration time (in ms):0.0
Time taken other than these things (in ms):408.660349
Moving time (in ms):402.6532



