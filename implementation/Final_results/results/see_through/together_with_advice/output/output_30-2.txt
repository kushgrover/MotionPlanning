Parameters values: 
Environment: results/environments/env30/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.7247221196482552,0.1430845798200615), (1.2247221196482552,0.1430845798200615), (1.2247221196482552,0.4430845798200615), (0.7247221196482552,0.4430845798200615)]
[(0.3126351239083089,2.6008604117957437), (0.8126351239083089,2.6008604117957437), (0.8126351239083089,2.9008604117957435), (0.3126351239083089,2.9008604117957435)]
[(2.6677899065578212,0.04165123239159367), (2.967789906557821,0.04165123239159367), (2.967789906557821,0.5416512323915936), (2.6677899065578212,0.5416512323915936)]
[(3.4640552582250645,2.483869538040542), (3.7640552582250644,2.483869538040542), (3.7640552582250644,2.983869538040542), (3.4640552582250645,2.983869538040542)]
[(4.869572369188406,0.0348458815480301), (5.169572369188406,0.0348458815480301), (5.169572369188406,0.5348458815480301), (4.869572369188406,0.5348458815480301)]
[(4.291816819860245,2.4579141169141714), (4.791816819860245,2.4579141169141714), (4.791816819860245,2.757914116914171), (4.291816819860245,2.757914116914171)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.17231628,y=0.13251959,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.17231628,y=0.13251959,w=0.92228734,h=2.7418709]  java.awt.geom.Rectangle2D$Float[x=0.17231628,y=0.0074978024,w=2.2110958,h=2.8668926]  java.awt.geom.Rectangle2D$Float[x=0.17231628,y=0.0074978024,w=2.9266598,h=2.8668926]  java.awt.geom.Rectangle2D$Float[x=0.17231628,y=0.0071245143,w=5.52666,h=2.867266]  java.awt.geom.Rectangle2D$Float[x=0.17231628,y=0.0071245143,w=5.52666,h=2.867266]  
t: java.awt.geom.Rectangle2D$Float[x=0.6247221,y=0.04308458,w=0.70000005,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.21263513,y=0.04308458,w=1.112087,h=2.9577758]  java.awt.geom.Rectangle2D$Float[x=0.21263513,y=0.0,w=2.8551548,h=3.0008605]  java.awt.geom.Rectangle2D$Float[x=0.21263513,y=0.0,w=3.65142,h=3.0838695]  java.awt.geom.Rectangle2D$Float[x=0.21263513,y=0.0,w=5.056937,h=3.0838695]  java.awt.geom.Rectangle2D$Float[x=0.21263513,y=0.0,w=5.056937,h=3.0838695]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9698965, 1.4351109] with IG = 36.684067
Iter num: 2
Used frontier: Point2D.Float[1.1552494, 0.6798619] with IG = 52.722195
Iter num: 3
Used frontier: Point2D.Float[0.378545, 0.11923851] with IG = 22.630745
Iter num: 4
Added advice frontier Point2D.Float[0.18955468, 0.17109455]
Added advice frontier Point2D.Float[0.029234953, 0.3340892]
Used Advice frontier: Point2D.Float[0.18955468, 0.17109455] with IG = 510.26794
Iter num: 5
Used Advice frontier: Point2D.Float[0.029234953, 0.3340892] with IG = 437.39636
Iter num: 6
Used frontier: Point2D.Float[0.98413384, 2.3863218] with IG = 11.804114
Iter num: 7
Added advice frontier Point2D.Float[0.8832856, 2.6347787]
Added advice frontier Point2D.Float[1.0436623, 2.6113396]
Added advice frontier Point2D.Float[1.0289848, 2.7236702]
Added advice frontier Point2D.Float[0.8577263, 2.8566217]
Added advice frontier Point2D.Float[0.9114192, 2.8208964]
Added advice frontier Point2D.Float[1.0180236, 2.9179485]
Added advice frontier Point2D.Float[0.82870376, 2.746921]
Used Advice frontier: Point2D.Float[1.0436623, 2.6113396] with IG = 429.62936
Iter num: 8
Used Advice frontier: Point2D.Float[1.0289848, 2.7236702] with IG = 882.7253
Iter num: 9
Used Advice frontier: Point2D.Float[0.9114192, 2.8208964] with IG = 655.4793
Iter num: 10
Used Advice frontier: Point2D.Float[0.8577263, 2.8566217] with IG = 1550.5771
Iter num: 11
Used Advice frontier: Point2D.Float[0.82870376, 2.746921] with IG = 881.25244
Iter num: 12
Used Advice frontier: Point2D.Float[0.8832856, 2.6347787] with IG = 801.7961
Iter num: 13
Used Advice frontier: Point2D.Float[1.0180236, 2.9179485] with IG = 318.88647
Iter num: 14
Used frontier: Point2D.Float[1.9207157, 1.4442021] with IG = 12.203657
Iter num: 15
Used frontier: Point2D.Float[2.755153, 1.729451] with IG = 25.636147
Iter num: 16
Added advice frontier Point2D.Float[3.1371663, 2.2442112]
Added advice frontier Point2D.Float[3.013494, 2.4922106]
Added advice frontier Point2D.Float[3.1701224, 1.8481541]
Added advice frontier Point2D.Float[2.8825164, 2.2729757]
Added advice frontier Point2D.Float[2.9780822, 0.8486008]
Added advice frontier Point2D.Float[3.1207526, 1.0941343]
Used Advice frontier: Point2D.Float[3.1701224, 1.8481541] with IG = 231.68886
Iter num: 17
Used Advice frontier: Point2D.Float[3.1371663, 2.2442112] with IG = 251.61922
Iter num: 18
Added advice frontier Point2D.Float[3.6184866, 2.4407606]
Added advice frontier Point2D.Float[3.9247153, 2.2943444]
Used Advice frontier: Point2D.Float[2.8825164, 2.2729757] with IG = 390.21448
Iter num: 19
Added advice frontier Point2D.Float[3.3757043, 2.8307743]
Used Advice frontier: Point2D.Float[3.013494, 2.4922106] with IG = 391.57288
Iter num: 20
Used Advice frontier: Point2D.Float[3.3757043, 2.8307743] with IG = 201.69258
Iter num: 21
Used Advice frontier: Point2D.Float[3.6184866, 2.4407606] with IG = 135.0142
Iter num: 22
Used Advice frontier: Point2D.Float[3.9247153, 2.2943444] with IG = 294.61032
Iter num: 23
Used Advice frontier: Point2D.Float[3.1207526, 1.0941343] with IG = 56.630787
Iter num: 24
Added advice frontier Point2D.Float[3.0346837, 0.2276138]
Used Advice frontier: Point2D.Float[2.9780822, 0.8486008] with IG = 352.14423
Iter num: 25
Used Advice frontier: Point2D.Float[3.0346837, 0.2276138] with IG = 153.20657
Iter num: 26
Added advice frontier Point2D.Float[2.3032756, 0.13422434]
Added advice frontier Point2D.Float[2.4215038, 0.15588544]
Used Advice frontier: Point2D.Float[2.3032756, 0.13422434] with IG = 59.864456
Iter num: 27
Used Advice frontier: Point2D.Float[2.4215038, 0.15588544] with IG = 831.9735
Iter num: 28
Used frontier: Point2D.Float[4.028782, 1.4042208] with IG = 8.835699
Iter num: 29
Used frontier: Point2D.Float[4.627093, 1.8645768] with IG = 26.638708
Iter num: 30
Added advice frontier Point2D.Float[4.9025836, 0.9921021]
Added advice frontier Point2D.Float[5.3835826, 1.6204617]
Used Advice frontier: Point2D.Float[4.9025836, 0.9921021] with IG = 109.2973
Iter num: 31
Added advice frontier Point2D.Float[5.0571213, 2.0245116]
Added advice frontier Point2D.Float[5.1805873, 1.8663778]
Added advice frontier Point2D.Float[4.798895, 0.29301187]
Added advice frontier Point2D.Float[4.5442376, 0.28396723]
Used Advice frontier: Point2D.Float[5.3835826, 1.6204617] with IG = 126.37026
Iter num: 32
Added advice frontier Point2D.Float[4.818376, 2.3853073]
Added advice frontier Point2D.Float[4.7217607, 2.3252566]
Used Advice frontier: Point2D.Float[5.1805873, 1.8663778] with IG = 313.60165
Iter num: 33
Added advice frontier Point2D.Float[5.2325506, 2.7195077]
Added advice frontier Point2D.Float[5.1169634, 2.5448763]
Used Advice frontier: Point2D.Float[5.0571213, 2.0245116] with IG = 498.44394
Iter num: 34
Used Advice frontier: Point2D.Float[4.818376, 2.3853073] with IG = 230.2461
Iter num: 35
Added advice frontier Point2D.Float[4.799256, 2.8105764]
Used Advice frontier: Point2D.Float[4.7217607, 2.3252566] with IG = 879.06836
Iter num: 36
Used Advice frontier: Point2D.Float[5.1169634, 2.5448763] with IG = 221.08846
Iter num: 37
Used Advice frontier: Point2D.Float[5.2325506, 2.7195077] with IG = 477.5105
Iter num: 38
Used Advice frontier: Point2D.Float[4.799256, 2.8105764] with IG = 219.06459
Iter num: 39
Used Advice frontier: Point2D.Float[4.798895, 0.29301187] with IG = 33.887695
Iter num: 40
Added advice frontier Point2D.Float[5.689224, 0.057203706]
Added advice frontier Point2D.Float[5.2457037, 0.0702679]
Used Advice frontier: Point2D.Float[4.5442376, 0.28396723] with IG = 392.4372

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9698964953422546, 1.4351109266281128) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1552493572235107, 0.6798619031906128) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8146949410438538, 0.6917775273323059) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.37854498624801636, 0.11923851072788239) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.18955467641353607, 0.17109455168247223) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.029234953224658966, 0.3340891897678375) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4285992681980133, 0.6462610960006714) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7608978748321533, 0.8658038973808289) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8586894869804382, 1.0427757501602173) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9349902868270874, 1.8225913047790527) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9841338396072388, 2.386321783065796) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0436623096466064, 2.611339569091797) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.028984785079956, 2.723670244216919) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9114192128181458, 2.8208963871002197) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.8577262759208679, 2.856621742248535) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.828703761100769, 2.7469210624694824) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8832855820655823, 2.6347787380218506) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0180236101150513, 2.9179484844207764) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.031874656677246, 2.791792392730713) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.120549201965332, 2.2098586559295654) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1665846109390259, 1.956674337387085) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4165973663330078, 1.786048412322998) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9207156896591187, 1.4442020654678345) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.287951946258545, 1.4839117527008057) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.755152940750122, 1.7294509410858154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1701223850250244, 1.848154067993164) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1371662616729736, 2.244211196899414) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.882516384124756, 2.2729756832122803) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0134940147399902, 2.492210626602173) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.375704288482666, 2.8307743072509766) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.3187851905822754, 2.3967442512512207) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6184866428375244, 2.440760612487793) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.924715280532837, 2.294344425201416) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.651695489883423, 2.261274576187134) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.425966501235962, 2.202962636947632) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1942505836486816, 2.077422857284546) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.204038619995117, 1.7358633279800415) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2160236835479736, 1.5270694494247437) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1207525730133057, 1.0941343307495117) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9780821800231934, 0.8486008048057556) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0742027759552, 0.2479957938194275) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0346837043762207, 0.22761380672454834) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.0957651138305664, 0.6416401863098145) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.743966579437256, 0.7322249412536621) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.513390064239502, 0.6243535876274109) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.245779037475586, 0.43511903285980225) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3032755851745605, 0.13422434031963348) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.421503782272339, 0.15588544309139252) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.245779037475586, 0.43511903285980225) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.513390064239502, 0.6243535876274109) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8021390438079834, 0.846034049987793) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1168735027313232, 1.0448012351989746) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5143213272094727, 1.1724950075149536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8646624088287354, 1.3123666048049927) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.028781890869141, 1.4042208194732666) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.134669303894043, 1.788163661956787) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.134184837341309, 1.9085805416107178) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.6270928382873535, 1.864576816558838) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.902583599090576, 0.9921020865440369) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.383582592010498, 1.6204617023468018) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.180587291717529, 1.866377830505371) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.057121276855469, 2.0245115756988525) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.906213283538818, 2.2844982147216797) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.818376064300537, 2.3853073120117188) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.7217607498168945, 2.325256586074829) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.818376064300537, 2.3853073120117188) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.1169633865356445, 2.5448763370513916) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.232550621032715, 2.7195076942443848) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.168556213378906, 2.693507432937622) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.799255847930908, 2.8105764389038086) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.168556213378906, 2.693507432937622) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.940799236297607, 2.392005681991577) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.950409412384033, 2.0810208320617676) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.949229717254639, 1.8197234869003296) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.899876117706299, 1.4556758403778076) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.842065811157227, 1.2798402309417725) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.902583599090576, 0.9921020865440369) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7247700691223145, 0.766728937625885) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.757401943206787, 0.5966724753379822) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,b,t,22]  [r2,t,22]  [r2,22]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,t,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 22491
RRG size = 2001

Movement Length = 27.38639
Remaining path Length = 1.7476788
Total path Length = 29.13407

Advice samples: [15, 6, 9, 1, 1, 0, 0, 0, 0, 0] (32)

Total time taken (in ms):8967.409675

Initialization time (in ms):609.121738
Sampling time (in ms):7107.298047
Advice time (in ms):9.334409
Path checking time (in ms):671.667491
Learning time (in ms):181.110116
Exploration time (in ms):0.0
Time taken other than these things (in ms):388.877874
Moving time (in ms):1811.9393



