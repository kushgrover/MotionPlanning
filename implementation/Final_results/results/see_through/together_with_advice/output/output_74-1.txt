Parameters values: 
Environment: results/environments/env74/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.2789792864532479,0.029548308544782218), (1.578979286453248,0.029548308544782218), (1.578979286453248,0.5295483085447822), (1.2789792864532479,0.5295483085447822)]
[(0.9491040714414313,2.4697950946231595), (1.2491040714414312,2.4697950946231595), (1.2491040714414312,2.9697950946231595), (0.9491040714414313,2.9697950946231595)]
[(2.5232895007729064,0.18011129466273954), (3.0232895007729064,0.18011129466273954), (3.0232895007729064,0.4801112946627395), (2.5232895007729064,0.4801112946627395)]
[(3.0597021026037963,2.4835468194611114), (3.5597021026037963,2.4835468194611114), (3.5597021026037963,2.7835468194611113), (3.0597021026037963,2.7835468194611113)]
[(5.321667878849414,0.20724884172772537), (5.821667878849414,0.20724884172772537), (5.821667878849414,0.5072488417277253), (5.321667878849414,0.5072488417277253)]
[(5.169240727108434,2.5509027029709936), (5.669240727108434,2.5509027029709936), (5.669240727108434,2.8509027029709935), (5.169240727108434,2.8509027029709935)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.4929771,y=0.015049594,w=0.20000002,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=0.4786633,h=2.6639643]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=3.381956,h=2.6639643]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=3.381956,h=2.80679]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.009827773,w=4.169133,h=2.812012]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.009827773,w=4.5778456,h=2.8811154]  
t: java.awt.geom.Rectangle2D$Float[x=1.1789793,y=0.0,w=0.5,h=0.6295483]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=0.82987523,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=2.2741857,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=2.810598,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=5.072564,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=5.072564,h=3.0697951]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0209194, 1.4240768] with IG = 34.630394
Iter num: 2
Used frontier: Point2D.Float[0.87807155, 0.58693224] with IG = 45.92316
Iter num: 3
Added advice frontier Point2D.Float[0.5656213, 0.08708748]
Added advice frontier Point2D.Float[0.36317837, 0.09437276]
Added advice frontier Point2D.Float[1.039326, 2.3781223]
Used Advice frontier: Point2D.Float[0.5656213, 0.08708748] with IG = 169.64513
Iter num: 4
Used Advice frontier: Point2D.Float[0.36317837, 0.09437276] with IG = 493.6468
Iter num: 5
Used Advice frontier: Point2D.Float[1.039326, 2.3781223] with IG = 41.315113
Iter num: 6
Added advice frontier Point2D.Float[0.28852436, 2.6478345]
Added advice frontier Point2D.Float[0.4482913, 2.8155754]
Used Advice frontier: Point2D.Float[0.4482913, 2.8155754] with IG = 135.99626
Iter num: 7
Used Advice frontier: Point2D.Float[0.28852436, 2.6478345] with IG = 431.68277
Iter num: 8
Used frontier: Point2D.Float[1.8980623, 1.4235417] with IG = 11.342815
Iter num: 9
Used frontier: Point2D.Float[2.5358393, 1.3404886] with IG = 34.206005
Iter num: 10
Added advice frontier Point2D.Float[3.1408403, 0.95125455]
Added advice frontier Point2D.Float[2.9507601, 1.1273333]
Added advice frontier Point2D.Float[3.0434358, 2.0121477]
Added advice frontier Point2D.Float[3.2063766, 1.7650796]
Used Advice frontier: Point2D.Float[2.9507601, 1.1273333] with IG = 214.37595
Iter num: 11
Added advice frontier Point2D.Float[3.0347793, 0.56088597]
Added advice frontier Point2D.Float[3.042311, 0.6852927]
Used Advice frontier: Point2D.Float[3.1408403, 0.95125455] with IG = 385.9474
Iter num: 12
Added advice frontier Point2D.Float[3.4467833, 0.16663364]
Added advice frontier Point2D.Float[3.0012226, 0.030789895]
Used Advice frontier: Point2D.Float[3.042311, 0.6852927] with IG = 352.57697
Iter num: 13
Used Advice frontier: Point2D.Float[3.0347793, 0.56088597] with IG = 802.3458
Iter num: 14
Used Advice frontier: Point2D.Float[3.4467833, 0.16663364] with IG = 175.36246
Iter num: 15
Used Advice frontier: Point2D.Float[3.0012226, 0.030789895] with IG = 214.68036
Iter num: 16
Used Advice frontier: Point2D.Float[3.2063766, 1.7650796] with IG = 47.014614
Iter num: 17
Added advice frontier Point2D.Float[3.0424182, 2.5591645]
Added advice frontier Point2D.Float[2.9469817, 2.5586026]
Used Advice frontier: Point2D.Float[3.0434358, 2.0121477] with IG = 337.8835
Iter num: 18
Used Advice frontier: Point2D.Float[3.0424182, 2.5591645] with IG = 181.35149
Iter num: 19
Used Advice frontier: Point2D.Float[2.9469817, 2.5586026] with IG = 1047.7981
Iter num: 20
Added advice frontier Point2D.Float[2.3622873, 2.7113812]
Used Advice frontier: Point2D.Float[2.3622873, 2.7113812] with IG = 165.20227
Iter num: 21
Used frontier: Point2D.Float[4.061878, 1.442976] with IG = 11.613859
Iter num: 22
Used frontier: Point2D.Float[4.9089894, 1.1444407] with IG = 26.644247
Iter num: 23
Added advice frontier Point2D.Float[4.9999404, 0.61273146]
Added advice frontier Point2D.Float[5.258939, 0.56581396]
Added advice frontier Point2D.Float[5.2002196, 0.8537854]
Added advice frontier Point2D.Float[5.038307, 2.0980113]
Used Advice frontier: Point2D.Float[5.2002196, 0.8537854] with IG = 243.03972
Iter num: 24
Used Advice frontier: Point2D.Float[5.258939, 0.56581396] with IG = 340.2552
Iter num: 25
Used Advice frontier: Point2D.Float[4.9999404, 0.61273146] with IG = 379.91953
Iter num: 26
Added advice frontier Point2D.Float[4.259574, 0.15084085]
Used Advice frontier: Point2D.Float[4.259574, 0.15084085] with IG = 113.62633
Iter num: 27
Used Advice frontier: Point2D.Float[5.038307, 2.0980113] with IG = 45.22601
Iter num: 28
Added advice frontier Point2D.Float[5.758708, 2.5415776]
Added advice frontier Point2D.Float[5.9570246, 2.2520714]
Added advice frontier Point2D.Float[4.7012043, 2.8723037]
Used Advice frontier: Point2D.Float[5.758708, 2.5415776] with IG = 118.20228

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0209194421768188, 1.424076795578003) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8780715465545654, 0.5869322419166565) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5656213164329529, 0.087087482213974) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.3631783723831177, 0.09437275677919388) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7066523432731628, 0.6692445278167725) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8881935477256775, 1.1753650903701782) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9967218041419983, 1.8591996431350708) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0393259525299072, 2.378122329711914) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4482913017272949, 2.815575361251831) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.2885243594646454, 2.647834539413452) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5305638909339905, 2.3935465812683105) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1195255517959595, 1.984347939491272) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8980623483657837, 1.4235416650772095) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.535839319229126, 1.3404885530471802) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9507601261138916, 1.1273332834243774) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1408402919769287, 0.9512545466423035) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.042310953140259, 0.6852927207946777) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0347793102264404, 0.5608859658241272) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.4467833042144775, 0.16663363575935364) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.001222610473633, 0.030789894983172417) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4467833042144775, 0.16663363575935364) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.199418306350708, 0.6757280826568604) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1538097858428955, 1.1769216060638428) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1654224395751953, 1.5317919254302979) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.206376552581787, 1.7650796175003052) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.04343581199646, 2.0121476650238037) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0695343017578125, 2.105236053466797) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0424182415008545, 2.559164524078369) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.94698166847229, 2.5586025714874268) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.685580253601074, 2.6447463035583496) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.3622872829437256, 2.711381196975708) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.7131078243255615, 2.4089643955230713) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0156874656677246, 2.0944812297821045) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.170320749282837, 1.9218475818634033) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.440993309020996, 1.742486596107483) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.603461742401123, 1.613513708114624) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.061878204345703, 1.4429759979248047) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.198317050933838, 1.0564988851547241) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.908989429473877, 1.1444406509399414) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.200219631195068, 0.8537853956222534) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.258938789367676, 0.5658139586448669) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.999940395355225, 0.6127314567565918) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6054463386535645, 0.30000755190849304) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.259573936462402, 0.1508408486843109) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.475548267364502, 0.2921094298362732) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.611668586730957, 0.45279353857040405) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.807343482971191, 0.8416615724563599) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.908989429473877, 1.1444406509399414) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8507184982299805, 1.510378360748291) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.909531116485596, 1.727413296699524) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  


Remaining path: 
[r6,t,21]  [r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 28
Total sampled points = 15992
RRG size = 1401

Movement Length = 22.652931
Remaining path Length = 1.7291563
Total path Length = 24.382088

Advice samples: [12, 5, 4, 1, 0, 0, 0, 0, 0, 0] (22)

Total time taken (in ms):5423.867585

Initialization time (in ms):517.43142
Sampling time (in ms):3997.733467
Advice time (in ms):7.548292
Path checking time (in ms):384.319619
Learning time (in ms):167.28704
Exploration time (in ms):0.0
Time taken other than these things (in ms):349.547747
Moving time (in ms):738.1975



