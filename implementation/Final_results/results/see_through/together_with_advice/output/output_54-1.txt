Parameters values: 
Environment: results/environments/env54/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.5150596956122103,0.04370100644702838), (1.0150596956122104,0.04370100644702838), (1.0150596956122104,0.3437010064470284), (0.5150596956122103,0.3437010064470284)]
[(1.0101998994214099,2.5593813236127834), (1.5101998994214099,2.5593813236127834), (1.5101998994214099,2.859381323612783), (1.0101998994214099,2.859381323612783)]
[(2.105691927735323,0.0349862892122686), (2.405691927735323,0.0349862892122686), (2.405691927735323,0.5349862892122687), (2.105691927735323,0.5349862892122687)]
[(2.9468216479185156,2.450516195018655), (3.2468216479185155,2.450516195018655), (3.2468216479185155,2.950516195018655), (2.9468216479185156,2.950516195018655)]
[(5.357699733371453,0.06484113502350274), (5.857699733371453,0.06484113502350274), (5.857699733371453,0.36484113502350274), (5.357699733371453,0.36484113502350274)]
[(5.376563877407428,2.496863266123021), (5.676563877407427,2.496863266123021), (5.676563877407427,2.996863266123021), (5.376563877407428,2.996863266123021)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.1684585,y=0.13343954,w=0.20000005,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.13343954,w=0.5939578,h=2.5543325]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.047781546,w=1.9540645,h=2.6399906]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.047781546,w=2.9212904,h=2.6420648]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.047781546,w=3.6035705,h=2.6420648]  java.awt.geom.Rectangle2D$Float[x=0.7745007,y=0.047781546,w=3.6035705,h=2.6420648]  
t: java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=0.70000005,h=0.443701]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=1.1951402,h=2.9593813]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=2.0906324,h=2.9593813]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=2.9317617,h=3.0505161]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=5.54264,h=3.0505161]  java.awt.geom.Rectangle2D$Float[x=0.4150597,y=0.0,w=5.54264,h=3.0968633]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9971757, 1.5064279] with IG = 35.66657
Iter num: 2
Used frontier: Point2D.Float[0.903059, 2.3389602] with IG = 40.58077
Iter num: 3
Added advice frontier Point2D.Float[1.0665842, 2.4742665]
Added advice frontier Point2D.Float[1.0729426, 2.4578843]
Added advice frontier Point2D.Float[0.90106213, 2.6598122]
Added advice frontier Point2D.Float[0.52763385, 2.811684]
Added advice frontier Point2D.Float[0.9752791, 2.8237138]
Added advice frontier Point2D.Float[0.9395156, 2.5291853]
Used Advice frontier: Point2D.Float[0.9395156, 2.5291853] with IG = 516.29675
Iter num: 4
Used Advice frontier: Point2D.Float[0.90106213, 2.6598122] with IG = 734.38025
Iter num: 5
Used Advice frontier: Point2D.Float[0.9752791, 2.8237138] with IG = 555.79675
Iter num: 6
Used Advice frontier: Point2D.Float[1.0665842, 2.4742665] with IG = 250.88263
Iter num: 7
Used Advice frontier: Point2D.Float[1.0729426, 2.4578843] with IG = 5690.587
Iter num: 8
Used Advice frontier: Point2D.Float[0.52763385, 2.811684] with IG = 153.83963
Iter num: 9
Used frontier: Point2D.Float[0.96471375, 0.60743135] with IG = 14.097829
Iter num: 10
Added advice frontier Point2D.Float[1.047929, 0.17991775]
Added advice frontier Point2D.Float[1.121618, 0.25446445]
Added advice frontier Point2D.Float[1.2952456, 0.26843083]
Added advice frontier Point2D.Float[1.4307237, 0.29330298]
Used Advice frontier: Point2D.Float[1.121618, 0.25446445] with IG = 258.8862
Iter num: 11
Used Advice frontier: Point2D.Float[1.047929, 0.17991775] with IG = 954.0145
Iter num: 12
Used Advice frontier: Point2D.Float[1.2952456, 0.26843083] with IG = 380.69333
Iter num: 13
Used Advice frontier: Point2D.Float[1.4307237, 0.29330298] with IG = 725.9938
Iter num: 14
Used frontier: Point2D.Float[1.9118519, 1.4423804] with IG = 13.254107
Iter num: 15
Used frontier: Point2D.Float[2.8324564, 1.327677] with IG = 25.825031
Iter num: 16
Added advice frontier Point2D.Float[3.1338706, 0.8524498]
Used Advice frontier: Point2D.Float[3.1338706, 0.8524498] with IG = 132.64153
Iter num: 17
Added advice frontier Point2D.Float[2.4711044, 0.19557287]
Added advice frontier Point2D.Float[3.1706886, 2.051908]
Added advice frontier Point2D.Float[2.8369842, 0.11558612]
Added advice frontier Point2D.Float[2.561266, 0.2359339]
Added advice frontier Point2D.Float[2.585194, 0.26967624]
Used Advice frontier: Point2D.Float[2.585194, 0.26967624] with IG = 124.56389
Iter num: 18
Used Advice frontier: Point2D.Float[2.561266, 0.2359339] with IG = 2417.475
Iter num: 19
Used Advice frontier: Point2D.Float[2.4711044, 0.19557287] with IG = 1012.31793
Iter num: 20
Used Advice frontier: Point2D.Float[2.8369842, 0.11558612] with IG = 267.0078
Iter num: 21
Used Advice frontier: Point2D.Float[3.1706886, 2.051908] with IG = 50.551548
Iter num: 22
Added advice frontier Point2D.Float[3.2880595, 2.4622767]
Added advice frontier Point2D.Float[3.3827167, 2.6400878]
Added advice frontier Point2D.Float[3.682647, 2.648713]
Added advice frontier Point2D.Float[3.739733, 2.4435759]
Used Advice frontier: Point2D.Float[3.2880595, 2.4622767] with IG = 234.28882
Iter num: 23
Used Advice frontier: Point2D.Float[3.3827167, 2.6400878] with IG = 496.43362
Iter num: 24
Used Advice frontier: Point2D.Float[3.682647, 2.648713] with IG = 333.27295
Iter num: 25
Used Advice frontier: Point2D.Float[3.739733, 2.4435759] with IG = 469.63315
Iter num: 26
Used frontier: Point2D.Float[2.4683995, 2.7133415] with IG = 15.748314
Iter num: 27
Used frontier: Point2D.Float[3.7345555, 1.4665825] with IG = 12.671287
Iter num: 28
Used frontier: Point2D.Float[3.7915716, 1.259353] with IG = 102.35891
Iter num: 29
Used frontier: Point2D.Float[4.332756, 1.5509484] with IG = 31.867495
Iter num: 30
Added advice frontier Point2D.Float[5.054162, 0.96077275]
Used Advice frontier: Point2D.Float[5.054162, 0.96077275] with IG = 67.93096
Iter num: 31
Added advice frontier Point2D.Float[5.3563766, 0.32073298]
Added advice frontier Point2D.Float[4.6995916, 0.3591779]
Used Advice frontier: Point2D.Float[5.3563766, 0.32073298] with IG = 141.2823
Iter num: 32
Added advice frontier Point2D.Float[4.3446198, 0.41410345]
Added advice frontier Point2D.Float[4.4018955, 0.29143068]
Used Advice frontier: Point2D.Float[4.6995916, 0.3591779] with IG = 151.99666
Iter num: 33
Added advice frontier Point2D.Float[4.9610977, 2.0787804]
Added advice frontier Point2D.Float[4.9098673, 1.9706817]
Used Advice frontier: Point2D.Float[4.4018955, 0.29143068] with IG = 327.53864
Iter num: 34
Used Advice frontier: Point2D.Float[4.3446198, 0.41410345] with IG = 738.6338
Iter num: 35
Used Advice frontier: Point2D.Float[4.9098673, 1.9706817] with IG = 48.994946
Iter num: 36
Added advice frontier Point2D.Float[5.2912936, 2.8459926]
Added advice frontier Point2D.Float[4.97568, 2.9292386]
Used Advice frontier: Point2D.Float[4.9610977, 2.0787804] with IG = 835.9528
Iter num: 37
Used Advice frontier: Point2D.Float[5.2912936, 2.8459926] with IG = 104.464134
Iter num: 38
Used Advice frontier: Point2D.Float[4.97568, 2.9292386] with IG = 306.3654
Iter num: 39
Used frontier: Point2D.Float[5.4908786, 1.4720024] with IG = 19.521542
Iter num: 40
Added advice frontier Point2D.Float[4.2759776, 2.6060314]
Added advice frontier Point2D.Float[4.388499, 2.699607]
Used Advice frontier: Point2D.Float[4.388499, 2.699607] with IG = 55.810787

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9971756935119629, 1.5064278841018677) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9030590057373047, 2.3389601707458496) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9395155906677246, 2.5291852951049805) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.9010621309280396, 2.6598122119903564) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9752790927886963, 2.823713779449463) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9677698612213135, 2.5492937564849854) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.0665842294692993, 2.474266529083252) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0729426145553589, 2.4578843116760254) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5276338458061218, 2.8116838932037354) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7448841333389282, 2.2482497692108154) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8830605149269104, 1.8342965841293335) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9153952598571777, 1.3583742380142212) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9647137522697449, 0.6074313521385193) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1216180324554443, 0.25446444749832153) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.047929048538208, 0.17991775274276733) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.29524564743042, 0.26843082904815674) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.4307236671447754, 0.293302983045578) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2944611310958862, 0.6597233414649963) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1516480445861816, 1.0454590320587158) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.474605679512024, 1.21686589717865) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9118518829345703, 1.442380428314209) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4478812217712402, 1.4027873277664185) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.832456350326538, 1.3276770114898682) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1975598335266113, 1.220332384109497) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1338706016540527, 0.8524497747421265) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.862288475036621, 0.5190332531929016) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5851941108703613, 0.26967623829841614) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5612659454345703, 0.23593389987945557) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.471104383468628, 0.1955728679895401) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.836984157562256, 0.11558611690998077) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8414697647094727, 0.1740383803844452) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9606618881225586, 0.6606659293174744) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.033069133758545, 0.9425237774848938) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1088855266571045, 1.4221179485321045) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1087052822113037, 1.9004563093185425) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1706886291503906, 2.051908016204834) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2880594730377197, 2.4622766971588135) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.382716655731201, 2.640087842941284) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6826469898223877, 2.6487131118774414) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.7397329807281494, 2.443575859069824) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5202043056488037, 2.3989837169647217) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.113495111465454, 2.283656597137451) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.979227304458618, 2.2052977085113525) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6778042316436768, 2.474738836288452) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4683995246887207, 2.713341474533081) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6778042316436768, 2.474738836288452) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.979227304458618, 2.2052977085113525) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1087052822113037, 1.9004563093185425) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.462737560272217, 1.6362981796264648) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.73455548286438, 1.4665825366973877) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.791571617126465, 1.2593530416488647) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.149500846862793, 1.3181827068328857) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.332756042480469, 1.5509483814239502) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.149500846862793, 1.3181827068328857) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.4288506507873535, 1.0720806121826172) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7895426750183105, 1.2578331232070923) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.05416202545166, 0.9607727527618408) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.356376647949219, 0.320732980966568) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.699591636657715, 0.3591778874397278) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.401895523071289, 0.29143068194389343) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.3446197509765625, 0.4141034483909607) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.580672740936279, 0.6454195976257324) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.749154090881348, 0.8222562074661255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.05416202545166, 0.9607727527618408) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7895426750183105, 1.2578331232070923) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8868207931518555, 1.5208204984664917) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9251604080200195, 1.8275505304336548) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.909867286682129, 1.9706816673278809) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.961097717285156, 2.07878041267395) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.14929723739624, 2.0905203819274902) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.291293621063232, 2.8459925651550293) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.975679874420166, 2.9292385578155518) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.291293621063232, 2.8459925651550293) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.14929723739624, 2.0905203819274902) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.218144416809082, 1.7811217308044434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.383841514587402, 1.8201764822006226) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.490878582000732, 1.472002387046814) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.383841514587402, 1.8201764822006226) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.026641368865967, 1.9173176288604736) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.961097717285156, 2.07878041267395) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.778376579284668, 2.310807466506958) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,t,46]  [r2,b,46]  [r2,t,46]  [r2,b,t,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [r6,t,21]  [r6,21]  [h,21]  [r6,21]  


Remaining path: 
[r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21108
RRG size = 2001

Movement Length = 28.926529
Remaining path Length = 0.1463468
Total path Length = 29.072876

Advice samples: [20, 5, 1, 2, 1, 1, 0, 0, 0, 0] (30)

Total time taken (in ms):8927.985034

Initialization time (in ms):699.097097
Sampling time (in ms):6791.346966
Advice time (in ms):7.921449
Path checking time (in ms):781.813581
Learning time (in ms):194.228538
Exploration time (in ms):0.0
Time taken other than these things (in ms):453.577403
Moving time (in ms):1409.2861



