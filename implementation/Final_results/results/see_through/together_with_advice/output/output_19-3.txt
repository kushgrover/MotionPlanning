Parameters values: 
Environment: results/environments/env19/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.17943210309120092,0.05207775645967032), (0.679432103091201,0.05207775645967032), (0.679432103091201,0.3520777564596703), (0.17943210309120092,0.3520777564596703)]
[(0.4527206736368159,2.4908623377729584), (0.7527206736368159,2.4908623377729584), (0.7527206736368159,2.9908623377729584), (0.4527206736368159,2.9908623377729584)]
[(2.0593898999116638,0.038733732464954804), (2.3593898999116636,0.038733732464954804), (2.3593898999116636,0.5387337324649548), (2.0593898999116638,0.5387337324649548)]
[(3.3381856931681178,2.4650063876680885), (3.6381856931681176,2.4650063876680885), (3.6381856931681176,2.9650063876680885), (3.3381856931681178,2.9650063876680885)]
[(4.176931487754255,0.10273608069913792), (4.676931487754255,0.10273608069913792), (4.676931487754255,0.4027360806991379), (4.176931487754255,0.4027360806991379)]
[(5.056207486876328,2.4503307829733694), (5.356207486876328,2.4503307829733694), (5.356207486876328,2.9503307829733694), (5.056207486876328,2.9503307829733694)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.2699472,y=0.06508329,w=0.20000005,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.06508329,w=0.6142312,h=2.601608]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.029881071,w=2.4481509,h=2.6368103]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.029881071,w=2.4481509,h=2.661614]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.029881071,w=4.5938616,h=2.661614]  java.awt.geom.Rectangle2D$Float[x=0.855716,y=0.029881071,w=4.5938616,h=2.661614]  
t: java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=0.70000005,h=0.45207775]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=0.7732886,h=3.0908623]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=2.379958,h=3.0908623]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=3.6587536,h=3.0908623]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=4.6974993,h=3.0908623]  java.awt.geom.Rectangle2D$Float[x=0.0794321,y=0.0,w=5.3767753,h=3.0908623]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9465181, 1.4718024] with IG = 37.780952
Iter num: 2
Used frontier: Point2D.Float[1.0680944, 0.6800902] with IG = 44.94424
Iter num: 3
Added advice frontier Point2D.Float[0.36458653, 0.44151798]
Added advice frontier Point2D.Float[0.32725984, 0.61082023]
Added advice frontier Point2D.Float[1.4254768, 0.23128925]
Used Advice frontier: Point2D.Float[1.4254768, 0.23128925] with IG = 174.30374
Iter num: 4
Used Advice frontier: Point2D.Float[0.36458653, 0.44151798] with IG = 92.45875
Iter num: 5
Used Advice frontier: Point2D.Float[0.32725984, 0.61082023] with IG = 576.807
Iter num: 6
Added advice frontier Point2D.Float[0.7740284, 2.4383366]
Added advice frontier Point2D.Float[0.71104765, 2.390812]
Used Advice frontier: Point2D.Float[0.71104765, 2.390812] with IG = 47.49964
Iter num: 7
Added advice frontier Point2D.Float[1.0229028, 2.6388035]
Added advice frontier Point2D.Float[0.87869895, 2.953237]
Added advice frontier Point2D.Float[0.83975416, 2.6349542]
Used Advice frontier: Point2D.Float[0.7740284, 2.4383366] with IG = 1267.4307
Iter num: 8
Used Advice frontier: Point2D.Float[0.83975416, 2.6349542] with IG = 482.36423
Iter num: 9
Used Advice frontier: Point2D.Float[1.0229028, 2.6388035] with IG = 545.884
Iter num: 10
Used Advice frontier: Point2D.Float[0.87869895, 2.953237] with IG = 289.08105
Iter num: 11
Used frontier: Point2D.Float[1.7893627, 1.5270909] with IG = 12.202684
Iter num: 12
Used frontier: Point2D.Float[2.5365832, 1.1798462] with IG = 27.851181
Iter num: 13
Added advice frontier Point2D.Float[3.206978, 0.8733273]
Added advice frontier Point2D.Float[2.9735985, 2.027337]
Added advice frontier Point2D.Float[3.0665898, 1.0240787]
Used Advice frontier: Point2D.Float[3.0665898, 1.0240787] with IG = 181.0209
Iter num: 14
Added advice frontier Point2D.Float[3.1065123, 0.10299546]
Added advice frontier Point2D.Float[3.765546, 0.38073277]
Used Advice frontier: Point2D.Float[3.206978, 0.8733273] with IG = 485.44348
Iter num: 15
Added advice frontier Point2D.Float[2.3815074, 0.58680433]
Added advice frontier Point2D.Float[2.4647474, 0.8804827]
Used Advice frontier: Point2D.Float[2.4647474, 0.8804827] with IG = 134.18478
Iter num: 16
Used Advice frontier: Point2D.Float[2.3815074, 0.58680433] with IG = 327.60333
Iter num: 17
Used Advice frontier: Point2D.Float[3.1065123, 0.10299546] with IG = 114.52585
Iter num: 18
Used Advice frontier: Point2D.Float[3.765546, 0.38073277] with IG = 139.82751
Iter num: 19
Used Advice frontier: Point2D.Float[2.9735985, 2.027337] with IG = 51.77335
Iter num: 20
Added advice frontier Point2D.Float[3.2720206, 2.7093127]
Added advice frontier Point2D.Float[2.8592887, 2.5614786]
Used Advice frontier: Point2D.Float[3.2720206, 2.7093127] with IG = 134.33455
Iter num: 21
Used Advice frontier: Point2D.Float[2.8592887, 2.5614786] with IG = 228.09744
Iter num: 22
Added advice frontier Point2D.Float[2.2472513, 2.6259215]
Added advice frontier Point2D.Float[2.2114778, 2.8938653]
Used Advice frontier: Point2D.Float[2.2472513, 2.6259215] with IG = 117.52793
Iter num: 23
Used Advice frontier: Point2D.Float[2.2114778, 2.8938653] with IG = 369.93
Iter num: 24
Used frontier: Point2D.Float[3.8291452, 1.536988] with IG = 18.672283
Iter num: 25
Used frontier: Point2D.Float[4.7614083, 1.4412045] with IG = 18.27725
Iter num: 26
Added advice frontier Point2D.Float[5.1296515, 2.143333]
Added advice frontier Point2D.Float[5.02882, 0.910706]
Added advice frontier Point2D.Float[5.1657705, 1.679628]
Added advice frontier Point2D.Float[5.108237, 1.2756913]
Used Advice frontier: Point2D.Float[5.108237, 1.2756913] with IG = 260.215
Iter num: 27
Used Advice frontier: Point2D.Float[5.02882, 0.910706] with IG = 267.71936
Iter num: 28
Added advice frontier Point2D.Float[4.764641, 0.08337555]
Added advice frontier Point2D.Float[4.7974114, 0.08448427]
Added advice frontier Point2D.Float[5.2765317, 0.24276862]
Added advice frontier Point2D.Float[5.309217, 0.19107744]
Used Advice frontier: Point2D.Float[5.2765317, 0.24276862] with IG = 129.88887
Iter num: 29
Used Advice frontier: Point2D.Float[5.309217, 0.19107744] with IG = 1635.1082
Iter num: 30
Used Advice frontier: Point2D.Float[4.7974114, 0.08448427] with IG = 142.39505
Iter num: 31
Used Advice frontier: Point2D.Float[4.764641, 0.08337555] with IG = 3049.7676
Iter num: 32
Used Advice frontier: Point2D.Float[5.1657705, 1.679628] with IG = 60.60517
Iter num: 33
Added advice frontier Point2D.Float[5.077763, 2.3936484]
Used Advice frontier: Point2D.Float[5.1296515, 2.143333] with IG = 214.79984
Iter num: 34
Used Advice frontier: Point2D.Float[5.077763, 2.3936484] with IG = 391.1798
Iter num: 35
Added advice frontier Point2D.Float[4.9501877, 2.6634076]
Added advice frontier Point2D.Float[4.8684344, 2.8485048]
Used Advice frontier: Point2D.Float[4.9501877, 2.6634076] with IG = 335.1151

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9465181231498718, 1.4718023538589478) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0680943727493286, 0.6800901889801025) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4254767894744873, 0.23128925263881683) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.47520843148231506, 0.4165511131286621) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3645865321159363, 0.44151797890663147) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3272598385810852, 0.6108202338218689) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.904430091381073, 1.016386866569519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8656712770462036, 1.917284607887268) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7110476493835449, 2.3908119201660156) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7740284204483032, 2.4383366107940674) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8397541642189026, 2.6349542140960693) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0229028463363647, 2.638803482055664) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8786989450454712, 2.9532370567321777) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.054704189300537, 2.365635395050049) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1999778747558594, 1.8899856805801392) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7893626689910889, 1.5270909070968628) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3124642372131348, 1.3123172521591187) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.536583185195923, 1.179846167564392) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.066589832305908, 1.0240787267684937) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2069780826568604, 0.8733273148536682) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8450376987457275, 0.8435598611831665) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.464747428894043, 0.8804826736450195) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.381507396697998, 0.5868043303489685) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7205729484558105, 0.39168816804885864) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1065123081207275, 0.10299546271562576) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.7655460834503174, 0.38073277473449707) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5962021350860596, 0.472709059715271) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2069780826568604, 0.8733273148536682) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1696290969848633, 1.2359650135040283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0731215476989746, 1.6769778728485107) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9735984802246094, 2.027337074279785) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2720205783843994, 2.709312677383423) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8592886924743652, 2.561478614807129) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4909393787384033, 2.3056886196136475) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.247251272201538, 2.6259214878082275) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.211477756500244, 2.8938653469085693) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4999513626098633, 2.6043169498443604) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.743971824645996, 2.2824690341949463) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9735984802246094, 2.027337074279785) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.4322168827056885, 1.752053141593933) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8291451930999756, 1.5369880199432373) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.673162460327148, 1.803823471069336) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.76140832901001, 1.44120454788208) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.108236789703369, 1.275691270828247) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.028820037841797, 0.9107059836387634) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.32789945602417, 0.49717026948928833) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.27653169631958, 0.24276861548423767) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.3092169761657715, 0.19107744097709656) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.076685428619385, 0.3770929276943207) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.7974114418029785, 0.0844842717051506) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.764640808105469, 0.08337555080652237) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.028820037841797, 0.9107059836387634) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.108236789703369, 1.275691270828247) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.165770530700684, 1.6796280145645142) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.142895221710205, 1.847861647605896) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1296515464782715, 2.1433329582214355) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,b,21]  [r5,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 35
Total sampled points = 19116
RRG size = 1751

Movement Length = 25.05282
Remaining path Length = 0.0
Total path Length = 25.05282

Advice samples: [14, 5, 4, 3, 3, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):7562.329889

Initialization time (in ms):630.643079
Sampling time (in ms):5538.079734
Advice time (in ms):9.593212
Path checking time (in ms):628.288372
Learning time (in ms):186.179973
Exploration time (in ms):0.0
Time taken other than these things (in ms):569.545519
Moving time (in ms):1409.2861



