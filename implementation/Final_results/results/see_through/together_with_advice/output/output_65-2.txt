Parameters values: 
Environment: results/environments/env65/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(0.30625089278162054,0.08105992361863325), (0.8062508927816205,0.08105992361863325), (0.8062508927816205,0.3810599236186332), (0.30625089278162054,0.3810599236186332)]
[(0.34756409308190833,2.4617846584390666), (0.6475640930819083,2.4617846584390666), (0.6475640930819083,2.9617846584390666), (0.34756409308190833,2.9617846584390666)]
[(3.4488708460433837,0.008881052295225424), (3.7488708460433835,0.008881052295225424), (3.7488708460433835,0.5088810522952254), (3.4488708460433837,0.5088810522952254)]
[(2.983546675069148,2.454758104649557), (3.283546675069148,2.454758104649557), (3.283546675069148,2.954758104649557), (2.983546675069148,2.954758104649557)]
[(5.325742055046789,0.03386050746043865), (5.825742055046789,0.03386050746043865), (5.825742055046789,0.33386050746043866), (5.325742055046789,0.33386050746043866)]
[(5.281398833374705,2.4814737383539365), (5.581398833374704,2.4814737383539365), (5.581398833374704,2.9814737383539365), (5.281398833374705,2.9814737383539365)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0029259,y=0.20896177,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.20896177,w=0.27702224,h=2.448612]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=2.2932663,h=2.6392937]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=2.2932663,h=2.6513338]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=3.696938,h=2.6513338]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=4.188627,h=2.6574256]  
t: java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=0.7,h=0.4810599]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=0.7,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=3.6426198,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=3.6426198,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=5.7194915,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=5.7194915,h=3.0814738]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9659562, 1.4602355] with IG = 36.91447
Iter num: 2
Used frontier: Point2D.Float[0.86280733, 0.5277447] with IG = 38.37223
Iter num: 3
Added advice frontier Point2D.Float[0.60187393, 0.40781125]
Added advice frontier Point2D.Float[0.50625616, 0.58507395]
Added advice frontier Point2D.Float[1.0075247, 0.26962543]
Added advice frontier Point2D.Float[0.97091836, 0.38775286]
Added advice frontier Point2D.Float[0.8771656, 0.24218512]
Used Advice frontier: Point2D.Float[0.97091836, 0.38775286] with IG = 565.3625
Iter num: 4
Used Advice frontier: Point2D.Float[1.0075247, 0.26962543] with IG = 808.60754
Iter num: 5
Used Advice frontier: Point2D.Float[0.8771656, 0.24218512] with IG = 750.66125
Iter num: 6
Added advice frontier Point2D.Float[0.7307701, 2.3920069]
Used Advice frontier: Point2D.Float[0.60187393, 0.40781125] with IG = 193.55113
Iter num: 7
Used Advice frontier: Point2D.Float[0.50625616, 0.58507395] with IG = 496.5068
Iter num: 8
Used Advice frontier: Point2D.Float[0.7307701, 2.3920069] with IG = 50.93899
Iter num: 9
Added advice frontier Point2D.Float[0.9956626, 2.5462182]
Used Advice frontier: Point2D.Float[0.9956626, 2.5462182] with IG = 326.25226
Iter num: 10
Used frontier: Point2D.Float[1.8116349, 2.7868938] with IG = 28.066317
Iter num: 11
Used frontier: Point2D.Float[1.8935031, 1.5000604] with IG = 11.6740885
Iter num: 12
Used frontier: Point2D.Float[2.7918034, 1.4261876] with IG = 23.098764
Iter num: 13
Added advice frontier Point2D.Float[2.9576163, 0.6580887]
Added advice frontier Point2D.Float[2.8398786, 2.1322443]
Used Advice frontier: Point2D.Float[2.9576163, 0.6580887] with IG = 126.278275
Iter num: 14
Added advice frontier Point2D.Float[3.7784142, 0.5272578]
Added advice frontier Point2D.Float[3.774319, 0.70045096]
Added advice frontier Point2D.Float[3.1367798, 0.080946945]
Used Advice frontier: Point2D.Float[3.1367798, 0.080946945] with IG = 151.26328
Iter num: 15
Used Advice frontier: Point2D.Float[3.7784142, 0.5272578] with IG = 103.44835
Iter num: 16
Added advice frontier Point2D.Float[2.9045353, 2.366746]
Used Advice frontier: Point2D.Float[3.774319, 0.70045096] with IG = 577.22864
Iter num: 17
Used Advice frontier: Point2D.Float[2.8398786, 2.1322443] with IG = 52.395405
Iter num: 18
Used Advice frontier: Point2D.Float[2.9045353, 2.366746] with IG = 411.09644
Iter num: 19
Added advice frontier Point2D.Float[2.747478, 2.4762812]
Added advice frontier Point2D.Float[2.8052113, 2.4353912]
Added advice frontier Point2D.Float[2.9764001, 2.761192]
Used Advice frontier: Point2D.Float[2.8052113, 2.4353912] with IG = 828.2465
Iter num: 20
Used Advice frontier: Point2D.Float[2.747478, 2.4762812] with IG = 1413.4895
Iter num: 21
Used Advice frontier: Point2D.Float[2.9764001, 2.761192] with IG = 273.60873
Iter num: 22
Used frontier: Point2D.Float[3.7914443, 2.5608535] with IG = 16.778109
Iter num: 23
Used frontier: Point2D.Float[3.6386437, 1.4915695] with IG = 13.269426
Iter num: 24
Used frontier: Point2D.Float[4.063739, 1.6319407] with IG = 49.14316
Iter num: 25
Used frontier: Point2D.Float[4.9274926, 1.7648784] with IG = 34.32793
Iter num: 26
Added advice frontier Point2D.Float[5.089009, 2.2561681]
Added advice frontier Point2D.Float[5.069451, 0.95579106]
Added advice frontier Point2D.Float[5.192049, 1.0925958]
Added advice frontier Point2D.Float[5.0311093, 2.5851734]
Added advice frontier Point2D.Float[5.1438828, 2.606869]
Added advice frontier Point2D.Float[5.2850823, 2.4561534]
Used Advice frontier: Point2D.Float[5.089009, 2.2561681] with IG = 176.13635
Iter num: 27
Used Advice frontier: Point2D.Float[5.2850823, 2.4561534] with IG = 357.05417
Iter num: 28
Used Advice frontier: Point2D.Float[5.1438828, 2.606869] with IG = 484.20322
Iter num: 29
Used Advice frontier: Point2D.Float[5.0311093, 2.5851734] with IG = 870.76624
Iter num: 30
Used Advice frontier: Point2D.Float[5.192049, 1.0925958] with IG = 63.949753
Iter num: 31
Added advice frontier Point2D.Float[5.4704294, 0.34616438]
Added advice frontier Point2D.Float[5.1554255, 0.3585522]
Used Advice frontier: Point2D.Float[5.069451, 0.95579106] with IG = 544.36444
Iter num: 32
Added advice frontier Point2D.Float[4.569865, 0.3356681]
Added advice frontier Point2D.Float[4.6236415, 0.4746247]
Used Advice frontier: Point2D.Float[4.6236415, 0.4746247] with IG = 151.37515

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9659562110900879, 1.4602354764938354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8628073334693909, 0.527744710445404) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9709183573722839, 0.38775286078453064) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0075247287750244, 0.2696254253387451) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8771656155586243, 0.24218511581420898) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.966921329498291, 0.36057668924331665) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6018739342689514, 0.4078112542629242) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5062561631202698, 0.5850739479064941) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5780527591705322, 0.6084322929382324) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8712283372879028, 1.0462305545806885) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8712932467460632, 1.7394981384277344) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7307701110839844, 2.3920068740844727) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9956626296043396, 2.546218156814575) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3202250003814697, 2.686378240585327) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.81163489818573, 2.786893844604492) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7167549133300781, 2.5962026119232178) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2740185260772705, 2.1817843914031982) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2127705812454224, 2.170907974243164) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1779249906539917, 1.908828616142273) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.629730463027954, 1.6562663316726685) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8935030698776245, 1.5000604391098022) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4575698375701904, 1.3049031496047974) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7918033599853516, 1.4261876344680786) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7799391746520996, 1.330824375152588) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9576163291931152, 0.6580886840820312) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1861276626586914, 0.37074628472328186) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.13677978515625, 0.08094694465398788) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.1861276626586914, 0.37074628472328186) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.544532060623169, 0.6027372479438782) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.778414249420166, 0.5272578001022339) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.7743189334869385, 0.7004509568214417) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2827298641204834, 0.8697287440299988) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0486114025115967, 1.0777103900909424) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.00228214263916, 1.3881115913391113) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8944201469421387, 1.8838236331939697) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.839878559112549, 2.132244348526001) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9045352935791016, 2.366745948791504) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.805211305618286, 2.4353911876678467) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7474780082702637, 2.47628116607666) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.976400136947632, 2.7611920833587646) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.886214256286621, 2.6704416275024414) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0046637058258057, 2.2998664379119873) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.427640199661255, 2.332324266433716) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.7914443016052246, 2.5608534812927246) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5382001399993896, 2.4277725219726562) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.147576093673706, 2.217648983001709) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.195990562438965, 1.9378517866134644) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3571784496307373, 1.8645977973937988) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.638643741607666, 1.4915695190429688) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.063738822937012, 1.6319407224655151) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.927492618560791, 1.7648783922195435) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.063326358795166, 1.849016547203064) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.089008808135986, 2.2561681270599365) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.2850823402404785, 2.456153392791748) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.143882751464844, 2.6068689823150635) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.03110933303833, 2.5851733684539795) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.96952486038208, 2.377018451690674) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.993700981140137, 2.0509068965911865) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9657769203186035, 1.6934970617294312) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.974956512451172, 1.5025465488433838) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.12937593460083, 1.1495633125305176) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.192049026489258, 1.0925958156585693) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.069450855255127, 0.9557910561561584) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,t,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 32
Total sampled points = 18449
RRG size = 1601

Movement Length = 22.233532
Remaining path Length = 0.14899941
Total path Length = 22.382532

Advice samples: [11, 4, 3, 4, 1, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):6442.341085

Initialization time (in ms):564.69319
Sampling time (in ms):4760.60721
Advice time (in ms):7.653992
Path checking time (in ms):574.737887
Learning time (in ms):183.200304
Exploration time (in ms):0.0
Time taken other than these things (in ms):351.448502
Moving time (in ms):939.5241



