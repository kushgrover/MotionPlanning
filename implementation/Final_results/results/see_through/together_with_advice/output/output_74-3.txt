Parameters values: 
Environment: results/environments/env74/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]

See through Obstacles: 
[(1.2789792864532479,0.029548308544782218), (1.578979286453248,0.029548308544782218), (1.578979286453248,0.5295483085447822), (1.2789792864532479,0.5295483085447822)]
[(0.9491040714414313,2.4697950946231595), (1.2491040714414312,2.4697950946231595), (1.2491040714414312,2.9697950946231595), (0.9491040714414313,2.9697950946231595)]
[(2.5232895007729064,0.18011129466273954), (3.0232895007729064,0.18011129466273954), (3.0232895007729064,0.4801112946627395), (2.5232895007729064,0.4801112946627395)]
[(3.0597021026037963,2.4835468194611114), (3.5597021026037963,2.4835468194611114), (3.5597021026037963,2.7835468194611113), (3.0597021026037963,2.7835468194611113)]
[(5.321667878849414,0.20724884172772537), (5.821667878849414,0.20724884172772537), (5.821667878849414,0.5072488417277253), (5.321667878849414,0.5072488417277253)]
[(5.169240727108434,2.5509027029709936), (5.669240727108434,2.5509027029709936), (5.669240727108434,2.8509027029709935), (5.169240727108434,2.8509027029709935)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.4929771,y=0.015049594,w=0.20000002,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=0.4786633,h=2.6639643]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=3.381956,h=2.6639643]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.015049594,w=3.381956,h=2.80679]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.009827773,w=4.169133,h=2.812012]  java.awt.geom.Rectangle2D$Float[x=0.21431383,y=0.009827773,w=4.5778456,h=2.8811154]  
t: java.awt.geom.Rectangle2D$Float[x=1.1789793,y=0.0,w=0.5,h=0.6295483]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=0.82987523,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=2.2741857,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=2.810598,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=5.072564,h=3.0697951]  java.awt.geom.Rectangle2D$Float[x=0.84910405,y=0.0,w=5.072564,h=3.0697951]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.96238476, 1.4090898] with IG = 36.90193
Iter num: 2
Used frontier: Point2D.Float[1.0994283, 0.4965618] with IG = 43.348156
Iter num: 3
Added advice frontier Point2D.Float[1.6037793, 0.51828873]
Added advice frontier Point2D.Float[1.4808685, 0.6733118]
Added advice frontier Point2D.Float[0.5591685, 0.07218206]
Used Advice frontier: Point2D.Float[1.4808685, 0.6733118] with IG = 237.86801
Iter num: 4
Added advice frontier Point2D.Float[0.99010694, 2.3896465]
Used Advice frontier: Point2D.Float[1.6037793, 0.51828873] with IG = 505.46814
Iter num: 5
Used Advice frontier: Point2D.Float[0.5591685, 0.07218206] with IG = 79.409515
Iter num: 6
Used Advice frontier: Point2D.Float[0.99010694, 2.3896465] with IG = 42.248363
Iter num: 7
Added advice frontier Point2D.Float[0.27230853, 2.676303]
Added advice frontier Point2D.Float[0.052240454, 2.601552]
Used Advice frontier: Point2D.Float[0.27230853, 2.676303] with IG = 129.37936
Iter num: 8
Used Advice frontier: Point2D.Float[0.052240454, 2.601552] with IG = 430.26114
Iter num: 9
Used frontier: Point2D.Float[1.8982146, 2.6585448] with IG = 12.55775
Iter num: 10
Used frontier: Point2D.Float[1.8608642, 1.490786] with IG = 12.037775
Iter num: 11
Used frontier: Point2D.Float[2.4342172, 1.75807] with IG = 37.93906
Iter num: 12
Added advice frontier Point2D.Float[2.8616092, 0.9372681]
Added advice frontier Point2D.Float[3.1991332, 2.0923755]
Added advice frontier Point2D.Float[2.9147666, 1.9558675]
Used Advice frontier: Point2D.Float[2.9147666, 1.9558675] with IG = 192.43172
Iter num: 13
Added advice frontier Point2D.Float[3.306181, 2.3880444]
Added advice frontier Point2D.Float[3.5600338, 2.187981]
Added advice frontier Point2D.Float[2.5581229, 0.4936563]
Used Advice frontier: Point2D.Float[3.1991332, 2.0923755] with IG = 317.02322
Iter num: 14
Used Advice frontier: Point2D.Float[3.306181, 2.3880444] with IG = 318.0148
Iter num: 15
Used Advice frontier: Point2D.Float[3.5600338, 2.187981] with IG = 309.3935
Iter num: 16
Added advice frontier Point2D.Float[2.2899625, 2.6727602]
Added advice frontier Point2D.Float[2.5269756, 2.6434162]
Used Advice frontier: Point2D.Float[2.5269756, 2.6434162] with IG = 85.24034
Iter num: 17
Used Advice frontier: Point2D.Float[2.2899625, 2.6727602] with IG = 418.72064
Iter num: 18
Used Advice frontier: Point2D.Float[2.8616092, 0.9372681] with IG = 50.636837
Iter num: 19
Used Advice frontier: Point2D.Float[2.5581229, 0.4936563] with IG = 186.05
Iter num: 20
Added advice frontier Point2D.Float[3.5059676, 0.2554498]
Used Advice frontier: Point2D.Float[3.5059676, 0.2554498] with IG = 73.05238
Iter num: 21
Used frontier: Point2D.Float[3.639053, 1.4655436] with IG = 16.644375
Iter num: 22
Used frontier: Point2D.Float[4.4134774, 1.1740657] with IG = 26.425787
Iter num: 23
Used frontier: Point2D.Float[5.1818786, 1.5382283] with IG = 26.260239
Iter num: 24
Added advice frontier Point2D.Float[5.049175, 0.8833947]
Added advice frontier Point2D.Float[5.0731444, 1.1028988]
Added advice frontier Point2D.Float[4.75766, 2.3408594]
Used Advice frontier: Point2D.Float[5.0731444, 1.1028988] with IG = 222.86432
Iter num: 25
Added advice frontier Point2D.Float[5.3850937, 0.52889663]
Used Advice frontier: Point2D.Float[5.049175, 0.8833947] with IG = 452.88016
Iter num: 26
Used Advice frontier: Point2D.Float[5.3850937, 0.52889663] with IG = 204.76057
Iter num: 27
Added advice frontier Point2D.Float[5.1069174, 2.4782426]
Used Advice frontier: Point2D.Float[4.75766, 2.3408594] with IG = 48.7233
Iter num: 28
Used Advice frontier: Point2D.Float[5.1069174, 2.4782426] with IG = 266.4489
Iter num: 29
Added advice frontier Point2D.Float[4.7610307, 2.884108]
Used Advice frontier: Point2D.Float[4.7610307, 2.884108] with IG = 149.81273
Iter num: 30
Used frontier: Point2D.Float[5.059983, 2.8406167] with IG = 13.240689
Iter num: 31
Used frontier: Point2D.Float[4.447602, 0.5227854] with IG = 9.808887
Iter num: 32
Added advice frontier Point2D.Float[4.3188033, 0.17335726]
Added advice frontier Point2D.Float[4.1526084, 0.14211771]
Used Advice frontier: Point2D.Float[4.3188033, 0.17335726] with IG = 268.52136

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9623847603797913, 1.4090898036956787) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0994282960891724, 0.49656179547309875) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4808684587478638, 0.6733118295669556) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6037793159484863, 0.5182887315750122) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.359226942062378, 0.6445639729499817) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6837446093559265, 0.14996851980686188) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5591685175895691, 0.0721820592880249) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6829273700714111, 0.43139684200286865) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7875004410743713, 0.8507142066955566) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9133980870246887, 1.466093897819519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9901069402694702, 2.389646530151367) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.2723085284233093, 2.676302909851074) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.05224045366048813, 2.6015520095825195) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.23242361843585968, 2.5321269035339355) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9901069402694702, 2.389646530151367) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.4855657815933228, 2.5325284004211426) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.89821457862854, 2.6585447788238525) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5676718950271606, 2.3832054138183594) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.207930564880371, 2.2053515911102295) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1843419075012207, 1.9391404390335083) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6412956714630127, 1.6242152452468872) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8608641624450684, 1.4907859563827515) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4342172145843506, 1.7580699920654297) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.914766550064087, 1.9558675289154053) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1991331577301025, 2.0923755168914795) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.306180953979492, 2.3880443572998047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.5600337982177734, 2.187980890274048) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.306180953979492, 2.3880443572998047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.788994073867798, 2.4430742263793945) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.526975631713867, 2.643416166305542) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.2899625301361084, 2.672760248184204) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.5087335109710693, 2.447913408279419) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6885693073272705, 2.2633955478668213) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.914766550064087, 1.9558675289154053) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8566155433654785, 1.410396933555603) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8616092205047607, 0.937268078327179) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5581228733062744, 0.49365630745887756) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8896501064300537, 0.6899619102478027) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.044482707977295, 0.7658035159111023) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.194822311401367, 0.29102635383605957) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.505967617034912, 0.2554498016834259) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.194822311401367, 0.29102635383605957) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.044482707977295, 0.7658035159111023) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9241867065429688, 0.9841634035110474) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3034558296203613, 1.2519925832748413) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6390531063079834, 1.4655436277389526) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9718761444091797, 1.291556477546692) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.413477420806885, 1.1740657091140747) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.427267074584961, 1.496674656867981) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.056333541870117, 1.6923569440841675) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.181878566741943, 1.5382282733917236) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.073144435882568, 1.1028988361358643) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.049174785614014, 0.883394718170166) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.385093688964844, 0.5288966298103333) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.049174785614014, 0.883394718170166) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.922255039215088, 1.2886903285980225) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.056333541870117, 1.6923569440841675) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.757659912109375, 2.3408594131469727) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.106917381286621, 2.4782426357269287) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.059982776641846, 2.8406167030334473) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.761030673980713, 2.884108066558838) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.059982776641846, 2.8406167030334473) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.106917381286621, 2.4782426357269287) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.757659912109375, 2.3408594131469727) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.056333541870117, 1.6923569440841675) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.110175132751465, 1.6538649797439575) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.098048210144043, 1.2371957302093506) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.073144435882568, 1.1028988361358643) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.909355640411377, 0.8303513526916504) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.599753379821777, 0.5688710808753967) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [r2,b,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 32
Total sampled points = 17877
RRG size = 1603

Movement Length = 30.079817
Remaining path Length = 0.0
Total path Length = 30.079817

Advice samples: [13, 6, 2, 1, 0, 0, 0, 0, 0, 0] (22)

Total time taken (in ms):5735.301345

Initialization time (in ms):585.13119
Sampling time (in ms):4164.401424
Advice time (in ms):8.09167
Path checking time (in ms):461.628911
Learning time (in ms):153.300378
Exploration time (in ms):0.0
Time taken other than these things (in ms):362.747772
Moving time (in ms):469.76205



