Parameters values: 
Environment: results/environments/env64/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.0226945417747266,0.007225558078483602), (1.3226945417747267,0.007225558078483602), (1.3226945417747267,0.5072255580784836), (1.0226945417747266,0.5072255580784836)]
[(0.25076855567809064,2.4917365820351627), (0.5507685556780906,2.4917365820351627), (0.5507685556780906,2.9917365820351627), (0.25076855567809064,2.9917365820351627)]
[(2.0912914409968737,0.2347902543175968), (2.5912914409968737,0.2347902543175968), (2.5912914409968737,0.5347902543175969), (2.0912914409968737,0.5347902543175969)]
[(2.437332178629169,2.6462906137155895), (2.937332178629169,2.6462906137155895), (2.937332178629169,2.9462906137155893), (2.437332178629169,2.9462906137155893)]
[(4.434419540713758,0.10954436955121247), (4.934419540713758,0.10954436955121247), (4.934419540713758,0.40954436955121243), (4.434419540713758,0.40954436955121243)]
[(4.153096590170196,2.4611472024871395), (4.453096590170196,2.4611472024871395), (4.453096590170196,2.9611472024871395), (4.153096590170196,2.9611472024871395)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=0.51167583,h=2.6485834]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=2.3117003,h=2.6485834]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=2.3117003,h=2.779823]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=4.916024,h=2.779823]  java.awt.geom.Rectangle2D$Float[x=0.6756047,y=0.007638326,w=5.147233,h=2.779823]  
t: java.awt.geom.Rectangle2D$Float[x=0.92269456,y=0.0,w=0.5,h=0.60722554]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=1.271926,h=3.0917366]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=2.5405228,h=3.0917366]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=2.8865638,h=3.0917366]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=4.883651,h=3.0917366]  java.awt.geom.Rectangle2D$Float[x=0.15076855,y=0.0,w=4.883651,h=3.0917366]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9423834, 1.520693] with IG = 37.975998
Iter num: 2
Used frontier: Point2D.Float[0.9715907, 2.4805014] with IG = 37.490128
Iter num: 3
Added advice frontier Point2D.Float[0.9661722, 0.58132696]
Added advice frontier Point2D.Float[0.6092226, 2.980875]
Added advice frontier Point2D.Float[1.0959854, 2.6462486]
Added advice frontier Point2D.Float[0.9342323, 2.7006495]
Added advice frontier Point2D.Float[0.9176117, 0.6054226]
Used Advice frontier: Point2D.Float[1.0959854, 2.6462486] with IG = 482.54495
Iter num: 4
Used Advice frontier: Point2D.Float[0.9342323, 2.7006495] with IG = 585.9735
Iter num: 5
Used Advice frontier: Point2D.Float[0.6092226, 2.980875] with IG = 233.0264
Iter num: 6
Used Advice frontier: Point2D.Float[0.9176117, 0.6054226] with IG = 41.638916
Iter num: 7
Added advice frontier Point2D.Float[0.7363396, 0.17032471]
Added advice frontier Point2D.Float[0.44865853, 0.27646917]
Added advice frontier Point2D.Float[0.93327713, 0.10875947]
Used Advice frontier: Point2D.Float[0.9661722, 0.58132696] with IG = 1844.6783
Iter num: 8
Used Advice frontier: Point2D.Float[0.7363396, 0.17032471] with IG = 212.35976
Iter num: 9
Used Advice frontier: Point2D.Float[0.93327713, 0.10875947] with IG = 484.64572
Iter num: 10
Used Advice frontier: Point2D.Float[0.44865853, 0.27646917] with IG = 195.00116
Iter num: 11
Used frontier: Point2D.Float[1.6918927, 0.49179754] with IG = 20.280329
Iter num: 12
Used frontier: Point2D.Float[1.8279545, 1.4355135] with IG = 13.719342
Iter num: 13
Used frontier: Point2D.Float[2.63294, 1.4157667] with IG = 28.506987
Iter num: 14
Added advice frontier Point2D.Float[3.1485999, 2.1169283]
Added advice frontier Point2D.Float[3.1097925, 1.7360517]
Added advice frontier Point2D.Float[3.110059, 0.7638475]
Added advice frontier Point2D.Float[3.0178835, 1.041702]
Added advice frontier Point2D.Float[2.5959072, 0.49499762]
Used Advice frontier: Point2D.Float[3.0178835, 1.041702] with IG = 186.30475
Iter num: 15
Added advice frontier Point2D.Float[2.8925457, 0.22648165]
Added advice frontier Point2D.Float[2.685785, 0.21646842]
Added advice frontier Point2D.Float[2.814727, 0.32811847]
Used Advice frontier: Point2D.Float[3.110059, 0.7638475] with IG = 341.59454
Iter num: 16
Used Advice frontier: Point2D.Float[2.814727, 0.32811847] with IG = 189.97516
Iter num: 17
Used Advice frontier: Point2D.Float[2.8925457, 0.22648165] with IG = 781.2075
Iter num: 18
Used Advice frontier: Point2D.Float[2.685785, 0.21646842] with IG = 483.08487
Iter num: 19
Used Advice frontier: Point2D.Float[2.5959072, 0.49499762] with IG = 341.68015
Iter num: 20
Used Advice frontier: Point2D.Float[3.1097925, 1.7360517] with IG = 73.014946
Iter num: 21
Added advice frontier Point2D.Float[2.8494358, 2.5664074]
Added advice frontier Point2D.Float[3.12445, 2.6244102]
Used Advice frontier: Point2D.Float[3.1485999, 2.1169283] with IG = 261.19986
Iter num: 22
Used Advice frontier: Point2D.Float[3.12445, 2.6244102] with IG = 191.59514
Iter num: 23
Used Advice frontier: Point2D.Float[2.8494358, 2.5664074] with IG = 355.79053
Iter num: 24
Used frontier: Point2D.Float[2.4197855, 2.4434347] with IG = 24.61388
Iter num: 25
Used frontier: Point2D.Float[3.8850293, 1.4751731] with IG = 15.326418
Iter num: 26
Added advice frontier Point2D.Float[2.1987135, 2.6454005]
Added advice frontier Point2D.Float[2.337663, 2.848046]
Added advice frontier Point2D.Float[2.0939002, 2.889153]
Used Advice frontier: Point2D.Float[2.1987135, 2.6454005] with IG = 48.52285
Iter num: 27
Used Advice frontier: Point2D.Float[2.337663, 2.848046] with IG = 406.98804
Iter num: 28
Used Advice frontier: Point2D.Float[2.0939002, 2.889153] with IG = 404.52344
Iter num: 29
Used frontier: Point2D.Float[4.8477063, 1.5374924] with IG = 7.1851826
Iter num: 30
Added advice frontier Point2D.Float[5.1837583, 2.4135776]
Added advice frontier Point2D.Float[5.254564, 0.7585796]
Used Advice frontier: Point2D.Float[5.1837583, 2.4135776] with IG = 101.18155
Iter num: 31
Added advice frontier Point2D.Float[5.6705346, 2.565939]
Added advice frontier Point2D.Float[5.420482, 2.755715]
Used Advice frontier: Point2D.Float[5.420482, 2.755715] with IG = 233.25916
Iter num: 32
Added advice frontier Point2D.Float[4.5433497, 2.6569705]
Used Advice frontier: Point2D.Float[5.6705346, 2.565939] with IG = 318.55997
Iter num: 33
Used Advice frontier: Point2D.Float[4.5433497, 2.6569705] with IG = 84.283424
Iter num: 34
Used frontier: Point2D.Float[4.796001, 2.5669801] with IG = 37.285694
Iter num: 35
Used Advice frontier: Point2D.Float[5.254564, 0.7585796] with IG = 42.23838
Iter num: 36
Added advice frontier Point2D.Float[5.028487, 0.07957478]
Added advice frontier Point2D.Float[5.321798, 0.28491938]
Used Advice frontier: Point2D.Float[5.028487, 0.07957478] with IG = 117.00516
Iter num: 37
Added advice frontier Point2D.Float[5.4598885, 0.02641]
Used Advice frontier: Point2D.Float[5.321798, 0.28491938] with IG = 279.29306

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9423834085464478, 1.5206929445266724) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9715906977653503, 2.480501413345337) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0959854125976562, 2.6462485790252686) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9342322945594788, 2.7006494998931885) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6092225909233093, 2.980875015258789) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8148592710494995, 2.0525448322296143) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8751303553581238, 1.2151225805282593) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9176117181777954, 0.6054226160049438) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9661722183227539, 0.581326961517334) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7363396286964417, 0.17032471299171448) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9332771301269531, 0.10875947028398514) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4486585259437561, 0.2764691710472107) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5961861610412598, 0.3500470221042633) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1585801839828491, 0.6110358834266663) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6918927431106567, 0.491797536611557) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.169936180114746, 0.9032155871391296) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2109767198562622, 1.1633416414260864) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2355386018753052, 1.1657507419586182) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8279545307159424, 1.4355134963989258) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2098002433776855, 1.400839924812317) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6329400539398193, 1.415766716003418) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.017883539199829, 1.0417020320892334) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1100590229034424, 0.7638474702835083) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8147270679473877, 0.3281184732913971) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.892545700073242, 0.22648164629936218) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.6857850551605225, 0.2164684236049652) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.595907211303711, 0.49499762058258057) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.872572183609009, 0.8954203724861145) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8944764137268066, 1.128952145576477) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0738329887390137, 1.5324058532714844) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.109792470932007, 1.7360516786575317) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.148599863052368, 2.1169283390045166) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0926554203033447, 2.2291133403778076) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1244499683380127, 2.6244101524353027) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.849435806274414, 2.5664074420928955) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.419785499572754, 2.443434715270996) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5463216304779053, 2.342867851257324) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8387515544891357, 2.092611312866211) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2327499389648438, 1.8741666078567505) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5475289821624756, 1.6823647022247314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8850293159484863, 1.4751731157302856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5475289821624756, 1.6823647022247314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2327499389648438, 1.8741666078567505) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8387515544891357, 2.092611312866211) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5463216304779053, 2.342867851257324) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4300026893615723, 2.4407927989959717) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.198713541030884, 2.6454005241394043) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.337662935256958, 2.848046064376831) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.093900203704834, 2.889153003692627) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.292170524597168, 2.6417832374572754) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.5463216304779053, 2.342867851257324) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8387515544891357, 2.092611312866211) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.127246856689453, 1.9188146591186523) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.392188787460327, 1.853951096534729) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5400619506835938, 1.833274006843567) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9519097805023193, 1.7970507144927979) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.184403419494629, 1.7418935298919678) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.576777458190918, 1.5982681512832642) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.847706317901611, 1.5374923944473267) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.790500164031982, 1.716997742652893) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.18375825881958, 2.4135775566101074) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.261551856994629, 2.453941822052002) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.420482158660889, 2.7557148933410645) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.670534610748291, 2.565938949584961) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.506168365478516, 2.6622397899627686) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.211506366729736, 2.6625821590423584) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.901603698730469, 2.766214609146118) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.543349742889404, 2.656970500946045) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.796000957489014, 2.5669801235198975) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1225810050964355, 2.4184579849243164) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.943497180938721, 2.2105672359466553) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.874773025512695, 1.9271514415740967) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.904597282409668, 1.779770016670227) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9629950523376465, 1.4656686782836914) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.209253311157227, 1.2155437469482422) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.021195411682129, 1.0244251489639282) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.254563808441162, 0.7585796117782593) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.972531795501709, 0.6147148609161377) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,b,22]  [r1,t,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,35]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 19921
RRG size = 1851

Movement Length = 29.265753
Remaining path Length = 0.2930804
Total path Length = 29.558834

Advice samples: [12, 7, 5, 3, 0, 1, 0, 0, 0, 0] (28)

Total time taken (in ms):8171.872386

Initialization time (in ms):491.311159
Sampling time (in ms):6451.487946
Advice time (in ms):6.907676
Path checking time (in ms):532.57209
Learning time (in ms):157.493308
Exploration time (in ms):0.0
Time taken other than these things (in ms):532.100207
Moving time (in ms):2080.3748



