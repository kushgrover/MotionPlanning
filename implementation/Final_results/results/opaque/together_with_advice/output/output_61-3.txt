Parameters values: 
Environment: results/environments/env61/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.04885801916351862,0.0388362586637023), (0.3488580191635186,0.0388362586637023), (0.3488580191635186,0.5388362586637023), (0.04885801916351862,0.5388362586637023)]
[(0.6272211595768165,2.6762585983856892), (1.1272211595768165,2.6762585983856892), (1.1272211595768165,2.976258598385689), (0.6272211595768165,2.976258598385689)]
[(2.644150724803264,0.004473618100637132), (2.9441507248032637,0.004473618100637132), (2.9441507248032637,0.5044736181006372), (2.644150724803264,0.5044736181006372)]
[(3.316052639179889,2.480712221752555), (3.816052639179889,2.480712221752555), (3.816052639179889,2.780712221752555), (3.316052639179889,2.780712221752555)]
[(5.456251721156095,0.1544149846809605), (5.956251721156095,0.1544149846809605), (5.956251721156095,0.4544149846809605), (5.456251721156095,0.4544149846809605)]
[(4.502983845870464,2.4555831069357414), (5.002983845870464,2.4555831069357414), (5.002983845870464,2.7555831069357413), (4.502983845870464,2.7555831069357413)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.91023016,y=0.032808356,w=0.20000005,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.15118127,y=0.032808356,w=0.9590489,h=2.8013718]  java.awt.geom.Rectangle2D$Float[x=0.15118127,y=0.010079602,w=3.0787575,h=2.8241005]  java.awt.geom.Rectangle2D$Float[x=0.15118127,y=0.010079602,w=3.0787575,h=2.8241005]  java.awt.geom.Rectangle2D$Float[x=0.15118127,y=0.010079602,w=4.5549417,h=2.8241005]  java.awt.geom.Rectangle2D$Float[x=0.15118127,y=0.010079602,w=5.2806034,h=2.8247607]  
t: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=0.44885802,h=0.63883626]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.2272211,h=3.0762587]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.0441508,h=3.0762587]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.9160526,h=3.0762587]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=6.0562515,h=3.0762587]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=6.0562515,h=3.0762587]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.8234228, 1.4765542] with IG = 44.21095
Iter num: 2
Used frontier: Point2D.Float[1.1787521, 0.6392058] with IG = 35.17947
Iter num: 3
Added advice frontier Point2D.Float[1.061504, 0.18512733]
Added advice frontier Point2D.Float[0.42264074, 0.636198]
Added advice frontier Point2D.Float[0.32131684, 0.72000164]
Used Advice frontier: Point2D.Float[1.061504, 0.18512733] with IG = 213.23251
Iter num: 4
Used Advice frontier: Point2D.Float[0.42264074, 0.636198] with IG = 127.86814
Iter num: 5
Used Advice frontier: Point2D.Float[0.32131684, 0.72000164] with IG = 760.51483
Iter num: 6
Used frontier: Point2D.Float[1.0749457, 2.3985543] with IG = 14.161364
Iter num: 7
Added advice frontier Point2D.Float[0.9042664, 2.6344624]
Added advice frontier Point2D.Float[0.25771067, 2.729043]
Added advice frontier Point2D.Float[0.17186263, 2.5881314]
Used Advice frontier: Point2D.Float[0.9042664, 2.6344624] with IG = 343.43378
Iter num: 8
Used Advice frontier: Point2D.Float[0.25771067, 2.729043] with IG = 153.03694
Iter num: 9
Used Advice frontier: Point2D.Float[0.17186263, 2.5881314] with IG = 606.0499
Iter num: 10
Used frontier: Point2D.Float[1.7735595, 1.4639324] with IG = 11.241601
Iter num: 11
Used frontier: Point2D.Float[2.7057526, 1.5202523] with IG = 24.62809
Iter num: 12
Added advice frontier Point2D.Float[3.0902398, 0.99274]
Added advice frontier Point2D.Float[3.0502982, 1.0060726]
Added advice frontier Point2D.Float[3.3438385, 2.218975]
Used Advice frontier: Point2D.Float[3.0502982, 1.0060726] with IG = 161.56534
Iter num: 13
Added advice frontier Point2D.Float[3.0619025, 0.14749056]
Added advice frontier Point2D.Float[2.9653425, 0.09811069]
Added advice frontier Point2D.Float[3.1685212, 0.37787157]
Used Advice frontier: Point2D.Float[3.0902398, 0.99274] with IG = 2374.843
Iter num: 14
Used Advice frontier: Point2D.Float[3.1685212, 0.37787157] with IG = 161.31628
Iter num: 15
Used Advice frontier: Point2D.Float[3.0619025, 0.14749056] with IG = 393.92386
Iter num: 16
Used Advice frontier: Point2D.Float[2.9653425, 0.09811069] with IG = 922.0525
Iter num: 17
Used Advice frontier: Point2D.Float[3.3438385, 2.218975] with IG = 44.393543
Iter num: 18
Added advice frontier Point2D.Float[3.676949, 2.7886949]
Added advice frontier Point2D.Float[2.9340825, 2.7145593]
Added advice frontier Point2D.Float[2.918714, 2.5137348]
Used Advice frontier: Point2D.Float[2.918714, 2.5137348] with IG = 188.45486
Iter num: 19
Used Advice frontier: Point2D.Float[2.9340825, 2.7145593] with IG = 496.4955
Iter num: 20
Used Advice frontier: Point2D.Float[3.676949, 2.7886949] with IG = 129.90167
Iter num: 21
Used frontier: Point2D.Float[3.764671, 1.5296638] with IG = 15.991413
Iter num: 22
Used frontier: Point2D.Float[4.517643, 1.7521648] with IG = 28.880676
Iter num: 23
Added advice frontier Point2D.Float[5.073308, 0.97634065]
Added advice frontier Point2D.Float[4.970253, 1.1246461]
Added advice frontier Point2D.Float[5.092506, 2.140976]
Added advice frontier Point2D.Float[4.955908, 1.8917568]
Used Advice frontier: Point2D.Float[4.955908, 1.8917568] with IG = 217.41083
Iter num: 24
Added advice frontier Point2D.Float[5.2454114, 2.6426506]
Added advice frontier Point2D.Float[5.0372214, 2.4121933]
Added advice frontier Point2D.Float[5.3304577, 2.598696]
Used Advice frontier: Point2D.Float[5.092506, 2.140976] with IG = 351.86575
Iter num: 25
Used Advice frontier: Point2D.Float[5.0372214, 2.4121933] with IG = 361.27878
Iter num: 26
Used Advice frontier: Point2D.Float[5.2454114, 2.6426506] with IG = 321.98877
Iter num: 27
Used Advice frontier: Point2D.Float[5.3304577, 2.598696] with IG = 1044.5677
Iter num: 28
Used frontier: Point2D.Float[5.2454114, 2.6426506] with IG = 135.79381
Iter num: 29
Added advice frontier Point2D.Float[3.035563, 0.011491125]
Used Advice frontier: Point2D.Float[4.970253, 1.1246461] with IG = 64.22958
Iter num: 30
Used Advice frontier: Point2D.Float[5.073308, 0.97634065] with IG = 553.72284
Iter num: 31
Added advice frontier Point2D.Float[4.6180806, 0.37157625]
Added advice frontier Point2D.Float[5.4143286, 0.21114254]
Added advice frontier Point2D.Float[4.7766204, 0.3330178]
Added advice frontier Point2D.Float[5.288564, 0.42625916]
Used Advice frontier: Point2D.Float[4.7766204, 0.3330178] with IG = 134.66522

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8234227895736694, 1.4765541553497314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.178752064704895, 0.639205813407898) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0615040063858032, 0.18512733280658722) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.42264074087142944, 0.6361979842185974) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.32131683826446533, 0.7200016379356384) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6025390625, 0.832624614238739) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8905571699142456, 0.9978768825531006) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9780593514442444, 1.6093112230300903) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0749456882476807, 2.3985543251037598) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9042664170265198, 2.634462356567383) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.25771066546440125, 2.7290430068969727) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.1718626320362091, 2.5881314277648926) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8033186793327332, 2.1296143531799316) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3751837015151978, 1.736546277999878) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7735594511032104, 1.4639323949813843) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7057526111602783, 1.5202523469924927) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0502982139587402, 1.0060726404190063) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0902397632598877, 0.9927399754524231) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.150438070297241, 0.552845299243927) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1685211658477783, 0.377871572971344) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0619025230407715, 0.14749056100845337) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9653425216674805, 0.09811069071292877) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1080095767974854, 0.6586142182350159) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0902397632598877, 0.9927399754524231) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0689220428466797, 1.4731751680374146) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0506198406219482, 1.8171274662017822) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.295644998550415, 2.2131786346435547) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3438384532928467, 2.218975067138672) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.295644998550415, 2.2131786346435547) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9187140464782715, 2.513734817504883) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.934082508087158, 2.714559316635132) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.2027101516723633, 2.832857847213745) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6769490242004395, 2.7886948585510254) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2027101516723633, 2.832857847213745) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1137921810150146, 2.280242919921875) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.156189203262329, 1.911011815071106) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.333153486251831, 1.8122471570968628) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7646710872650146, 1.5296638011932373) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.315744400024414, 1.8136616945266724) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.517642974853516, 1.7521648406982422) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.955907821655273, 1.8917567729949951) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.092505931854248, 2.1409759521484375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.037221431732178, 2.4121932983398438) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.245411396026611, 2.642650604248047) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.33045768737793, 2.598695993423462) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.245411396026611, 2.642650604248047) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.092505931854248, 2.1409759521484375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.038496494293213, 1.8159129619598389) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.945163249969482, 1.4089128971099854) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.970252990722656, 1.1246460676193237) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.073307991027832, 0.976340651512146) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,b,53]  [r6,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  


Remaining path: 
[r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 31
Total sampled points = 17347
RRG size = 1551

Movement Length = 21.422215
Remaining path Length = 0.16316131
Total path Length = 21.585377

Advice samples: [10, 5, 4, 4, 0, 0, 0, 0, 0, 0] (23)

Total time taken (in ms):6744.986243

Initialization time (in ms):626.273422
Sampling time (in ms):4976.162181
Advice time (in ms):7.503078
Path checking time (in ms):586.051015
Learning time (in ms):191.302607
Exploration time (in ms):0.0
Time taken other than these things (in ms):357.69394
Moving time (in ms):1543.5039



