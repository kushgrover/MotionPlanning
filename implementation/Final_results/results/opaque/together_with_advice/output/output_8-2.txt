Parameters values: 
Environment: results/environments/env8/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.35504405079927714,0.022587473358441), (0.8550440507992771,0.022587473358441), (0.8550440507992771,0.322587473358441), (0.35504405079927714,0.322587473358441)]
[(0.991735128626196,2.4635484129879255), (1.291735128626196,2.4635484129879255), (1.291735128626196,2.9635484129879255), (0.991735128626196,2.9635484129879255)]
[(3.096751710354196,0.1394389115905989), (3.596751710354196,0.1394389115905989), (3.596751710354196,0.4394389115905989), (3.096751710354196,0.4394389115905989)]
[(2.68676401856603,2.525807945612001), (3.18676401856603,2.525807945612001), (3.18676401856603,2.825807945612001), (2.68676401856603,2.825807945612001)]
[(4.206291849961631,0.01620232208362473), (4.506291849961631,0.01620232208362473), (4.506291849961631,0.5162023220836247), (4.206291849961631,0.5162023220836247)]
[(5.565245120557091,2.4902084382147107), (5.865245120557091,2.4902084382147107), (5.865245120557091,2.9902084382147107), (5.565245120557091,2.9902084382147107)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.8669105,y=0.12865342,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.8669105,y=0.12865342,w=0.9601074,h=2.5492404]  java.awt.geom.Rectangle2D$Float[x=0.8669105,y=0.076201476,w=1.7656474,h=2.6016924]  java.awt.geom.Rectangle2D$Float[x=0.8669105,y=0.076201476,w=2.7742598,h=2.7748513]  java.awt.geom.Rectangle2D$Float[x=0.8669105,y=0.042315073,w=4.703154,h=2.8087378]  java.awt.geom.Rectangle2D$Float[x=0.8669105,y=0.042315073,w=4.703154,h=2.8087378]  
t: java.awt.geom.Rectangle2D$Float[x=0.25504404,y=0.0,w=0.7,h=0.42258748]  java.awt.geom.Rectangle2D$Float[x=0.25504404,y=0.0,w=1.1366911,h=3.0635483]  java.awt.geom.Rectangle2D$Float[x=0.25504404,y=0.0,w=3.4417076,h=3.0635483]  java.awt.geom.Rectangle2D$Float[x=0.25504404,y=0.0,w=3.4417076,h=3.0635483]  java.awt.geom.Rectangle2D$Float[x=0.25504404,y=0.0,w=4.351248,h=3.0635483]  java.awt.geom.Rectangle2D$Float[x=0.25504404,y=0.0,w=5.7102013,h=3.0902085]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9359714, 1.4514041] with IG = 38.21431
Iter num: 2
Used frontier: Point2D.Float[0.9696144, 0.6531106] with IG = 45.056206
Iter num: 3
Added advice frontier Point2D.Float[1.031368, 0.1796939]
Added advice frontier Point2D.Float[0.96117026, 0.12473544]
Added advice frontier Point2D.Float[0.44682875, 0.35133454]
Added advice frontier Point2D.Float[0.22846337, 0.4646159]
Added advice frontier Point2D.Float[0.89760655, 0.13608195]
Added advice frontier Point2D.Float[0.85583603, 0.111805834]
Used Advice frontier: Point2D.Float[1.031368, 0.1796939] with IG = 209.45593
Iter num: 4
Added advice frontier Point2D.Float[0.9067514, 2.4475296]
Used Advice frontier: Point2D.Float[0.96117026, 0.12473544] with IG = 1121.6742
Iter num: 5
Used Advice frontier: Point2D.Float[0.89760655, 0.13608195] with IG = 1548.7433
Iter num: 6
Used Advice frontier: Point2D.Float[0.85583603, 0.111805834] with IG = 2069.854
Iter num: 7
Used Advice frontier: Point2D.Float[0.44682875, 0.35133454] with IG = 120.97483
Iter num: 8
Used Advice frontier: Point2D.Float[0.22846337, 0.4646159] with IG = 406.5037
Iter num: 9
Used Advice frontier: Point2D.Float[0.9067514, 2.4475296] with IG = 43.692368
Iter num: 10
Used frontier: Point2D.Float[0.903242, 2.4611127] with IG = 427.67908
Iter num: 11
Added advice frontier Point2D.Float[1.7185222, 2.4932318]
Added advice frontier Point2D.Float[1.8135669, 2.2796288]
Used Advice frontier: Point2D.Float[1.7185222, 2.4932318] with IG = 120.45546
Iter num: 12
Used Advice frontier: Point2D.Float[1.8135669, 2.2796288] with IG = 427.72653
Iter num: 13
Used frontier: Point2D.Float[1.8028351, 1.5536824] with IG = 12.893065
Iter num: 14
Used frontier: Point2D.Float[2.74626, 1.5169772] with IG = 18.31248
Iter num: 15
Added advice frontier Point2D.Float[3.1578293, 0.93918264]
Added advice frontier Point2D.Float[3.242724, 1.2040913]
Added advice frontier Point2D.Float[3.176344, 2.0379484]
Added advice frontier Point2D.Float[3.1919696, 1.9395002]
Used Advice frontier: Point2D.Float[3.1919696, 1.9395002] with IG = 145.76852
Iter num: 16
Added advice frontier Point2D.Float[2.7082329, 2.4639487]
Added advice frontier Point2D.Float[2.853941, 2.4062607]
Used Advice frontier: Point2D.Float[3.176344, 2.0379484] with IG = 1003.20514
Iter num: 17
Added advice frontier Point2D.Float[3.58647, 2.768928]
Added advice frontier Point2D.Float[3.261503, 2.8703954]
Added advice frontier Point2D.Float[3.674571, 2.6663504]
Used Advice frontier: Point2D.Float[2.853941, 2.4062607] with IG = 204.29546
Iter num: 18
Used Advice frontier: Point2D.Float[2.7082329, 2.4639487] with IG = 638.1119
Iter num: 19
Used frontier: Point2D.Float[2.674633, 2.4791238] with IG = 352.61133
Iter num: 20
Used Advice frontier: Point2D.Float[3.261503, 2.8703954] with IG = 96.93749
Iter num: 21
Used Advice frontier: Point2D.Float[3.58647, 2.768928] with IG = 293.73785
Iter num: 22
Used Advice frontier: Point2D.Float[3.674571, 2.6663504] with IG = 739.54474
Iter num: 23
Used Advice frontier: Point2D.Float[3.242724, 1.2040913] with IG = 59.962296
Iter num: 24
Added advice frontier Point2D.Float[3.441557, 0.44836912]
Used Advice frontier: Point2D.Float[3.1578293, 0.93918264] with IG = 359.48044
Iter num: 25
Used Advice frontier: Point2D.Float[3.441557, 0.44836912] with IG = 174.40541
Iter num: 26
Used frontier: Point2D.Float[2.645434, 0.3901569] with IG = 34.255363
Iter num: 27
Used frontier: Point2D.Float[2.9717321, 0.30861086] with IG = 23.785908
Iter num: 28
Added advice frontier Point2D.Float[2.557535, 0.10533347]
Added advice frontier Point2D.Float[2.297078, 0.22237459]
Used Advice frontier: Point2D.Float[2.557535, 0.10533347] with IG = 157.62633
Iter num: 29
Used Advice frontier: Point2D.Float[2.297078, 0.22237459] with IG = 350.20633
Iter num: 30
Used frontier: Point2D.Float[2.557535, 0.10533347] with IG = 10.50619
Iter num: 31
Used frontier: Point2D.Float[4.1520534, 1.438252] with IG = 9.520368
Iter num: 32
Used frontier: Point2D.Float[4.9094534, 1.4753207] with IG = 48.792927
Iter num: 33
Added advice frontier Point2D.Float[4.8502088, 2.025629]
Added advice frontier Point2D.Float[5.1191454, 0.60208035]
Used Advice frontier: Point2D.Float[4.8502088, 2.025629] with IG = 173.72548
Iter num: 34
Added advice frontier Point2D.Float[5.4906836, 2.5171428]
Added advice frontier Point2D.Float[5.2610335, 2.3106456]
Used Advice frontier: Point2D.Float[5.4906836, 2.5171428] with IG = 123.86395
Iter num: 35
Added advice frontier Point2D.Float[4.75716, 2.6077242]
Added advice frontier Point2D.Float[4.867946, 2.5498104]
Used Advice frontier: Point2D.Float[5.2610335, 2.3106456] with IG = 323.79553
Iter num: 36
Used Advice frontier: Point2D.Float[4.867946, 2.5498104] with IG = 196.8668
Iter num: 37
Used Advice frontier: Point2D.Float[4.75716, 2.6077242] with IG = 799.9351
Iter num: 38
Used Advice frontier: Point2D.Float[5.1191454, 0.60208035] with IG = 31.47564
Iter num: 39
Added advice frontier Point2D.Float[4.591387, 0.37456527]
Added advice frontier Point2D.Float[4.621232, 0.20647307]
Added advice frontier Point2D.Float[5.515254, 0.16998115]
Added advice frontier Point2D.Float[5.288705, 0.18639049]
Used Advice frontier: Point2D.Float[4.591387, 0.37456527] with IG = 164.6342

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9359713792800903, 1.451404094696045) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9696143865585327, 0.6531106233596802) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0313680171966553, 0.17969389259815216) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9611702561378479, 0.12473543733358383) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8976065516471863, 0.13608194887638092) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.855836033821106, 0.11180583387613297) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8976065516471863, 0.13608194887638092) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.8162004947662354, 0.5053321719169617) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4468287527561188, 0.3513345420360565) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.22846336662769318, 0.46461591124534607) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8260096907615662, 0.9015995860099792) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8764212727546692, 1.5307581424713135) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9067513942718506, 2.4475295543670654) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9032419919967651, 2.4611127376556396) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.4081263542175293, 2.4063215255737305) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7185221910476685, 2.493231773376465) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.8135669231414795, 2.2796287536621094) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2459886074066162, 2.154325485229492) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1907172203063965, 2.1464130878448486) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.176186442375183, 1.8469336032867432) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8028351068496704, 1.5536824464797974) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8698136806488037, 1.685218334197998) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5702574253082275, 1.9072985649108887) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.746259927749634, 1.5169771909713745) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.991586446762085, 1.936057686805725) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.191969633102417, 1.9395002126693726) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1763439178466797, 2.0379483699798584) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.853940963745117, 2.4062607288360596) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.708232879638672, 2.4639487266540527) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.674633026123047, 2.479123830795288) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9804320335388184, 2.3400230407714844) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3088505268096924, 2.5938518047332764) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.261502981185913, 2.8703954219818115) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.586469888687134, 2.768928050994873) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.6745710372924805, 2.6663503646850586) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3984298706054688, 2.2429096698760986) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1763439178466797, 2.0379483699798584) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.105768918991089, 1.684287667274475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2427239418029785, 1.2040913105010986) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1578292846679688, 0.9391826391220093) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2601466178894043, 0.8364295363426208) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.441556930541992, 0.4483691155910492) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.0760724544525146, 0.6621200442314148) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.938323497772217, 0.5536647439002991) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6454339027404785, 0.39015689492225647) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9717321395874023, 0.30861085653305054) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6454339027404785, 0.39015689492225647) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.55753493309021, 0.10533346980810165) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.2970778942108154, 0.2223745882511139) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.55753493309021, 0.10533346980810165) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7794840335845947, 0.38609224557876587) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8541676998138428, 0.6255078315734863) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.06506609916687, 0.9090384244918823) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.229689836502075, 1.1123837232589722) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.544072151184082, 1.2304083108901978) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6411492824554443, 1.290428876876831) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9582254886627197, 1.3728957176208496) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.152053356170654, 1.4382519721984863) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.909453392028809, 1.4753206968307495) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.940390586853027, 1.8689384460449219) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.850208759307861, 2.0256290435791016) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.490683555603027, 2.5171427726745605) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.261033535003662, 2.310645580291748) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.091228485107422, 2.5387940406799316) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.867946147918701, 2.5498104095458984) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.757160186767578, 2.607724189758301) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.261033535003662, 2.310645580291748) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.490683555603027, 2.5171427726745605) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.850208759307861, 2.0256290435791016) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.940390586853027, 1.8689384460449219) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.054049491882324, 1.536789894104004) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.077322483062744, 1.4944827556610107) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.110263347625732, 1.1576610803604126) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.094359397888184, 0.8137710094451904) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.119145393371582, 0.6020803451538086) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [r1,b,t,12]  [r1,t,12]  [r1,b,t,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,t,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [r3,b,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 39
Total sampled points = 21415
RRG size = 1951

Movement Length = 26.739183
Remaining path Length = 2.0517523
Total path Length = 28.790936

Advice samples: [14, 4, 7, 3, 0, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):10686.394089

Initialization time (in ms):596.453572
Sampling time (in ms):8690.471322
Advice time (in ms):8.954715
Path checking time (in ms):645.291382
Learning time (in ms):198.038697
Exploration time (in ms):0.0
Time taken other than these things (in ms):547.184401
Moving time (in ms):3019.899



