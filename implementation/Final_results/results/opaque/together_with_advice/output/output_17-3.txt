Parameters values: 
Environment: results/environments/env17/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.0541100310644402,0.02328672720229025), (1.3541100310644403,0.02328672720229025), (1.3541100310644403,0.5232867272022903), (1.0541100310644402,0.5232867272022903)]
[(1.3512240896966634,2.4584042865240434), (1.6512240896966635,2.4584042865240434), (1.6512240896966635,2.9584042865240434), (1.3512240896966634,2.9584042865240434)]
[(2.1638675787159496,0.040104218193655734), (2.6638675787159496,0.040104218193655734), (2.6638675787159496,0.3401042181936557), (2.1638675787159496,0.3401042181936557)]
[(2.3672033951415608,2.4931286271154622), (2.6672033951415606,2.4931286271154622), (2.6672033951415606,2.9931286271154622), (2.3672033951415608,2.9931286271154622)]
[(4.554370089063716,0.01757544190259983), (4.854370089063716,0.01757544190259983), (4.854370089063716,0.5175754419025999), (4.554370089063716,0.5175754419025999)]
[(5.348499669216769,2.5182916126965837), (5.848499669216769,2.5182916126965837), (5.848499669216769,2.8182916126965836), (5.348499669216769,2.8182916126965836)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.621449,y=0.0171186,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.8043322,y=0.0171186,w=1.0171168,h=2.6542053]  java.awt.geom.Rectangle2D$Float[x=0.8043322,y=0.0171186,w=2.0609386,h=2.6542053]  java.awt.geom.Rectangle2D$Float[x=0.8043322,y=0.0171186,w=2.3899827,h=2.6759145]  java.awt.geom.Rectangle2D$Float[x=0.8043322,y=0.0171186,w=3.732533,h=2.6759145]  java.awt.geom.Rectangle2D$Float[x=0.8043322,y=0.0171186,w=4.031399,h=2.7095459]  
t: java.awt.geom.Rectangle2D$Float[x=0.95411,y=0.0,w=0.5,h=0.6232867]  java.awt.geom.Rectangle2D$Float[x=0.95411,y=0.0,w=0.797114,h=3.0584042]  java.awt.geom.Rectangle2D$Float[x=0.95411,y=0.0,w=1.8097576,h=3.0584042]  java.awt.geom.Rectangle2D$Float[x=0.95411,y=0.0,w=1.8130933,h=3.0931287]  java.awt.geom.Rectangle2D$Float[x=0.95411,y=0.0,w=4.00026,h=3.0931287]  java.awt.geom.Rectangle2D$Float[x=0.95411,y=0.0,w=4.9943895,h=3.0931287]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0310953, 1.3690709] with IG = 34.033295
Iter num: 2
Used frontier: Point2D.Float[1.0277504, 0.5933621] with IG = 32.22829
Iter num: 3
Used frontier: Point2D.Float[1.111993, 0.7967566] with IG = 68.13527
Iter num: 4
Added advice frontier Point2D.Float[1.7818463, 0.19668838]
Added advice frontier Point2D.Float[1.5877655, 0.30635214]
Used Advice frontier: Point2D.Float[1.5877655, 0.30635214] with IG = 146.35532
Iter num: 5
Used Advice frontier: Point2D.Float[1.7818463, 0.19668838] with IG = 448.5906
Iter num: 6
Used frontier: Point2D.Float[0.16628745, 0.5195801] with IG = 13.836016
Iter num: 7
Used frontier: Point2D.Float[0.88053656, 2.2576349] with IG = 11.905525
Iter num: 8
Added advice frontier Point2D.Float[1.0030034, 2.5727477]
Added advice frontier Point2D.Float[0.47510797, 2.9908483]
Added advice frontier Point2D.Float[1.3741231, 2.451432]
Added advice frontier Point2D.Float[1.5996516, 2.3099575]
Added advice frontier Point2D.Float[1.2576419, 2.749975]
Used Advice frontier: Point2D.Float[1.0030034, 2.5727477] with IG = 295.793
Iter num: 9
Used Advice frontier: Point2D.Float[1.2576419, 2.749975] with IG = 322.32867
Iter num: 10
Used Advice frontier: Point2D.Float[1.3741231, 2.451432] with IG = 149.18367
Iter num: 11
Used Advice frontier: Point2D.Float[1.5996516, 2.3099575] with IG = 375.61584
Iter num: 12
Used frontier: Point2D.Float[1.7388213, 2.346002] with IG = 97.3834
Iter num: 13
Used Advice frontier: Point2D.Float[0.47510797, 2.9908483] with IG = 69.21374
Iter num: 14
Used frontier: Point2D.Float[1.886617, 1.5950608] with IG = 11.122863
Iter num: 15
Used frontier: Point2D.Float[2.78621, 1.4233227] with IG = 25.070559
Iter num: 16
Added advice frontier Point2D.Float[2.919582, 0.67221785]
Added advice frontier Point2D.Float[3.131452, 2.0308547]
Added advice frontier Point2D.Float[3.033956, 1.7083114]
Used Advice frontier: Point2D.Float[3.033956, 1.7083114] with IG = 264.81665
Iter num: 17
Added advice frontier Point2D.Float[3.0740538, 2.617047]
Added advice frontier Point2D.Float[2.9429426, 2.6002002]
Added advice frontier Point2D.Float[2.7584138, 2.4186356]
Used Advice frontier: Point2D.Float[3.131452, 2.0308547] with IG = 296.7743
Iter num: 18
Used Advice frontier: Point2D.Float[2.7584138, 2.4186356] with IG = 184.79135
Iter num: 19
Added advice frontier Point2D.Float[2.506707, 0.34939384]
Used Advice frontier: Point2D.Float[2.9429426, 2.6002002] with IG = 386.2859
Iter num: 20
Used Advice frontier: Point2D.Float[3.0740538, 2.617047] with IG = 756.4922
Iter num: 21
Used Advice frontier: Point2D.Float[2.919582, 0.67221785] with IG = 50.180893
Iter num: 22
Used Advice frontier: Point2D.Float[2.506707, 0.34939384] with IG = 190.80319
Iter num: 23
Added advice frontier Point2D.Float[2.6984987, 0.2128477]
Used Advice frontier: Point2D.Float[2.6984987, 0.2128477] with IG = 207.37085
Iter num: 24
Added advice frontier Point2D.Float[2.8561227, 0.085390925]
Added advice frontier Point2D.Float[2.890875, 0.117170535]
Added advice frontier Point2D.Float[2.6678874, 0.2427168]
Added advice frontier Point2D.Float[2.7177055, 0.05943993]
Used Advice frontier: Point2D.Float[2.6678874, 0.2427168] with IG = 2338.1252
Iter num: 25
Used Advice frontier: Point2D.Float[2.7177055, 0.05943993] with IG = 526.5182
Iter num: 26
Used Advice frontier: Point2D.Float[2.8561227, 0.085390925] with IG = 710.08136
Iter num: 27
Used Advice frontier: Point2D.Float[2.890875, 0.117170535] with IG = 2123.496
Iter num: 28
Used frontier: Point2D.Float[3.7949538, 0.31075373] with IG = 22.698372
Iter num: 29
Used frontier: Point2D.Float[3.939262, 1.3817416] with IG = 12.453541
Iter num: 30
Used frontier: Point2D.Float[4.71563, 1.4282409] with IG = 22.62336
Iter num: 31
Added advice frontier Point2D.Float[5.1118226, 2.0500934]
Added advice frontier Point2D.Float[5.195585, 1.9376142]
Added advice frontier Point2D.Float[5.0142226, 0.9833799]
Used Advice frontier: Point2D.Float[5.0142226, 0.9833799] with IG = 135.31255
Iter num: 32
Added advice frontier Point2D.Float[4.8893375, 0.35116887]
Added advice frontier Point2D.Float[4.9608393, 0.44335988]
Used Advice frontier: Point2D.Float[4.9608393, 0.44335988] with IG = 161.73795
Iter num: 33
Used Advice frontier: Point2D.Float[4.8893375, 0.35116887] with IG = 857.12494
Iter num: 34
Used frontier: Point2D.Float[4.7659564, 0.63179064] with IG = 82.52715
Iter num: 35
Used frontier: Point2D.Float[4.6402597, 0.6472255] with IG = 134.23798
Iter num: 36
Used Advice frontier: Point2D.Float[5.195585, 1.9376142] with IG = 60.58042
Iter num: 37
Added advice frontier Point2D.Float[4.8166656, 2.5632877]
Added advice frontier Point2D.Float[4.8651996, 2.481974]
Added advice frontier Point2D.Float[5.248585, 2.85457]
Added advice frontier Point2D.Float[5.105804, 2.828621]
Used Advice frontier: Point2D.Float[5.1118226, 2.0500934] with IG = 713.0558
Iter num: 38
Used Advice frontier: Point2D.Float[4.8651996, 2.481974] with IG = 201.07082
Iter num: 39
Used Advice frontier: Point2D.Float[4.8166656, 2.5632877] with IG = 1056.002
Iter num: 40
Used Advice frontier: Point2D.Float[5.248585, 2.85457] with IG = 191.95312
Iter num: 41
Used Advice frontier: Point2D.Float[5.105804, 2.828621] with IG = 689.0845
Iter num: 42
Used frontier: Point2D.Float[5.248585, 2.85457] with IG = 20.672535
Iter num: 43
Used frontier: Point2D.Float[5.88461, 0.4723828] with IG = 8.945682
Iter num: 44
Used frontier: Point2D.Float[4.4256344, 0.33582133] with IG = 9.712688
Iter num: 45
Added advice frontier Point2D.Float[4.431731, 0.21207805]
Used Advice frontier: Point2D.Float[4.431731, 0.21207805] with IG = 807.14557

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.031095266342163, 1.3690708875656128) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0277503728866577, 0.5933620929718018) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1119929552078247, 0.7967566251754761) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5877654552459717, 0.3063521385192871) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.781846284866333, 0.19668838381767273) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.3670258522033691, 0.532111644744873) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0077558755874634, 0.5256733894348145) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3145042955875397, 0.5295049548149109) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.16628745198249817, 0.5195801258087158) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.47025954723358154, 0.6928920149803162) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.799183189868927, 0.8976294994354248) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.824501097202301, 1.4439418315887451) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8805365562438965, 2.2576348781585693) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0030033588409424, 2.5727477073669434) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2576419115066528, 2.7499749660491943) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2204197645187378, 2.2982161045074463) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3741230964660645, 2.4514319896698) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.599651575088501, 2.309957504272461) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.738821268081665, 2.3460021018981934) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4220842123031616, 2.40547513961792) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9310755133628845, 2.624612808227539) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.47510796785354614, 2.9908483028411865) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7005289793014526, 2.575772285461426) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9736005067825317, 2.1184020042419434) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4022924900054932, 1.7871456146240234) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8866169452667236, 1.5950608253479004) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1082589626312256, 1.576151728630066) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.786210060119629, 1.4233226776123047) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0339560508728027, 1.7083114385604858) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1314520835876465, 2.0308547019958496) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0720102787017822, 2.065213441848755) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.758413791656494, 2.418635606765747) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9429426193237305, 2.6002001762390137) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0740537643432617, 2.617047071456909) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.085669755935669, 2.2770400047302246) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0720102787017822, 2.065213441848755) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0339560508728027, 1.7083114385604858) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0175063610076904, 1.2104915380477905) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.03232741355896, 0.7918133735656738) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.919581890106201, 0.672217845916748) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.506706953048706, 0.3493938446044922) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.768239974975586, 0.41394421458244324) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6984987258911133, 0.21284769475460052) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.6678874492645264, 0.24271680414676666) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.717705488204956, 0.05943993106484413) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.8561227321624756, 0.08539092540740967) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.8908751010894775, 0.1171705350279808) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2862720489501953, 0.18495328724384308) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6680808067321777, 0.28040069341659546) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.7949538230895996, 0.310753732919693) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5193569660186768, 0.5841429233551025) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.217059373855591, 0.8822088241577148) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1584088802337646, 1.0637853145599365) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5447044372558594, 1.2107291221618652) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9392619132995605, 1.3817416429519653) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.002310752868652, 1.3304144144058228) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.621944904327393, 1.117655634880066) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.715630054473877, 1.4282408952713013) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.621944904327393, 1.117655634880066) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.014222621917725, 0.9833799004554749) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.126107215881348, 0.6385599970817566) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.96083927154541, 0.4433598816394806) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.889337539672852, 0.3511688709259033) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.96083927154541, 0.4433598816394806) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.765956401824951, 0.6317906379699707) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.640259742736816, 0.6472254991531372) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.956491947174072, 0.6858245730400085) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.014222621917725, 0.9833799004554749) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.023499011993408, 1.14613938331604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.951321601867676, 1.4815071821212769) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.119237899780273, 1.7149937152862549) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.195584774017334, 1.9376142024993896) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.111822605133057, 2.050093412399292) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9760332107543945, 2.288667678833008) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.865199565887451, 2.481973886489868) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8166656494140625, 2.5632877349853516) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.248585224151611, 2.854569911956787) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.105803966522217, 2.8286209106445312) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.248585224151611, 2.854569911956787) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.156362056732178, 2.6354153156280518) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.093429088592529, 2.29856014251709) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.111822605133057, 2.050093412399292) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.119237899780273, 1.7149937152862549) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.134481430053711, 1.4644094705581665) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.023499011993408, 1.14613938331604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.120111465454102, 0.9606907963752747) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.231942176818848, 0.8484974503517151) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.502017021179199, 0.709912896156311) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.546797275543213, 0.5954087972640991) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.884610176086426, 0.4723828136920929) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.533381462097168, 0.597392737865448) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.407039642333984, 0.6145960688591003) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.126107215881348, 0.6385599970817566) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.765956401824951, 0.6317906379699707) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.640259742736816, 0.6472254991531372) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,t,22]  [r2,22]  [r2,t,22]  [r2,22]  [r2,t,22]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,t,35]  [r3,t,35]  [r3,b,t,35]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 45
Total sampled points = 24449
RRG size = 2251

Movement Length = 31.595045
Remaining path Length = 0.0
Total path Length = 31.595045

Advice samples: [13, 7, 6, 3, 0, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):11823.839247

Initialization time (in ms):572.2309
Sampling time (in ms):9160.322954
Advice time (in ms):10.697947
Path checking time (in ms):1116.625909
Learning time (in ms):231.729217
Exploration time (in ms):0.0
Time taken other than these things (in ms):732.23232
Moving time (in ms):1677.7216



