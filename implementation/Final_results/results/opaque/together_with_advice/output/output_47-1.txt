Parameters values: 
Environment: results/environments/env47/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.5684250515435717,0.1380848530355258), (1.0684250515435716,0.1380848530355258), (1.0684250515435716,0.4380848530355258), (0.5684250515435717,0.4380848530355258)]
[(1.041211362220077,2.47903452316435), (1.341211362220077,2.47903452316435), (1.341211362220077,2.97903452316435), (1.041211362220077,2.97903452316435)]
[(2.8465359036432987,0.173133541249254), (3.3465359036432987,0.173133541249254), (3.3465359036432987,0.473133541249254), (2.8465359036432987,0.473133541249254)]
[(2.5786789177093055,2.566718257451437), (3.0786789177093055,2.566718257451437), (3.0786789177093055,2.8667182574514367), (2.5786789177093055,2.8667182574514367)]
[(5.177152498106892,0.01740518814493488), (5.477152498106892,0.01740518814493488), (5.477152498106892,0.5174051881449349), (5.177152498106892,0.5174051881449349)]
[(5.453756536429743,2.481729578714294), (5.953756536429743,2.481729578714294), (5.953756536429743,2.7817295787142937), (5.453756536429743,2.7817295787142937)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.0954135,w=0.20000002,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.0954135,w=0.3725698,h=2.5887315]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.0954135,w=2.675704,h=2.5887315]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.0954135,w=3.5252042,h=2.772432]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.009471155,w=4.3582215,h=2.8583744]  java.awt.geom.Rectangle2D$Float[x=0.10822929,y=0.009471155,w=4.3582215,h=2.8583744]  
t: java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.038084853,w=0.70000005,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.038084853,w=0.9727863,h=3.0409498]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.038084853,w=2.9781108,h=3.0409498]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.038084853,w=2.9781108,h=3.0409498]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.0,w=5.1087275,h=3.0790346]  java.awt.geom.Rectangle2D$Float[x=0.46842507,y=0.0,w=5.5853314,h=3.0790346]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0408392, 1.4637606] with IG = 33.986988
Iter num: 2
Used frontier: Point2D.Float[1.0093725, 0.6167663] with IG = 42.473934
Iter num: 3
Added advice frontier Point2D.Float[1.1140335, 0.3269975]
Added advice frontier Point2D.Float[1.1041689, 2.4380324]
Added advice frontier Point2D.Float[1.0644855, 2.3161712]
Used Advice frontier: Point2D.Float[1.1140335, 0.3269975] with IG = 324.57974
Iter num: 4
Used Advice frontier: Point2D.Float[1.0644855, 2.3161712] with IG = 50.22852
Iter num: 5
Added advice frontier Point2D.Float[0.379949, 2.5709784]
Added advice frontier Point2D.Float[0.61525893, 2.9497151]
Used Advice frontier: Point2D.Float[1.1041689, 2.4380324] with IG = 780.27606
Iter num: 6
Used Advice frontier: Point2D.Float[0.379949, 2.5709784] with IG = 135.81027
Iter num: 7
Used Advice frontier: Point2D.Float[0.61525893, 2.9497151] with IG = 224.27374
Iter num: 8
Added advice frontier Point2D.Float[0.12286565, 0.26520705]
Used Advice frontier: Point2D.Float[0.12286565, 0.26520705] with IG = 33.208744
Iter num: 9
Used frontier: Point2D.Float[0.4414597, 0.11923164] with IG = 28.53523
Iter num: 10
Used frontier: Point2D.Float[1.9666959, 1.4755945] with IG = 10.182147
Iter num: 11
Used frontier: Point2D.Float[2.6225572, 1.6232917] with IG = 35.63606
Iter num: 12
Added advice frontier Point2D.Float[3.2499237, 2.1343405]
Added advice frontier Point2D.Float[3.0598438, 1.9290432]
Added advice frontier Point2D.Float[2.879271, 0.9133431]
Added advice frontier Point2D.Float[2.9307017, 1.2511992]
Used Advice frontier: Point2D.Float[2.9307017, 1.2511992] with IG = 206.98749
Iter num: 13
Added advice frontier Point2D.Float[2.6831768, 0.325209]
Added advice frontier Point2D.Float[3.205212, 0.4844237]
Added advice frontier Point2D.Float[3.1524785, 0.68485165]
Added advice frontier Point2D.Float[2.6718283, 0.5110726]
Used Advice frontier: Point2D.Float[2.879271, 0.9133431] with IG = 292.61298
Iter num: 14
Added advice frontier Point2D.Float[2.79642, 0.17797536]
Added advice frontier Point2D.Float[2.676848, 2.565873]
Used Advice frontier: Point2D.Float[3.1524785, 0.68485165] with IG = 280.77194
Iter num: 15
Used Advice frontier: Point2D.Float[3.205212, 0.4844237] with IG = 482.51108
Iter num: 16
Used Advice frontier: Point2D.Float[2.6718283, 0.5110726] with IG = 187.24867
Iter num: 17
Added advice frontier Point2D.Float[2.7631545, 0.3152256]
Used Advice frontier: Point2D.Float[2.6831768, 0.325209] with IG = 537.0289
Iter num: 18
Used Advice frontier: Point2D.Float[2.7631545, 0.3152256] with IG = 1240.7188
Iter num: 19
Used Advice frontier: Point2D.Float[2.79642, 0.17797536] with IG = 708.0947
Iter num: 20
Used Advice frontier: Point2D.Float[3.0598438, 1.9290432] with IG = 55.93672
Iter num: 21
Added advice frontier Point2D.Float[3.4556155, 2.6924934]
Added advice frontier Point2D.Float[3.333031, 2.599304]
Used Advice frontier: Point2D.Float[3.2499237, 2.1343405] with IG = 357.42245
Iter num: 22
Used Advice frontier: Point2D.Float[3.333031, 2.599304] with IG = 211.71535
Iter num: 23
Added advice frontier Point2D.Float[3.1131272, 2.932937]
Used Advice frontier: Point2D.Float[3.4556155, 2.6924934] with IG = 649.4156
Iter num: 24
Used Advice frontier: Point2D.Float[3.1131272, 2.932937] with IG = 238.96974
Iter num: 25
Used frontier: Point2D.Float[3.001973, 2.963725] with IG = 121.38082
Iter num: 26
Used frontier: Point2D.Float[2.973874, 2.9323053] with IG = 427.03156
Iter num: 27
Used Advice frontier: Point2D.Float[2.676848, 2.565873] with IG = 81.03916
Iter num: 28
Used frontier: Point2D.Float[3.8931386, 1.4123839] with IG = 12.211335
Iter num: 29
Used frontier: Point2D.Float[4.589447, 1.5585368] with IG = 30.906416
Iter num: 30
Added advice frontier Point2D.Float[4.9906588, 0.7810179]
Added advice frontier Point2D.Float[4.921846, 2.1834373]
Added advice frontier Point2D.Float[4.889382, 1.8743228]
Used Advice frontier: Point2D.Float[4.889382, 1.8743228] with IG = 146.25612
Iter num: 31
Added advice frontier Point2D.Float[5.531576, 2.425357]
Used Advice frontier: Point2D.Float[4.921846, 2.1834373] with IG = 321.7352
Iter num: 32
Used Advice frontier: Point2D.Float[5.531576, 2.425357] with IG = 148.76224
Iter num: 33
Added advice frontier Point2D.Float[4.44678, 2.7100887]
Added advice frontier Point2D.Float[4.541719, 2.6807854]
Used Advice frontier: Point2D.Float[4.44678, 2.7100887] with IG = 71.479095
Iter num: 34
Used Advice frontier: Point2D.Float[4.541719, 2.6807854] with IG = 1006.4595
Iter num: 35
Used Advice frontier: Point2D.Float[4.9906588, 0.7810179] with IG = 47.85825
Iter num: 36
Added advice frontier Point2D.Float[5.273173, 0.55938786]
Added advice frontier Point2D.Float[5.3304925, 0.6992948]
Used frontier: Point2D.Float[4.9427276, 0.7982013] with IG = 333.8684
Iter num: 37
Used Advice frontier: Point2D.Float[5.3304925, 0.6992948] with IG = 249.72514
Iter num: 38
Added advice frontier Point2D.Float[4.4631295, 0.062666126]
Added advice frontier Point2D.Float[4.253872, 0.22920837]
Used Advice frontier: Point2D.Float[5.273173, 0.55938786] with IG = 661.4038

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0408391952514648, 1.4637606143951416) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0093724727630615, 0.6167662739753723) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1140334606170654, 0.3269974887371063) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.069532871246338, 1.0130527019500732) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0800695419311523, 1.733398675918579) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0644855499267578, 2.316171169281006) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1041688919067383, 2.438032388687134) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.37994900345802307, 2.5709784030914307) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6152589321136475, 2.9497151374816895) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7863827347755432, 2.196274518966675) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8091115951538086, 1.9552934169769287) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8298414945602417, 1.3459988832473755) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8103863000869751, 0.8858659863471985) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5277063846588135, 0.6194447875022888) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.12286564707756042, 0.26520705223083496) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.44145968556404114, 0.11923164129257202) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.40485408902168274, 0.20708969235420227) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6751618981361389, 0.6652837991714478) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.967452347278595, 0.8898398876190186) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4307770729064941, 1.23329496383667) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9666959047317505, 1.4755945205688477) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5650339126586914, 1.5984684228897095) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6225571632385254, 1.6232917308807373) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.930701732635498, 1.2511992454528809) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8792710304260254, 0.913343071937561) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1524784564971924, 0.6848516464233398) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.205212116241455, 0.4844236969947815) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.671828269958496, 0.51107257604599) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6831767559051514, 0.32520899176597595) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.7631545066833496, 0.31522560119628906) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.796420097351074, 0.1779753565788269) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7631545066833496, 0.31522560119628906) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.886075973510742, 0.7401065230369568) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9633917808532715, 1.1054604053497314) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9902312755584717, 1.329168438911438) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0517239570617676, 1.673724889755249) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0598437786102295, 1.929043173789978) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2499237060546875, 2.134340524673462) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.333030939102173, 2.599303960800171) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.455615520477295, 2.692493438720703) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.1131272315979004, 2.932936906814575) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0019729137420654, 2.9637250900268555) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.973874092102051, 2.932305335998535) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1131272315979004, 2.932936906814575) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2610926628112793, 2.5538692474365234) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0726211071014404, 2.385378122329712) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6768479347229004, 2.56587290763855) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9310286045074463, 2.252061605453491) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.111067533493042, 1.905666708946228) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3880703449249268, 1.7085009813308716) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5535595417022705, 1.6128977537155151) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8931386470794678, 1.4123839139938354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.20262336730957, 1.4661051034927368) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.589447021484375, 1.5585367679595947) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.961061477661133, 1.5707536935806274) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8893818855285645, 1.874322772026062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.92184591293335, 2.1834373474121094) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.205225944519043, 2.217808961868286) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.531576156616211, 2.4253571033477783) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.162563800811768, 2.382659912109375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.898962020874023, 2.2247121334075928) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.667169570922852, 2.2820303440093994) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.446780204772949, 2.7100887298583984) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.54171895980835, 2.6807854175567627) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.743316650390625, 2.489177703857422) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.805787563323975, 2.1721832752227783) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8893818855285645, 1.874322772026062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.961061477661133, 1.5707536935806274) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.85017728805542, 1.2292509078979492) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.803955554962158, 1.1794079542160034) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.990658760070801, 0.7810178995132446) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.942727565765381, 0.798201322555542) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.990658760070801, 0.7810178995132446) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,b,t,2]  [r3,t,2]  [r3,b,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20261
RRG size = 1901

Movement Length = 26.717129
Remaining path Length = 1.399786
Total path Length = 28.116915

Advice samples: [9, 9, 5, 3, 2, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):7665.420066

Initialization time (in ms):520.93434
Sampling time (in ms):5808.373549
Advice time (in ms):8.659583
Path checking time (in ms):697.548098
Learning time (in ms):183.362709
Exploration time (in ms):0.0
Time taken other than these things (in ms):446.541787
Moving time (in ms):872.4152



