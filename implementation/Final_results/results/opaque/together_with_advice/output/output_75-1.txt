Parameters values: 
Environment: results/environments/env75/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.0046784470120502,0.20888578497069216), (1.5046784470120502,0.20888578497069216), (1.5046784470120502,0.5088857849706921), (1.0046784470120502,0.5088857849706921)]
[(0.33768745997417154,2.4842732117048585), (0.6376874599741715,2.4842732117048585), (0.6376874599741715,2.9842732117048585), (0.33768745997417154,2.9842732117048585)]
[(2.6006308217132212,0.004383289788441667), (2.900630821713221,0.004383289788441667), (2.900630821713221,0.5043832897884417), (2.6006308217132212,0.5043832897884417)]
[(2.890389793774743,2.4695444364623214), (3.190389793774743,2.4695444364623214), (3.190389793774743,2.9695444364623214), (2.890389793774743,2.9695444364623214)]
[(4.60640805461215,0.00018335428599908227), (5.10640805461215,0.00018335428599908227), (5.10640805461215,0.30018335428599907), (4.60640805461215,0.30018335428599907)]
[(4.127454020473715,2.454297213534866), (4.427454020473715,2.454297213534866), (4.427454020473715,2.954297213534866), (4.127454020473715,2.954297213534866)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=1.3065677,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=2.8305266,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=2.8305266,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=4.192007,h=2.6490495]  java.awt.geom.Rectangle2D$Float[x=0.3113404,y=0.030361833,w=4.4572687,h=2.6501615]  
t: java.awt.geom.Rectangle2D$Float[x=0.90467846,y=0.10888579,w=0.6999999,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.10888579,w=1.3669909,h=2.9753873]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=2.7629435,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=3.0527024,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=4.9687204,h=3.084273]  java.awt.geom.Rectangle2D$Float[x=0.23768745,y=0.0,w=4.9687204,h=3.084273]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.89710486, 1.3986323] with IG = 39.824547
Iter num: 2
Used frontier: Point2D.Float[0.9433252, 2.158659] with IG = 34.14624
Iter num: 3
Added advice frontier Point2D.Float[1.2134266, 0.523332]
Added advice frontier Point2D.Float[0.56489545, 2.4375398]
Added advice frontier Point2D.Float[0.42397174, 2.235756]
Added advice frontier Point2D.Float[1.5330486, 2.6402047]
Used Advice frontier: Point2D.Float[0.56489545, 2.4375398] with IG = 212.72571
Iter num: 4
Used Advice frontier: Point2D.Float[0.42397174, 2.235756] with IG = 406.30194
Iter num: 5
Used Advice frontier: Point2D.Float[1.5330486, 2.6402047] with IG = 84.70162
Iter num: 6
Used Advice frontier: Point2D.Float[1.2134266, 0.523332] with IG = 45.13583
Iter num: 7
Used frontier: Point2D.Float[0.7148361, 0.6413776] with IG = 56.59927
Iter num: 8
Added advice frontier Point2D.Float[0.38865206, 0.08184475]
Added advice frontier Point2D.Float[0.46895733, 0.36925173]
Used Advice frontier: Point2D.Float[0.46895733, 0.36925173] with IG = 272.66193
Iter num: 9
Used Advice frontier: Point2D.Float[0.38865206, 0.08184475] with IG = 335.10342
Iter num: 10
Used frontier: Point2D.Float[1.7873002, 1.5021873] with IG = 10.940657
Iter num: 11
Used frontier: Point2D.Float[2.6608472, 1.1757736] with IG = 23.46371
Iter num: 12
Added advice frontier Point2D.Float[3.1519973, 0.8111549]
Added advice frontier Point2D.Float[3.1834185, 1.2195657]
Used Advice frontier: Point2D.Float[3.1834185, 1.2195657] with IG = 190.69302
Iter num: 13
Added advice frontier Point2D.Float[2.9793081, 0.4107896]
Added advice frontier Point2D.Float[3.2083273, 0.37911728]
Added advice frontier Point2D.Float[3.0700305, 2.0298986]
Added advice frontier Point2D.Float[3.2858787, 1.8832682]
Used Advice frontier: Point2D.Float[3.1519973, 0.8111549] with IG = 244.13004
Iter num: 14
Added advice frontier Point2D.Float[3.0114655, 0.1966338]
Added advice frontier Point2D.Float[3.112725, 0.2653911]
Added advice frontier Point2D.Float[2.9009182, 0.237893]
Added advice frontier Point2D.Float[2.9999607, 0.13260655]
Added advice frontier Point2D.Float[3.0552044, 0.12261456]
Added advice frontier Point2D.Float[2.9094784, 0.06787391]
Used Advice frontier: Point2D.Float[3.2083273, 0.37911728] with IG = 229.51868
Iter num: 15
Used Advice frontier: Point2D.Float[3.112725, 0.2653911] with IG = 673.07745
Iter num: 16
Used Advice frontier: Point2D.Float[3.0114655, 0.1966338] with IG = 817.0129
Iter num: 17
Used Advice frontier: Point2D.Float[2.9999607, 0.13260655] with IG = 1537.2157
Iter num: 18
Used Advice frontier: Point2D.Float[3.0552044, 0.12261456] with IG = 1781.2583
Iter num: 19
Used Advice frontier: Point2D.Float[2.9094784, 0.06787391] with IG = 642.39185
Iter num: 20
Used Advice frontier: Point2D.Float[2.9009182, 0.237893] with IG = 587.4251
Iter num: 21
Used Advice frontier: Point2D.Float[2.9793081, 0.4107896] with IG = 526.7668
Iter num: 22
Used Advice frontier: Point2D.Float[3.2858787, 1.8832682] with IG = 66.17349
Iter num: 23
Used Advice frontier: Point2D.Float[3.0700305, 2.0298986] with IG = 383.22638
Iter num: 24
Added advice frontier Point2D.Float[3.2636127, 2.7716312]
Added advice frontier Point2D.Float[3.3917172, 2.494242]
Used frontier: Point2D.Float[3.1787784, 2.0482345] with IG = 136.01382
Iter num: 25
Added advice frontier Point2D.Float[2.2562954, 2.5604448]
Added advice frontier Point2D.Float[2.6746206, 2.7870042]
Used Advice frontier: Point2D.Float[3.3917172, 2.494242] with IG = 193.43529
Iter num: 26
Used Advice frontier: Point2D.Float[3.2636127, 2.7716312] with IG = 327.28784
Iter num: 27
Used Advice frontier: Point2D.Float[2.2562954, 2.5604448] with IG = 59.574005
Iter num: 28
Used Advice frontier: Point2D.Float[2.6746206, 2.7870042] with IG = 210.20044
Iter num: 29
Used frontier: Point2D.Float[4.060368, 1.4022454] with IG = 9.290634
Iter num: 30
Used frontier: Point2D.Float[4.5574126, 1.7318438] with IG = 31.942883
Iter num: 31
Added advice frontier Point2D.Float[5.013399, 2.1059055]
Added advice frontier Point2D.Float[5.1728296, 1.8333241]
Used Advice frontier: Point2D.Float[5.013399, 2.1059055] with IG = 169.55344
Iter num: 32
Added advice frontier Point2D.Float[4.962238, 0.9859398]
Added advice frontier Point2D.Float[4.5761228, 2.5831192]
Added advice frontier Point2D.Float[4.7098765, 2.4045503]
Used Advice frontier: Point2D.Float[5.1728296, 1.8333241] with IG = 316.67343
Iter num: 33
Added advice frontier Point2D.Float[4.5060673, 2.8644187]
Used Advice frontier: Point2D.Float[4.7098765, 2.4045503] with IG = 119.23789
Iter num: 34
Used Advice frontier: Point2D.Float[4.5761228, 2.5831192] with IG = 448.21463
Iter num: 35
Used Advice frontier: Point2D.Float[4.5060673, 2.8644187] with IG = 344.95636
Iter num: 36
Used Advice frontier: Point2D.Float[4.962238, 0.9859398] with IG = 50.686207
Iter num: 37
Added advice frontier Point2D.Float[4.9066753, 0.30528957]
Added advice frontier Point2D.Float[4.46351, 0.530194]
Used Advice frontier: Point2D.Float[4.9066753, 0.30528957] with IG = 146.43124
Iter num: 38
Added advice frontier Point2D.Float[4.4988737, 0.30031905]
Added advice frontier Point2D.Float[4.6313334, 0.3456769]
Added advice frontier Point2D.Float[4.4145355, 0.35120916]
Used Advice frontier: Point2D.Float[4.6313334, 0.3456769] with IG = 359.33963

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,3]  [r4,b,57]  [r4,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8971048593521118, 1.398632287979126) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9433252215385437, 2.158658981323242) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5648954510688782, 2.43753981590271) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4239717423915863, 2.2357559204101562) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3310447931289673, 2.57262921333313) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5330486297607422, 2.640204668045044) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1859561204910278, 2.0751612186431885) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1870590448379517, 1.1326104402542114) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2134265899658203, 0.5233319997787476) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7148361206054688, 0.6413776278495789) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4689573347568512, 0.36925172805786133) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3886520564556122, 0.0818447470664978) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.46616509556770325, 0.20400968194007874) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9105880260467529, 0.7796472907066345) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3400059938430786, 1.185669183731079) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7873002290725708, 1.5021872520446777) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2692835330963135, 1.3739984035491943) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6608471870422363, 1.1757736206054688) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1834185123443604, 1.219565749168396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1519973278045654, 0.8111549019813538) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.208327293395996, 0.37911728024482727) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.112725019454956, 0.26539111137390137) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.011465549468994, 0.19663380086421967) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9999606609344482, 0.13260655105113983) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.055204391479492, 0.12261456251144409) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9094784259796143, 0.06787391006946564) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.9009182453155518, 0.2378930002450943) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.9793081283569336, 0.4107896089553833) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.057464122772217, 0.8726077675819397) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.153963327407837, 1.3173755407333374) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1967062950134277, 1.6871790885925293) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2858786582946777, 1.8832682371139526) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.070030450820923, 2.0298986434936523) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1787784099578857, 2.048234462738037) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.170750379562378, 2.1844191551208496) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3917171955108643, 2.494241952896118) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.263612747192383, 2.7716312408447266) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.364691734313965, 2.4997284412384033) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1438651084899902, 2.3232452869415283) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8760900497436523, 2.115039587020874) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7055885791778564, 2.2663464546203613) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.372227668762207, 2.4617316722869873) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.2562954425811768, 2.5604448318481445) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.6746206283569336, 2.787004232406616) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.615867853164673, 2.542685031890869) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7055885791778564, 2.2663464546203613) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.070030450820923, 2.0298986434936523) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2858786582946777, 1.8832682371139526) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6752572059631348, 1.5924545526504517) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.060368061065674, 1.4022454023361206) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.148627758026123, 1.6265690326690674) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.206304550170898, 1.920496940612793) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.557412624359131, 1.7318438291549683) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.013399124145508, 2.105905532836914) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.172829627990723, 1.8333240747451782) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.013399124145508, 2.105905532836914) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.766540050506592, 2.1363186836242676) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.709876537322998, 2.404550313949585) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.576122760772705, 2.5831191539764404) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.506067276000977, 2.8644187450408936) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.6424784660339355, 2.626255750656128) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.81566858291626, 2.3354203701019287) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.867063522338867, 2.0386695861816406) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.873546600341797, 1.828896164894104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.882692813873291, 1.6082814931869507) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8966383934021, 1.4099618196487427) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.957709312438965, 1.0484904050827026) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.96223783493042, 0.9859398007392883) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,t,46]  [r1,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,b,t,2]  [r3,b,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r6,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20190
RRG size = 1901

Movement Length = 25.223413
Remaining path Length = 0.14001033
Total path Length = 25.363424

Advice samples: [12, 10, 2, 2, 4, 0, 0, 0, 0, 0] (30)

Total time taken (in ms):8988.551251

Initialization time (in ms):642.289329
Sampling time (in ms):7074.078983
Advice time (in ms):8.588218
Path checking time (in ms):592.117789
Learning time (in ms):178.95849
Exploration time (in ms):0.0
Time taken other than these things (in ms):492.518442
Moving time (in ms):2415.9192



