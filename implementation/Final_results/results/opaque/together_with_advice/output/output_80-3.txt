Parameters values: 
Environment: results/environments/env80/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.9019029140175442,0.04236525987240346), (1.2019029140175441,0.04236525987240346), (1.2019029140175441,0.5423652598724035), (0.9019029140175442,0.5423652598724035)]
[(0.03897240799866653,2.542508411327633), (0.5389724079986665,2.542508411327633), (0.5389724079986665,2.842508411327633), (0.03897240799866653,2.842508411327633)]
[(2.657941830963909,0.15166417023839757), (3.157941830963909,0.15166417023839757), (3.157941830963909,0.45166417023839756), (2.657941830963909,0.45166417023839756)]
[(2.7191992856050256,2.4786445392135206), (3.0191992856050254,2.4786445392135206), (3.0191992856050254,2.9786445392135206), (2.7191992856050256,2.9786445392135206)]
[(4.624151508138515,0.19426059426071687), (5.124151508138515,0.19426059426071687), (5.124151508138515,0.4942605942607169), (4.624151508138515,0.4942605942607169)]
[(5.3390873321315375,2.592550060743596), (5.8390873321315375,2.592550060743596), (5.8390873321315375,2.892550060743596), (5.3390873321315375,2.892550060743596)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.4626455,y=0.016379444,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.016379444,w=0.7609046,h=2.8582296]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.016379444,w=1.4276586,h=2.8582296]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.016379444,w=2.8414872,h=2.8582296]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.011635878,w=4.4379287,h=2.8629732]  java.awt.geom.Rectangle2D$Float[x=0.90174097,y=0.011635878,w=4.4379287,h=2.8629732]  
t: java.awt.geom.Rectangle2D$Float[x=0.8019029,y=0.0,w=0.5,h=0.6423653]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=1.3019029,h=2.9425085]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.2579417,h=2.9425085]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=3.2579417,h=3.0786445]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.2241516,h=3.0786445]  java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=5.9390874,h=3.0786445]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0468787, 1.4470559] with IG = 33.742542
Iter num: 2
Used frontier: Point2D.Float[0.75385123, 2.3757284] with IG = 29.780067
Iter num: 3
Added advice frontier Point2D.Float[0.6369733, 2.561071]
Added advice frontier Point2D.Float[0.7135881, 2.75871]
Added advice frontier Point2D.Float[0.9932058, 2.8223615]
Added advice frontier Point2D.Float[1.4366541, 2.9455462]
Used Advice frontier: Point2D.Float[0.6369733, 2.561071] with IG = 456.37695
Iter num: 4
Used Advice frontier: Point2D.Float[0.7135881, 2.75871] with IG = 471.76636
Iter num: 5
Used Advice frontier: Point2D.Float[0.9932058, 2.8223615] with IG = 348.71042
Iter num: 6
Used Advice frontier: Point2D.Float[1.4366541, 2.9455462] with IG = 217.27794
Iter num: 7
Used frontier: Point2D.Float[1.9928708, 1.4678535] with IG = 11.4557495
Iter num: 8
Used frontier: Point2D.Float[2.764121, 1.4414088] with IG = 30.885384
Iter num: 9
Added advice frontier Point2D.Float[3.0890534, 0.9051384]
Added advice frontier Point2D.Float[3.2955716, 2.2413082]
Added advice frontier Point2D.Float[3.0671625, 1.1013703]
Added advice frontier Point2D.Float[3.1015623, 1.9129225]
Used Advice frontier: Point2D.Float[3.0671625, 1.1013703] with IG = 219.54955
Iter num: 10
Added advice frontier Point2D.Float[2.8779814, 0.5052777]
Added advice frontier Point2D.Float[2.4892402, 0.5155147]
Used Advice frontier: Point2D.Float[3.0890534, 0.9051384] with IG = 506.4593
Iter num: 11
Added advice frontier Point2D.Float[2.9507937, 2.3901248]
Added advice frontier Point2D.Float[2.9236617, 2.336783]
Used Advice frontier: Point2D.Float[2.8779814, 0.5052777] with IG = 221.16536
Iter num: 12
Used Advice frontier: Point2D.Float[2.4892402, 0.5155147] with IG = 257.15137
Iter num: 13
Added advice frontier Point2D.Float[2.288647, 0.26862776]
Added advice frontier Point2D.Float[2.1780682, 0.3646745]
Used Advice frontier: Point2D.Float[2.288647, 0.26862776] with IG = 314.36157
Iter num: 14
Used Advice frontier: Point2D.Float[2.1780682, 0.3646745] with IG = 682.74664
Iter num: 15
Used Advice frontier: Point2D.Float[3.1015623, 1.9129225] with IG = 51.84502
Iter num: 16
Added advice frontier Point2D.Float[3.5770206, 2.6106796]
Used Advice frontier: Point2D.Float[3.2955716, 2.2413082] with IG = 262.18216
Iter num: 17
Used Advice frontier: Point2D.Float[2.9507937, 2.3901248] with IG = 266.29468
Iter num: 18
Used Advice frontier: Point2D.Float[2.9236617, 2.336783] with IG = 1670.9652
Iter num: 19
Used Advice frontier: Point2D.Float[3.5770206, 2.6106796] with IG = 137.5303
Iter num: 20
Used frontier: Point2D.Float[2.5093148, 2.5718741] with IG = 19.326126
Iter num: 21
Used frontier: Point2D.Float[3.946774, 1.5258285] with IG = 12.703458
Iter num: 22
Used frontier: Point2D.Float[4.87162, 1.5763602] with IG = 21.257805
Iter num: 23
Added advice frontier Point2D.Float[5.1746655, 2.3881354]
Added advice frontier Point2D.Float[4.898195, 0.94970626]
Added advice frontier Point2D.Float[5.407408, 1.2565682]
Added advice frontier Point2D.Float[5.1857176, 1.928751]
Used Advice frontier: Point2D.Float[4.898195, 0.94970626] with IG = 123.49373
Iter num: 24
Added advice frontier Point2D.Float[4.894318, 0.50928545]
Added advice frontier Point2D.Float[5.411604, 0.6047163]
Used Advice frontier: Point2D.Float[4.894318, 0.50928545] with IG = 227.04678
Iter num: 25
Used Advice frontier: Point2D.Float[5.411604, 0.6047163] with IG = 190.10867
Iter num: 26
Added advice frontier Point2D.Float[5.2145953, 0.07624263]
Added advice frontier Point2D.Float[5.188361, 0.17221388]
Used Advice frontier: Point2D.Float[5.188361, 0.17221388] with IG = 202.9274
Iter num: 27
Used Advice frontier: Point2D.Float[5.2145953, 0.07624263] with IG = 1005.1032
Iter num: 28
Added advice frontier Point2D.Float[4.9338565, 0.12227356]
Used Advice frontier: Point2D.Float[4.9338565, 0.12227356] with IG = 351.5093
Iter num: 29
Used Advice frontier: Point2D.Float[5.407408, 1.2565682] with IG = 62.22213
Iter num: 30
Used Advice frontier: Point2D.Float[5.1857176, 1.928751] with IG = 136.58102
Iter num: 31
Used Advice frontier: Point2D.Float[5.1746655, 2.3881354] with IG = 217.61964
Iter num: 32
Added advice frontier Point2D.Float[5.039375, 2.8348954]
Added advice frontier Point2D.Float[5.300019, 2.7660527]
Added advice frontier Point2D.Float[4.97834, 2.8748786]
Used Advice frontier: Point2D.Float[5.300019, 2.7660527] with IG = 251.1525
Iter num: 33
Used Advice frontier: Point2D.Float[5.039375, 2.8348954] with IG = 370.9443
Iter num: 34
Used Advice frontier: Point2D.Float[4.97834, 2.8748786] with IG = 1370.5197
Iter num: 35
Used frontier: Point2D.Float[4.295687, 2.4171488] with IG = 17.558369
Iter num: 36
Used frontier: Point2D.Float[3.6911836, 0.2431342] with IG = 4.6474266
Iter num: 37
Used frontier: Point2D.Float[2.9333267, 0.03993359] with IG = 11.4681
Iter num: 38
Used frontier: Point2D.Float[0.7047174, 0.7076812] with IG = 4.775069
Iter num: 39
Used frontier: Point2D.Float[1.247187, 0.52996016] with IG = 38.345634
Iter num: 40
Used frontier: Point2D.Float[1.2312168, 0.50366753] with IG = 65.01357
Iter num: 41
Used frontier: Point2D.Float[0.42858738, 0.32974982] with IG = 2.1108708
Iter num: 42
Added advice frontier Point2D.Float[1.4743701, 0.1400275]
Added advice frontier Point2D.Float[1.7004349, 0.35175523]
Used Advice frontier: Point2D.Float[1.4743701, 0.1400275] with IG = 72.20631

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.046878695487976, 1.4470559358596802) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7538512349128723, 2.3757283687591553) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6369733214378357, 2.5610709190368652) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7135881185531616, 2.7587099075317383) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9932057857513428, 2.822361469268799) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.4366540908813477, 2.9455461502075195) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1476435661315918, 1.997230052947998) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.449114441871643, 1.6944656372070312) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.992870807647705, 1.4678535461425781) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2554092407226562, 1.4155490398406982) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7641210556030273, 1.4414087533950806) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.06716251373291, 1.1013703346252441) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0890533924102783, 0.905138373374939) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.877981424331665, 0.505277693271637) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.4892401695251465, 0.5155146718025208) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.288646936416626, 0.26862776279449463) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.178068161010742, 0.36467450857162476) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.365276575088501, 0.5042586922645569) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8133609294891357, 0.7866707444190979) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8465476036071777, 1.0623834133148193) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9613850116729736, 1.4428062438964844) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.101562261581421, 1.9129225015640259) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2955715656280518, 2.2413082122802734) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.950793743133545, 2.390124797821045) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.923661708831787, 2.336782932281494) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.312523365020752, 2.585094690322876) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5770206451416016, 2.6106796264648438) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.312523365020752, 2.585094690322876) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.950793743133545, 2.390124797821045) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.49989652633667, 2.532331705093384) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.509314775466919, 2.5718741416931152) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7707042694091797, 2.29181170463562) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0326056480407715, 1.983850359916687) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4085164070129395, 1.8045042753219604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.553708553314209, 1.716289758682251) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9467740058898926, 1.52582848072052) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.976883888244629, 1.4111850261688232) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.628917694091797, 1.3822948932647705) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.871620178222656, 1.5763602256774902) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.629920482635498, 1.321919322013855) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.898194789886475, 0.9497062563896179) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.894318103790283, 0.5092854499816895) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.411603927612305, 0.6047163009643555) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.25237512588501, 0.37966179847717285) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.188361167907715, 0.17221388220787048) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(5.214595317840576, 0.07624263316392899) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.93385648727417, 0.12227355688810349) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.188361167907715, 0.17221388220787048) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(5.25237512588501, 0.37966179847717285) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.205644607543945, 0.661320149898529) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.039132118225098, 0.9170404672622681) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.118027210235596, 1.1244533061981201) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.407408237457275, 1.256568193435669) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.254710674285889, 1.4415379762649536) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.206264019012451, 1.7301093339920044) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.185717582702637, 1.928750991821289) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.174665451049805, 2.3881354331970215) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.300018787384033, 2.766052722930908) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.039374828338623, 2.834895372390747) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.978340148925781, 2.8748786449432373) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.884602069854736, 2.760105609893799) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.626407146453857, 2.5028879642486572) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.295687198638916, 2.4171488285064697) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.432370185852051, 2.4891679286956787) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.768081188201904, 2.345386505126953) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.826594829559326, 2.1427838802337646) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.915016174316406, 1.9517444372177124) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.783418655395508, 1.8764678239822388) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.4815993309021, 1.7033036947250366) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.289675712585449, 1.589210033416748) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.046738147735596, 1.4542303085327148) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.740882635116577, 1.3442429304122925) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.227203130722046, 1.0906083583831787) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1837804317474365, 1.0611761808395386) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.201747417449951, 0.9027565717697144) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4266369342803955, 0.6087592840194702) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.691183567047119, 0.24313420057296753) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.291760206222534, 0.14423052966594696) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9333267211914062, 0.03993358835577965) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6615915298461914, 0.05003933608531952) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6413259506225586, 0.48233339190483093) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.741489887237549, 0.6961294412612915) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.832223653793335, 0.9310089349746704) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7974421977996826, 1.0803660154342651) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.397427797317505, 1.0948539972305298) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.847597360610962, 1.0694581270217896) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4902634620666504, 1.0700154304504395) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1264050006866455, 1.047575831413269) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9295133352279663, 0.8922984004020691) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7047173976898193, 0.7076811790466309) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9395104646682739, 0.6605955362319946) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2471870183944702, 0.5299601554870605) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.2312167882919312, 0.5036675333976746) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.224604845046997, 0.5591059327125549) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7297629714012146, 0.5864549279212952) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.700623095035553, 0.5674828290939331) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4285873770713806, 0.32974982261657715) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.700623095035553, 0.5674828290939331) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7297629714012146, 0.5864549279212952) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.224604845046997, 0.5591059327125549) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [r2,46]  [h,46]  [r3,46]  [r3,t,46]  [r3,46]  [r3,b,32]  [r3,32]  [h,32]  [r4,32]  [r4,t,32]  [r4,32]  [r4,b,25]  [r4,25]  [r4,t,25]  [r4,25]  [h,25]  [r5,25]  [r5,t,25]  [r5,25]  [r5,b,t,42]  [r5,b,42]  [r5,t,42]  [r5,b,t,42]  [r5,42]  [h,42]  [r6,42]  [r6,t,42]  [r6,b,33]  [r6,33]  [h,33]  [r3,33]  [r3,t,33]  [r3,33]  [h,33]  [r1,33]  [r1,t,33]  [r1,33]  [r1,t,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 42
Total sampled points = 22981
RRG size = 2101

Movement Length = 33.600636
Remaining path Length = 0.0
Total path Length = 33.600636

Advice samples: [13, 5, 3, 4, 3, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):10946.139302

Initialization time (in ms):494.383519
Sampling time (in ms):8860.739328
Advice time (in ms):8.989282
Path checking time (in ms):926.326249
Learning time (in ms):209.514101
Exploration time (in ms):0.0
Time taken other than these things (in ms):446.186823
Moving time (in ms):3959.423



