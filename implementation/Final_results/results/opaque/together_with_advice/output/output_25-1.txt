Parameters values: 
Environment: results/environments/env25/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.5937390829624685,0.004281899667891163), (0.8937390829624685,0.004281899667891163), (0.8937390829624685,0.5042818996678912), (0.5937390829624685,0.5042818996678912)]
[(1.2921973656492045,2.6178082612597757), (1.7921973656492045,2.6178082612597757), (1.7921973656492045,2.9178082612597755), (1.2921973656492045,2.9178082612597755)]
[(2.781999202671893,0.23776887899508192), (3.281999202671893,0.23776887899508192), (3.281999202671893,0.5377688789950819), (2.781999202671893,0.5377688789950819)]
[(2.8956815412845263,2.57881261952147), (3.3956815412845263,2.57881261952147), (3.3956815412845263,2.8788126195214696), (2.8956815412845263,2.8788126195214696)]
[(4.958039048205711,0.0584349063029868), (5.458039048205711,0.0584349063029868), (5.458039048205711,0.3584349063029868), (4.958039048205711,0.3584349063029868)]
[(5.3742646647603465,2.627869561579521), (5.8742646647603465,2.627869561579521), (5.8742646647603465,2.927869561579521), (5.3742646647603465,2.927869561579521)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=0.79806864,h=2.6309826]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=3.264,h=2.6309826]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=3.264,h=2.6775007]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=4.333941,h=2.6775007]  java.awt.geom.Rectangle2D$Float[x=0.30027235,y=0.039695635,w=4.333941,h=2.6775007]  
t: java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=0.5,h=0.6042819]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=1.3984582,h=3.0178082]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=2.8882601,h=3.0178082]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=3.0019424,h=3.0178082]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=5.0643,h=3.0178082]  java.awt.geom.Rectangle2D$Float[x=0.49373907,y=0.0,w=5.4805255,h=3.0278695]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.97152543, 1.649567] with IG = 36.188194
Iter num: 2
Used frontier: Point2D.Float[1.080089, 2.439759] with IG = 58.925682
Iter num: 3
Added advice frontier Point2D.Float[1.5177414, 2.5639906]
Added advice frontier Point2D.Float[1.7910962, 2.2227435]
Added advice frontier Point2D.Float[1.0492833, 2.5440493]
Added advice frontier Point2D.Float[0.8974075, 2.4804773]
Added advice frontier Point2D.Float[1.2471434, 2.5844598]
Used Advice frontier: Point2D.Float[1.0492833, 2.5440493] with IG = 919.58356
Iter num: 4
Used Advice frontier: Point2D.Float[0.8974075, 2.4804773] with IG = 607.37103
Iter num: 5
Used Advice frontier: Point2D.Float[1.2471434, 2.5844598] with IG = 274.07285
Iter num: 6
Used Advice frontier: Point2D.Float[1.5177414, 2.5639906] with IG = 368.49902
Iter num: 7
Used Advice frontier: Point2D.Float[1.7910962, 2.2227435] with IG = 228.71118
Iter num: 8
Used frontier: Point2D.Float[1.8139246, 1.4713893] with IG = 14.775027
Iter num: 9
Used frontier: Point2D.Float[2.7314079, 1.6468843] with IG = 23.72756
Iter num: 10
Added advice frontier Point2D.Float[2.9763632, 2.1851373]
Added advice frontier Point2D.Float[3.127464, 0.7670666]
Added advice frontier Point2D.Float[3.0547447, 1.0449874]
Added advice frontier Point2D.Float[3.043972, 2.5355716]
Added advice frontier Point2D.Float[2.9230275, 2.4036787]
Used Advice frontier: Point2D.Float[2.9763632, 2.1851373] with IG = 169.09866
Iter num: 11
Added advice frontier Point2D.Float[2.5985405, 2.5561733]
Added advice frontier Point2D.Float[2.439877, 2.892963]
Used Advice frontier: Point2D.Float[2.9230275, 2.4036787] with IG = 444.53214
Iter num: 12
Used Advice frontier: Point2D.Float[3.043972, 2.5355716] with IG = 558.8135
Iter num: 13
Used Advice frontier: Point2D.Float[2.5985405, 2.5561733] with IG = 224.26167
Iter num: 14
Used Advice frontier: Point2D.Float[2.439877, 2.892963] with IG = 268.60635
Iter num: 15
Used Advice frontier: Point2D.Float[3.0547447, 1.0449874] with IG = 50.568607
Iter num: 16
Added advice frontier Point2D.Float[3.2869906, 0.52581674]
Added advice frontier Point2D.Float[3.7208624, 0.48207304]
Used Advice frontier: Point2D.Float[3.127464, 0.7670666] with IG = 348.09604
Iter num: 17
Added advice frontier Point2D.Float[3.550267, 0.21218257]
Used Advice frontier: Point2D.Float[3.2869906, 0.52581674] with IG = 222.02989
Iter num: 18
Used Advice frontier: Point2D.Float[3.550267, 0.21218257] with IG = 244.2071
Iter num: 19
Used Advice frontier: Point2D.Float[3.7208624, 0.48207304] with IG = 313.19864
Iter num: 20
Added advice frontier Point2D.Float[3.3682566, 0.26350448]
Used Advice frontier: Point2D.Float[3.3682566, 0.26350448] with IG = 241.04918
Iter num: 21
Used frontier: Point2D.Float[2.4907587, 0.29526234] with IG = 41.888245
Iter num: 22
Used frontier: Point2D.Float[3.7722704, 1.566903] with IG = 14.907209
Iter num: 23
Used frontier: Point2D.Float[4.645726, 1.4366465] with IG = 22.171803
Iter num: 24
Added advice frontier Point2D.Float[4.8510027, 2.0856714]
Used Advice frontier: Point2D.Float[4.8510027, 2.0856714] with IG = 120.21554
Iter num: 25
Added advice frontier Point2D.Float[5.331407, 2.6740532]
Added advice frontier Point2D.Float[4.9126663, 2.8656714]
Added advice frontier Point2D.Float[5.11293, 0.9504656]
Added advice frontier Point2D.Float[5.2573056, 1.2690853]
Added advice frontier Point2D.Float[4.2929387, 2.6776192]
Added advice frontier Point2D.Float[4.2717695, 2.4538417]
Used Advice frontier: Point2D.Float[5.331407, 2.6740532] with IG = 123.2893
Iter num: 26
Used Advice frontier: Point2D.Float[4.9126663, 2.8656714] with IG = 217.1547
Iter num: 27
Used Advice frontier: Point2D.Float[4.2929387, 2.6776192] with IG = 148.70659
Iter num: 28
Used Advice frontier: Point2D.Float[4.2717695, 2.4538417] with IG = 444.88617
Iter num: 29
Used Advice frontier: Point2D.Float[5.2573056, 1.2690853] with IG = 60.273342
Iter num: 30
Added advice frontier Point2D.Float[4.873609, 0.40508723]
Used Advice frontier: Point2D.Float[5.11293, 0.9504656] with IG = 285.87433
Iter num: 31
Used Advice frontier: Point2D.Float[4.873609, 0.40508723] with IG = 167.76157
Iter num: 32
Added advice frontier Point2D.Float[4.6325326, 0.12931037]
Added advice frontier Point2D.Float[4.7767577, 0.23436902]
Used Advice frontier: Point2D.Float[4.7767577, 0.23436902] with IG = 509.4825
Iter num: 33
Used Advice frontier: Point2D.Float[4.6325326, 0.12931037] with IG = 560.43555
Iter num: 34
Used frontier: Point2D.Float[5.804252, 0.4294443] with IG = 16.952662
Iter num: 35
Used frontier: Point2D.Float[5.640413, 0.17905934] with IG = 6.68392
Iter num: 36
Used frontier: Point2D.Float[5.7381916, 2.123994] with IG = 5.12849
Iter num: 37
Used frontier: Point2D.Float[3.6296802, 2.6486392] with IG = 5.5803995
Iter num: 38
Used frontier: Point2D.Float[0.93988377, 0.7533004] with IG = 6.8892593
Iter num: 39
Added advice frontier Point2D.Float[0.7114166, 0.6006529]
Added advice frontier Point2D.Float[0.32786703, 0.38083604]
Used Advice frontier: Point2D.Float[0.7114166, 0.6006529] with IG = 363.94083
Iter num: 40
Used Advice frontier: Point2D.Float[0.32786703, 0.38083604] with IG = 226.2063
Iter num: 41
Added advice frontier Point2D.Float[0.41210324, 0.23629597]
Added advice frontier Point2D.Float[0.37258393, 0.025237238]
Used Advice frontier: Point2D.Float[0.41210324, 0.23629597] with IG = 597.74695

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9715254306793213, 1.6495670080184937) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0800889730453491, 2.4397590160369873) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0492832660675049, 2.5440492630004883) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8974074721336365, 2.4804773330688477) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2471433877944946, 2.5844597816467285) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.5177414417266846, 2.563990592956543) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.7910962104797363, 2.222743511199951) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1852140426635742, 2.0479507446289062) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1364012956619263, 1.8225003480911255) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8139245510101318, 1.4713892936706543) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.336606979370117, 1.374168872833252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.731407880783081, 1.6468843221664429) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.976363182067871, 2.1851372718811035) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.923027515411377, 2.4036786556243896) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0439720153808594, 2.535571575164795) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.5985405445098877, 2.556173324584961) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.4398770332336426, 2.89296293258667) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.628070831298828, 2.590726375579834) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.8564388751983643, 2.13374400138855) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8980376720428467, 1.6702404022216797) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0159480571746826, 1.1541906595230103) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0547447204589844, 1.044987440109253) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1274640560150146, 0.7670665979385376) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1512134075164795, 0.8567029237747192) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2869906425476074, 0.5258167386054993) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.550266981124878, 0.21218256652355194) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.72086238861084, 0.482073038816452) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3682565689086914, 0.2635044753551483) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(2.960254669189453, 0.04823291674256325) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.63028883934021, 0.11395252496004105) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4907586574554443, 0.29526233673095703) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.512913942337036, 0.34367796778678894) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.833866596221924, 0.6746490597724915) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0670223236083984, 0.925678014755249) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2773427963256836, 1.1463252305984497) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.626400947570801, 1.4442245960235596) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.772270441055298, 1.566902995109558) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.824244260787964, 1.636428713798523) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.250426292419434, 1.8021506071090698) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.645726203918457, 1.4366464614868164) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.559767723083496, 1.6407722234725952) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8800554275512695, 1.872782826423645) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8510026931762695, 2.0856714248657227) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.120208740234375, 2.2006676197052) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.331407070159912, 2.674053192138672) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.912666320800781, 2.865671396255493) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.756908416748047, 2.897585153579712) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.292938709259033, 2.677619218826294) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.2717695236206055, 2.4538416862487793) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.615738391876221, 2.373767614364624) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.8510026931762695, 2.0856714248657227) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.034590244293213, 1.832871675491333) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.123595714569092, 1.7222963571548462) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.211204528808594, 1.3235517740249634) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.25730562210083, 1.2690852880477905) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.112929821014404, 0.9504656195640564) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.969967365264893, 0.6551032662391663) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.8736090660095215, 0.4050872325897217) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.776757717132568, 0.23436902463436127) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.632532596588135, 0.12931036949157715) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.8736090660095215, 0.4050872325897217) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.180866718292236, 0.5009883046150208) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.812591552734375, 0.46421343088150024) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.8042521476745605, 0.4294443130493164) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.6404128074646, 0.17905934154987335) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.812591552734375, 0.46421343088150024) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.180866718292236, 0.5009883046150208) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.120944976806641, 0.7269718647003174) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.112929821014404, 0.9504656195640564) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.073395252227783, 1.2039318084716797) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.105319976806641, 1.4100348949432373) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.123595714569092, 1.7222963571548462) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.154252052307129, 2.050786256790161) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.377500057220459, 2.0716090202331543) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.738191604614258, 2.1239941120147705) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.377500057220459, 2.0716090202331543) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.154252052307129, 2.050786256790161) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.821972370147705, 1.8788995742797852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.522409439086914, 1.7769746780395508) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.344699382781982, 1.784801959991455) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9344661235809326, 1.8060723543167114) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6652376651763916, 1.807471513748169) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.374474048614502, 1.7680000066757202) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.130647659301758, 2.018026828765869) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2429072856903076, 2.158996343612671) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3504481315612793, 2.2940444946289062) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.6296801567077637, 2.64863920211792) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3847718238830566, 2.4358325004577637) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0624337196350098, 2.233752965927124) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8605339527130127, 1.962876319885254) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6626675128936768, 1.86696195602417) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1522202491760254, 1.6051759719848633) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.751361608505249, 1.39126455783844) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4226815700531006, 1.210423469543457) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2246978282928467, 1.0899966955184937) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9398837685585022, 0.7533004283905029) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7114166021347046, 0.6006528735160828) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r4,46]  [r4,t,46]  [r4,b,8]  [r4,8]  [r4,b,8]  [r4,8]  [h,8]  [r3,8]  [r3,t,8]  [r3,b,25]  [r3,25]  [r3,b,t,25]  [r3,25]  [h,25]  [r6,25]  [r6,t,25]  [r6,25]  [r6,b,27]  [r6,27]  [h,27]  [r5,27]  [r5,t,27]  [r5,27]  [r5,b,33]  [r5,t,33]  [r5,33]  [h,33]  [r6,33]  [h,33]  [r4,33]  [h,33]  [r1,33]  [r1,t,33]  [r1,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 41
Total sampled points = 22186
RRG size = 2052

Movement Length = 33.81986
Remaining path Length = 0.0
Total path Length = 33.81986

Advice samples: [16, 4, 8, 1, 0, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):10619.899592

Initialization time (in ms):645.756687
Sampling time (in ms):8372.687009
Advice time (in ms):9.036599
Path checking time (in ms):836.349103
Learning time (in ms):190.608443
Exploration time (in ms):0.0
Time taken other than these things (in ms):565.461751
Moving time (in ms):3019.899



