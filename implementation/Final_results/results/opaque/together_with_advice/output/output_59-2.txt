Parameters values: 
Environment: results/environments/env59/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.2430474075953547,0.1766358591375672), (0.7430474075953547,0.1766358591375672), (0.7430474075953547,0.47663585913756723), (0.2430474075953547,0.47663585913756723)]
[(1.1531611604850611,2.5493779046907132), (1.6531611604850611,2.5493779046907132), (1.6531611604850611,2.849377904690713), (1.1531611604850611,2.849377904690713)]
[(3.158503785312848,0.02967261413054703), (3.458503785312848,0.02967261413054703), (3.458503785312848,0.529672614130547), (3.158503785312848,0.529672614130547)]
[(2.1181638264099387,2.582839299222618), (2.6181638264099387,2.582839299222618), (2.6181638264099387,2.882839299222618), (2.1181638264099387,2.882839299222618)]
[(4.3222075434246365,0.1818056803870543), (4.8222075434246365,0.1818056803870543), (4.8222075434246365,0.4818056803870543), (4.3222075434246365,0.4818056803870543)]
[(4.991932730552063,2.4816484676463757), (5.2919327305520625,2.4816484676463757), (5.2919327305520625,2.9816484676463757), (4.991932730552063,2.9816484676463757)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0050391,y=0.18704262,w=0.20000005,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.7404353,y=0.18704262,w=0.46460384,h=2.576771]  java.awt.geom.Rectangle2D$Float[x=0.7404353,y=0.026776116,w=1.7513633,h=2.7370377]  java.awt.geom.Rectangle2D$Float[x=0.7404353,y=0.026776116,w=2.6871703,h=2.7370377]  java.awt.geom.Rectangle2D$Float[x=0.7404353,y=0.026776116,w=4.6640944,h=2.7370377]  java.awt.geom.Rectangle2D$Float[x=0.7404353,y=0.026776116,w=5.0048766,h=2.7370377]  
t: java.awt.geom.Rectangle2D$Float[x=0.1430474,y=0.07663586,w=0.7,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.1430474,y=0.07663586,w=1.6101137,h=2.8727422]  java.awt.geom.Rectangle2D$Float[x=0.1430474,y=0.0,w=3.4154565,h=2.949378]  java.awt.geom.Rectangle2D$Float[x=0.1430474,y=0.0,w=3.4154565,h=2.9828393]  java.awt.geom.Rectangle2D$Float[x=0.1430474,y=0.0,w=4.77916,h=2.9828393]  java.awt.geom.Rectangle2D$Float[x=0.1430474,y=0.0,w=5.2488856,h=3.0816483]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9401204, 1.45094] with IG = 38.024998
Iter num: 2
Used frontier: Point2D.Float[0.94580746, 2.1246827] with IG = 44.5258
Iter num: 3
Added advice frontier Point2D.Float[1.258981, 2.5087066]
Added advice frontier Point2D.Float[1.0280792, 2.502345]
Added advice frontier Point2D.Float[0.7445019, 2.5844834]
Added advice frontier Point2D.Float[0.78046453, 0.5510919]
Used Advice frontier: Point2D.Float[1.0280792, 2.502345] with IG = 258.719
Iter num: 4
Used Advice frontier: Point2D.Float[1.258981, 2.5087066] with IG = 432.9202
Iter num: 5
Used Advice frontier: Point2D.Float[0.7445019, 2.5844834] with IG = 192.29672
Iter num: 6
Used Advice frontier: Point2D.Float[0.78046453, 0.5510919] with IG = 49.01788
Iter num: 7
Added advice frontier Point2D.Float[1.0274968, 0.36379918]
Added advice frontier Point2D.Float[0.97480613, 0.2084754]
Used Advice frontier: Point2D.Float[1.0274968, 0.36379918] with IG = 322.57474
Iter num: 8
Used Advice frontier: Point2D.Float[0.97480613, 0.2084754] with IG = 609.6904
Iter num: 9
Used frontier: Point2D.Float[0.93419397, 0.17781681] with IG = 373.39
Iter num: 10
Used frontier: Point2D.Float[1.8827475, 1.4857714] with IG = 12.545763
Iter num: 11
Used frontier: Point2D.Float[2.8173823, 1.38699] with IG = 23.35765
Iter num: 12
Added advice frontier Point2D.Float[3.188098, 0.77171814]
Added advice frontier Point2D.Float[3.15506, 0.5664615]
Added advice frontier Point2D.Float[3.1272943, 2.0245068]
Added advice frontier Point2D.Float[3.1144018, 1.7195997]
Added advice frontier Point2D.Float[2.9382634, 0.691467]
Used Advice frontier: Point2D.Float[3.1144018, 1.7195997] with IG = 224.25255
Iter num: 13
Used Advice frontier: Point2D.Float[3.1272943, 2.0245068] with IG = 327.67596
Iter num: 14
Added advice frontier Point2D.Float[2.331122, 2.4833446]
Added advice frontier Point2D.Float[3.3365757, 2.703297]
Added advice frontier Point2D.Float[3.0608404, 2.5189698]
Used Advice frontier: Point2D.Float[3.0608404, 2.5189698] with IG = 200.43753
Iter num: 15
Used Advice frontier: Point2D.Float[3.3365757, 2.703297] with IG = 301.50247
Iter num: 16
Used Advice frontier: Point2D.Float[2.331122, 2.4833446] with IG = 92.997154
Iter num: 17
Used Advice frontier: Point2D.Float[3.188098, 0.77171814] with IG = 49.69678
Iter num: 18
Used Advice frontier: Point2D.Float[3.15506, 0.5664615] with IG = 481.0039
Iter num: 19
Added advice frontier Point2D.Float[2.466623, 0.14528263]
Added advice frontier Point2D.Float[2.3314893, 0.36808297]
Used Advice frontier: Point2D.Float[2.9382634, 0.691467] with IG = 399.59372
Iter num: 20
Used Advice frontier: Point2D.Float[2.3314893, 0.36808297] with IG = 143.5884
Iter num: 21
Used Advice frontier: Point2D.Float[2.466623, 0.14528263] with IG = 383.76163
Iter num: 22
Used frontier: Point2D.Float[3.33241, 0.82648945] with IG = 15.40863
Iter num: 23
Used frontier: Point2D.Float[3.3191206, 0.78406084] with IG = 89.96612
Iter num: 24
Used frontier: Point2D.Float[3.33241, 0.82648945] with IG = 337.37292
Iter num: 25
Used frontier: Point2D.Float[3.9565024, 1.4907] with IG = 18.003077
Iter num: 26
Used frontier: Point2D.Float[4.7061186, 1.6392114] with IG = 30.503073
Iter num: 27
Added advice frontier Point2D.Float[5.250274, 2.2729244]
Added advice frontier Point2D.Float[5.120204, 0.8650433]
Added advice frontier Point2D.Float[5.0590963, 1.2454965]
Added advice frontier Point2D.Float[5.203456, 2.4335146]
Added advice frontier Point2D.Float[4.9512305, 2.3303716]
Used Advice frontier: Point2D.Float[5.0590963, 1.2454965] with IG = 174.35938
Iter num: 28
Added advice frontier Point2D.Float[5.2350774, 0.32167]
Added advice frontier Point2D.Float[4.8538013, 0.4842024]
Added advice frontier Point2D.Float[5.2054935, 0.37160707]
Used Advice frontier: Point2D.Float[5.120204, 0.8650433] with IG = 259.51816
Iter num: 29
Used Advice frontier: Point2D.Float[5.2054935, 0.37160707] with IG = 199.69704
Iter num: 30
Used Advice frontier: Point2D.Float[5.2350774, 0.32167] with IG = 1722.8785
Iter num: 31
Used Advice frontier: Point2D.Float[4.8538013, 0.4842024] with IG = 241.26993
Iter num: 32
Used Advice frontier: Point2D.Float[4.9512305, 2.3303716] with IG = 51.703396
Iter num: 33
Added advice frontier Point2D.Float[5.5946975, 2.5916173]
Added advice frontier Point2D.Float[5.795839, 2.4143753]
Used Advice frontier: Point2D.Float[5.203456, 2.4335146] with IG = 366.97278

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9401203989982605, 1.4509400129318237) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9458074569702148, 2.124682664871216) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0280791521072388, 2.502345085144043) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2589809894561768, 2.508706569671631) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7445018887519836, 2.5844833850860596) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7726346254348755, 2.398542642593384) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.837763786315918, 1.6295489072799683) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8212934732437134, 1.083618402481079) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7804645299911499, 0.5510919094085693) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0274968147277832, 0.36379918456077576) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9748061299324036, 0.20847539603710175) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9341939687728882, 0.17781680822372437) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1345560550689697, 0.8792767524719238) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2089194059371948, 1.1311053037643433) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8516864776611328, 1.4681004285812378) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8827475309371948, 1.4857714176177979) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.521573305130005, 1.5581773519515991) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.817382335662842, 1.386989951133728) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1144018173217773, 1.719599723815918) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1272943019866943, 2.0245068073272705) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.060840368270874, 2.518969774246216) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.336575746536255, 2.7032968997955322) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.121399164199829, 2.591045618057251) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7662458419799805, 2.422269821166992) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.3311219215393066, 2.483344554901123) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.5874011516571045, 2.3248989582061768) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8286526203155518, 2.0760562419891357) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8877201080322266, 1.7224847078323364) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0261964797973633, 1.3419687747955322) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1971616744995117, 0.8740627765655518) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1880979537963867, 0.7717181444168091) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.155060052871704, 0.5664615035057068) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.938263416290283, 0.6914669871330261) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6689038276672363, 0.6094785928726196) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.331489324569702, 0.3680829703807831) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.466623067855835, 0.14528262615203857) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.859367609024048, 0.41694071888923645) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0009331703186035, 0.5354183316230774) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3324100971221924, 0.8264894485473633) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3191206455230713, 0.7840608358383179) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3324100971221924, 0.8264894485473633) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1971616744995117, 0.8740627765655518) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1899869441986084, 1.2641596794128418) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.45032000541687, 1.333275556564331) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.796121120452881, 1.435257077217102) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9565024375915527, 1.4907000064849854) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.36000919342041, 1.4752033948898315) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.706118583679199, 1.6392114162445068) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.895974159240723, 1.2792657613754272) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.059096336364746, 1.2454965114593506) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.120203971862793, 0.8650432825088501) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.177661418914795, 0.5391625165939331) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.205493450164795, 0.37160706520080566) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.235077381134033, 0.3216699957847595) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.853801250457764, 0.48420241475105286) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.973803997039795, 0.6538726091384888) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.069515228271484, 0.9936153292655945) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.059096336364746, 1.2454965114593506) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.906825542449951, 1.6212525367736816) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.884689807891846, 1.9613326787948608) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [r5,b,21]  [r5,t,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  


Remaining path: 
[r6,t,21]  [r6,21]  [r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 33
Total sampled points = 18164
RRG size = 1651

Movement Length = 21.491316
Remaining path Length = 0.63653076
Total path Length = 22.127846

Advice samples: [9, 4, 3, 4, 1, 2, 0, 0, 0, 0] (23)

Total time taken (in ms):7938.576513

Initialization time (in ms):504.916485
Sampling time (in ms):6256.960431
Advice time (in ms):6.87525
Path checking time (in ms):561.374354
Learning time (in ms):169.352857
Exploration time (in ms):0.0
Time taken other than these things (in ms):439.097136
Moving time (in ms):2415.9192



