Parameters values: 
Environment: results/environments/env68/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.8954252276504072,0.20311360810568355), (1.3954252276504073,0.20311360810568355), (1.3954252276504073,0.5031136081056835), (0.8954252276504072,0.5031136081056835)]
[(0.355872380642126,2.6231142255295636), (0.855872380642126,2.6231142255295636), (0.855872380642126,2.9231142255295635), (0.355872380642126,2.9231142255295635)]
[(2.974022726205254,0.031906984478099296), (3.2740227262052537,0.031906984478099296), (3.2740227262052537,0.5319069844780993), (2.974022726205254,0.5319069844780993)]
[(3.0533537110996685,2.4983444834970197), (3.5533537110996685,2.4983444834970197), (3.5533537110996685,2.7983444834970195), (3.0533537110996685,2.7983444834970195)]
[(4.797814818012443,0.08683983328058655), (5.297814818012443,0.08683983328058655), (5.297814818012443,0.3868398332805865), (4.797814818012443,0.3868398332805865)]
[(5.2502397141982655,2.4633012176165927), (5.7502397141982655,2.4633012176165927), (5.7502397141982655,2.7633012176165925), (5.2502397141982655,2.7633012176165925)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.5067703,y=0.21261315,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.21261315,w=0.6857703,h=2.4572105]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.005347629,w=3.6421733,h=2.664476]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.005347629,w=3.6421733,h=2.664476]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.005347629,w=4.6982493,h=2.664476]  java.awt.geom.Rectangle2D$Float[x=0.021000035,y=0.005347629,w=4.6982493,h=2.7112648]  
t: java.awt.geom.Rectangle2D$Float[x=0.79542524,y=0.10311361,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.10311361,w=1.2395529,h=2.9200006]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.0,w=3.1181502,h=3.0231142]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.0,w=3.3974814,h=3.0231142]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.0,w=5.1419425,h=3.0231142]  java.awt.geom.Rectangle2D$Float[x=0.25587237,y=0.0,w=5.5943675,h=3.0231142]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.98317385, 1.4106385] with IG = 36.048897
Iter num: 2
Used frontier: Point2D.Float[1.1208586, 2.3333886] with IG = 31.083673
Iter num: 3
Added advice frontier Point2D.Float[0.8673315, 2.9109304]
Used Advice frontier: Point2D.Float[0.8673315, 2.9109304] with IG = 158.54442
Iter num: 4
Added advice frontier Point2D.Float[0.21028456, 2.641851]
Used Advice frontier: Point2D.Float[0.21028456, 2.641851] with IG = 81.213066
Iter num: 5
Added advice frontier Point2D.Float[0.31842288, 2.5937855]
Used Advice frontier: Point2D.Float[0.31842288, 2.5937855] with IG = 845.0281
Iter num: 6
Used frontier: Point2D.Float[0.21028456, 2.641851] with IG = 33.801125
Iter num: 7
Used frontier: Point2D.Float[0.31967837, 2.7202904] with IG = 29.715553
Iter num: 8
Used frontier: Point2D.Float[1.9318283, 1.4659034] with IG = 10.958145
Iter num: 9
Used frontier: Point2D.Float[2.8232849, 1.7188252] with IG = 22.556107
Iter num: 10
Added advice frontier Point2D.Float[3.1109102, 2.4975338]
Added advice frontier Point2D.Float[3.3026264, 2.3639874]
Added advice frontier Point2D.Float[3.2926435, 2.448828]
Added advice frontier Point2D.Float[3.144716, 0.92758423]
Added advice frontier Point2D.Float[3.0196748, 1.0113858]
Added advice frontier Point2D.Float[2.8666856, 2.4768207]
Added advice frontier Point2D.Float[2.879565, 2.4219062]
Used Advice frontier: Point2D.Float[3.0196748, 1.0113858] with IG = 134.61166
Iter num: 11
Added advice frontier Point2D.Float[3.3056023, 0.46527794]
Added advice frontier Point2D.Float[3.215339, 0.6852093]
Used Advice frontier: Point2D.Float[3.144716, 0.92758423] with IG = 664.33795
Iter num: 12
Added advice frontier Point2D.Float[3.5964105, 0.067285515]
Used Advice frontier: Point2D.Float[3.215339, 0.6852093] with IG = 396.11118
Iter num: 13
Used Advice frontier: Point2D.Float[3.3056023, 0.46527794] with IG = 420.6389
Iter num: 14
Used Advice frontier: Point2D.Float[3.5964105, 0.067285515] with IG = 202.87383
Iter num: 15
Used Advice frontier: Point2D.Float[3.3026264, 2.3639874] with IG = 40.99841
Iter num: 16
Used Advice frontier: Point2D.Float[3.2926435, 2.448828] with IG = 1170.606
Iter num: 17
Used Advice frontier: Point2D.Float[3.1109102, 2.4975338] with IG = 531.4994
Iter num: 18
Used Advice frontier: Point2D.Float[2.879565, 2.4219062] with IG = 410.85825
Iter num: 19
Used Advice frontier: Point2D.Float[2.8666856, 2.4768207] with IG = 1772.9053
Iter num: 20
Used frontier: Point2D.Float[2.9544117, 2.6457632] with IG = 36.772182
Iter num: 21
Used frontier: Point2D.Float[3.8146229, 1.4792846] with IG = 19.638718
Iter num: 22
Used frontier: Point2D.Float[4.5617123, 1.628626] with IG = 28.049936
Iter num: 23
Added advice frontier Point2D.Float[5.2161384, 2.1640236]
Added advice frontier Point2D.Float[5.144698, 1.7508727]
Used Advice frontier: Point2D.Float[5.144698, 1.7508727] with IG = 133.98059
Iter num: 24
Added advice frontier Point2D.Float[5.125552, 0.93853]
Added advice frontier Point2D.Float[4.85999, 1.0129112]
Added advice frontier Point2D.Float[5.164568, 2.3713083]
Used Advice frontier: Point2D.Float[5.2161384, 2.1640236] with IG = 238.50298
Iter num: 25
Used Advice frontier: Point2D.Float[5.164568, 2.3713083] with IG = 468.15714
Iter num: 26
Added advice frontier Point2D.Float[4.304587, 2.64452]
Used Advice frontier: Point2D.Float[4.304587, 2.64452] with IG = 109.84756
Iter num: 27
Used Advice frontier: Point2D.Float[4.85999, 1.0129112] with IG = 51.515747
Iter num: 28
Added advice frontier Point2D.Float[4.6503778, 0.4207653]
Added advice frontier Point2D.Float[4.653264, 0.11224145]
Added advice frontier Point2D.Float[4.7149425, 0.15701668]
Used Advice frontier: Point2D.Float[5.125552, 0.93853] with IG = 362.6051
Iter num: 29
Used Advice frontier: Point2D.Float[4.6503778, 0.4207653] with IG = 135.43356
Iter num: 30
Used Advice frontier: Point2D.Float[4.7149425, 0.15701668] with IG = 368.27493
Iter num: 31
Used Advice frontier: Point2D.Float[4.653264, 0.11224145] with IG = 1312.0414
Iter num: 32
Added advice frontier Point2D.Float[4.71844, 0.25677055]
Added advice frontier Point2D.Float[4.7859597, 0.35631597]
Used Advice frontier: Point2D.Float[4.71844, 0.25677055] with IG = 630.735
Iter num: 33
Used Advice frontier: Point2D.Float[4.7859597, 0.35631597] with IG = 831.36707
Iter num: 34
Used frontier: Point2D.Float[4.653264, 0.11224145] with IG = 28.796263
Iter num: 35
Used frontier: Point2D.Float[5.784311, 0.40150413] with IG = 19.454418
Iter num: 36
Used frontier: Point2D.Float[5.682507, 0.46668568] with IG = 41.36239
Iter num: 37
Used frontier: Point2D.Float[5.578722, 0.17446613] with IG = 16.1237
Iter num: 38
Used frontier: Point2D.Float[2.3052788, 0.3311262] with IG = 8.77826
Iter num: 39
Used frontier: Point2D.Float[0.7504229, 0.67803365] with IG = 5.672633
Iter num: 40
Added advice frontier Point2D.Float[0.6079759, 0.34762844]
Added advice frontier Point2D.Float[0.10402493, 0.45843276]
Used Advice frontier: Point2D.Float[0.6079759, 0.34762844] with IG = 277.92926

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r4,b,57]  [h,57]  [r3,57]  [r3,b,15]  [r3,15]  [h,15]  [r2,15]  [r2,b,33]  [r2,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9831738471984863, 1.410638451576233) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1208585500717163, 2.333388566970825) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8673315048217773, 2.9109303951263428) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8963961601257324, 2.4059653282165527) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.21028456091880798, 2.6418509483337402) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.3184228837490082, 2.593785524368286) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.21028456091880798, 2.6418509483337402) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.3196783661842346, 2.720290422439575) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3184228837490082, 2.593785524368286) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.7221972942352295, 2.271733522415161) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2824006080627441, 1.8482697010040283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5977238416671753, 1.666331171989441) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.931828260421753, 1.465903401374817) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.3518660068511963, 1.3670932054519653) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.823284864425659, 1.7188252210617065) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9887404441833496, 1.3326553106307983) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.019674777984619, 1.0113857984542847) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1447160243988037, 0.9275842308998108) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.215338945388794, 0.6852092742919922) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3056023120880127, 0.46527794003486633) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.5964105129241943, 0.06728551536798477) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.4842045307159424, 0.29026469588279724) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.261408805847168, 0.7482936382293701) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1447160243988037, 0.9275842308998108) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1401472091674805, 1.2114828824996948) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.146554470062256, 1.551705002784729) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1808853149414062, 2.12014102935791) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.302626371383667, 2.363987445831299) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2926435470581055, 2.4488279819488525) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.110910177230835, 2.4975337982177734) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8795650005340576, 2.4219062328338623) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.866685628890991, 2.476820707321167) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.954411745071411, 2.6457631587982178) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.099705696105957, 2.1999337673187256) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1742286682128906, 1.9603646993637085) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.539574146270752, 1.751407504081726) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8146228790283203, 1.479284644126892) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.1508331298828125, 1.7450454235076904) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.561712265014648, 1.6286259889602661) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.801130294799805, 1.4572498798370361) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.144698143005371, 1.7508727312088013) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.2161383628845215, 2.1640236377716064) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.164567947387695, 2.3713083267211914) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.825284004211426, 2.5192277431488037) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.588680744171143, 2.5399928092956543) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.304586887359619, 2.6445200443267822) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.634150505065918, 2.416306257247925) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9134674072265625, 2.145118474960327) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.816015720367432, 1.8269908428192139) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.801130294799805, 1.4572498798370361) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.859990119934082, 1.0129112005233765) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.125552177429199, 0.9385300278663635) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.943503379821777, 0.5736591815948486) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6503777503967285, 0.42076531052589417) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.714942455291748, 0.15701667964458466) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.653264045715332, 0.11224144697189331) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.718440055847168, 0.2567705512046814) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:1>
(4.785959720611572, 0.3563159704208374) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.653264045715332, 0.11224144697189331) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6503777503967285, 0.42076531052589417) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.9596638679504395, 0.544409990310669) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.279871463775635, 0.4895394444465637) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.682507038116455, 0.4666856825351715) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.784310817718506, 0.40150412917137146) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.682507038116455, 0.4666856825351715) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.57872200012207, 0.17446613311767578) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.682507038116455, 0.4666856825351715) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.211445331573486, 0.7560521364212036) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.020164489746094, 0.8714015483856201) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.859990119934082, 1.0129112005233765) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7358078956604, 1.1005170345306396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.509045600891113, 1.1997792720794678) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.243638038635254, 1.2213280200958252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9734349250793457, 1.3004263639450073) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8703088760375977, 1.2690168619155884) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5458641052246094, 1.1442776918411255) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.193410634994507, 1.061482548713684) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.024991750717163, 0.9309946894645691) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8339226245880127, 0.7796319127082825) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.579336404800415, 0.5692291855812073) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.305278778076172, 0.33112621307373047) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.566896677017212, 0.5822051763534546) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.811845064163208, 0.8591634631156921) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.828035593032837, 1.0757274627685547) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6518592834472656, 1.0549561977386475) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.178809404373169, 1.050917148590088) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7477835416793823, 1.060689926147461) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2975729703903198, 1.0558903217315674) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.153206467628479, 1.0483745336532593) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9817690253257751, 0.8855253458023071) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,0]  [r2,b,46]  [r2,t,46]  [r2,b,46]  [r2,t,46]  [r2,46]  [h,46]  [r3,46]  [r3,t,46]  [r3,b,32]  [r3,32]  [h,32]  [r4,32]  [r4,t,32]  [r4,32]  [r4,b,25]  [r4,t,25]  [r4,25]  [h,25]  [r6,25]  [r6,t,25]  [r6,25]  [r6,b,27]  [r6,27]  [h,27]  [r5,27]  [r5,b,33]  [r5,t,33]  [r5,33]  [r5,b,t,33]  [r5,t,33]  [r5,33]  [r5,b,33]  [r5,33]  [h,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  


Remaining path: 
[r1,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21129
RRG size = 2001

Movement Length = 30.453999
Remaining path Length = 0.0
Total path Length = 30.453999

Advice samples: [12, 6, 2, 1, 1, 2, 1, 0, 0, 0] (25)

Total time taken (in ms):10889.086271

Initialization time (in ms):512.824288
Sampling time (in ms):8801.022536
Advice time (in ms):9.095724
Path checking time (in ms):917.223626
Learning time (in ms):202.659094
Exploration time (in ms):0.0
Time taken other than these things (in ms):446.261003
Moving time (in ms):3825.2053



