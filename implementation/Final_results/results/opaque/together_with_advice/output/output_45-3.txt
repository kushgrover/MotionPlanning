Parameters values: 
Environment: results/environments/env45/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.0414612390743465,0.0913882808610111), (1.5414612390743465,0.0913882808610111), (1.5414612390743465,0.3913882808610111), (1.0414612390743465,0.3913882808610111)]
[(0.3016633932512532,2.5167992848139655), (0.8016633932512531,2.5167992848139655), (0.8016633932512531,2.8167992848139654), (0.3016633932512532,2.8167992848139654)]
[(2.1816145182366697,0.19940016608353875), (2.6816145182366697,0.19940016608353875), (2.6816145182366697,0.49940016608353877), (2.1816145182366697,0.49940016608353877)]
[(3.6137192438836863,2.466916020051804), (3.913719243883686,2.466916020051804), (3.913719243883686,2.966916020051804), (3.6137192438836863,2.966916020051804)]
[(4.871228070092762,0.0007507501517266986), (5.171228070092762,0.0007507501517266986), (5.171228070092762,0.5007507501517267), (4.871228070092762,0.5007507501517267)]
[(4.550193159024707,2.5145707269055646), (5.050193159024707,2.5145707269055646), (5.050193159024707,2.8145707269055644), (4.550193159024707,2.8145707269055644)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=0.38018495,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=2.5806332,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=2.5806332,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=5.072231,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=5.072231,h=2.8607683]  
t: java.awt.geom.Rectangle2D$Float[x=0.94146127,y=0.0,w=0.7,h=0.4913883]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=1.4397979,h=2.9167993]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=2.579951,h=2.9167993]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=3.8120556,h=3.066916]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=5.0695643,h=3.066916]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=5.0695643,h=3.066916]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0367751, 1.431825] with IG = 34.06964
Iter num: 2
Used frontier: Point2D.Float[0.8815868, 0.49156815] with IG = 43.023045
Iter num: 3
Added advice frontier Point2D.Float[0.78604466, 0.1625976]
Added advice frontier Point2D.Float[0.8399253, 0.26707825]
Added advice frontier Point2D.Float[1.0452325, 0.044099808]
Added advice frontier Point2D.Float[0.9508771, 0.2199488]
Added advice frontier Point2D.Float[0.91680413, 0.17724228]
Used Advice frontier: Point2D.Float[0.8399253, 0.26707825] with IG = 437.97598
Iter num: 4
Used Advice frontier: Point2D.Float[0.78604466, 0.1625976] with IG = 850.66095
Iter num: 5
Used Advice frontier: Point2D.Float[0.91680413, 0.17724228] with IG = 760.0112
Iter num: 6
Used Advice frontier: Point2D.Float[0.9508771, 0.2199488] with IG = 1830.3811
Iter num: 7
Used Advice frontier: Point2D.Float[1.0452325, 0.044099808] with IG = 501.0922
Iter num: 8
Used frontier: Point2D.Float[1.8364958, 0.56512105] with IG = 17.072887
Iter num: 9
Used frontier: Point2D.Float[0.9820731, 2.3663557] with IG = 12.74585
Iter num: 10
Added advice frontier Point2D.Float[0.24606572, 2.4691336]
Added advice frontier Point2D.Float[0.120352395, 2.2579775]
Added advice frontier Point2D.Float[1.0227077, 2.7562761]
Added advice frontier Point2D.Float[1.1655645, 2.8469121]
Added advice frontier Point2D.Float[0.8545308, 2.8799396]
Used Advice frontier: Point2D.Float[1.0227077, 2.7562761] with IG = 255.08116
Iter num: 11
Used Advice frontier: Point2D.Float[1.1655645, 2.8469121] with IG = 591.07513
Iter num: 12
Used Advice frontier: Point2D.Float[0.8545308, 2.8799396] with IG = 319.71115
Iter num: 13
Used Advice frontier: Point2D.Float[0.24606572, 2.4691336] with IG = 89.5594
Iter num: 14
Used Advice frontier: Point2D.Float[0.120352395, 2.2579775] with IG = 406.92535
Iter num: 15
Used frontier: Point2D.Float[1.9695503, 1.538462] with IG = 11.030832
Iter num: 16
Used frontier: Point2D.Float[2.7477283, 1.3140575] with IG = 29.298847
Iter num: 17
Added advice frontier Point2D.Float[2.9057093, 2.0851452]
Added advice frontier Point2D.Float[3.3445165, 1.8025599]
Added advice frontier Point2D.Float[3.0117512, 0.99784356]
Added advice frontier Point2D.Float[3.600401, 1.1693641]
Used Advice frontier: Point2D.Float[3.0117512, 0.99784356] with IG = 242.75043
Iter num: 18
Added advice frontier Point2D.Float[2.5579965, 0.50180966]
Added advice frontier Point2D.Float[2.3825693, 0.73371005]
Used Advice frontier: Point2D.Float[3.600401, 1.1693641] with IG = 163.09767
Iter num: 19
Added advice frontier Point2D.Float[3.2820387, 0.2126478]
Used Advice frontier: Point2D.Float[3.3445165, 1.8025599] with IG = 144.84012
Iter num: 20
Used Advice frontier: Point2D.Float[2.9057093, 2.0851452] with IG = 191.5982
Iter num: 21
Added advice frontier Point2D.Float[2.800869, 2.6002197]
Added advice frontier Point2D.Float[3.2890503, 2.561197]
Added advice frontier Point2D.Float[3.5935483, 2.4892485]
Used Advice frontier: Point2D.Float[2.800869, 2.6002197] with IG = 123.23147
Iter num: 22
Used Advice frontier: Point2D.Float[3.2890503, 2.561197] with IG = 204.1906
Iter num: 23
Used Advice frontier: Point2D.Float[3.5935483, 2.4892485] with IG = 319.60855
Iter num: 24
Used Advice frontier: Point2D.Float[2.5579965, 0.50180966] with IG = 39.995853
Iter num: 25
Used Advice frontier: Point2D.Float[2.3825693, 0.73371005] with IG = 343.90366
Iter num: 26
Used frontier: Point2D.Float[2.4056835, 0.6859793] with IG = 113.13728
Iter num: 27
Used Advice frontier: Point2D.Float[3.2820387, 0.2126478] with IG = 97.137344
Iter num: 28
Used frontier: Point2D.Float[4.38775, 1.625851] with IG = 10.115657
Iter num: 29
Added advice frontier Point2D.Float[4.9769616, 0.8552453]
Used Advice frontier: Point2D.Float[4.9769616, 0.8552453] with IG = 86.88165
Iter num: 30
Added advice frontier Point2D.Float[4.9897947, 0.597761]
Added advice frontier Point2D.Float[4.9050145, 0.6673236]
Added advice frontier Point2D.Float[5.1126757, 2.0654888]
Added advice frontier Point2D.Float[5.1466093, 1.9168478]
Used Advice frontier: Point2D.Float[4.9050145, 0.6673236] with IG = 496.9595
Iter num: 31
Added advice frontier Point2D.Float[5.7388086, 0.20523702]
Added advice frontier Point2D.Float[5.556486, 0.24307068]
Used Advice frontier: Point2D.Float[4.9897947, 0.597761] with IG = 911.8592
Iter num: 32
Used Advice frontier: Point2D.Float[5.556486, 0.24307068] with IG = 77.49886
Iter num: 33
Used Advice frontier: Point2D.Float[5.7388086, 0.20523702] with IG = 537.038
Iter num: 34
Used Advice frontier: Point2D.Float[5.1466093, 1.9168478] with IG = 44.843246
Iter num: 35
Added advice frontier Point2D.Float[4.809629, 2.4800787]
Added advice frontier Point2D.Float[4.4628444, 2.3718212]
Used Advice frontier: Point2D.Float[5.1126757, 2.0654888] with IG = 655.8874
Iter num: 36
Used Advice frontier: Point2D.Float[4.809629, 2.4800787] with IG = 187.65898
Iter num: 37
Used Advice frontier: Point2D.Float[4.4628444, 2.3718212] with IG = 275.26257
Iter num: 38
Used frontier: Point2D.Float[5.810189, 2.632763] with IG = 14.384595
Iter num: 39
Used frontier: Point2D.Float[5.6819625, 1.488636] with IG = 8.79698
Iter num: 40
Added advice frontier Point2D.Float[4.3409023, 2.8244164]
Used Advice frontier: Point2D.Float[4.3409023, 2.8244164] with IG = 44.957355

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0367751121520996, 1.431825041770935) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8815867900848389, 0.4915681481361389) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8399252891540527, 0.2670782506465912) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7860446572303772, 0.16259759664535522) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9168041348457336, 0.17724227905273438) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9508770704269409, 0.21994879841804504) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(1.0452325344085693, 0.04409980773925781) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9965047240257263, 0.4181669056415558) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.4269258975982666, 0.4978663921356201) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8364957571029663, 0.565121054649353) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3702114820480347, 0.8196819424629211) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2116717100143433, 0.9061302542686462) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0671426057815552, 1.4049878120422363) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0454140901565552, 1.820420265197754) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9820731282234192, 2.3663556575775146) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0227077007293701, 2.7562761306762695) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.1655645370483398, 2.846912145614624) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8545308113098145, 2.879939556121826) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.826458752155304, 2.3555214405059814) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.24606572091579437, 2.4691336154937744) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.12035239487886429, 2.2579774856567383) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.45021024346351624, 2.2020061016082764) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7771592140197754, 2.0882840156555176) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.109621524810791, 1.9468092918395996) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4528534412384033, 1.798822283744812) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9695502519607544, 1.5384620428085327) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.453495502471924, 1.4615339040756226) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7477283477783203, 1.314057469367981) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.011751174926758, 0.9978435635566711) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.600400924682617, 1.169364094734192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.441330671310425, 1.4287830591201782) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3445165157318115, 1.8025598526000977) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9057092666625977, 2.0851452350616455) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5819315910339355, 2.1795690059661865) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8008689880371094, 2.6002197265625) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.289050340652466, 2.56119704246521) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.59354829788208, 2.489248514175415) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2850911617279053, 2.457036018371582) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1289613246917725, 2.3866090774536133) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.176454782485962, 1.998306393623352) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1145060062408447, 1.7798594236373901) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9640583992004395, 1.4006062746047974) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8184401988983154, 0.9750327467918396) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6699180603027344, 0.652561366558075) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5579965114593506, 0.5018096566200256) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.3825693130493164, 0.7337100505828857) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4056835174560547, 0.6859793066978455) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6699180603027344, 0.652561366558075) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.962427854537964, 0.5147154927253723) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.282038688659668, 0.21264779567718506) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.1524269580841064, 0.5451807975769043) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0747270584106445, 0.7962632179260254) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.196178913116455, 1.1277633905410767) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5228042602539062, 1.2479232549667358) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8829588890075684, 1.4157122373580933) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.054725646972656, 1.4379504919052124) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.387750148773193, 1.625851035118103) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.354538917541504, 1.3516024351119995) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.73048210144043, 1.281394600868225) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.976961612701416, 0.8552452921867371) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.905014514923096, 0.6673235893249512) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.989794731140137, 0.5977609753608704) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.976961612701416, 0.8552452921867371) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.464673042297363, 0.7707660794258118) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.505988597869873, 0.4089246094226837) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.556486129760742, 0.24307067692279816) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.738808631896973, 0.20523701608181) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.464673042297363, 0.7707660794258118) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.976961612701416, 0.8552452921867371) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.983363628387451, 1.0465093851089478) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9801554679870605, 1.3211681842803955) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.994381427764893, 1.6789534091949463) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.146609306335449, 1.916847825050354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.112675666809082, 2.065488815307617) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.111032009124756, 2.1551856994628906) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.809628963470459, 2.48007869720459) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.462844371795654, 2.371821165084839) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.809628963470459, 2.48007869720459) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.117412567138672, 2.279663324356079) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1542181968688965, 2.2623934745788574) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.659428119659424, 2.5044078826904297) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.8101887702941895, 2.632762908935547) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.659428119659424, 2.5044078826904297) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.1542181968688965, 2.2623934745788574) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.112675666809082, 2.065488815307617) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.2982683181762695, 1.7990084886550903) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.543222427368164, 1.7329119443893433) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.681962490081787, 1.4886360168457031) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.543222427368164, 1.7329119443893433) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.2982683181762695, 1.7990084886550903) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.112675666809082, 2.065488815307617) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.111032009124756, 2.1551856994628906) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.809628963470459, 2.48007869720459) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.462844371795654, 2.371821165084839) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,b,t,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [r6,t,21]  [r6,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21650
RRG size = 2001

Movement Length = 32.88895
Remaining path Length = 0.0
Total path Length = 32.88895

Advice samples: [14, 5, 7, 4, 0, 0, 0, 0, 0, 0] (30)

Total time taken (in ms):8333.380029

Initialization time (in ms):644.327535
Sampling time (in ms):6253.197427
Advice time (in ms):8.056278
Path checking time (in ms):754.752835
Learning time (in ms):188.047545
Exploration time (in ms):0.0
Time taken other than these things (in ms):484.998409
Moving time (in ms):1140.8507



