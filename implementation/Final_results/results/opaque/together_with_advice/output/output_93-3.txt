Parameters values: 
Environment: results/environments/env93/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.2055775115575231,0.0261172403192416), (1.5055775115575232,0.0261172403192416), (1.5055775115575232,0.5261172403192416), (1.2055775115575231,0.5261172403192416)]
[(0.8154766481140322,2.4611659312917658), (1.315476648114032,2.4611659312917658), (1.315476648114032,2.7611659312917656), (0.8154766481140322,2.7611659312917656)]
[(3.5483597585708004,0.037267940948356754), (3.8483597585708003,0.037267940948356754), (3.8483597585708003,0.5372679409483567), (3.5483597585708004,0.5372679409483567)]
[(2.2931552139582148,2.5833575871530914), (2.7931552139582148,2.5833575871530914), (2.7931552139582148,2.883357587153091), (2.2931552139582148,2.883357587153091)]
[(4.762753879852069,0.024486294182880307), (5.062753879852069,0.024486294182880307), (5.062753879852069,0.5244862941828803), (4.762753879852069,0.5244862941828803)]
[(4.553958656834876,2.486833717906787), (5.053958656834876,2.486833717906787), (5.053958656834876,2.786833717906787), (4.553958656834876,2.786833717906787)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.8494979,y=0.007084337,w=0.19999993,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.007084337,w=0.7921727,h=2.6599028]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.007084337,w=3.0996585,h=2.6599028]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.007084337,w=3.0996585,h=2.8598118]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.0030366436,w=5.261574,h=2.8638594]  java.awt.geom.Rectangle2D$Float[x=0.2573252,y=0.0030366436,w=5.261574,h=2.8638594]  
t: java.awt.geom.Rectangle2D$Float[x=1.1055775,y=0.0,w=0.5,h=0.6261172]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=0.89010084,h=2.861166]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=3.232883,h=2.861166]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=3.232883,h=2.9833577]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=4.4472775,h=2.9833577]  java.awt.geom.Rectangle2D$Float[x=0.71547663,y=0.0,w=4.4472775,h=2.9833577]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9345094, 1.4914464] with IG = 38.34387
Iter num: 2
Used frontier: Point2D.Float[1.0565302, 2.3106177] with IG = 41.05242
Iter num: 3
Added advice frontier Point2D.Float[0.3507264, 2.627635]
Added advice frontier Point2D.Float[0.8861287, 2.4049246]
Added advice frontier Point2D.Float[0.3628598, 2.6900415]
Added advice frontier Point2D.Float[1.1626561, 0.5951768]
Used Advice frontier: Point2D.Float[0.8861287, 2.4049246] with IG = 513.4591
Iter num: 4
Used Advice frontier: Point2D.Float[0.3507264, 2.627635] with IG = 172.45082
Iter num: 5
Used Advice frontier: Point2D.Float[0.3628598, 2.6900415] with IG = 1572.9424
Iter num: 6
Used Advice frontier: Point2D.Float[1.1626561, 0.5951768] with IG = 43.684395
Iter num: 7
Added advice frontier Point2D.Float[0.8693387, 0.110179506]
Added advice frontier Point2D.Float[1.1150807, 0.27504942]
Added advice frontier Point2D.Float[0.7652927, 0.0028923207]
Used Advice frontier: Point2D.Float[1.1150807, 0.27504942] with IG = 308.98218
Iter num: 8
Used Advice frontier: Point2D.Float[0.8693387, 0.110179506] with IG = 337.92416
Iter num: 9
Used Advice frontier: Point2D.Float[0.7652927, 0.0028923207] with IG = 669.1081
Iter num: 10
Used frontier: Point2D.Float[0.3892174, 0.7362437] with IG = 15.773267
Iter num: 11
Used frontier: Point2D.Float[1.8753327, 1.4857011] with IG = 13.211944
Iter num: 12
Used frontier: Point2D.Float[2.8224108, 1.5143489] with IG = 25.329514
Iter num: 13
Added advice frontier Point2D.Float[3.0809195, 0.8459504]
Added advice frontier Point2D.Float[3.1887624, 2.290823]
Added advice frontier Point2D.Float[3.0159805, 1.0487154]
Added advice frontier Point2D.Float[3.1398795, 1.9215002]
Used Advice frontier: Point2D.Float[3.0159805, 1.0487154] with IG = 198.30818
Iter num: 14
Added advice frontier Point2D.Float[3.546361, 0.41612795]
Added advice frontier Point2D.Float[3.1977968, 0.1771726]
Added advice frontier Point2D.Float[2.9444098, 0.1201988]
Added advice frontier Point2D.Float[3.4255886, 0.54372925]
Used Advice frontier: Point2D.Float[3.0809195, 0.8459504] with IG = 469.6819
Iter num: 15
Added advice frontier Point2D.Float[2.8086271, 2.4973567]
Used Advice frontier: Point2D.Float[3.4255886, 0.54372925] with IG = 218.14807
Iter num: 16
Used Advice frontier: Point2D.Float[3.546361, 0.41612795] with IG = 569.1744
Iter num: 17
Used Advice frontier: Point2D.Float[3.1977968, 0.1771726] with IG = 236.6265
Iter num: 18
Used Advice frontier: Point2D.Float[2.9444098, 0.1201988] with IG = 385.04
Iter num: 19
Used Advice frontier: Point2D.Float[3.1398795, 1.9215002] with IG = 53.97381
Iter num: 20
Added advice frontier Point2D.Float[3.291318, 2.7855308]
Added advice frontier Point2D.Float[3.281198, 2.8952851]
Used Advice frontier: Point2D.Float[3.1887624, 2.290823] with IG = 268.42487
Iter num: 21
Used Advice frontier: Point2D.Float[2.8086271, 2.4973567] with IG = 231.15039
Iter num: 22
Used Advice frontier: Point2D.Float[3.291318, 2.7855308] with IG = 128.30774
Iter num: 23
Added advice frontier Point2D.Float[2.8501344, 2.8877993]
Used Advice frontier: Point2D.Float[3.281198, 2.8952851] with IG = 907.2772
Iter num: 24
Used Advice frontier: Point2D.Float[2.8501344, 2.8877993] with IG = 231.94933
Iter num: 25
Used frontier: Point2D.Float[2.5788536, 2.9316235] with IG = 21.834238
Iter num: 26
Used frontier: Point2D.Float[3.9912734, 1.4566993] with IG = 9.615706
Iter num: 27
Used frontier: Point2D.Float[4.0993824, 1.7516437] with IG = 76.40067
Iter num: 28
Used frontier: Point2D.Float[4.8002567, 1.3884201] with IG = 30.6895
Iter num: 29
Added advice frontier Point2D.Float[5.117829, 2.0241094]
Added advice frontier Point2D.Float[5.343484, 0.6472055]
Added advice frontier Point2D.Float[5.443987, 1.5196203]
Added advice frontier Point2D.Float[4.943846, 0.59058183]
Added advice frontier Point2D.Float[4.8136997, 0.9376518]
Used Advice frontier: Point2D.Float[4.8136997, 0.9376518] with IG = 195.644
Iter num: 30
Used Advice frontier: Point2D.Float[4.943846, 0.59058183] with IG = 269.7823
Iter num: 31
Used Advice frontier: Point2D.Float[5.343484, 0.6472055] with IG = 247.75214
Iter num: 32
Added advice frontier Point2D.Float[5.4614606, 0.09647284]
Added advice frontier Point2D.Float[5.2570415, 0.17576304]
Used Advice frontier: Point2D.Float[5.2570415, 0.17576304] with IG = 182.90799
Iter num: 33
Used Advice frontier: Point2D.Float[5.4614606, 0.09647284] with IG = 456.08344
Iter num: 34
Used Advice frontier: Point2D.Float[5.443987, 1.5196203] with IG = 60.620636
Iter num: 35
Used Advice frontier: Point2D.Float[5.117829, 2.0241094] with IG = 166.46143
Iter num: 36
Added advice frontier Point2D.Float[4.8091016, 2.4439101]
Added advice frontier Point2D.Float[4.7773924, 2.3403645]
Used Advice frontier: Point2D.Float[4.7773924, 2.3403645] with IG = 198.37415
Iter num: 37
Used Advice frontier: Point2D.Float[4.8091016, 2.4439101] with IG = 923.42847
Iter num: 38
Used frontier: Point2D.Float[4.7773924, 2.3403645] with IG = 156.98283
Iter num: 39
Used frontier: Point2D.Float[5.641928, 2.8352113] with IG = 19.946766
Iter num: 40
Used frontier: Point2D.Float[5.2926774, 2.9143577] with IG = 13.962327
Iter num: 41
Used frontier: Point2D.Float[4.42152, 2.4279163] with IG = 12.566073
Iter num: 42
Used frontier: Point2D.Float[4.3032956, 0.11783176] with IG = 5.3303227
Iter num: 43
Added advice frontier Point2D.Float[4.543992, 2.704651]
Added advice frontier Point2D.Float[4.4224524, 2.6198459]
Used Advice frontier: Point2D.Float[4.4224524, 2.6198459] with IG = 33.266575

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9345093965530396, 1.4914463758468628) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.056530237197876, 2.310617685317993) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8861287236213684, 2.4049246311187744) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.3507263958454132, 2.6276350021362305) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.3628597855567932, 2.6900415420532227) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7029992938041687, 2.2880475521087646) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9545533061027527, 1.6778172254562378) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1258395910263062, 0.7655426859855652) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1626560688018799, 0.5951768159866333) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.115080714225769, 0.2750494182109833) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8693386912345886, 0.11017950624227524) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7652927041053772, 0.002892320742830634) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.687191903591156, 0.1500190794467926) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.38921740651130676, 0.736243724822998) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.985998809337616, 1.0099670886993408) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3629511594772339, 1.208342432975769) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8753327131271362, 1.485701084136963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.822410821914673, 1.5143488645553589) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0159804821014404, 1.048715353012085) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0809195041656494, 0.8459504246711731) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.425588607788086, 0.5437292456626892) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.546360969543457, 0.4161279499530792) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1977968215942383, 0.17717260122299194) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.9444098472595215, 0.1201988011598587) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9847960472106934, 0.6389675736427307) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0159804821014404, 1.048715353012085) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.048830986022949, 1.3218607902526855) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9990735054016113, 1.7159173488616943) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1398794651031494, 1.9215002059936523) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1887624263763428, 2.290822982788086) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.808627128601074, 2.497356653213501) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.1145904064178467, 2.3727574348449707) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.291317939758301, 2.7855308055877686) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.281198024749756, 2.895285129547119) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8501343727111816, 2.8877992630004883) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.5788536071777344, 2.9316234588623047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8501343727111816, 2.8877992630004883) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.808627128601074, 2.497356653213501) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.055682420730591, 2.082268476486206) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.114666700363159, 1.9858607053756714) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.344067335128784, 1.83143150806427) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6271393299102783, 1.6701816320419312) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9912734031677246, 1.456699252128601) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.099382400512695, 1.7516436576843262) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.046694278717041, 1.5520780086517334) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.800256729125977, 1.3884201049804688) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.915189743041992, 1.2639377117156982) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.813699722290039, 0.9376518130302429) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.943846225738525, 0.5905818343162537) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.343483924865723, 0.6472054719924927) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.17987060546875, 0.4756467342376709) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.2570414543151855, 0.17576304078102112) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.461460590362549, 0.0964728370308876) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.343483924865723, 0.6472054719924927) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.29350471496582, 0.7639092206954956) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.079552173614502, 0.9633401036262512) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.305890083312988, 1.2632088661193848) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.443986892700195, 1.5196202993392944) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.117828845977783, 2.024109363555908) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.880934715270996, 2.1107912063598633) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.777392387390137, 2.340364456176758) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.809101581573486, 2.4439101219177246) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.777392387390137, 2.340364456176758) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.131012439727783, 2.214876890182495) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.236308574676514, 2.144085168838501) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.641928195953369, 2.8352112770080566) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.292677402496338, 2.9143576622009277) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.199962139129639, 2.6254982948303223) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.178825855255127, 2.4078524112701416) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.908306121826172, 2.257606029510498) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.777392387390137, 2.340364456176758) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.421520233154297, 2.4279162883758545) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.71721076965332, 2.358699321746826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.880934715270996, 2.1107912063598633) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.973505020141602, 1.7596383094787598) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.941198825836182, 1.4816205501556396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.878056526184082, 1.2183977365493774) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.813699722290039, 0.9376518130302429) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.623690128326416, 0.6671868562698364) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.577134609222412, 0.5088047385215759) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.496760845184326, 0.22540919482707977) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.303295612335205, 0.1178317591547966) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.496760845184326, 0.22540919482707977) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.577134609222412, 0.5088047385215759) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.623690128326416, 0.6671868562698364) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.813699722290039, 0.9376518130302429) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.878056526184082, 1.2183977365493774) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.941198825836182, 1.4816205501556396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.973505020141602, 1.7596383094787598) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.880934715270996, 2.1107912063598633) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.71721076965332, 2.358699321746826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [h,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 43
Total sampled points = 23375
RRG size = 2151

Movement Length = 32.719574
Remaining path Length = 0.0
Total path Length = 32.719574

Advice samples: [13, 7, 5, 2, 1, 1, 0, 0, 0, 0] (29)

Total time taken (in ms):10635.767926

Initialization time (in ms):543.40904
Sampling time (in ms):8426.170189
Advice time (in ms):8.036249
Path checking time (in ms):952.584553
Learning time (in ms):193.173319
Exploration time (in ms):0.0
Time taken other than these things (in ms):512.394576
Moving time (in ms):2550.1367



