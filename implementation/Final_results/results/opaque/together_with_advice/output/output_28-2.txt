Parameters values: 
Environment: results/environments/env28/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.6101796761957051,0.14839020489954563), (1.1101796761957052,0.14839020489954563), (1.1101796761957052,0.4483902048995456), (0.6101796761957051,0.4483902048995456)]
[(0.908276641730173,2.471230770734804), (1.208276641730173,2.471230770734804), (1.208276641730173,2.971230770734804), (0.908276641730173,2.971230770734804)]
[(2.2669186865007642,0.1703640427149787), (2.7669186865007642,0.1703640427149787), (2.7669186865007642,0.47036404271497867), (2.2669186865007642,0.47036404271497867)]
[(3.353869154051022,2.4898944423626546), (3.653869154051022,2.4898944423626546), (3.653869154051022,2.9898944423626546), (3.353869154051022,2.9898944423626546)]
[(4.468832562000204,0.13955484259054554), (4.968832562000204,0.13955484259054554), (4.968832562000204,0.43955484259054556), (4.468832562000204,0.43955484259054556)]
[(5.401908813098459,2.4656137053668368), (5.901908813098459,2.4656137053668368), (5.901908813098459,2.7656137053668366), (5.401908813098459,2.7656137053668366)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.23730773,w=0.20000002,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.23730773,w=0.55302286,h=2.4338634]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.05440262,w=3.165023,h=2.6167686]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.05440262,w=3.165023,h=2.6167686]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.021676494,w=4.164619,h=2.6494946]  java.awt.geom.Rectangle2D$Float[x=0.2943248,y=0.021676494,w=4.4553485,h=2.7406814]  
t: java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.048390206,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.048390206,w=0.79809695,h=3.0228407]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.048390206,w=2.356739,h=3.0228407]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.048390206,w=3.2436893,h=3.0415044]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.03955484,w=4.558653,h=3.0503397]  java.awt.geom.Rectangle2D$Float[x=0.5101797,y=0.03955484,w=5.4917293,h=3.0503397]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0211929, 1.5524205] with IG = 34.68146
Iter num: 2
Used frontier: Point2D.Float[1.0394061, 0.7116114] with IG = 35.67155
Iter num: 3
Added advice frontier Point2D.Float[0.59775805, 0.4802318]
Added advice frontier Point2D.Float[0.25803545, 0.38198248]
Added advice frontier Point2D.Float[0.45440787, 0.42983836]
Added advice frontier Point2D.Float[0.37508646, 0.642597]
Added advice frontier Point2D.Float[0.80997103, 2.490906]
Added advice frontier Point2D.Float[0.91735065, 2.3902674]
Used Advice frontier: Point2D.Float[0.59775805, 0.4802318] with IG = 200.5666
Iter num: 4
Used Advice frontier: Point2D.Float[0.45440787, 0.42983836] with IG = 658.1117
Iter num: 5
Used Advice frontier: Point2D.Float[0.25803545, 0.38198248] with IG = 494.75668
Iter num: 6
Added advice frontier Point2D.Float[0.7755873, 2.4761317]
Added advice frontier Point2D.Float[0.721243, 2.3889704]
Used Advice frontier: Point2D.Float[0.37508646, 0.642597] with IG = 350.02524
Iter num: 7
Used Advice frontier: Point2D.Float[0.91735065, 2.3902674] with IG = 48.925995
Iter num: 8
Used Advice frontier: Point2D.Float[0.80997103, 2.490906] with IG = 679.494
Iter num: 9
Used Advice frontier: Point2D.Float[0.7755873, 2.4761317] with IG = 2672.1157
Iter num: 10
Used Advice frontier: Point2D.Float[0.721243, 2.3889704] with IG = 973.5665
Iter num: 11
Used frontier: Point2D.Float[1.6159711, 2.471957] with IG = 32.273483
Iter num: 12
Used frontier: Point2D.Float[1.9563332, 1.4853952] with IG = 14.052686
Iter num: 13
Used frontier: Point2D.Float[2.4926977, 1.4615169] with IG = 44.701412
Iter num: 14
Added advice frontier Point2D.Float[3.0159154, 2.2439334]
Added advice frontier Point2D.Float[3.0699933, 0.96674335]
Added advice frontier Point2D.Float[3.077698, 1.1014167]
Used Advice frontier: Point2D.Float[3.0699933, 0.96674335] with IG = 131.52534
Iter num: 15
Added advice frontier Point2D.Float[2.666586, 0.53149277]
Added advice frontier Point2D.Float[2.3868835, 0.7644361]
Added advice frontier Point2D.Float[3.3160844, 0.1904011]
Added advice frontier Point2D.Float[3.6122136, 0.26754358]
Used Advice frontier: Point2D.Float[3.077698, 1.1014167] with IG = 741.3252
Iter num: 16
Used Advice frontier: Point2D.Float[2.666586, 0.53149277] with IG = 142.15154
Iter num: 17
Used Advice frontier: Point2D.Float[2.3868835, 0.7644361] with IG = 274.72522
Iter num: 18
Used Advice frontier: Point2D.Float[3.3160844, 0.1904011] with IG = 91.103874
Iter num: 19
Used Advice frontier: Point2D.Float[3.6122136, 0.26754358] with IG = 326.78433
Iter num: 20
Used Advice frontier: Point2D.Float[3.0159154, 2.2439334] with IG = 47.04381
Iter num: 21
Added advice frontier Point2D.Float[3.0385075, 2.5933855]
Added advice frontier Point2D.Float[3.3742661, 2.414675]
Added advice frontier Point2D.Float[3.4971864, 2.275588]
Added advice frontier Point2D.Float[3.0676134, 2.717882]
Used Advice frontier: Point2D.Float[3.0385075, 2.5933855] with IG = 285.56613
Iter num: 22
Used Advice frontier: Point2D.Float[3.0676134, 2.717882] with IG = 782.1451
Iter num: 23
Used Advice frontier: Point2D.Float[3.3742661, 2.414675] with IG = 231.88791
Iter num: 24
Used Advice frontier: Point2D.Float[3.4971864, 2.275588] with IG = 538.7367
Iter num: 25
Used frontier: Point2D.Float[3.5985146, 2.2642229] with IG = 137.30402
Iter num: 26
Used frontier: Point2D.Float[3.7505493, 2.2844656] with IG = 71.71896
Iter num: 27
Used frontier: Point2D.Float[3.8747528, 1.6051745] with IG = 16.443602
Iter num: 28
Used frontier: Point2D.Float[4.3571506, 1.8247784] with IG = 45.188435
Iter num: 29
Added advice frontier Point2D.Float[5.1354165, 2.0453694]
Used Advice frontier: Point2D.Float[5.1354165, 2.0453694] with IG = 53.077557
Iter num: 30
Added advice frontier Point2D.Float[5.384925, 2.6416535]
Added advice frontier Point2D.Float[4.686571, 2.7914317]
Added advice frontier Point2D.Float[4.6250534, 2.6442165]
Added advice frontier Point2D.Float[4.6867976, 2.276031]
Used Advice frontier: Point2D.Float[4.6867976, 2.276031] with IG = 191.31807
Iter num: 31
Used Advice frontier: Point2D.Float[4.6250534, 2.6442165] with IG = 267.86182
Iter num: 32
Used Advice frontier: Point2D.Float[4.686571, 2.7914317] with IG = 626.75635
Iter num: 33
Used Advice frontier: Point2D.Float[5.384925, 2.6416535] with IG = 140.00995
Iter num: 34
Used frontier: Point2D.Float[5.328538, 1.590803] with IG = 42.049988
Iter num: 35
Added advice frontier Point2D.Float[4.9938216, 0.9380189]
Used Advice frontier: Point2D.Float[4.9938216, 0.9380189] with IG = 135.6322
Iter num: 36
Added advice frontier Point2D.Float[5.0281453, 0.37727922]
Added advice frontier Point2D.Float[5.4013786, 0.5170414]
Used Advice frontier: Point2D.Float[5.0281453, 0.37727922] with IG = 178.0027
Iter num: 37
Used Advice frontier: Point2D.Float[5.4013786, 0.5170414] with IG = 250.91391
Iter num: 38
Used frontier: Point2D.Float[4.845153, 0.6672085] with IG = 22.929848
Iter num: 39
Used frontier: Point2D.Float[5.018954, 0.075301774] with IG = 9.302815
Iter num: 40
Used frontier: Point2D.Float[4.845153, 0.6672085] with IG = 34.110325
Iter num: 41
Used frontier: Point2D.Float[5.7477803, 2.1366973] with IG = 4.492645
Iter num: 42
Used frontier: Point2D.Float[5.855406, 2.1433735] with IG = 37.094616
Iter num: 43
Used frontier: Point2D.Float[5.937646, 2.3618348] with IG = 34.271767
Iter num: 44
Used frontier: Point2D.Float[4.845153, 0.6672085] with IG = 9.587451
Iter num: 45
Used frontier: Point2D.Float[4.5948052, 0.7702654] with IG = 81.261826
Iter num: 46
Used frontier: Point2D.Float[4.4749727, 0.7311978] with IG = 79.33982
Iter num: 47
Added advice frontier Point2D.Float[4.391462, 0.05986873]
Used Advice frontier: Point2D.Float[4.391462, 0.05986873] with IG = 65.10156

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,t,52]  [r5,b,t,3]  [r5,t,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0211929082870483, 1.5524204969406128) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0394060611724854, 0.7116113901138306) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5977580547332764, 0.48023179173469543) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.45440787076950073, 0.4298383593559265) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.25803545117378235, 0.3819824755191803) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3750864565372467, 0.6425970196723938) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8043522238731384, 0.8120689392089844) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.872407853603363, 1.6066830158233643) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9173506498336792, 2.3902673721313477) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.809971034526825, 2.490906000137329) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.7755873203277588, 2.4761316776275635) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7212430238723755, 2.388970375061035) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1370376348495483, 2.4265527725219727) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.6159710884094238, 2.471956968307495) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2070327997207642, 2.111527681350708) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1472386121749878, 1.9862746000289917) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4600090980529785, 1.7649260759353638) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9563331604003906, 1.4853951930999756) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4926977157592773, 1.4615168571472168) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.069993257522583, 0.9667433500289917) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.077697992324829, 1.1014167070388794) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.949134349822998, 0.9481701254844666) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.666585922241211, 0.5314927697181702) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.386883497238159, 0.7644361257553101) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.666585922241211, 0.5314927697181702) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8432443141937256, 0.4352376163005829) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.316084384918213, 0.1904011070728302) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.612213611602783, 0.26754358410835266) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5123953819274902, 0.3900652825832367) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2202086448669434, 0.7891231179237366) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.169077157974243, 1.0983035564422607) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.148329973220825, 1.6039797067642212) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.048715353012085, 2.103626012802124) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0159153938293457, 2.2439334392547607) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0385074615478516, 2.5933854579925537) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.067613363265991, 2.717881917953491) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3742661476135254, 2.414674997329712) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.4971864223480225, 2.275588035583496) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5985145568847656, 2.2642228603363037) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.75054931640625, 2.2844655513763428) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5985145568847656, 2.2642228603363037) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.225963592529297, 2.117079496383667) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1081995964050293, 1.8718793392181396) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5831551551818848, 1.7505242824554443) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8747527599334717, 1.6051745414733887) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.16885232925415, 1.7570619583129883) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.357150554656982, 1.824778437614441) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.388761043548584, 1.6109156608581543) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.416116237640381, 1.379720687866211) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.738823890686035, 1.3830337524414062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.100447654724121, 1.3253120183944702) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.043282985687256, 1.8730393648147583) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.135416507720947, 2.0453693866729736) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.956670761108398, 2.2140932083129883) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.686797618865967, 2.276031017303467) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.625053405761719, 2.644216537475586) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.68657112121582, 2.7914316654205322) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.38492488861084, 2.641653537750244) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.135416507720947, 2.0453693866729736) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.226679801940918, 1.8740568161010742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.328537940979004, 1.5908030271530151) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.20987606048584, 1.4200359582901) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.056273937225342, 1.117667317390442) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.993821620941162, 0.9380189180374146) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0281453132629395, 0.37727922201156616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.401378631591797, 0.5170413851737976) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0281453132629395, 0.37727922201156616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.845152854919434, 0.6672084927558899) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0281453132629395, 0.37727922201156616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.018953800201416, 0.07530177384614944) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.0281453132629395, 0.37727922201156616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.845152854919434, 0.6672084927558899) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.911491870880127, 1.02591872215271) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.019250392913818, 1.3328388929367065) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.079919815063477, 1.6686170101165771) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.147116184234619, 1.9997085332870483) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.195254802703857, 2.053529739379883) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.385674953460693, 2.1110427379608154) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.7477803230285645, 2.136697292327881) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.855405807495117, 2.143373489379883) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.93764591217041, 2.361834764480591) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.689520359039307, 2.379725217819214) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.538917541503906, 2.2500503063201904) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.385674953460693, 2.1110427379608154) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.195254802703857, 2.053529739379883) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.147116184234619, 1.9997085332870483) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.079919815063477, 1.6686170101165771) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.019250392913818, 1.3328388929367065) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.911491870880127, 1.02591872215271) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.845152854919434, 0.6672084927558899) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.5948052406311035, 0.7702654004096985) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.474972724914551, 0.7311977744102478) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.759792804718018, 0.5739983320236206) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.882197856903076, 0.5737061500549316) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0281453132629395, 0.37727922201156616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.979369640350342, 0.13100078701972961) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,t,22]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,t,53]  [r5,53]  [r5,t,53]  [r5,53]  [h,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  [r5,b,t,63]  


Remaining path: 
[r5,b,t,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 47
Total sampled points = 25742
RRG size = 2352

Movement Length = 32.417065
Remaining path Length = 0.0
Total path Length = 32.417065

Advice samples: [16, 9, 2, 1, 0, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):12723.41289

Initialization time (in ms):520.435499
Sampling time (in ms):10163.183584
Advice time (in ms):9.169384
Path checking time (in ms):1362.990718
Learning time (in ms):203.988347
Exploration time (in ms):0.0
Time taken other than these things (in ms):463.645358
Moving time (in ms):4093.6406



