Parameters values: 
Environment: results/environments/env66/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.0264625476542988,0.1616520429954778), (1.5264625476542988,0.1616520429954778), (1.5264625476542988,0.4616520429954778), (1.0264625476542988,0.4616520429954778)]
[(1.2522884758090795,2.455105208615378), (1.7522884758090795,2.455105208615378), (1.7522884758090795,2.7551052086153778), (1.2522884758090795,2.7551052086153778)]
[(2.8193931138741215,0.05094975195336228), (3.3193931138741215,0.05094975195336228), (3.3193931138741215,0.35094975195336225), (2.8193931138741215,0.35094975195336225)]
[(3.175025333763873,2.527453170367295), (3.675025333763873,2.527453170367295), (3.675025333763873,2.8274531703672947), (3.175025333763873,2.8274531703672947)]
[(5.313417510927025,0.04837721649515871), (5.613417510927025,0.04837721649515871), (5.613417510927025,0.5483772164951587), (5.313417510927025,0.5483772164951587)]
[(4.077180688526457,2.459408612908671), (4.377180688526457,2.459408612908671), (4.377180688526457,2.959408612908671), (4.077180688526457,2.959408612908671)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.091815986,w=0.19999999,h=0.20000002]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.091815986,w=0.43292272,h=2.736914]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.056382038,w=2.032403,h=2.772348]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.056382038,w=2.032403,h=2.772348]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.032435782,w=3.6768131,h=2.796294]  java.awt.geom.Rectangle2D$Float[x=0.6024083,y=0.032435782,w=4.2153854,h=2.796294]  
t: java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.061652042,w=0.70000005,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.061652042,w=0.92582595,h=2.7934532]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.0,w=2.4929304,h=2.8551052]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.0,w=2.8485627,h=2.9274533]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.0,w=4.786955,h=2.9274533]  java.awt.geom.Rectangle2D$Float[x=0.92646253,y=0.0,w=4.786955,h=3.0594087]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9030405, 1.492059] with IG = 39.8466
Iter num: 2
Used frontier: Point2D.Float[1.0618252, 2.2015274] with IG = 42.639824
Iter num: 3
Added advice frontier Point2D.Float[1.5929567, 2.4541132]
Added advice frontier Point2D.Float[1.5516232, 2.336673]
Added advice frontier Point2D.Float[0.9734591, 2.7705083]
Added advice frontier Point2D.Float[1.1099749, 2.595633]
Added advice frontier Point2D.Float[0.98734754, 0.55466217]
Used Advice frontier: Point2D.Float[1.1099749, 2.595633] with IG = 251.86626
Iter num: 4
Used Advice frontier: Point2D.Float[0.9734591, 2.7705083] with IG = 450.75284
Iter num: 5
Used Advice frontier: Point2D.Float[1.5516232, 2.336673] with IG = 125.74306
Iter num: 6
Used Advice frontier: Point2D.Float[1.5929567, 2.4541132] with IG = 803.2022
Iter num: 7
Used Advice frontier: Point2D.Float[0.98734754, 0.55466217] with IG = 47.86077
Iter num: 8
Added advice frontier Point2D.Float[0.61907685, 0.12394445]
Added advice frontier Point2D.Float[0.38723806, 0.24292532]
Used Advice frontier: Point2D.Float[0.61907685, 0.12394445] with IG = 176.46237
Iter num: 9
Used Advice frontier: Point2D.Float[0.38723806, 0.24292532] with IG = 383.74875
Iter num: 10
Used frontier: Point2D.Float[1.6929901, 0.66062963] with IG = 16.002968
Iter num: 11
Used frontier: Point2D.Float[1.8123376, 1.4663684] with IG = 15.548601
Iter num: 12
Used frontier: Point2D.Float[2.5408664, 1.4229078] with IG = 32.171585
Iter num: 13
Added advice frontier Point2D.Float[3.002731, 2.1003416]
Added advice frontier Point2D.Float[3.2987654, 1.6053914]
Added advice frontier Point2D.Float[3.1656287, 0.7907856]
Used Advice frontier: Point2D.Float[3.2987654, 1.6053914] with IG = 127.76918
Iter num: 14
Used Advice frontier: Point2D.Float[3.002731, 2.1003416] with IG = 173.39279
Iter num: 15
Added advice frontier Point2D.Float[3.1482394, 2.6413748]
Added advice frontier Point2D.Float[2.8626158, 2.7726247]
Added advice frontier Point2D.Float[2.4119246, 2.7071984]
Used Advice frontier: Point2D.Float[3.1482394, 2.6413748] with IG = 178.48901
Iter num: 16
Used Advice frontier: Point2D.Float[2.8626158, 2.7726247] with IG = 318.13052
Iter num: 17
Used Advice frontier: Point2D.Float[2.4119246, 2.7071984] with IG = 219.57976
Iter num: 18
Used Advice frontier: Point2D.Float[3.1656287, 0.7907856] with IG = 47.21342
Iter num: 19
Added advice frontier Point2D.Float[3.4083328, 0.15495248]
Added advice frontier Point2D.Float[3.8473969, 0.19259234]
Used frontier: Point2D.Float[3.1085572, 0.6885813] with IG = 290.45114
Iter num: 20
Added advice frontier Point2D.Float[2.5396583, 0.16047645]
Added advice frontier Point2D.Float[2.662069, 0.20729035]
Used Advice frontier: Point2D.Float[2.662069, 0.20729035] with IG = 140.74461
Iter num: 21
Used Advice frontier: Point2D.Float[2.5396583, 0.16047645] with IG = 763.02673
Iter num: 22
Used Advice frontier: Point2D.Float[3.4083328, 0.15495248] with IG = 62.952446
Iter num: 23
Used Advice frontier: Point2D.Float[3.8473969, 0.19259234] with IG = 226.92488
Iter num: 24
Used frontier: Point2D.Float[4.178942, 1.4821571] with IG = 9.135148
Iter num: 25
Added advice frontier Point2D.Float[4.9070086, 0.9849646]
Added advice frontier Point2D.Float[4.735514, 1.325357]
Used Advice frontier: Point2D.Float[4.735514, 1.325357] with IG = 53.341675
Iter num: 26
Added advice frontier Point2D.Float[5.2809, 0.5567413]
Added advice frontier Point2D.Float[5.0465746, 2.0052338]
Added advice frontier Point2D.Float[4.9190755, 1.8922184]
Used Advice frontier: Point2D.Float[4.9070086, 0.9849646] with IG = 262.36212
Iter num: 27
Used frontier: Point2D.Float[4.8552346, 0.94895226] with IG = 301.26718
Iter num: 28
Used Advice frontier: Point2D.Float[5.2809, 0.5567413] with IG = 169.32834
Iter num: 29
Used Advice frontier: Point2D.Float[4.9190755, 1.8922184] with IG = 65.23886
Iter num: 30
Used Advice frontier: Point2D.Float[5.0465746, 2.0052338] with IG = 586.93176
Iter num: 31
Added advice frontier Point2D.Float[4.7798033, 2.6187313]
Added advice frontier Point2D.Float[5.1409936, 2.7386653]
Added advice frontier Point2D.Float[4.4020033, 2.6222885]
Used Advice frontier: Point2D.Float[4.7798033, 2.6187313] with IG = 147.01448
Iter num: 32
Used Advice frontier: Point2D.Float[4.4020033, 2.6222885] with IG = 264.6786
Iter num: 33
Used Advice frontier: Point2D.Float[5.1409936, 2.7386653] with IG = 131.85677
Iter num: 34
Used frontier: Point2D.Float[5.677681, 1.3245038] with IG = 14.855675
Iter num: 35
Used frontier: Point2D.Float[4.447695, 0.19322482] with IG = 10.189967
Iter num: 36
Added advice frontier Point2D.Float[4.2559395, 0.22592825]
Used Advice frontier: Point2D.Float[4.2559395, 0.22592825] with IG = 514.0752

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9030405282974243, 1.4920589923858643) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.061825156211853, 2.2015273571014404) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1099748611450195, 2.595633029937744) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9734591245651245, 2.770508289337158) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0914421081542969, 2.4804208278656006) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5516232252120972, 2.3366730213165283) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5929566621780396, 2.454113245010376) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.184367060661316, 2.0692386627197266) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1520248651504517, 1.8749357461929321) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0877951383590698, 1.3522040843963623) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0134248733520508, 0.8837624192237854) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9873475432395935, 0.5546621680259705) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.6190768480300903, 0.12394444644451141) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.3872380554676056, 0.24292531609535217) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8586562275886536, 0.40277406573295593) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3643479347229004, 0.5999126434326172) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6929900646209717, 0.6606296300888062) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1940796375274658, 0.8526613712310791) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1878379583358765, 1.0227025747299194) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2090240716934204, 1.0721259117126465) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.556923508644104, 1.3015869855880737) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8123376369476318, 1.4663684368133545) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.258725881576538, 1.515430212020874) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5408663749694824, 1.422907829284668) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0077993869781494, 1.5699855089187622) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2987654209136963, 1.6053913831710815) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0027310848236084, 2.100341558456421) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1482393741607666, 2.6413748264312744) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8626158237457275, 2.7726247310638428) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.4119246006011963, 2.70719838142395) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.6010427474975586, 2.4635415077209473) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.885042190551758, 2.104893922805786) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9339447021484375, 2.040212869644165) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0077993869781494, 1.5699855089187622) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0933403968811035, 1.1318223476409912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.165628671646118, 0.7907856106758118) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1085572242736816, 0.6885812878608704) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8401904106140137, 0.5943484306335449) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.662069082260132, 0.20729035139083862) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.539658308029175, 0.1604764461517334) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.8401904106140137, 0.5943484306335449) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.165628671646118, 0.7907856106758118) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4083328247070312, 0.15495248138904572) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.8473968505859375, 0.1925923377275467) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6965577602386475, 0.4058677554130554) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.624404191970825, 0.8244166374206543) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.210465669631958, 0.9210014939308167) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1508054733276367, 0.9667757749557495) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.208630084991455, 1.1545374393463135) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.481454372406006, 1.2730097770690918) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8524036407470703, 1.3826696872711182) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.1789422035217285, 1.4821571111679077) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.184121608734131, 1.9321222305297852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7218337059021, 1.8954463005065918) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.067587375640869, 1.6112653017044067) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.735514163970947, 1.3253569602966309) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.907008647918701, 0.9849646091461182) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.855234622955322, 0.9489522576332092) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.985702037811279, 0.7506237626075745) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.280900001525879, 0.5567412972450256) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.907008647918701, 0.9849646091461182) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.067587375640869, 1.6112653017044067) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9190754890441895, 1.8922183513641357) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.046574592590332, 2.0052337646484375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.99772310256958, 2.2681353092193604) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.779803276062012, 2.6187312602996826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.402003288269043, 2.622288465499878) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.779803276062012, 2.6187312602996826) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.140993595123291, 2.7386653423309326) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.277386665344238, 2.409008741378784) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.318273067474365, 2.280552387237549) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.046574592590332, 2.0052337646484375) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.301161289215088, 1.7285929918289185) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.362692356109619, 1.596181869506836) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.607367992401123, 1.3686305284500122) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.677680969238281, 1.324503779411316) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.526777267456055, 1.3383139371871948) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.279980182647705, 1.245885968208313) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.12819242477417, 0.9553288817405701) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.0081000328063965, 0.8386181592941284) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.8157525062561035, 0.6476829648017883) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.6742682456970215, 0.4592840373516083) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,b,46]  [r2,46]  [r2,t,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,b,22]  [r1,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,b,35]  [r3,35]  [r3,t,35]  [r3,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 19892
RRG size = 1801

Movement Length = 29.996506
Remaining path Length = 0.0
Total path Length = 29.996506

Advice samples: [14, 8, 2, 2, 0, 0, 0, 0, 0, 0] (26)

Total time taken (in ms):8738.315977

Initialization time (in ms):636.645417
Sampling time (in ms):6968.118823
Advice time (in ms):8.013021
Path checking time (in ms):569.635125
Learning time (in ms):154.431278
Exploration time (in ms):0.0
Time taken other than these things (in ms):401.472313
Moving time (in ms):2751.4634



