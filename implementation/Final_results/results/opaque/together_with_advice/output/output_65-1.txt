Parameters values: 
Environment: results/environments/env65/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.30625089278162054,0.08105992361863325), (0.8062508927816205,0.08105992361863325), (0.8062508927816205,0.3810599236186332), (0.30625089278162054,0.3810599236186332)]
[(0.34756409308190833,2.4617846584390666), (0.6475640930819083,2.4617846584390666), (0.6475640930819083,2.9617846584390666), (0.34756409308190833,2.9617846584390666)]
[(3.4488708460433837,0.008881052295225424), (3.7488708460433835,0.008881052295225424), (3.7488708460433835,0.5088810522952254), (3.4488708460433837,0.5088810522952254)]
[(2.983546675069148,2.454758104649557), (3.283546675069148,2.454758104649557), (3.283546675069148,2.954758104649557), (2.983546675069148,2.954758104649557)]
[(5.325742055046789,0.03386050746043865), (5.825742055046789,0.03386050746043865), (5.825742055046789,0.33386050746043866), (5.325742055046789,0.33386050746043866)]
[(5.281398833374705,2.4814737383539365), (5.581398833374704,2.4814737383539365), (5.581398833374704,2.9814737383539365), (5.281398833374705,2.9814737383539365)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0029259,y=0.20896177,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.20896177,w=0.27702224,h=2.448612]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=2.2932663,h=2.6392937]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=2.2932663,h=2.6513338]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=3.696938,h=2.6513338]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=4.188627,h=2.6574256]  
t: java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=0.7,h=0.4810599]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=0.7,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=3.6426198,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=3.6426198,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=5.7194915,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=5.7194915,h=3.0814738]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.96536964, 1.4478557] with IG = 36.91147
Iter num: 2
Used frontier: Point2D.Float[0.92279845, 0.47205675] with IG = 40.953094
Iter num: 3
Added advice frontier Point2D.Float[0.7056462, 0.4437283]
Added advice frontier Point2D.Float[0.45460427, 0.49470693]
Added advice frontier Point2D.Float[1.1672754, 0.24946637]
Added advice frontier Point2D.Float[0.8783159, 0.044976056]
Used Advice frontier: Point2D.Float[0.7056462, 0.4437283] with IG = 456.6372
Iter num: 4
Used Advice frontier: Point2D.Float[0.45460427, 0.49470693] with IG = 390.37225
Iter num: 5
Used Advice frontier: Point2D.Float[1.1672754, 0.24946637] with IG = 132.09966
Iter num: 6
Used Advice frontier: Point2D.Float[0.8783159, 0.044976056] with IG = 282.48825
Iter num: 7
Used frontier: Point2D.Float[1.772593, 1.4770681] with IG = 13.542543
Iter num: 8
Used frontier: Point2D.Float[2.512121, 1.3002511] with IG = 29.863928
Iter num: 9
Added advice frontier Point2D.Float[2.9537356, 2.0715342]
Used Advice frontier: Point2D.Float[2.9537356, 2.0715342] with IG = 106.01844
Iter num: 10
Added advice frontier Point2D.Float[2.6510723, 2.4887602]
Added advice frontier Point2D.Float[2.1621718, 2.55235]
Added advice frontier Point2D.Float[2.9269223, 2.9963524]
Added advice frontier Point2D.Float[2.812166, 2.9356363]
Added advice frontier Point2D.Float[2.9599812, 2.73668]
Added advice frontier Point2D.Float[3.0715003, 0.8442033]
Used frontier: Point2D.Float[3.0446723, 2.0539324] with IG = 345.481
Iter num: 11
Used Advice frontier: Point2D.Float[2.6510723, 2.4887602] with IG = 170.49953
Iter num: 12
Used Advice frontier: Point2D.Float[2.9599812, 2.73668] with IG = 252.46652
Iter num: 13
Used Advice frontier: Point2D.Float[2.812166, 2.9356363] with IG = 403.45898
Iter num: 14
Used Advice frontier: Point2D.Float[2.9269223, 2.9963524] with IG = 770.2462
Iter num: 15
Used Advice frontier: Point2D.Float[2.1621718, 2.55235] with IG = 113.05916
Iter num: 16
Used Advice frontier: Point2D.Float[3.0715003, 0.8442033] with IG = 47.61445
Iter num: 17
Added advice frontier Point2D.Float[3.1754246, 0.2088217]
Added advice frontier Point2D.Float[3.2720907, 0.4701271]
Added advice frontier Point2D.Float[3.4862764, 0.5485921]
Added advice frontier Point2D.Float[3.5058067, 0.63827753]
Added advice frontier Point2D.Float[3.4099543, 0.13784574]
Used Advice frontier: Point2D.Float[3.2720907, 0.4701271] with IG = 235.59135
Iter num: 18
Used Advice frontier: Point2D.Float[3.4862764, 0.5485921] with IG = 438.39297
Iter num: 19
Used Advice frontier: Point2D.Float[3.5058067, 0.63827753] with IG = 1089.4752
Iter num: 20
Used Advice frontier: Point2D.Float[3.1754246, 0.2088217] with IG = 176.51253
Iter num: 21
Used Advice frontier: Point2D.Float[3.4099543, 0.13784574] with IG = 408.10623
Iter num: 22
Used frontier: Point2D.Float[3.6879346, 1.6142668] with IG = 21.339886
Iter num: 23
Used frontier: Point2D.Float[4.212466, 1.3587201] with IG = 39.419304
Iter num: 24
Added advice frontier Point2D.Float[4.9737473, 0.9699958]
Added advice frontier Point2D.Float[5.0684724, 1.1389028]
Used Advice frontier: Point2D.Float[4.9737473, 0.9699958] with IG = 66.56145
Iter num: 25
Added advice frontier Point2D.Float[4.8785467, 2.0378096]
Added advice frontier Point2D.Float[5.23966, 0.4032801]
Added advice frontier Point2D.Float[5.3894186, 0.68173164]
Added advice frontier Point2D.Float[5.243059, 1.8196949]
Added advice frontier Point2D.Float[4.5300665, 0.34097558]
Added advice frontier Point2D.Float[4.4605446, 0.4715259]
Added advice frontier Point2D.Float[0.7392469, 2.378364]
Used Advice frontier: Point2D.Float[5.0684724, 1.1389028] with IG = 516.3811
Iter num: 26
Used Advice frontier: Point2D.Float[5.3894186, 0.68173164] with IG = 140.9463
Iter num: 27
Used Advice frontier: Point2D.Float[5.23966, 0.4032801] with IG = 316.28632
Iter num: 28
Used Advice frontier: Point2D.Float[4.5300665, 0.34097558] with IG = 140.0766
Iter num: 29
Used Advice frontier: Point2D.Float[4.4605446, 0.4715259] with IG = 676.09735
Iter num: 30
Used Advice frontier: Point2D.Float[5.243059, 1.8196949] with IG = 57.273956
Iter num: 31
Added advice frontier Point2D.Float[4.969254, 2.5486677]
Added advice frontier Point2D.Float[4.907619, 2.7023535]
Used Advice frontier: Point2D.Float[4.8785467, 2.0378096] with IG = 235.41252
Iter num: 32
Added advice frontier Point2D.Float[5.239298, 2.596731]
Used Advice frontier: Point2D.Float[4.969254, 2.5486677] with IG = 192.7345
Iter num: 33
Used Advice frontier: Point2D.Float[4.907619, 2.7023535] with IG = 603.92145
Iter num: 34
Used Advice frontier: Point2D.Float[5.239298, 2.596731] with IG = 287.28162
Iter num: 35
Used Advice frontier: Point2D.Float[0.7392469, 2.378364] with IG = 18.822748
Iter num: 36
Added advice frontier Point2D.Float[1.0652094, 2.586487]
Added advice frontier Point2D.Float[1.4393604, 2.9627895]
Added advice frontier Point2D.Float[0.71514875, 2.908404]
Used frontier: Point2D.Float[0.7179443, 2.3503878] with IG = 284.38577

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9653696417808533, 1.4478557109832764) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9227984547615051, 0.4720567464828491) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7056462168693542, 0.4437282979488373) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.45460426807403564, 0.494706928730011) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7056462168693542, 0.4437282979488373) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1672754287719727, 0.24946637451648712) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8783159255981445, 0.04497605562210083) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.020084261894226, 0.5136628150939941) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1951642036437988, 1.0504047870635986) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.7725930213928223, 1.4770680665969849) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8973244428634644, 1.398105502128601) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5121209621429443, 1.3002511262893677) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6071853637695312, 1.783789038658142) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.953735589981079, 2.0715341567993164) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0446722507476807, 2.0539324283599854) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6510722637176514, 2.488760232925415) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.9599812030792236, 2.736680030822754) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8121659755706787, 2.935636281967163) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.92692232131958, 2.996352434158325) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8121659755706787, 2.935636281967163) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.3096063137054443, 2.644580125808716) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.1621718406677246, 2.5523500442504883) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.291227340698242, 2.4798264503479004) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.7789900302886963, 2.201852560043335) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.878730535507202, 1.751983404159546) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9219748973846436, 1.5430196523666382) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9732108116149902, 1.177833080291748) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.071500301361084, 0.8442032933235168) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2720906734466553, 0.4701271057128906) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.486276388168335, 0.5485920906066895) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.5058066844940186, 0.638277530670166) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2720906734466553, 0.4701271057128906) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.175424575805664, 0.20882169902324677) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.409954309463501, 0.1378457397222519) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.2565925121307373, 0.5932082533836365) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.135401487350464, 0.9593074321746826) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.380105972290039, 1.3550078868865967) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.687934637069702, 1.6142667531967163) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.757241725921631, 1.5801737308502197) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.212465763092041, 1.358720064163208) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.268214702606201, 1.6456984281539917) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.845733642578125, 1.5863040685653687) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.973747253417969, 0.9699957966804504) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.068472385406494, 1.1389027833938599) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.973747253417969, 0.9699957966804504) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.268587112426758, 0.713247537612915) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.389418601989746, 0.681731641292572) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.239659786224365, 0.403280109167099) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.867656230926514, 0.3943600058555603) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.53006649017334, 0.3409755825996399) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.460544586181641, 0.4715259075164795) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.80433464050293, 0.49236077070236206) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.86560583114624, 0.6773135662078857) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.973747253417969, 0.9699957966804504) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.106710433959961, 1.3649859428405762) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.187738418579102, 1.7178256511688232) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.243059158325195, 1.8196948766708374) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.878546714782715, 2.0378096103668213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.969254016876221, 2.5486676692962646) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.907618999481201, 2.7023534774780273) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.239297866821289, 2.596730947494507) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.969254016876221, 2.5486676692962646) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.878546714782715, 2.0378096103668213) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.841145038604736, 1.823067307472229) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.5880327224731445, 1.8149980306625366) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.452212333679199, 1.8604357242584229) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.087697982788086, 1.8040190935134888) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.738640069961548, 1.836439609527588) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4651904106140137, 1.8503859043121338) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.239516019821167, 1.874637484550476) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.815720796585083, 1.886460304260254) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.4250190258026123, 1.893212080001831) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1769211292266846, 1.8967777490615845) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9422755241394043, 1.9010124206542969) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6036568880081177, 1.913155436515808) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2248287200927734, 1.917188048362732) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0540727376937866, 2.073482036590576) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,t,12]  [r1,12]  [h,12]  [r4,12]  [r4,b,41]  [r4,t,41]  [r4,41]  [r4,t,41]  [r4,41]  [h,41]  [r3,41]  [r3,t,41]  [r3,41]  [r3,b,34]  [r3,t,34]  [r3,34]  [h,34]  [r5,34]  [h,34]  [r5,34]  [r5,t,34]  [r5,34]  [r5,b,47]  [r5,47]  [h,47]  [r6,47]  [r6,b,37]  [r6,37]  [r6,t,37]  [r6,b,37]  [r6,37]  [h,37]  [r2,37]  [r2,t,37]  [r2,37]  


Remaining path: 
[r2,37]  [r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 20230
RRG size = 1801

Movement Length = 27.360935
Remaining path Length = 0.42261678
Total path Length = 27.783552

Advice samples: [14, 9, 4, 1, 0, 0, 0, 0, 0, 0] (28)

Total time taken (in ms):8491.205337

Initialization time (in ms):506.261133
Sampling time (in ms):6812.709137
Advice time (in ms):7.332205
Path checking time (in ms):570.21149
Learning time (in ms):163.378225
Exploration time (in ms):0.0
Time taken other than these things (in ms):431.313147
Moving time (in ms):2751.4634



