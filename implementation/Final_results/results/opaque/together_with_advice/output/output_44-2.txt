Parameters values: 
Environment: results/environments/env44/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.4092945036159357,0.2197365764177202), (0.9092945036159357,0.2197365764177202), (0.9092945036159357,0.5197365764177202), (0.4092945036159357,0.5197365764177202)]
[(0.9588932779350468,2.6925252479899155), (1.4588932779350468,2.6925252479899155), (1.4588932779350468,2.9925252479899154), (0.9588932779350468,2.9925252479899154)]
[(3.3261892092272247,0.041264965286923395), (3.8261892092272247,0.041264965286923395), (3.8261892092272247,0.3412649652869234), (3.3261892092272247,0.3412649652869234)]
[(2.0745801449989503,2.45708047091434), (2.37458014499895,2.45708047091434), (2.37458014499895,2.95708047091434), (2.0745801449989503,2.95708047091434)]
[(4.257513690420927,0.2179818045865434), (4.757513690420927,0.2179818045865434), (4.757513690420927,0.5179818045865434), (4.257513690420927,0.5179818045865434)]
[(5.475018301581811,2.600347802274735), (5.975018301581811,2.600347802274735), (5.975018301581811,2.9003478022747347), (5.475018301581811,2.9003478022747347)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.2228005,y=0.13560244,w=0.19999993,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.13560244,w=0.97006786,h=2.5558476]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.13560244,w=2.8416464,h=2.5558476]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.13560244,w=3.3536506,h=2.563453]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.0833595,w=4.777772,h=2.615696]  java.awt.geom.Rectangle2D$Float[x=0.45273253,y=0.0833595,w=4.777772,h=2.647909]  
t: java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.119736575,w=0.70000005,h=0.49999997]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.119736575,w=1.2495989,h=2.9727886]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.0,w=3.6168947,h=3.0925252]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.0,w=3.6168947,h=3.0925252]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.0,w=4.548219,h=3.0925252]  java.awt.geom.Rectangle2D$Float[x=0.3092945,y=0.0,w=5.7657237,h=3.0925252]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.95690566, 1.5313052] with IG = 37.31877
Iter num: 2
Used frontier: Point2D.Float[0.90266114, 1.1097397] with IG = 72.93412
Iter num: 3
Used frontier: Point2D.Float[1.3338535, 0.51716036] with IG = 55.94555
Iter num: 4
Added advice frontier Point2D.Float[0.53032637, 0.61093473]
Added advice frontier Point2D.Float[0.6712605, 0.68564343]
Added advice frontier Point2D.Float[1.3106885, 0.27506235]
Used Advice frontier: Point2D.Float[1.3106885, 0.27506235] with IG = 411.17786
Iter num: 5
Used Advice frontier: Point2D.Float[0.6712605, 0.68564343] with IG = 131.5966
Iter num: 6
Used Advice frontier: Point2D.Float[0.53032637, 0.61093473] with IG = 626.91534
Iter num: 7
Used frontier: Point2D.Float[0.16173844, 0.4803411] with IG = 35.80203
Iter num: 8
Used frontier: Point2D.Float[0.97126764, 2.4423103] with IG = 15.490655
Iter num: 9
Added advice frontier Point2D.Float[1.106645, 2.5938263]
Added advice frontier Point2D.Float[0.53548175, 2.6690364]
Used Advice frontier: Point2D.Float[1.106645, 2.5938263] with IG = 492.16254
Iter num: 10
Used Advice frontier: Point2D.Float[0.53548175, 2.6690364] with IG = 173.58286
Iter num: 11
Used frontier: Point2D.Float[1.6072004, 2.693929] with IG = 14.924907
Iter num: 12
Used frontier: Point2D.Float[1.8562616, 1.4724953] with IG = 13.260037
Iter num: 13
Used frontier: Point2D.Float[2.579628, 1.6801959] with IG = 31.573605
Iter num: 14
Added advice frontier Point2D.Float[3.0150363, 0.90846276]
Added advice frontier Point2D.Float[3.4747326, 1.5683475]
Used Advice frontier: Point2D.Float[3.0150363, 0.90846276] with IG = 112.48387
Iter num: 15
Added advice frontier Point2D.Float[3.2540646, 0.024585549]
Added advice frontier Point2D.Float[2.7052116, 0.024580626]
Added advice frontier Point2D.Float[3.1009014, 0.39046973]
Added advice frontier Point2D.Float[3.3931518, 0.435005]
Added advice frontier Point2D.Float[3.1391296, 0.60615593]
Added advice frontier Point2D.Float[3.2854147, 0.30666643]
Added advice frontier Point2D.Float[3.015253, 2.0802202]
Added advice frontier Point2D.Float[3.2309394, 0.21630695]
Used Advice frontier: Point2D.Float[3.1391296, 0.60615593] with IG = 306.01138
Iter num: 16
Used Advice frontier: Point2D.Float[3.1009014, 0.39046973] with IG = 456.52136
Iter num: 17
Used Advice frontier: Point2D.Float[3.2854147, 0.30666643] with IG = 493.45477
Iter num: 18
Used Advice frontier: Point2D.Float[3.2309394, 0.21630695] with IG = 947.77606
Iter num: 19
Used Advice frontier: Point2D.Float[3.2540646, 0.024585549] with IG = 517.8368
Iter num: 20
Used Advice frontier: Point2D.Float[3.3931518, 0.435005] with IG = 221.54146
Iter num: 21
Used Advice frontier: Point2D.Float[2.7052116, 0.024580626] with IG = 123.648315
Iter num: 22
Used Advice frontier: Point2D.Float[3.4747326, 1.5683475] with IG = 56.44725
Iter num: 23
Used Advice frontier: Point2D.Float[3.015253, 2.0802202] with IG = 145.35242
Iter num: 24
Added advice frontier Point2D.Float[3.6907094, 2.6472902]
Added advice frontier Point2D.Float[3.3744488, 2.6491675]
Added advice frontier Point2D.Float[2.4135907, 2.5162008]
Added advice frontier Point2D.Float[2.5486624, 2.2706797]
Used Advice frontier: Point2D.Float[2.5486624, 2.2706797] with IG = 102.86312
Iter num: 25
Used Advice frontier: Point2D.Float[2.4135907, 2.5162008] with IG = 356.85855
Iter num: 26
Used frontier: Point2D.Float[2.422918, 2.5320926] with IG = 108.53714
Iter num: 27
Used Advice frontier: Point2D.Float[3.3744488, 2.6491675] with IG = 97.33922
Iter num: 28
Used Advice frontier: Point2D.Float[3.6907094, 2.6472902] with IG = 316.1894
Iter num: 29
Used frontier: Point2D.Float[4.383536, 1.2154269] with IG = 10.14333
Iter num: 30
Added advice frontier Point2D.Float[5.133785, 0.92665744]
Added advice frontier Point2D.Float[4.9718065, 1.2735429]
Used Advice frontier: Point2D.Float[4.9718065, 1.2735429] with IG = 62.6923
Iter num: 31
Added advice frontier Point2D.Float[4.687405, 0.56478095]
Added advice frontier Point2D.Float[4.9745803, 0.66127086]
Added advice frontier Point2D.Float[4.9288154, 2.2185175]
Added advice frontier Point2D.Float[4.888713, 1.9907943]
Used Advice frontier: Point2D.Float[5.133785, 0.92665744] with IG = 261.20572
Iter num: 32
Added advice frontier Point2D.Float[5.1466417, 0.092508726]
Used Advice frontier: Point2D.Float[4.9745803, 0.66127086] with IG = 323.12564
Iter num: 33
Used Advice frontier: Point2D.Float[4.687405, 0.56478095] with IG = 330.08533
Iter num: 34
Used Advice frontier: Point2D.Float[4.888713, 1.9907943] with IG = 57.654125
Iter num: 35
Added advice frontier Point2D.Float[5.3859763, 2.51245]
Added advice frontier Point2D.Float[5.0965858, 2.577369]
Used Advice frontier: Point2D.Float[4.9288154, 2.2185175] with IG = 432.47482
Iter num: 36
Used Advice frontier: Point2D.Float[5.0965858, 2.577369] with IG = 252.41112
Iter num: 37
Used Advice frontier: Point2D.Float[5.3859763, 2.51245] with IG = 337.17395
Iter num: 38
Added advice frontier Point2D.Float[4.2923155, 2.5505726]
Added advice frontier Point2D.Float[4.2101755, 2.3421547]
Added advice frontier Point2D.Float[4.8492928, 0.18640803]
Used Advice frontier: Point2D.Float[4.2923155, 2.5505726] with IG = 58.51223

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9569056630134583, 1.531305193901062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.902661144733429, 1.1097396612167358) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3338534832000732, 0.5171603560447693) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3106884956359863, 0.27506235241889954) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6712604761123657, 0.6856434345245361) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5303263664245605, 0.6109347343444824) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.16173844039440155, 0.4803411066532135) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8054535388946533, 0.891125500202179) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8695722222328186, 1.6026556491851807) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8928137421607971, 1.8572944402694702) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9712676405906677, 2.442310333251953) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1066449880599976, 2.5938262939453125) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.5354817509651184, 2.669036388397217) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.0350821018218994, 2.6769232749938965) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.6072003841400146, 2.6939289569854736) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2417237758636475, 2.189110517501831) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1623059511184692, 2.075988531112671) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2103509902954102, 1.8631895780563354) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6327435970306396, 1.6026450395584106) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8562616109848022, 1.4724953174591064) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1451122760772705, 1.5015010833740234) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5796279907226562, 1.680195927619934) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8534679412841797, 1.2677103281021118) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0150363445281982, 0.9084627628326416) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.139129638671875, 0.6061559319496155) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1009013652801514, 0.3904697299003601) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.285414695739746, 0.30666643381118774) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.2309393882751465, 0.21630695462226868) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.2540645599365234, 0.024585548788309097) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.285414695739746, 0.30666643381118774) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:1>
(3.3931517601013184, 0.4350050091743469) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.030332088470459, 0.15441760420799255) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.705211639404297, 0.02458062581717968) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.766876697540283, 0.5632815957069397) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0150363445281982, 0.9084627628326416) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4747326374053955, 1.568347454071045) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.275428533554077, 1.7803046703338623) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0152530670166016, 2.0802202224731445) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.049405813217163, 2.1036741733551025) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.830446720123291, 2.572734832763672) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.5486624240875244, 2.2706797122955322) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.413590669631958, 2.5162007808685303) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.4229180812835693, 2.532092571258545) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.830446720123291, 2.572734832763672) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.095402956008911, 2.7525417804718018) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.374448776245117, 2.649167537689209) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.690709352493286, 2.6472902297973633) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.544569730758667, 2.5306761264801025) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3599636554718018, 2.360687017440796) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.151937484741211, 2.0467584133148193) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.275428533554077, 1.7803046703338623) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6319258213043213, 1.647017240524292) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.94838547706604, 1.5307817459106445) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.204533100128174, 1.3786433935165405) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.383535861968994, 1.2154269218444824) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.364691257476807, 1.5295501947402954) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.467623233795166, 1.690411925315857) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.754845142364502, 1.7839088439941406) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.12092399597168, 1.6371060609817505) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.971806526184082, 1.273542881011963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.133784770965576, 0.9266574382781982) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.97458028793335, 0.6612708568572998) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.687405109405518, 0.5647809505462646) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.133784770965576, 0.9266574382781982) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.12092399597168, 1.6371060609817505) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.002862930297852, 1.9385523796081543) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.8887128829956055, 1.99079430103302) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9288153648376465, 2.218517541885376) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.0055670738220215, 2.3898162841796875) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.096585750579834, 2.577368974685669) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.385976314544678, 2.5124499797821045) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.096585750579834, 2.577368974685669) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.011453628540039, 2.9641361236572266) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.713799953460693, 2.8572940826416016) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,b,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,b,2]  [r3,b,t,2]  [r3,t,2]  [r3,b,t,2]  [r3,t,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  


Remaining path: 
[r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 38
Total sampled points = 20253
RRG size = 1901

Movement Length = 27.833166
Remaining path Length = 4.338403
Total path Length = 32.17157

Advice samples: [10, 9, 4, 2, 1, 2, 0, 0, 0, 0] (28)

Total time taken (in ms):7312.360492

Initialization time (in ms):490.554441
Sampling time (in ms):5599.36608
Advice time (in ms):7.66469
Path checking time (in ms):614.188428
Learning time (in ms):171.233101
Exploration time (in ms):0.0
Time taken other than these things (in ms):429.353752
Moving time (in ms):939.5241



