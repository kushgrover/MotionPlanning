Parameters values: 
Environment: results/environments/env82/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.22429528861020864,0.08591741363948323), (0.7242952886102086,0.08591741363948323), (0.7242952886102086,0.38591741363948323), (0.22429528861020864,0.38591741363948323)]
[(0.9020721818852151,2.560278604913877), (1.402072181885215,2.560278604913877), (1.402072181885215,2.860278604913877), (0.9020721818852151,2.860278604913877)]
[(2.6300295322791625,0.10570704546512527), (3.1300295322791625,0.10570704546512527), (3.1300295322791625,0.40570704546512526), (2.6300295322791625,0.40570704546512526)]
[(2.505145033718173,2.576587180023103), (3.005145033718173,2.576587180023103), (3.005145033718173,2.876587180023103), (2.505145033718173,2.876587180023103)]
[(4.680920781180385,0.041445982178426294), (4.980920781180385,0.041445982178426294), (4.980920781180385,0.5414459821784263), (4.680920781180385,0.5414459821784263)]
[(5.674388795572089,2.495657805141416), (5.9743887955720885,2.495657805141416), (5.9743887955720885,2.995657805141416), (5.674388795572089,2.995657805141416)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.7655495,y=0.10863759,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.10863759,w=0.3464954,h=2.761987]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.07357511,w=2.9677784,h=2.7970495]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.07357511,w=2.9677784,h=2.7970495]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.007389916,w=4.806885,h=2.8632345]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.007389916,w=4.806885,h=2.8632345]  
t: java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=0.7,h=0.48591742]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=1.377777,h=2.9602785]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=3.1057343,h=2.9602785]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=3.1057343,h=2.9765873]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=4.9566255,h=2.9765873]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=5.9500937,h=3.0956578]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[1.0306365, 1.4202328] with IG = 34.25945
Iter num: 2
Used frontier: Point2D.Float[0.97583234, 0.48504278] with IG = 43.76627
Iter num: 3
Added advice frontier Point2D.Float[0.29228634, 0.44628334]
Added advice frontier Point2D.Float[0.4157448, 0.68927217]
Added advice frontier Point2D.Float[0.9354503, 0.24732314]
Added advice frontier Point2D.Float[1.0394727, 0.18753745]
Added advice frontier Point2D.Float[0.72329986, 0.050921533]
Used Advice frontier: Point2D.Float[0.9354503, 0.24732314] with IG = 414.72238
Iter num: 4
Added advice frontier Point2D.Float[0.76864624, 0.29419768]
Added advice frontier Point2D.Float[0.8444188, 0.36494842]
Added advice frontier Point2D.Float[0.8415332, 0.28714377]
Used Advice frontier: Point2D.Float[0.8415332, 0.28714377] with IG = 980.2928
Iter num: 5
Used Advice frontier: Point2D.Float[0.76864624, 0.29419768] with IG = 1365.6075
Iter num: 6
Used Advice frontier: Point2D.Float[0.8444188, 0.36494842] with IG = 964.6134
Iter num: 7
Used Advice frontier: Point2D.Float[1.0394727, 0.18753745] with IG = 379.2652
Iter num: 8
Used Advice frontier: Point2D.Float[0.72329986, 0.050921533] with IG = 290.33826
Iter num: 9
Used Advice frontier: Point2D.Float[0.4157448, 0.68927217] with IG = 121.107796
Iter num: 10
Used Advice frontier: Point2D.Float[0.29228634, 0.44628334] with IG = 366.9001
Iter num: 11
Used frontier: Point2D.Float[0.07511216, 0.021393191] with IG = 21.865906
Iter num: 12
Used frontier: Point2D.Float[0.85606265, 2.3079093] with IG = 10.733843
Iter num: 13
Added advice frontier Point2D.Float[0.6427463, 2.8082488]
Added advice frontier Point2D.Float[0.5062763, 2.9289486]
Added advice frontier Point2D.Float[1.154209, 2.5033054]
Added advice frontier Point2D.Float[0.89354235, 2.9334872]
Added advice frontier Point2D.Float[0.81024903, 2.6909652]
Used Advice frontier: Point2D.Float[1.154209, 2.5033054] with IG = 280.52844
Iter num: 14
Used Advice frontier: Point2D.Float[0.81024903, 2.6909652] with IG = 160.45798
Iter num: 15
Used Advice frontier: Point2D.Float[0.6427463, 2.8082488] with IG = 489.04233
Iter num: 16
Used Advice frontier: Point2D.Float[0.5062763, 2.9289486] with IG = 548.88306
Iter num: 17
Used Advice frontier: Point2D.Float[0.89354235, 2.9334872] with IG = 258.2027
Iter num: 18
Used frontier: Point2D.Float[1.39347, 2.5371823] with IG = 15.691853
Iter num: 19
Used frontier: Point2D.Float[1.895666, 1.4835312] with IG = 15.074005
Iter num: 20
Used frontier: Point2D.Float[2.8044446, 1.6567768] with IG = 23.197716
Iter num: 21
Added advice frontier Point2D.Float[2.9663873, 0.9823604]
Added advice frontier Point2D.Float[3.3240867, 2.4120553]
Added advice frontier Point2D.Float[3.399277, 1.2543509]
Used Advice frontier: Point2D.Float[3.399277, 1.2543509] with IG = 138.63466
Iter num: 22
Added advice frontier Point2D.Float[2.809912, 2.5482926]
Used Advice frontier: Point2D.Float[2.9663873, 0.9823604] with IG = 195.60062
Iter num: 23
Added advice frontier Point2D.Float[2.6283092, 0.44917598]
Added advice frontier Point2D.Float[2.3450603, 0.6531852]
Added advice frontier Point2D.Float[3.5112345, 0.22789404]
Added advice frontier Point2D.Float[3.5291462, 0.57460177]
Used Advice frontier: Point2D.Float[2.6283092, 0.44917598] with IG = 133.78638
Iter num: 24
Used Advice frontier: Point2D.Float[2.3450603, 0.6531852] with IG = 286.47568
Iter num: 25
Added advice frontier Point2D.Float[3.2029088, 2.501266]
Added advice frontier Point2D.Float[3.0575032, 2.5276878]
Used Advice frontier: Point2D.Float[3.5112345, 0.22789404] with IG = 65.32621
Iter num: 26
Added advice frontier Point2D.Float[3.0586395, 0.024897432]
Used Advice frontier: Point2D.Float[3.5291462, 0.57460177] with IG = 288.0432
Iter num: 27
Used Advice frontier: Point2D.Float[3.0586395, 0.024897432] with IG = 118.59522
Iter num: 28
Used Advice frontier: Point2D.Float[3.3240867, 2.4120553] with IG = 33.531384
Iter num: 29
Used Advice frontier: Point2D.Float[3.2029088, 2.501266] with IG = 664.5634
Iter num: 30
Used Advice frontier: Point2D.Float[3.0575032, 2.5276878] with IG = 676.6513
Iter num: 31
Used Advice frontier: Point2D.Float[2.809912, 2.5482926] with IG = 402.50006
Iter num: 32
Used frontier: Point2D.Float[4.22158, 1.5612757] with IG = 12.445512
Iter num: 33
Used frontier: Point2D.Float[4.841868, 1.7061191] with IG = 33.183258
Iter num: 34
Added advice frontier Point2D.Float[4.9540005, 2.3356965]
Added advice frontier Point2D.Float[5.188528, 0.8514167]
Added advice frontier Point2D.Float[5.0022116, 2.5412102]
Added advice frontier Point2D.Float[4.9961686, 1.0229759]
Used Advice frontier: Point2D.Float[4.9540005, 2.3356965] with IG = 149.1817
Iter num: 35
Added advice frontier Point2D.Float[5.7259016, 2.441641]
Added advice frontier Point2D.Float[5.7794495, 2.29512]
Used Advice frontier: Point2D.Float[5.0022116, 2.5412102] with IG = 473.72516
Iter num: 36
Used Advice frontier: Point2D.Float[5.7259016, 2.441641] with IG = 136.89111
Iter num: 37
Used Advice frontier: Point2D.Float[5.7794495, 2.29512] with IG = 641.0282
Iter num: 38
Used Advice frontier: Point2D.Float[4.9961686, 1.0229759] with IG = 40.896095
Iter num: 39
Added advice frontier Point2D.Float[5.029671, 0.56997025]
Added advice frontier Point2D.Float[4.5967116, 0.6731763]
Used Advice frontier: Point2D.Float[5.188528, 0.8514167] with IG = 387.97382
Iter num: 40
Added advice frontier Point2D.Float[5.320222, 0.021774506]
Added advice frontier Point2D.Float[5.4619813, 0.07658108]
Added advice frontier Point2D.Float[5.030689, 0.16711831]
Used Advice frontier: Point2D.Float[5.029671, 0.56997025] with IG = 309.42166

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0306365489959717, 1.4202327728271484) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9758323431015015, 0.4850427806377411) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9354503154754639, 0.247323140501976) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.8415331840515137, 0.2871437668800354) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.768646240234375, 0.294197678565979) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.8444188237190247, 0.36494842171669006) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0394726991653442, 0.18753744661808014) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7232998609542847, 0.05092153325676918) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.768646240234375, 0.294197678565979) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.6464880704879761, 0.6026785373687744) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.415744811296463, 0.6892721652984619) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.29228633642196655, 0.44628334045410156) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.2433619201183319, 0.4223310053348541) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.012772934511303902, 0.006067152600735426) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.07511215656995773, 0.021393191069364548) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.2737849950790405, 0.5898428559303284) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8083298206329346, 0.9430721998214722) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8261944651603699, 1.3505218029022217) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.856062650680542, 2.3079092502593994) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.154209017753601, 2.503305435180664) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9112322330474854, 2.3633577823638916) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8102490305900574, 2.690965175628662) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.6427463293075562, 2.80824875831604) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5062763094902039, 2.9289486408233643) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8935423493385315, 2.9334871768951416) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8909057974815369, 2.701087713241577) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9112322330474854, 2.3633577823638916) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.393470048904419, 2.537182331085205) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1904948949813843, 2.0961639881134033) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1591639518737793, 1.9091365337371826) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5285460948944092, 1.69013249874115) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8956660032272339, 1.4835312366485596) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.9665119647979736, 1.5610029697418213) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8044445514678955, 1.656776785850525) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0366387367248535, 1.538710117340088) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3992769718170166, 1.2543509006500244) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9663872718811035, 0.9823604226112366) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.026240825653076, 0.72735196352005) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6283092498779297, 0.44917598366737366) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.345060348510742, 0.6531851887702942) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6283092498779297, 0.44917598366737366) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.026240825653076, 0.72735196352005) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5112345218658447, 0.22789403796195984) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.529146194458008, 0.5746017694473267) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5112345218658447, 0.22789403796195984) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.0586395263671875, 0.024897431954741478) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.5112345218658447, 0.22789403796195984) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.026240825653076, 0.72735196352005) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9812235832214355, 1.1503236293792725) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.98209547996521, 1.2511579990386963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9531662464141846, 1.5952563285827637) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0050747394561768, 1.9397039413452148) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.159095525741577, 2.182065486907959) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3240866661071777, 2.412055253982544) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.202908754348755, 2.5012660026550293) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.0575032234191895, 2.5276877880096436) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.8099119663238525, 2.548292636871338) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.002336263656616, 2.194251537322998) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2349166870117188, 1.8544514179229736) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.504751443862915, 1.7486010789871216) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8601255416870117, 1.6876568794250488) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.2215800285339355, 1.5612757205963135) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.250516414642334, 1.805478811264038) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.988752365112305, 1.9622174501419067) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.841867923736572, 1.7061190605163574) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.988752365112305, 1.9622174501419067) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.954000473022461, 2.3356964588165283) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.002211570739746, 2.541210174560547) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.7259016036987305, 2.441641092300415) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.779449462890625, 2.2951200008392334) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.7259016036987305, 2.441641092300415) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.002211570739746, 2.541210174560547) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.972194671630859, 2.2858142852783203) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.988752365112305, 1.9622174501419067) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.043922424316406, 1.7709485292434692) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.928672790527344, 1.4891334772109985) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.988327980041504, 1.2624245882034302) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.996168613433838, 1.0229759216308594) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,b,t,12]  [r1,12]  [r1,t,12]  [r1,b,t,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,t,22]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [r3,b,2]  [r3,t,2]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,b,53]  [r6,t,53]  [r6,53]  [r6,t,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 40
Total sampled points = 21984
RRG size = 2003

Movement Length = 29.128727
Remaining path Length = 1.6154172
Total path Length = 30.744144

Advice samples: [10, 5, 11, 1, 3, 0, 1, 0, 0, 0] (31)

Total time taken (in ms):9049.247817

Initialization time (in ms):595.63335
Sampling time (in ms):7096.345665
Advice time (in ms):7.908747
Path checking time (in ms):653.186251
Learning time (in ms):212.468681
Exploration time (in ms):0.0
Time taken other than these things (in ms):483.705123
Moving time (in ms):1543.5039



