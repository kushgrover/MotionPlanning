Parameters values: 
Environment: results/environments/env76/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.7924844417081299,0.08414754515667187), (1.29248444170813,0.08414754515667187), (1.29248444170813,0.3841475451566719), (0.7924844417081299,0.3841475451566719)]
[(0.4287501980151101,2.489694104745455), (0.7287501980151101,2.489694104745455), (0.7287501980151101,2.989694104745455), (0.4287501980151101,2.989694104745455)]
[(2.211714780485397,0.02390153951253419), (2.5117147804853968,0.02390153951253419), (2.5117147804853968,0.5239015395125342), (2.211714780485397,0.5239015395125342)]
[(3.0704584748527735,2.469599545906458), (3.3704584748527733,2.469599545906458), (3.3704584748527733,2.969599545906458), (3.0704584748527735,2.969599545906458)]
[(5.0210958558422645,0.16537559285698206), (5.5210958558422645,0.16537559285698206), (5.5210958558422645,0.46537559285698205), (5.0210958558422645,0.46537559285698205)]
[(4.765746485918009,2.589497525048555), (5.265746485918009,2.589497525048555), (5.265746485918009,2.889497525048555), (4.765746485918009,2.889497525048555)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.1918064,y=0.015399984,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.1918064,y=0.015399984,w=1.277603,h=2.6722243]  java.awt.geom.Rectangle2D$Float[x=0.1918064,y=0.015399984,w=3.4128366,h=2.6722243]  java.awt.geom.Rectangle2D$Float[x=0.1918064,y=0.015399984,w=3.4128366,h=2.6722243]  java.awt.geom.Rectangle2D$Float[x=0.1918064,y=0.015399984,w=4.287132,h=2.6722243]  java.awt.geom.Rectangle2D$Float[x=0.1918064,y=0.015399984,w=4.287132,h=2.8575497]  
t: java.awt.geom.Rectangle2D$Float[x=0.69248444,y=0.0,w=0.7,h=0.48414755]  java.awt.geom.Rectangle2D$Float[x=0.3287502,y=0.0,w=1.0637343,h=3.089694]  java.awt.geom.Rectangle2D$Float[x=0.3287502,y=0.0,w=2.2829647,h=3.089694]  java.awt.geom.Rectangle2D$Float[x=0.3287502,y=0.0,w=3.1417084,h=3.089694]  java.awt.geom.Rectangle2D$Float[x=0.3287502,y=0.0,w=5.2923455,h=3.089694]  java.awt.geom.Rectangle2D$Float[x=0.3287502,y=0.0,w=5.2923455,h=3.089694]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9358007, 1.4546958] with IG = 38.23052
Iter num: 2
Used frontier: Point2D.Float[1.175387, 0.78851724] with IG = 50.85093
Iter num: 3
Added advice frontier Point2D.Float[1.3657277, 0.44547272]
Added advice frontier Point2D.Float[1.7545228, 0.39885038]
Used Advice frontier: Point2D.Float[1.3657277, 0.44547272] with IG = 254.89882
Iter num: 4
Used Advice frontier: Point2D.Float[1.7545228, 0.39885038] with IG = 255.3753
Iter num: 5
Used frontier: Point2D.Float[0.35098615, 0.33749035] with IG = 22.671778
Iter num: 6
Added advice frontier Point2D.Float[0.2339149, 0.05397426]
Added advice frontier Point2D.Float[0.3989198, 0.06866866]
Used Advice frontier: Point2D.Float[0.3989198, 0.06866866] with IG = 366.21747
Iter num: 7
Added advice frontier Point2D.Float[0.7503321, 2.3908045]
Used Advice frontier: Point2D.Float[0.2339149, 0.05397426] with IG = 603.6537
Iter num: 8
Used Advice frontier: Point2D.Float[0.7503321, 2.3908045] with IG = 39.500874
Iter num: 9
Added advice frontier Point2D.Float[1.3025267, 2.5054893]
Used Advice frontier: Point2D.Float[1.3025267, 2.5054893] with IG = 177.3118
Iter num: 10
Used frontier: Point2D.Float[1.8671752, 1.5486523] with IG = 14.952803
Iter num: 11
Used frontier: Point2D.Float[2.746372, 1.1806056] with IG = 20.824926
Iter num: 12
Added advice frontier Point2D.Float[3.091927, 0.76473206]
Added advice frontier Point2D.Float[3.062858, 2.0620377]
Added advice frontier Point2D.Float[3.0617747, 1.9800433]
Added advice frontier Point2D.Float[3.1314943, 1.0070605]
Used Advice frontier: Point2D.Float[3.1314943, 1.0070605] with IG = 236.73225
Iter num: 13
Added advice frontier Point2D.Float[3.4634855, 0.12406884]
Added advice frontier Point2D.Float[3.193458, 0.25244808]
Added advice frontier Point2D.Float[2.6013057, 0.5925514]
Added advice frontier Point2D.Float[2.8134687, 0.67002946]
Used Advice frontier: Point2D.Float[3.091927, 0.76473206] with IG = 407.2698
Iter num: 14
Used Advice frontier: Point2D.Float[2.8134687, 0.67002946] with IG = 339.9952
Iter num: 15
Used Advice frontier: Point2D.Float[2.6013057, 0.5925514] with IG = 442.7381
Iter num: 16
Used Advice frontier: Point2D.Float[3.193458, 0.25244808] with IG = 137.53703
Iter num: 17
Used Advice frontier: Point2D.Float[3.4634855, 0.12406884] with IG = 334.45746
Iter num: 18
Used Advice frontier: Point2D.Float[3.0617747, 1.9800433] with IG = 52.175095
Iter num: 19
Added advice frontier Point2D.Float[3.4363518, 2.4827178]
Added advice frontier Point2D.Float[3.5657957, 2.5876205]
Used Advice frontier: Point2D.Float[3.062858, 2.0620377] with IG = 1219.4888
Iter num: 20
Used Advice frontier: Point2D.Float[3.4363518, 2.4827178] with IG = 177.76009
Iter num: 21
Used Advice frontier: Point2D.Float[3.5657957, 2.5876205] with IG = 600.1888
Iter num: 22
Used frontier: Point2D.Float[3.5250278, 2.5799668] with IG = 48.21585
Iter num: 23
Added advice frontier Point2D.Float[2.2637935, 2.5693402]
Used Advice frontier: Point2D.Float[2.2637935, 2.5693402] with IG = 68.9182
Iter num: 24
Used frontier: Point2D.Float[3.7617517, 1.5486414] with IG = 18.994814
Iter num: 25
Used frontier: Point2D.Float[4.482587, 1.4883177] with IG = 30.488255
Iter num: 26
Added advice frontier Point2D.Float[5.035306, 2.233127]
Added advice frontier Point2D.Float[5.033969, 0.97471625]
Added advice frontier Point2D.Float[5.0282383, 1.1466873]
Added advice frontier Point2D.Float[5.1045055, 1.9735261]
Used Advice frontier: Point2D.Float[5.0282383, 1.1466873] with IG = 134.1696
Iter num: 27
Added advice frontier Point2D.Float[5.39246, 0.53396153]
Added advice frontier Point2D.Float[5.4097385, 0.65323406]
Used Advice frontier: Point2D.Float[5.033969, 0.97471625] with IG = 581.1707
Iter num: 28
Used Advice frontier: Point2D.Float[5.4097385, 0.65323406] with IG = 191.21165
Iter num: 29
Used Advice frontier: Point2D.Float[5.39246, 0.53396153] with IG = 829.7544
Iter num: 30
Used Advice frontier: Point2D.Float[5.1045055, 1.9735261] with IG = 67.10074
Iter num: 31
Used Advice frontier: Point2D.Float[5.035306, 2.233127] with IG = 372.20978
Iter num: 32
Added advice frontier Point2D.Float[4.7472897, 2.4930274]
Added advice frontier Point2D.Float[4.4998713, 2.6649992]
Used Advice frontier: Point2D.Float[4.7472897, 2.4930274] with IG = 257.76828
Iter num: 33
Used Advice frontier: Point2D.Float[4.4998713, 2.6649992] with IG = 331.87964
Iter num: 34
Added advice frontier Point2D.Float[4.4193068, 2.8703625]
Added advice frontier Point2D.Float[4.5679746, 2.8301945]
Used Advice frontier: Point2D.Float[4.5679746, 2.8301945] with IG = 559.6511
Iter num: 35
Used Advice frontier: Point2D.Float[4.4193068, 2.8703625] with IG = 649.3562
Iter num: 36
Used frontier: Point2D.Float[4.4223003, 0.6015965] with IG = 15.281413
Iter num: 37
Added advice frontier Point2D.Float[4.436018, 0.14685366]
Added advice frontier Point2D.Float[4.1971116, 0.10543986]
Used Advice frontier: Point2D.Float[4.436018, 0.14685366] with IG = 217.20787

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9358006715774536, 1.4546958208084106) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1753870248794556, 0.7885172367095947) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3657276630401611, 0.44547271728515625) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.7545228004455566, 0.39885038137435913) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1600574254989624, 0.4400980770587921) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.35098615288734436, 0.33749035000801086) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3989197909832001, 0.0686686635017395) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.23391489684581757, 0.05397425964474678) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.5542672276496887, 0.4698636531829834) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8611811399459839, 1.0546486377716064) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8610899448394775, 1.5516585111618042) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8643532991409302, 1.7463195323944092) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7503321170806885, 2.3908045291900635) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3025267124176025, 2.5054893493652344) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.142754316329956, 1.9550055265426636) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.5023775100708008, 1.7715305089950562) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8671752214431763, 1.5486522912979126) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.234973430633545, 1.0929728746414185) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7463719844818115, 1.1806056499481201) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1314942836761475, 1.0070605278015137) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0919270515441895, 0.7647320628166199) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8134686946868896, 0.6700294613838196) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6013057231903076, 0.5925514101982117) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.8377037048339844, 0.31283068656921387) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.193458080291748, 0.25244808197021484) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4634854793548584, 0.12406884133815765) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.3602426052093506, 0.43917742371559143) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.254055976867676, 0.649938702583313) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1827211380004883, 1.0396779775619507) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0951828956604004, 1.368767261505127) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0790350437164307, 1.5701143741607666) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.061774730682373, 1.9800432920455933) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0628581047058105, 2.062037706375122) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.436351776123047, 2.482717752456665) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.565795660018921, 2.587620496749878) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5250277519226074, 2.5799667835235596) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.436351776123047, 2.482717752456665) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.0414578914642334, 2.3233869075775146) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9310319423675537, 2.3039469718933105) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6265439987182617, 2.5904312133789062) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.263793468475342, 2.569340229034424) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.415151834487915, 2.4459145069122314) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8322832584381104, 2.312713861465454) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.0628581047058105, 2.062037706375122) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3386082649230957, 1.8296078443527222) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6300861835479736, 1.6271159648895264) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.761751651763916, 1.5486414432525635) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8827855587005615, 1.5837737321853638) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.228086948394775, 1.6607086658477783) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.482586860656738, 1.4883177280426025) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.812018871307373, 1.5016413927078247) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.028238296508789, 1.1466872692108154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.033968925476074, 0.9747162461280823) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.192013740539551, 0.9418931603431702) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.409738540649414, 0.65323406457901) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.392459869384766, 0.5339615345001221) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(5.192013740539551, 0.9418931603431702) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1484174728393555, 1.3582582473754883) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.120852470397949, 1.6105895042419434) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.10450553894043, 1.973526120185852) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.035305976867676, 2.2331271171569824) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.747289657592773, 2.493027448654175) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.499871253967285, 2.66499924659729) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.56797456741333, 2.8301944732666016) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.419306755065918, 2.8703625202178955) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.499871253967285, 2.66499924659729) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.747289657592773, 2.493027448654175) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.035305976867676, 2.2331271171569824) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.058536052703857, 1.8624804019927979) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.066316604614258, 1.64131760597229) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.0508856773376465, 1.3766019344329834) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.028238296508789, 1.1466872692108154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.77154016494751, 0.9232633113861084) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.686400413513184, 0.8481646776199341) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.422300338745117, 0.601596474647522) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,t,2]  [r4,2]  [r4,b,35]  [r4,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [r6,b,53]  [r6,53]  [r6,t,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  


Remaining path: 
[r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 37
Total sampled points = 20833
RRG size = 1851

Movement Length = 26.463608
Remaining path Length = 0.0
Total path Length = 26.463608

Advice samples: [15, 5, 3, 3, 1, 1, 0, 0, 0, 0] (28)

Total time taken (in ms):7150.831392

Initialization time (in ms):561.472629
Sampling time (in ms):5380.751918
Advice time (in ms):8.796912
Path checking time (in ms):494.074055
Learning time (in ms):158.930097
Exploration time (in ms):0.0
Time taken other than these things (in ms):546.805781
Moving time (in ms):872.4152



