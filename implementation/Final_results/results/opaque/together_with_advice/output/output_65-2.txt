Parameters values: 
Environment: results/environments/env65/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.30625089278162054,0.08105992361863325), (0.8062508927816205,0.08105992361863325), (0.8062508927816205,0.3810599236186332), (0.30625089278162054,0.3810599236186332)]
[(0.34756409308190833,2.4617846584390666), (0.6475640930819083,2.4617846584390666), (0.6475640930819083,2.9617846584390666), (0.34756409308190833,2.9617846584390666)]
[(3.4488708460433837,0.008881052295225424), (3.7488708460433835,0.008881052295225424), (3.7488708460433835,0.5088810522952254), (3.4488708460433837,0.5088810522952254)]
[(2.983546675069148,2.454758104649557), (3.283546675069148,2.454758104649557), (3.283546675069148,2.954758104649557), (2.983546675069148,2.954758104649557)]
[(5.325742055046789,0.03386050746043865), (5.825742055046789,0.03386050746043865), (5.825742055046789,0.33386050746043866), (5.325742055046789,0.33386050746043866)]
[(5.281398833374705,2.4814737383539365), (5.581398833374704,2.4814737383539365), (5.581398833374704,2.9814737383539365), (5.281398833374705,2.9814737383539365)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=1.0029259,y=0.20896177,w=0.20000005,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.20896177,w=0.27702224,h=2.448612]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=2.2932663,h=2.6392937]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=2.2932663,h=2.6513338]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=3.696938,h=2.6513338]  java.awt.geom.Rectangle2D$Float[x=0.9259037,y=0.018280042,w=4.188627,h=2.6574256]  
t: java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=0.7,h=0.4810599]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=0.7,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=3.6426198,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=3.6426198,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=5.7194915,h=3.0617847]  java.awt.geom.Rectangle2D$Float[x=0.20625089,y=0.0,w=5.7194915,h=3.0814738]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.8759419, 1.4593573] with IG = 41.183746
Iter num: 2
Used frontier: Point2D.Float[0.79190445, 0.62086815] with IG = 40.34699
Iter num: 3
Added advice frontier Point2D.Float[0.21424025, 0.47742262]
Added advice frontier Point2D.Float[1.1112471, 0.4031558]
Added advice frontier Point2D.Float[0.107356966, 0.5802919]
Added advice frontier Point2D.Float[1.2243153, 0.4769769]
Added advice frontier Point2D.Float[0.8744396, 0.2771495]
Used Advice frontier: Point2D.Float[0.8744396, 0.2771495] with IG = 282.8941
Iter num: 4
Used Advice frontier: Point2D.Float[1.1112471, 0.4031558] with IG = 372.79355
Iter num: 5
Used Advice frontier: Point2D.Float[1.2243153, 0.4769769] with IG = 740.55835
Iter num: 6
Used Advice frontier: Point2D.Float[0.21424025, 0.47742262] with IG = 98.4516
Iter num: 7
Used Advice frontier: Point2D.Float[0.107356966, 0.5802919] with IG = 674.10596
Iter num: 8
Used frontier: Point2D.Float[0.934316, 2.3883524] with IG = 13.217389
Iter num: 9
Added advice frontier Point2D.Float[0.71339566, 2.9107897]
Added advice frontier Point2D.Float[0.89141077, 2.698635]
Added advice frontier Point2D.Float[1.094023, 2.52094]
Used Advice frontier: Point2D.Float[1.094023, 2.52094] with IG = 481.7623
Iter num: 10
Used Advice frontier: Point2D.Float[0.89141077, 2.698635] with IG = 371.06522
Iter num: 11
Used Advice frontier: Point2D.Float[0.71339566, 2.9107897] with IG = 361.0815
Iter num: 12
Used frontier: Point2D.Float[1.8112171, 1.4771562] with IG = 12.359245
Iter num: 13
Used frontier: Point2D.Float[2.732526, 1.4674919] with IG = 21.400913
Iter num: 14
Added advice frontier Point2D.Float[3.1343586, 0.8018906]
Added advice frontier Point2D.Float[3.0953193, 2.2965894]
Added advice frontier Point2D.Float[3.0586963, 1.9665406]
Used Advice frontier: Point2D.Float[3.0586963, 1.9665406] with IG = 164.65472
Iter num: 15
Added advice frontier Point2D.Float[2.8970149, 2.4534473]
Added advice frontier Point2D.Float[2.5110693, 2.3998876]
Added advice frontier Point2D.Float[2.5764747, 2.4799354]
Used Advice frontier: Point2D.Float[3.0953193, 2.2965894] with IG = 301.13727
Iter num: 16
Used Advice frontier: Point2D.Float[2.8970149, 2.4534473] with IG = 395.50394
Iter num: 17
Used Advice frontier: Point2D.Float[2.5764747, 2.4799354] with IG = 310.91364
Iter num: 18
Used Advice frontier: Point2D.Float[2.5110693, 2.3998876] with IG = 967.3913
Iter num: 19
Used Advice frontier: Point2D.Float[3.1343586, 0.8018906] with IG = 56.644783
Iter num: 20
Added advice frontier Point2D.Float[3.3969932, 0.3132027]
Added advice frontier Point2D.Float[3.307948, 0.26166278]
Added advice frontier Point2D.Float[3.147883, 0.07093872]
Added advice frontier Point2D.Float[2.5669026, 0.035809405]
Used Advice frontier: Point2D.Float[3.3969932, 0.3132027] with IG = 179.53455
Iter num: 21
Used Advice frontier: Point2D.Float[3.307948, 0.26166278] with IG = 971.9562
Iter num: 22
Used Advice frontier: Point2D.Float[3.147883, 0.07093872] with IG = 401.62094
Iter num: 23
Used Advice frontier: Point2D.Float[2.5669026, 0.035809405] with IG = 171.80908
Iter num: 24
Used frontier: Point2D.Float[3.8551917, 1.4873128] with IG = 16.486664
Iter num: 25
Used frontier: Point2D.Float[4.7291036, 1.519949] with IG = 19.83545
Iter num: 26
Added advice frontier Point2D.Float[4.9828157, 0.74916404]
Used Advice frontier: Point2D.Float[4.9828157, 0.74916404] with IG = 122.21789
Iter num: 27
Added advice frontier Point2D.Float[5.269627, 0.17730977]
Added advice frontier Point2D.Float[5.219306, 0.32326806]
Added advice frontier Point2D.Float[4.5183225, 0.32890138]
Added advice frontier Point2D.Float[4.395129, 0.3181256]
Used Advice frontier: Point2D.Float[5.219306, 0.32326806] with IG = 201.7586
Iter num: 28
Used Advice frontier: Point2D.Float[5.269627, 0.17730977] with IG = 647.71356
Iter num: 29
Added advice frontier Point2D.Float[4.90706, 2.2283673]
Used Advice frontier: Point2D.Float[4.5183225, 0.32890138] with IG = 130.43336
Iter num: 30
Used Advice frontier: Point2D.Float[4.395129, 0.3181256] with IG = 808.6451
Iter num: 31
Used Advice frontier: Point2D.Float[4.90706, 2.2283673] with IG = 40.921104
Iter num: 32
Added advice frontier Point2D.Float[5.2833934, 2.4649992]
Added advice frontier Point2D.Float[5.614873, 2.2879183]
Added advice frontier Point2D.Float[5.0288, 2.5055687]
Added advice frontier Point2D.Float[4.767837, 2.8445568]
Used Advice frontier: Point2D.Float[5.0288, 2.5055687] with IG = 330.29895

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r1,b,40]  [h,40]  [r4,40]  [r4,b,48]  [r4,48]  [h,48]  [r3,48]  [r3,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8759418725967407, 1.4593572616577148) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7919044494628906, 0.6208681464195251) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8744395971298218, 0.277149498462677) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.1112470626831055, 0.4031558036804199) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.2243152856826782, 0.4769769012928009) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.163507103919983, 0.45107460021972656) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.21424025297164917, 0.4774226248264313) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.1073569655418396, 0.5802919268608093) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.38579261302948, 0.7393656969070435) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7552326917648315, 0.8451591730117798) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8420095443725586, 1.0402861833572388) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8979068994522095, 1.8562709093093872) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9343159794807434, 2.388352394104004) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0940229892730713, 2.520940065383911) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.891410768032074, 2.6986351013183594) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7133956551551819, 2.910789728164673) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.0173932313919067, 2.3125007152557373) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1825535297393799, 1.9723625183105469) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2530689239501953, 1.853428840637207) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.686017632484436, 1.572564959526062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8112170696258545, 1.477156162261963) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.2049202919006348, 1.768647313117981) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.672668933868408, 1.5795730352401733) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.7325260639190674, 1.467491865158081) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.884364366531372, 1.6003350019454956) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0586962699890137, 1.9665405750274658) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0953192710876465, 2.2965893745422363) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.897014856338501, 2.4534473419189453) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.576474666595459, 2.47993540763855) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.5110692977905273, 2.3998875617980957) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8635294437408447, 2.015949010848999) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9328231811523438, 1.7100551128387451) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.042994499206543, 1.267907977104187) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1343586444854736, 0.8018906116485596) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1632769107818604, 0.7083920240402222) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3969931602478027, 0.31320270895957947) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.307948112487793, 0.2616627812385559) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1478829383850098, 0.07093872129917145) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(2.5669026374816895, 0.03580940514802933) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.73943829536438, 0.1797119677066803) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.852318286895752, 0.48364633321762085) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.937957286834717, 0.8406051993370056) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2987008094787598, 1.151057243347168) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.59096360206604, 1.4211922883987427) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.855191707611084, 1.4873127937316895) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.93597412109375, 1.5784635543823242) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.753268718719482, 1.2973778247833252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7291035652160645, 1.519948959350586) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.753268718719482, 1.2973778247833252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.982815742492676, 0.7491640448570251) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.983902454376221, 0.6857155561447144) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.219305992126465, 0.3232680559158325) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.269627094268799, 0.1773097664117813) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.869193077087402, 0.26765120029449463) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.518322467803955, 0.32890138030052185) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.395129203796387, 0.3181256055831909) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.518322467803955, 0.32890138030052185) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.914773464202881, 0.3789415955543518) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.982815742492676, 0.7491640448570251) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.753268718719482, 1.2973778247833252) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.765094757080078, 1.6887961626052856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.826761722564697, 1.8960598707199097) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,t,22]  [r4,b,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,b,21]  [r5,21]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,b,63]  


Remaining path: 
[r6,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 32
Total sampled points = 17109
RRG size = 1601

Movement Length = 22.797525
Remaining path Length = 0.0
Total path Length = 22.797525

Advice samples: [13, 6, 5, 0, 1, 0, 0, 0, 0, 0] (25)

Total time taken (in ms):7458.963622

Initialization time (in ms):689.789403
Sampling time (in ms):5665.694341
Advice time (in ms):6.945547
Path checking time (in ms):509.285773
Learning time (in ms):180.275899
Exploration time (in ms):0.0
Time taken other than these things (in ms):406.972659
Moving time (in ms):1946.1571



