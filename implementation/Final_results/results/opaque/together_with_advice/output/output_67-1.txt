Parameters values: 
Environment: results/environments/env67/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.6386852397495704,0.13188382770327348), (1.1386852397495704,0.13188382770327348), (1.1386852397495704,0.4318838277032735), (0.6386852397495704,0.4318838277032735)]
[(0.5639099410660285,2.457034893441931), (0.8639099410660285,2.457034893441931), (0.8639099410660285,2.957034893441931), (0.5639099410660285,2.957034893441931)]
[(3.02023870426933,0.19033311614637086), (3.52023870426933,0.19033311614637086), (3.52023870426933,0.4903331161463709), (3.02023870426933,0.4903331161463709)]
[(2.9249358304628608,2.6590765047769933), (3.4249358304628608,2.6590765047769933), (3.4249358304628608,2.959076504776993), (2.9249358304628608,2.959076504776993)]
[(4.255515123720138,0.08764775567291709), (4.755515123720138,0.08764775567291709), (4.755515123720138,0.3876477556729171), (4.255515123720138,0.3876477556729171)]
[(5.445177217244126,2.487389766924934), (5.945177217244126,2.487389766924934), (5.945177217244126,2.787389766924934), (5.445177217244126,2.787389766924934)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.39415303,y=0.23248696,w=0.20000002,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.39415303,y=0.23248696,w=1.1719,h=2.422184]  java.awt.geom.Rectangle2D$Float[x=0.39415303,y=0.02921309,w=2.449976,h=2.6254578]  java.awt.geom.Rectangle2D$Float[x=0.39415303,y=0.02921309,w=2.449976,h=2.6755292]  java.awt.geom.Rectangle2D$Float[x=0.39415303,y=0.02921309,w=5.0380645,h=2.6755292]  java.awt.geom.Rectangle2D$Float[x=0.39415303,y=0.02921309,w=5.0380645,h=2.7258863]  
t: java.awt.geom.Rectangle2D$Float[x=0.53868526,y=0.03188383,w=0.7,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.46390995,y=0.03188383,w=0.77477527,h=3.0251513]  java.awt.geom.Rectangle2D$Float[x=0.46390995,y=0.03188383,w=3.156329,h=3.0251513]  java.awt.geom.Rectangle2D$Float[x=0.46390995,y=0.03188383,w=3.156329,h=3.0271928]  java.awt.geom.Rectangle2D$Float[x=0.46390995,y=0.0,w=4.391605,h=3.0590765]  java.awt.geom.Rectangle2D$Float[x=0.46390995,y=0.0,w=5.581267,h=3.0590765]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9110351, 1.43037] with IG = 39.311142
Iter num: 2
Used frontier: Point2D.Float[1.1435728, 0.65109396] with IG = 47.95685
Iter num: 3
Added advice frontier Point2D.Float[1.1530496, 0.20956382]
Added advice frontier Point2D.Float[1.8421509, 0.14862318]
Added advice frontier Point2D.Float[0.7699123, 2.3614776]
Added advice frontier Point2D.Float[0.40734527, 0.42381757]
Added advice frontier Point2D.Float[0.39101478, 0.59131026]
Added advice frontier Point2D.Float[0.6227488, 0.4948433]
Used Advice frontier: Point2D.Float[1.1530496, 0.20956382] with IG = 226.43295
Iter num: 4
Used Advice frontier: Point2D.Float[1.8421509, 0.14862318] with IG = 144.55237
Iter num: 5
Used Advice frontier: Point2D.Float[0.6227488, 0.4948433] with IG = 75.66139
Iter num: 6
Added advice frontier Point2D.Float[0.5936627, 0.34586546]
Added advice frontier Point2D.Float[0.6205516, 0.15388617]
Used Advice frontier: Point2D.Float[0.5936627, 0.34586546] with IG = 658.8021
Iter num: 7
Used Advice frontier: Point2D.Float[0.6205516, 0.15388617] with IG = 515.85425
Iter num: 8
Used Advice frontier: Point2D.Float[0.40734527, 0.42381757] with IG = 290.71747
Iter num: 9
Used Advice frontier: Point2D.Float[0.39101478, 0.59131026] with IG = 594.22327
Iter num: 10
Used Advice frontier: Point2D.Float[0.7699123, 2.3614776] with IG = 50.255844
Iter num: 11
Added advice frontier Point2D.Float[1.3751909, 2.6131895]
Added advice frontier Point2D.Float[1.4951558, 2.6702616]
Used Advice frontier: Point2D.Float[1.3751909, 2.6131895] with IG = 152.52487
Iter num: 12
Used Advice frontier: Point2D.Float[1.4951558, 2.6702616] with IG = 752.73505
Iter num: 13
Used frontier: Point2D.Float[1.8149207, 1.5205508] with IG = 14.675623
Iter num: 14
Used frontier: Point2D.Float[2.6198363, 1.4853015] with IG = 29.428373
Iter num: 15
Added advice frontier Point2D.Float[3.0703044, 0.91148597]
Added advice frontier Point2D.Float[2.9707246, 2.0335732]
Added advice frontier Point2D.Float[3.191425, 1.0763673]
Used Advice frontier: Point2D.Float[2.9707246, 2.0335732] with IG = 135.51303
Iter num: 16
Added advice frontier Point2D.Float[2.635363, 2.5111084]
Added advice frontier Point2D.Float[2.544808, 2.7625446]
Added advice frontier Point2D.Float[3.514013, 2.5957408]
Added advice frontier Point2D.Float[3.7452292, 2.1530354]
Used Advice frontier: Point2D.Float[2.635363, 2.5111084] with IG = 162.71753
Iter num: 17
Added advice frontier Point2D.Float[2.9065628, 2.617921]
Used Advice frontier: Point2D.Float[2.544808, 2.7625446] with IG = 374.18707
Iter num: 18
Used Advice frontier: Point2D.Float[2.9065628, 2.617921] with IG = 256.67822
Iter num: 19
Used Advice frontier: Point2D.Float[3.514013, 2.5957408] with IG = 140.57664
Iter num: 20
Used Advice frontier: Point2D.Float[3.7452292, 2.1530354] with IG = 200.22076
Iter num: 21
Used Advice frontier: Point2D.Float[3.191425, 1.0763673] with IG = 59.749058
Iter num: 22
Added advice frontier Point2D.Float[3.1732442, 0.56944656]
Added advice frontier Point2D.Float[2.6417315, 0.374567]
Used Advice frontier: Point2D.Float[3.0703044, 0.91148597] with IG = 488.78833
Iter num: 23
Added advice frontier Point2D.Float[2.7070777, 0.054329343]
Used Advice frontier: Point2D.Float[3.1732442, 0.56944656] with IG = 279.9599
Iter num: 24
Used Advice frontier: Point2D.Float[2.6417315, 0.374567] with IG = 176.64319
Iter num: 25
Added advice frontier Point2D.Float[3.01061, 0.122078635]
Used Advice frontier: Point2D.Float[2.7070777, 0.054329343] with IG = 305.96307
Iter num: 26
Used Advice frontier: Point2D.Float[3.01061, 0.122078635] with IG = 321.54196
Iter num: 27
Used frontier: Point2D.Float[3.504039, 0.56672806] with IG = 25.100895
Iter num: 28
Used frontier: Point2D.Float[3.9744968, 1.6271043] with IG = 17.294493
Iter num: 29
Used frontier: Point2D.Float[4.597609, 1.6789864] with IG = 20.210926
Iter num: 30
Added advice frontier Point2D.Float[5.1098375, 2.0235534]
Added advice frontier Point2D.Float[4.925552, 0.85161096]
Used Advice frontier: Point2D.Float[5.1098375, 2.0235534] with IG = 132.4422
Iter num: 31
Added advice frontier Point2D.Float[5.2832084, 2.5599458]
Added advice frontier Point2D.Float[4.7303905, 2.8574402]
Added advice frontier Point2D.Float[5.3610744, 2.44466]
Added advice frontier Point2D.Float[5.6799817, 2.3487144]
Used Advice frontier: Point2D.Float[5.3610744, 2.44466] with IG = 193.64653
Iter num: 32
Used Advice frontier: Point2D.Float[5.2832084, 2.5599458] with IG = 718.81165
Iter num: 33
Used Advice frontier: Point2D.Float[5.6799817, 2.3487144] with IG = 211.79883
Iter num: 34
Used Advice frontier: Point2D.Float[4.7303905, 2.8574402] with IG = 92.824196
Iter num: 35
Used Advice frontier: Point2D.Float[4.925552, 0.85161096] with IG = 46.854378
Iter num: 36
Added advice frontier Point2D.Float[4.7666116, 0.36372793]
Added advice frontier Point2D.Float[5.3215027, 0.2374746]
Added advice frontier Point2D.Float[5.00368, 0.36491236]
Used Advice frontier: Point2D.Float[4.7666116, 0.36372793] with IG = 194.88628

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9110351204872131, 1.4303699731826782) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1435728073120117, 0.6510939598083496) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1530495882034302, 0.20956382155418396) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.8421509265899658, 0.14862318336963654) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1171129941940308, 0.5423335433006287) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6227487921714783, 0.4948433041572571) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.593662679195404, 0.3458654582500458) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.620551586151123, 0.15388616919517517) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.4073452651500702, 0.42381757497787476) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.39101478457450867, 0.5913102626800537) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6856656074523926, 0.7863768339157104) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8658637404441833, 1.0399575233459473) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8480532765388489, 1.4262337684631348) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8219650387763977, 1.846332311630249) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7699123024940491, 2.3614776134490967) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8093767762184143, 2.3748703002929688) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.3751908540725708, 2.613189458847046) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(1.4951558113098145, 2.6702616214752197) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2432547807693481, 2.220855236053467) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.169002890586853, 1.9610728025436401) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.606174349784851, 1.66542649269104) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8149206638336182, 1.5205508470535278) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8765220642089844, 1.5098950862884521) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.428781032562256, 1.4399824142456055) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6198363304138184, 1.4853014945983887) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.026632308959961, 1.8510470390319824) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.970724582672119, 2.0335731506347656) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6932613849639893, 2.263725519180298) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.6353631019592285, 2.5111083984375) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.5448079109191895, 2.762544631958008) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9065628051757812, 2.6179211139678955) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.379084348678589, 2.4396512508392334) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.5140130519866943, 2.595740795135498) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.7452292442321777, 2.1530354022979736) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3236329555511475, 2.162203550338745) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.053835868835449, 1.9779565334320068) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0869109630584717, 1.6747922897338867) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.131040334701538, 1.1575433015823364) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.191425085067749, 1.0763672590255737) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0703043937683105, 0.9114859700202942) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1732442378997803, 0.5694465637207031) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.6417315006256104, 0.3745670020580292) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.707077741622925, 0.054329343140125275) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.0106101036071777, 0.12207863479852676) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.7877931594848633, 0.25100764632225037) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0598907470703125, 0.562903642654419) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.5040390491485596, 0.5667280554771423) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.2097256183624268, 0.7924979329109192) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.191425085067749, 1.0763672590255737) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4867782592773438, 1.2205171585083008) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.698861837387085, 1.3970067501068115) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.974496841430664, 1.6271042823791504) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9506943225860596, 1.2275015115737915) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.098507881164551, 1.1686118841171265) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.461954593658447, 1.4452201128005981) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.597609043121338, 1.6789864301681519) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.075009346008301, 1.7540066242218018) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.109837532043457, 2.0235533714294434) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.183844566345215, 2.304269313812256) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.361074447631836, 2.444659948348999) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.28320837020874, 2.559945821762085) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.361074447631836, 2.444659948348999) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.679981708526611, 2.3487143516540527) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.400783538818359, 2.499840021133423) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.28320837020874, 2.559945821762085) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(4.730390548706055, 2.857440233230591) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.816678524017334, 2.7427022457122803) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.977527141571045, 2.3986217975616455) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.044658660888672, 2.131518602371216) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.075009346008301, 1.7540066242218018) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1035943031311035, 1.6014175415039062) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1448845863342285, 1.3431968688964844) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.971500873565674, 1.0024380683898926) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,0]  [r1,t,0]  [r1,b,t,12]  [r1,t,12]  [r1,b,12]  [r1,12]  [h,12]  [r2,t,12]  [r2,b,22]  [r2,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,19]  [r4,t,19]  [r4,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,t,19]  [r3,19]  [r3,b,35]  [r3,t,35]  [r3,35]  [r3,t,35]  [r3,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,b,53]  [r6,t,53]  [r6,53]  [r6,t,53]  [r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,t,53]  


Remaining path: 
[r5,t,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 36
Total sampled points = 19705
RRG size = 1801

Movement Length = 26.38922
Remaining path Length = 0.56907296
Total path Length = 26.958292

Advice samples: [13, 6, 5, 4, 1, 0, 0, 0, 0, 0] (29)

Total time taken (in ms):9205.566978

Initialization time (in ms):519.011151
Sampling time (in ms):7212.44575
Advice time (in ms):8.202807
Path checking time (in ms):631.053989
Learning time (in ms):211.902715
Exploration time (in ms):0.0
Time taken other than these things (in ms):622.950566
Moving time (in ms):2617.2456



