Parameters values: 
Environment: results/environments/env82/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(0.22429528861020864,0.08591741363948323), (0.7242952886102086,0.08591741363948323), (0.7242952886102086,0.38591741363948323), (0.22429528861020864,0.38591741363948323)]
[(0.9020721818852151,2.560278604913877), (1.402072181885215,2.560278604913877), (1.402072181885215,2.860278604913877), (0.9020721818852151,2.860278604913877)]
[(2.6300295322791625,0.10570704546512527), (3.1300295322791625,0.10570704546512527), (3.1300295322791625,0.40570704546512526), (2.6300295322791625,0.40570704546512526)]
[(2.505145033718173,2.576587180023103), (3.005145033718173,2.576587180023103), (3.005145033718173,2.876587180023103), (2.505145033718173,2.876587180023103)]
[(4.680920781180385,0.041445982178426294), (4.980920781180385,0.041445982178426294), (4.980920781180385,0.5414459821784263), (4.680920781180385,0.5414459821784263)]
[(5.674388795572089,2.495657805141416), (5.9743887955720885,2.495657805141416), (5.9743887955720885,2.995657805141416), (5.674388795572089,2.995657805141416)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.7655495,y=0.10863759,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.10863759,w=0.3464954,h=2.761987]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.07357511,w=2.9677784,h=2.7970495]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.07357511,w=2.9677784,h=2.7970495]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.007389916,w=4.806885,h=2.8632345]  java.awt.geom.Rectangle2D$Float[x=0.6190541,y=0.007389916,w=4.806885,h=2.8632345]  
t: java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=0.7,h=0.48591742]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=1.377777,h=2.9602785]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=3.1057343,h=2.9602785]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=3.1057343,h=2.9765873]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=4.9566255,h=2.9765873]  java.awt.geom.Rectangle2D$Float[x=0.12429529,y=0.0,w=5.9500937,h=3.0956578]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.93312335, 1.4707136] with IG = 38.385967
Iter num: 2
Used frontier: Point2D.Float[0.9383772, 0.5973718] with IG = 41.22023
Iter num: 3
Added advice frontier Point2D.Float[0.44830287, 0.4203766]
Added advice frontier Point2D.Float[0.2854485, 0.5936931]
Added advice frontier Point2D.Float[0.9417109, 0.2861452]
Added advice frontier Point2D.Float[0.7910017, 0.16136606]
Added advice frontier Point2D.Float[0.85117155, 0.20103572]
Added advice frontier Point2D.Float[0.794517, 0.32284194]
Used Advice frontier: Point2D.Float[0.794517, 0.32284194] with IG = 322.64374
Iter num: 4
Used Advice frontier: Point2D.Float[0.85117155, 0.20103572] with IG = 744.3952
Iter num: 5
Used Advice frontier: Point2D.Float[0.7910017, 0.16136606] with IG = 1387.5385
Iter num: 6
Used Advice frontier: Point2D.Float[0.9417109, 0.2861452] with IG = 511.08887
Iter num: 7
Used Advice frontier: Point2D.Float[0.44830287, 0.4203766] with IG = 166.73508
Iter num: 8
Used Advice frontier: Point2D.Float[0.2854485, 0.5936931] with IG = 420.4794
Iter num: 9
Used frontier: Point2D.Float[0.09041128, 0.1490014] with IG = 14.415681
Iter num: 10
Used frontier: Point2D.Float[1.0897893, 2.4018176] with IG = 11.745636
Iter num: 11
Added advice frontier Point2D.Float[1.3268174, 2.5489073]
Added advice frontier Point2D.Float[1.8631827, 2.5224879]
Used Advice frontier: Point2D.Float[1.3268174, 2.5489073] with IG = 358.47656
Iter num: 12
Used Advice frontier: Point2D.Float[1.8631827, 2.5224879] with IG = 186.21434
Iter num: 13
Added advice frontier Point2D.Float[0.65565026, 2.739035]
Used Advice frontier: Point2D.Float[0.65565026, 2.739035] with IG = 74.42909
Iter num: 14
Used frontier: Point2D.Float[0.6574114, 2.913236] with IG = 40.18141
Iter num: 15
Added advice frontier Point2D.Float[0.8149494, 2.705901]
Added advice frontier Point2D.Float[0.8441515, 2.7605464]
Used Advice frontier: Point2D.Float[0.8441515, 2.7605464] with IG = 414.56342
Iter num: 16
Used Advice frontier: Point2D.Float[0.8149494, 2.705901] with IG = 1613.9747
Iter num: 17
Used frontier: Point2D.Float[1.8386092, 1.4853563] with IG = 13.365765
Iter num: 18
Used frontier: Point2D.Float[2.5687401, 1.37341] with IG = 29.33456
Iter num: 19
Added advice frontier Point2D.Float[3.1007478, 0.6485133]
Added advice frontier Point2D.Float[3.032727, 1.1530741]
Added advice frontier Point2D.Float[3.0832207, 2.0923738]
Added advice frontier Point2D.Float[2.9975371, 1.6859787]
Used Advice frontier: Point2D.Float[2.9975371, 1.6859787] with IG = 173.9907
Iter num: 20
Added advice frontier Point2D.Float[3.0475433, 2.6493042]
Added advice frontier Point2D.Float[2.9547126, 2.4693315]
Added advice frontier Point2D.Float[3.2995262, 2.5947804]
Added advice frontier Point2D.Float[3.2908337, 2.4009945]
Used Advice frontier: Point2D.Float[3.0832207, 2.0923738] with IG = 240.77258
Iter num: 21
Used Advice frontier: Point2D.Float[3.2908337, 2.4009945] with IG = 268.85034
Iter num: 22
Used Advice frontier: Point2D.Float[3.2995262, 2.5947804] with IG = 515.515
Iter num: 23
Used Advice frontier: Point2D.Float[3.0475433, 2.6493042] with IG = 387.87598
Iter num: 24
Used Advice frontier: Point2D.Float[2.9547126, 2.4693315] with IG = 493.81848
Iter num: 25
Used Advice frontier: Point2D.Float[3.032727, 1.1530741] with IG = 74.97803
Iter num: 26
Added advice frontier Point2D.Float[2.5654843, 0.4404053]
Added advice frontier Point2D.Float[2.5424554, 0.665034]
Used Advice frontier: Point2D.Float[3.1007478, 0.6485133] with IG = 196.41534
Iter num: 27
Added advice frontier Point2D.Float[3.4216166, 0.20877968]
Added advice frontier Point2D.Float[3.7901652, 0.22655436]
Used Advice frontier: Point2D.Float[3.4216166, 0.20877968] with IG = 180.6022
Iter num: 28
Added advice frontier Point2D.Float[3.214954, 0.21755274]
Used Advice frontier: Point2D.Float[3.214954, 0.21755274] with IG = 483.44492
Iter num: 29
Used Advice frontier: Point2D.Float[3.7901652, 0.22655436] with IG = 173.66362
Iter num: 30
Used Advice frontier: Point2D.Float[2.5424554, 0.665034] with IG = 70.42889
Iter num: 31
Used Advice frontier: Point2D.Float[2.5654843, 0.4404053] with IG = 442.85788
Iter num: 32
Used frontier: Point2D.Float[3.9012845, 1.4577441] with IG = 11.11703
Iter num: 33
Used frontier: Point2D.Float[4.679277, 1.3505265] with IG = 15.347699
Iter num: 34
Added advice frontier Point2D.Float[5.0569706, 0.81508887]
Added advice frontier Point2D.Float[5.1541185, 1.2017645]
Used Advice frontier: Point2D.Float[5.0569706, 0.81508887] with IG = 152.61469
Iter num: 35
Added advice frontier Point2D.Float[4.8799696, 0.6286614]
Added advice frontier Point2D.Float[4.391648, 0.76666915]
Used Advice frontier: Point2D.Float[4.8799696, 0.6286614] with IG = 389.00037
Iter num: 36
Added advice frontier Point2D.Float[5.301442, 0.14389542]
Added advice frontier Point2D.Float[5.172052, 0.15563975]
Used Advice frontier: Point2D.Float[4.391648, 0.76666915] with IG = 197.06421
Iter num: 37
Used Advice frontier: Point2D.Float[5.1541185, 1.2017645] with IG = 84.85385
Iter num: 38
Added advice frontier Point2D.Float[5.0766416, 2.129894]
Used Advice frontier: Point2D.Float[5.0766416, 2.129894] with IG = 95.15691
Iter num: 39
Added advice frontier Point2D.Float[5.006569, 2.5045612]
Added advice frontier Point2D.Float[4.6800814, 2.4346387]
Added advice frontier Point2D.Float[5.582349, 2.8413808]
Used Advice frontier: Point2D.Float[5.006569, 2.5045612] with IG = 262.35455

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9331233501434326, 1.4707136154174805) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9383772015571594, 0.5973718166351318) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7945169806480408, 0.32284194231033325) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8511715531349182, 0.20103572309017181) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7910016775131226, 0.1613660603761673) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.941710889339447, 0.2861452102661133) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.7418268322944641, 0.502900242805481) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.44830286502838135, 0.42037659883499146) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.28544849157333374, 0.5936930775642395) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.09041128307580948, 0.14900140464305878) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.3652814030647278, 0.6538374423980713) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.7447577714920044, 0.7751466631889343) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8584453463554382, 1.1135841608047485) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9331233501434326, 1.4707136154174805) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0897892713546753, 2.401817560195923) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.3268173933029175, 2.5489072799682617) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.8631826639175415, 2.5224878787994385) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6181378364562988, 2.5460050106048584) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0897892713546753, 2.401817560195923) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.65565025806427, 2.73903489112854) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.6574113965034485, 2.913235902786255) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.844151496887207, 2.7605464458465576) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8149493932723999, 2.7059009075164795) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.993477463722229, 2.305424213409424) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1419535875320435, 1.996250867843628) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2310843467712402, 1.917906641960144) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4679309129714966, 1.7567296028137207) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.838609218597412, 1.485356330871582) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1194982528686523, 1.5704628229141235) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.568740129470825, 1.3734099864959717) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8880927562713623, 1.7086200714111328) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.997537136077881, 1.685978651046753) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0832207202911377, 2.092373847961426) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2908337116241455, 2.4009945392608643) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.2995262145996094, 2.594780445098877) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(3.0475432872772217, 2.649304151535034) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(2.9547126293182373, 2.4693315029144287) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.938159227371216, 2.1369855403900146) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9106504917144775, 1.7031649351119995) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.944669723510742, 1.420056939125061) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.032727003097534, 1.1530741453170776) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.10074782371521, 0.6485133171081543) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3630635738372803, 0.36801877617836) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.421616554260254, 0.20877967774868011) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.214953899383545, 0.21755273640155792) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.421616554260254, 0.20877967774868011) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.7901651859283447, 0.22655436396598816) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.706252336502075, 0.2724568247795105) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3630635738372803, 0.36801877617836) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.10074782371521, 0.6485133171081543) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.034844398498535, 0.696765661239624) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.62158465385437, 0.6354553699493408) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5424554347991943, 0.6650339961051941) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.5654842853546143, 0.44040530920028687) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(2.9731550216674805, 0.7599640488624573) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.127084493637085, 1.0171854496002197) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.3449792861938477, 1.157240390777588) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.5527970790863037, 1.2659003734588623) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9012844562530518, 1.4577441215515137) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9281771183013916, 1.747998833656311) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.57094144821167, 1.9416368007659912) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.679276943206787, 1.3505264520645142) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.056970596313477, 0.8150888681411743) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.879969596862793, 0.6286613941192627) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.391647815704346, 0.7666691541671753) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.879969596862793, 0.6286613941192627) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.910135746002197, 0.9415596127510071) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.154118537902832, 1.201764464378357) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.092337608337402, 1.363419771194458) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.274022102355957, 1.6061986684799194) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.239582061767578, 1.8820641040802002) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,t,0]  [r1,b,12]  [r1,b,t,12]  [r1,b,12]  [r1,12]  [r1,t,12]  [r1,12]  [h,12]  [r2,12]  [r2,t,12]  [r2,12]  [r2,b,22]  [r2,22]  [r2,t,22]  [r2,b,t,22]  [r2,22]  [h,22]  [r4,22]  [r4,b,19]  [r4,t,19]  [r4,19]  [h,19]  [r3,19]  [r3,b,35]  [r3,t,35]  [r3,b,35]  [r3,35]  [r3,t,35]  [r3,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,b,53]  


Remaining path: 
[r6,b,53]  [r6,53]  [h,53]  [r5,53]  [r5,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 39
Total sampled points = 20173
RRG size = 1951

Movement Length = 25.592808
Remaining path Length = 2.5249238
Total path Length = 28.117731

Advice samples: [10, 5, 8, 3, 2, 2, 0, 0, 0, 0] (30)

Total time taken (in ms):9277.963461

Initialization time (in ms):486.369799
Sampling time (in ms):7580.176134
Advice time (in ms):8.066616
Path checking time (in ms):536.380661
Learning time (in ms):210.093932
Exploration time (in ms):0.0
Time taken other than these things (in ms):456.876319
Moving time (in ms):2348.8103



