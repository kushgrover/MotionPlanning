Parameters values: 
Environment: results/environments/env45/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.0414612390743465,0.0913882808610111), (1.5414612390743465,0.0913882808610111), (1.5414612390743465,0.3913882808610111), (1.0414612390743465,0.3913882808610111)]
[(0.3016633932512532,2.5167992848139655), (0.8016633932512531,2.5167992848139655), (0.8016633932512531,2.8167992848139654), (0.3016633932512532,2.8167992848139654)]
[(2.1816145182366697,0.19940016608353875), (2.6816145182366697,0.19940016608353875), (2.6816145182366697,0.49940016608353877), (2.1816145182366697,0.49940016608353877)]
[(3.6137192438836863,2.466916020051804), (3.913719243883686,2.466916020051804), (3.913719243883686,2.966916020051804), (3.6137192438836863,2.966916020051804)]
[(4.871228070092762,0.0007507501517266986), (5.171228070092762,0.0007507501517266986), (5.171228070092762,0.5007507501517267), (4.871228070092762,0.5007507501517267)]
[(4.550193159024707,2.5145707269055646), (5.050193159024707,2.5145707269055646), (5.050193159024707,2.8145707269055644), (4.550193159024707,2.8145707269055644)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=0.19999999,h=0.2]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=0.38018495,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=2.5806332,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=2.5806332,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=5.072231,h=2.8607683]  java.awt.geom.Rectangle2D$Float[x=0.7601643,y=0.020219343,w=5.072231,h=2.8607683]  
t: java.awt.geom.Rectangle2D$Float[x=0.94146127,y=0.0,w=0.7,h=0.4913883]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=1.4397979,h=2.9167993]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=2.579951,h=2.9167993]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=3.8120556,h=3.066916]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=5.0695643,h=3.066916]  java.awt.geom.Rectangle2D$Float[x=0.20166339,y=0.0,w=5.0695643,h=3.066916]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.9811071, 1.6046169] with IG = 36.06462
Iter num: 2
Used frontier: Point2D.Float[1.2417254, 2.3065114] with IG = 36.061665
Iter num: 3
Added advice frontier Point2D.Float[0.8463306, 2.5578222]
Used Advice frontier: Point2D.Float[0.8463306, 2.5578222] with IG = 213.44621
Iter num: 4
Added advice frontier Point2D.Float[0.96747106, 2.807327]
Added advice frontier Point2D.Float[0.8029308, 2.7666218]
Used Advice frontier: Point2D.Float[0.8029308, 2.7666218] with IG = 468.90607
Iter num: 5
Used Advice frontier: Point2D.Float[0.96747106, 2.807327] with IG = 589.96875
Iter num: 6
Used frontier: Point2D.Float[0.94434977, 0.8037547] with IG = 12.975653
Iter num: 7
Added advice frontier Point2D.Float[1.4448724, 0.44071624]
Added advice frontier Point2D.Float[1.6460398, 0.45603293]
Added advice frontier Point2D.Float[0.8546541, 0.07790689]
Added advice frontier Point2D.Float[0.36800128, 0.1660765]
Added advice frontier Point2D.Float[0.9846894, 0.17392291]
Used Advice frontier: Point2D.Float[1.4448724, 0.44071624] with IG = 161.7285
Iter num: 8
Added advice frontier Point2D.Float[0.95581365, 0.047065407]
Added advice frontier Point2D.Float[0.9336666, 0.036546323]
Used Advice frontier: Point2D.Float[1.6460398, 0.45603293] with IG = 495.6636
Iter num: 9
Used Advice frontier: Point2D.Float[0.9846894, 0.17392291] with IG = 94.9994
Iter num: 10
Used Advice frontier: Point2D.Float[0.95581365, 0.047065407] with IG = 768.62524
Iter num: 11
Used Advice frontier: Point2D.Float[0.9336666, 0.036546323] with IG = 4078.5984
Iter num: 12
Used Advice frontier: Point2D.Float[0.8546541, 0.07790689] with IG = 1121.2852
Iter num: 13
Used Advice frontier: Point2D.Float[0.36800128, 0.1660765] with IG = 202.19365
Iter num: 14
Used frontier: Point2D.Float[1.8768303, 1.4537468] with IG = 10.875265
Iter num: 15
Used frontier: Point2D.Float[2.842878, 1.2655318] with IG = 23.218754
Iter num: 16
Added advice frontier Point2D.Float[2.9221857, 2.0943058]
Added advice frontier Point2D.Float[3.3671432, 1.8371761]
Added advice frontier Point2D.Float[2.867048, 0.66859424]
Used Advice frontier: Point2D.Float[2.867048, 0.66859424] with IG = 167.38457
Iter num: 17
Added advice frontier Point2D.Float[2.6872663, 0.25364438]
Added advice frontier Point2D.Float[3.3245852, 0.3729749]
Added advice frontier Point2D.Float[3.7528746, 0.36364737]
Used Advice frontier: Point2D.Float[2.6872663, 0.25364438] with IG = 221.13028
Iter num: 18
Used Advice frontier: Point2D.Float[3.3245852, 0.3729749] with IG = 151.29851
Iter num: 19
Used Advice frontier: Point2D.Float[3.7528746, 0.36364737] with IG = 233.43161
Iter num: 20
Used Advice frontier: Point2D.Float[3.3671432, 1.8371761] with IG = 49.362343
Iter num: 21
Used Advice frontier: Point2D.Float[2.9221857, 2.0943058] with IG = 194.58685
Iter num: 22
Added advice frontier Point2D.Float[3.556836, 2.7010045]
Added advice frontier Point2D.Float[2.7090735, 2.622785]
Added advice frontier Point2D.Float[2.9092789, 2.5764885]
Added advice frontier Point2D.Float[3.6517675, 2.2320266]
Used Advice frontier: Point2D.Float[2.9092789, 2.5764885] with IG = 206.76616
Iter num: 23
Used Advice frontier: Point2D.Float[2.7090735, 2.622785] with IG = 486.6451
Iter num: 24
Used Advice frontier: Point2D.Float[3.556836, 2.7010045] with IG = 113.193726
Iter num: 25
Used Advice frontier: Point2D.Float[3.6517675, 2.2320266] with IG = 208.99095
Iter num: 26
Used frontier: Point2D.Float[4.097347, 1.3954941] with IG = 14.005739
Iter num: 27
Used frontier: Point2D.Float[4.794196, 1.779987] with IG = 32.409348
Iter num: 28
Added advice frontier Point2D.Float[4.866531, 2.377193]
Added advice frontier Point2D.Float[5.1622066, 0.9390586]
Added advice frontier Point2D.Float[5.193518, 1.2699928]
Added advice frontier Point2D.Float[4.8399014, 2.4158795]
Used Advice frontier: Point2D.Float[4.866531, 2.377193] with IG = 166.23149
Iter num: 29
Used Advice frontier: Point2D.Float[4.8399014, 2.4158795] with IG = 2129.215
Iter num: 30
Used Advice frontier: Point2D.Float[5.193518, 1.2699928] with IG = 64.779305
Iter num: 31
Added advice frontier Point2D.Float[4.8547325, 0.55567074]
Used Advice frontier: Point2D.Float[5.1622066, 0.9390586] with IG = 300.8313
Iter num: 32
Used Advice frontier: Point2D.Float[4.8547325, 0.55567074] with IG = 189.5811
Iter num: 33
Used frontier: Point2D.Float[5.6560144, 0.45801908] with IG = 15.05723
Iter num: 34
Used frontier: Point2D.Float[5.47907, 2.6153452] with IG = 12.982845
Iter num: 35
Used frontier: Point2D.Float[4.8399014, 2.4158795] with IG = 10.85018
Iter num: 36
Added advice frontier Point2D.Float[5.705601, 0.14835186]
Used Advice frontier: Point2D.Float[5.705601, 0.14835186] with IG = 38.686653
Iter num: 37
Used frontier: Point2D.Float[4.8399014, 2.4158795] with IG = 5.0295224
Iter num: 38
Used frontier: Point2D.Float[5.212429, 2.8922968] with IG = 16.601713
Iter num: 39
Added advice frontier Point2D.Float[4.47769, 2.8441741]
Added advice frontier Point2D.Float[4.3513203, 2.4699147]
Used Advice frontier: Point2D.Float[4.47769, 2.8441741] with IG = 131.36421

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,t,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r2,b,60]  [h,60]  [r4,60]  [r4,b,29]  [r4,29]  [h,29]  [r3,29]  [r3,b,33]  [r3,33]  [h,33]  [r1,33]  [r1,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9811071157455444, 1.6046168804168701) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2417254447937012, 2.306511402130127) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8463305830955505, 2.5578222274780273) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.8029307723045349, 2.7666218280792236) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9674710631370544, 2.8073270320892334) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.9682766795158386, 2.4962069988250732) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9553977847099304, 1.788564920425415) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9443497657775879, 0.8037546873092651) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4448723793029785, 0.4407162368297577) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.6460398435592651, 0.456032931804657) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1939283609390259, 0.65882408618927) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9541195631027222, 0.2646484971046448) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9846894145011902, 0.17392291128635406) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(0.9558136463165283, 0.047065407037734985) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:1>
(0.9336665868759155, 0.03654632344841957) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.85465407371521, 0.07790689170360565) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.3680012822151184, 0.16607649624347687) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.6214610934257507, 0.4928995966911316) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9558932781219482, 0.9283879399299622) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.4158334732055664, 1.1873267889022827) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8768303394317627, 1.4537467956542969) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.391159772872925, 1.2966352701187134) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8428781032562256, 1.2655317783355713) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.8670480251312256, 0.668594241142273) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6872663497924805, 0.2536443769931793) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.1618998050689697, 0.2842043340206146) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.324585199356079, 0.3729749023914337) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.7528746128082275, 0.36364737153053284) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.4411916732788086, 0.6546745300292969) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0215580463409424, 0.7184040546417236) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0665934085845947, 1.0037423372268677) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2100090980529785, 1.4229183197021484) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.367143154144287, 1.8371760845184326) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9221856594085693, 2.0943057537078857) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9045841693878174, 2.2022275924682617) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9092788696289062, 2.576488494873047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.709073543548584, 2.6227850914001465) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.9092788696289062, 2.576488494873047) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.280261278152466, 2.726588249206543) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.556835889816284, 2.7010045051574707) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.6517674922943115, 2.2320265769958496) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.3010735511779785, 2.2643165588378906) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1312975883483887, 1.905123233795166) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.2829055786132812, 1.7943170070648193) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.6697394847869873, 1.5215736627578735) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.097346782684326, 1.3954941034317017) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.216580867767334, 1.7190641164779663) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.794196128845215, 1.7799869775772095) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.866530895233154, 2.377192974090576) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.839901447296143, 2.415879487991333) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.866530895233154, 2.377192974090576) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.794196128845215, 1.7799869775772095) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.810194969177246, 1.457833170890808) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.003262996673584, 1.161558747291565) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.193518161773682, 1.2699928283691406) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.162206649780273, 0.9390586018562317) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.9497294425964355, 0.8265470862388611) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.854732513427734, 0.5556707382202148) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.9497294425964355, 0.8265470862388611) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.162206649780273, 0.9390586018562317) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.590489864349365, 0.6853457689285278) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.656014442443848, 0.45801907777786255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.590489864349365, 0.6853457689285278) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.162206649780273, 0.9390586018562317) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.003262996673584, 1.161558747291565) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.969040870666504, 1.4459494352340698) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.910314083099365, 1.8053113222122192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.98091459274292, 1.9724591970443726) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.077402114868164, 2.3317384719848633) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.4440484046936035, 2.2001941204071045) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.532648086547852, 2.2076897621154785) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.554986476898193, 2.596571683883667) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.47907018661499, 2.6153452396392822) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.554986476898193, 2.596571683883667) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.532648086547852, 2.2076897621154785) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.4440484046936035, 2.2001941204071045) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.077402114868164, 2.3317384719848633) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.839901447296143, 2.415879487991333) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.935277938842773, 2.190413475036621) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.910314083099365, 1.8053113222122192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.9946208000183105, 1.5600919723510742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.107287406921387, 1.2734029293060303) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.162206649780273, 0.9390586018562317) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.590489864349365, 0.6853457689285278) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.656014442443848, 0.45801907777786255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.705601215362549, 0.14835186302661896) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(5.656014442443848, 0.45801907777786255) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.590489864349365, 0.6853457689285278) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.162206649780273, 0.9390586018562317) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.107287406921387, 1.2734029293060303) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.991477966308594, 1.5864077806472778) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.910314083099365, 1.8053113222122192) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.935277938842773, 2.190413475036621) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.839901447296143, 2.415879487991333) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(5.016519546508789, 2.402003049850464) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.194042205810547, 2.6631550788879395) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.212429046630859, 2.89229679107666) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>

Movement: 
[h,0]  [r2,0]  [r2,t,0]  [r2,b,46]  [r2,46]  [h,46]  [r1,46]  [r1,t,46]  [r1,46]  [r1,t,46]  [r1,b,t,22]  [r1,b,22]  [r1,22]  [h,22]  [r3,22]  [r3,t,22]  [r3,b,2]  [r3,2]  [h,2]  [r4,2]  [r4,b,35]  [r4,35]  [r4,t,35]  [r4,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [h,35]  [r5,35]  [r5,t,35]  [r5,35]  [h,35]  [r6,35]  [r6,t,35]  [r6,35]  [h,35]  [r5,35]  [r5,b,21]  [r5,21]  [h,21]  [r6,21]  [r6,t,21]  [r6,21]  [r6,b,t,63]  


Remaining path: 
[r6,b,t,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 39
Total sampled points = 21360
RRG size = 1951

Movement Length = 34.951263
Remaining path Length = 0.0
Total path Length = 34.951263

Advice samples: [14, 4, 9, 0, 0, 0, 0, 0, 0, 0] (27)

Total time taken (in ms):8181.886096

Initialization time (in ms):518.563168
Sampling time (in ms):6465.22903
Advice time (in ms):7.704474
Path checking time (in ms):592.341145
Learning time (in ms):183.887104
Exploration time (in ms):0.0
Time taken other than these things (in ms):414.161175
Moving time (in ms):1744.8304



