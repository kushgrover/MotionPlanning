Parameters values: 
Environment: results/environments/env90/temp
Use Advice: Yes
Sensing radius: 1.0
Batch size: 50
Discretization cell size: 0.05
Bias prob: 0.1

Starting initialization ... 

Environment boundaries: Point2D.Float[0.0, 0.0], Point2D.Float[6.0, 0.0], Point2D.Float[6.0, 3.0], Point2D.Float[0.0, 3.0]
Initial Point: Point2D.Float[0.1, 1.5]

Obstacles: 
[(0,0.95), (0.8,0.95), (0.8,1.05), (0,1.05)]
[(1.2,0.95), (2,0.95), (2,1.05), (1.2,1.05)]
[(0,1.95), (0.8,1.95), (0.8,2.05), (0,2.05)]
[(1.2,1.95), (2,1.95), (2,2.05), (1.2,2.05)]
[(2,0.95), (2.8,0.95), (2.8,1.05), (2,1.05)]
[(3.2,0.95), (4,0.95), (4,1.05), (3.2,1.05)]
[(2,1.95), (2.8,1.95), (2.8,2.05), (2,2.05)]
[(3.2,1.95), (4,1.95), (4,2.05), (3.2,2.05)]
[(4,0.95), (4.8,0.95), (4.8,1.05), (4,1.05)]
[(5.2,0.95), (6,0.95), (6,1.05), (5.2,1.05)]
[(4,1.95), (4.8,1.95), (4.8,2.05), (4,2.05)]
[(5.2,1.95), (6,1.95), (6,2.05), (5.2,2.05)]
[(1.95,0), (2.05,0), (2.05,0.95), (1.95,0.95)]
[(1.95,2.05), (2.05,2.05), (2.05,3), (1.95,3)]
[(3.95,0), (4.05,0), (4.05,0.95), (3.95,0.95)]
[(3.95,2.05), (4.05,2.05), (4.05,3), (3.95,3)]
[(1.2641023788638672,0.19689346872813182), (1.7641023788638672,0.19689346872813182), (1.7641023788638672,0.4968934687281318), (1.2641023788638672,0.4968934687281318)]
[(0.5921788239465343,2.462720546565608), (0.8921788239465342,2.462720546565608), (0.8921788239465342,2.962720546565608), (0.5921788239465343,2.962720546565608)]
[(2.390652455537571,0.09659702402218617), (2.890652455537571,0.09659702402218617), (2.890652455537571,0.39659702402218616), (2.390652455537571,0.39659702402218616)]
[(2.195610717227572,2.4849727761223974), (2.695610717227572,2.4849727761223974), (2.695610717227572,2.7849727761223972), (2.195610717227572,2.7849727761223972)]
[(5.199983124428999,0.03073258766954498), (5.499983124428999,0.03073258766954498), (5.499983124428999,0.530732587669545), (5.199983124428999,0.530732587669545)]
[(4.241607891705796,2.4953075135939304), (4.541607891705796,2.4953075135939304), (4.541607891705796,2.9953075135939304), (4.241607891705796,2.9953075135939304)]


Labelling: 
h: java.awt.geom.Rectangle2D$Float[x=0.0,y=1.0,w=6.0,h=1.0]  
r1: java.awt.geom.Rectangle2D$Float[x=0.0,y=0.0,w=2.0,h=1.0]  
r2: java.awt.geom.Rectangle2D$Float[x=0.0,y=2.0,w=2.0,h=1.0]  
r3: java.awt.geom.Rectangle2D$Float[x=2.0,y=0.0,w=2.0,h=1.0]  
r4: java.awt.geom.Rectangle2D$Float[x=2.0,y=2.0,w=2.0,h=1.0]  
r5: java.awt.geom.Rectangle2D$Float[x=4.0,y=0.0,w=2.0,h=1.0]  
r6: java.awt.geom.Rectangle2D$Float[x=4.0,y=2.0,w=2.0,h=1.0]  
b: java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.12007078,w=0.19999999,h=0.19999999]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.12007078,w=1.3874295,h=2.5545096]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.12007078,w=2.9660325,h=2.5545096]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.12007078,w=2.9660325,h=2.770194]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.017042454,w=4.526944,h=2.8732224]  java.awt.geom.Rectangle2D$Float[x=0.38942683,y=0.017042454,w=5.0547833,h=2.8732224]  
t: java.awt.geom.Rectangle2D$Float[x=1.1641024,y=0.09689347,w=0.6999999,h=0.5]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.09689347,w=1.3719236,h=2.965827]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.0,w=2.4984736,h=3.0627205]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.0,w=2.4984736,h=3.0627205]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.0,w=5.1078043,h=3.0627205]  java.awt.geom.Rectangle2D$Float[x=0.49217883,y=0.0,w=5.1078043,h=3.0953076]  

Constructing automaton for property: F (r1 & b) & F (r2 & b) & F (r3 & b) & F (r4 & b) & F (r5 & b) & F (r6 & b) ... done!
Initialization complete


Starting planning ... 
Iter num: 1
Used frontier: Point2D.Float[0.96878946, 1.3702779] with IG = 36.429012
Iter num: 2
Used frontier: Point2D.Float[0.8460738, 1.1040698] with IG = 95.520386
Iter num: 3
Used frontier: Point2D.Float[0.9909244, 0.7819691] with IG = 56.6296
Iter num: 4
Added advice frontier Point2D.Float[0.46963453, 0.20678738]
Added advice frontier Point2D.Float[0.26099023, 0.50535125]
Used Advice frontier: Point2D.Float[0.46963453, 0.20678738] with IG = 128.82307
Iter num: 5
Used Advice frontier: Point2D.Float[0.26099023, 0.50535125] with IG = 274.5421
Iter num: 6
Used frontier: Point2D.Float[1.2018443, 0.8193482] with IG = 15.122608
Iter num: 7
Used frontier: Point2D.Float[1.8509151, 1.5581235] with IG = 21.276262
Iter num: 8
Used frontier: Point2D.Float[2.767097, 1.4325781] with IG = 21.983809
Iter num: 9
Added advice frontier Point2D.Float[3.0468018, 0.9232031]
Added advice frontier Point2D.Float[3.1360557, 1.1881579]
Used Advice frontier: Point2D.Float[3.1360557, 1.1881579] with IG = 225.95093
Iter num: 10
Added advice frontier Point2D.Float[2.9768898, 2.12056]
Added advice frontier Point2D.Float[3.0049624, 1.8929225]
Added advice frontier Point2D.Float[2.9045787, 0.47072434]
Added advice frontier Point2D.Float[3.190244, 0.30362454]
Added advice frontier Point2D.Float[3.2166798, 0.44995022]
Used Advice frontier: Point2D.Float[3.0468018, 0.9232031] with IG = 357.67404
Iter num: 11
Used Advice frontier: Point2D.Float[2.9045787, 0.47072434] with IG = 210.83516
Iter num: 12
Used Advice frontier: Point2D.Float[3.2166798, 0.44995022] with IG = 319.70154
Iter num: 13
Used Advice frontier: Point2D.Float[3.190244, 0.30362454] with IG = 672.5198
Iter num: 14
Used Advice frontier: Point2D.Float[3.0049624, 1.8929225] with IG = 62.228413
Iter num: 15
Added advice frontier Point2D.Float[2.9312007, 2.7593174]
Added advice frontier Point2D.Float[2.7120738, 2.7831452]
Added advice frontier Point2D.Float[3.2521026, 2.7506504]
Used Advice frontier: Point2D.Float[2.9768898, 2.12056] with IG = 435.99228
Iter num: 16
Used Advice frontier: Point2D.Float[2.9312007, 2.7593174] with IG = 149.32343
Iter num: 17
Used Advice frontier: Point2D.Float[2.7120738, 2.7831452] with IG = 453.68213
Iter num: 18
Used Advice frontier: Point2D.Float[3.2521026, 2.7506504] with IG = 184.84099
Iter num: 19
Used frontier: Point2D.Float[3.9609218, 1.4903908] with IG = 13.024894
Iter num: 20
Used frontier: Point2D.Float[4.7568626, 1.6118764] with IG = 21.325806
Iter num: 21
Added advice frontier Point2D.Float[5.00512, 0.7583925]
Added advice frontier Point2D.Float[5.181559, 1.1024536]
Used frontier: Point2D.Float[4.7298994, 1.6829339] with IG = 460.51865
Iter num: 22
Used Advice frontier: Point2D.Float[5.181559, 1.1024536] with IG = 119.93108
Iter num: 23
Added advice frontier Point2D.Float[5.1095123, 0.50136137]
Added advice frontier Point2D.Float[4.7496, 0.27617508]
Used Advice frontier: Point2D.Float[5.00512, 0.7583925] with IG = 258.62265
Iter num: 24
Added advice frontier Point2D.Float[5.123731, 2.434711]
Added advice frontier Point2D.Float[4.757527, 0.05662078]
Added advice frontier Point2D.Float[4.936009, 0.10978727]
Used frontier: Point2D.Float[5.00967, 0.7595851] with IG = 4039.3965
Iter num: 25
Used Advice frontier: Point2D.Float[5.1095123, 0.50136137] with IG = 361.20148
Iter num: 26
Used Advice frontier: Point2D.Float[4.7496, 0.27617508] with IG = 235.5415
Iter num: 27
Used Advice frontier: Point2D.Float[4.757527, 0.05662078] with IG = 455.1716
Iter num: 28
Used Advice frontier: Point2D.Float[4.936009, 0.10978727] with IG = 536.9634
Iter num: 29
Used Advice frontier: Point2D.Float[5.123731, 2.434711] with IG = 42.5359
Iter num: 30
Added advice frontier Point2D.Float[4.593832, 2.847887]
Added advice frontier Point2D.Float[4.6620045, 2.918391]
Added advice frontier Point2D.Float[5.3928146, 2.6586063]
Used Advice frontier: Point2D.Float[5.3928146, 2.6586063] with IG = 285.67343
Iter num: 31
Used Advice frontier: Point2D.Float[4.6620045, 2.918391] with IG = 107.214294
Iter num: 32
Used Advice frontier: Point2D.Float[4.593832, 2.847887] with IG = 1019.6498
Iter num: 33
Used frontier: Point2D.Float[4.9403887, 2.286817] with IG = 19.707981
Iter num: 34
Used frontier: Point2D.Float[4.653384, 2.4601114] with IG = 17.896301
Iter num: 35
Used frontier: Point2D.Float[5.8755364, 1.687825] with IG = 8.352259
Iter num: 36
Used frontier: Point2D.Float[5.8260856, 0.5331921] with IG = 9.605016
Iter num: 37
Used frontier: Point2D.Float[5.617894, 0.48320895] with IG = 9.341107
Iter num: 38
Used frontier: Point2D.Float[0.96840155, 2.3420146] with IG = 4.7803226
Iter num: 39
Added advice frontier Point2D.Float[0.97036374, 2.8039348]
Added advice frontier Point2D.Float[1.0023834, 2.654205]
Used Advice frontier: Point2D.Float[1.0023834, 2.654205] with IG = 318.43628
Iter num: 40
Used Advice frontier: Point2D.Float[0.97036374, 2.8039348] with IG = 653.1033
Iter num: 41
Used frontier: Point2D.Float[0.51509947, 2.1948335] with IG = 19.08092
Iter num: 42
Added advice frontier Point2D.Float[1.7578835, 2.6313415]
Added advice frontier Point2D.Float[1.9259255, 2.6679397]
Used Advice frontier: Point2D.Float[1.7578835, 2.6313415] with IG = 75.68791

Path found :D :D :D
[h,0]  [r6,0]  [r6,b,52]  [r6,52]  [h,52]  [r5,52]  [r5,b,3]  [r5,3]  [h,3]  [r1,b,26]  [h,26]  [r4,26]  [r4,b,59]  [r4,59]  [h,59]  [r3,59]  [r3,b,37]  [r3,37]  [h,37]  [r2,37]  [r2,b,63]  

Concrete movement: 
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.10000000149011612, 1.5) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9687894582748413, 1.3702778816223145) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8460738062858582, 1.1040698289871216) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9909244179725647, 0.7819690704345703) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.4696345329284668, 0.2067873775959015) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:1, 30:0>
(0.2609902322292328, 0.5053512454032898) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8857459425926208, 0.710330069065094) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.201844334602356, 0.8193482160568237) 	<22:0, 23:1, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.1704736948013306, 1.155017375946045) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2831460237503052, 1.2207720279693604) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8509150743484497, 1.5581234693527222) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.194530963897705, 1.2210688591003418) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.767096996307373, 1.4325780868530273) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.1360557079315186, 1.1881579160690308) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.046801805496216, 0.9232031106948853) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.904578685760498, 0.47072434425354004) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:1>
(3.216679811477661, 0.4499502182006836) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.19024395942688, 0.30362454056739807) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:1, 30:0>
(3.046801805496216, 0.9232031106948853) 	<22:0, 23:0, 24:0, 25:1, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.0372817516326904, 1.4630411863327026) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.00496244430542, 1.8929225206375122) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.9768898487091064, 2.1205599308013916) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.8660006523132324, 2.345749616622925) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(2.9312007427215576, 2.759317398071289) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:1, 30:0>
(2.712073802947998, 2.7831451892852783) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:1>
(3.2521026134490967, 2.750650405883789) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.141582727432251, 2.3178796768188477) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.1165082454681396, 2.0702192783355713) 	<22:0, 23:0, 24:0, 25:0, 26:1, 27:0, 28:0, 29:0, 30:0>
(3.223127841949463, 1.8462358713150024) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.49406099319458, 1.753116488456726) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.9609217643737793, 1.4903907775878906) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.244492530822754, 1.8544031381607056) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.589678764343262, 1.8820053339004517) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.756862640380859, 1.611876368522644) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.7298994064331055, 1.6829339265823364) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.738288879394531, 1.3643814325332642) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.108554840087891, 1.1384541988372803) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.181559085845947, 1.102453589439392) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.005119800567627, 0.7583925127983093) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.009669780731201, 0.7595850825309753) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.1095123291015625, 0.5013613700866699) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:1>
(4.749599933624268, 0.2761750817298889) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.757526874542236, 0.05662078037858009) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:1, 30:0>
(4.936008930206299, 0.10978727042675018) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.968602657318115, 0.5159852504730225) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.980166912078857, 0.9363664388656616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.98587703704834, 1.29038667678833) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.068697929382324, 1.6757601499557495) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.018654823303223, 1.9372589588165283) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.1237311363220215, 2.43471097946167) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.392814636230469, 2.6586062908172607) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:1, 30:0>
(5.084010601043701, 2.507646322250366) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.847070693969727, 2.7312824726104736) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.662004470825195, 2.918390989303589) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.593832015991211, 2.8478870391845703) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:1>
(4.726870059967041, 2.6189076900482178) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9403886795043945, 2.2868170738220215) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.653384208679199, 2.460111379623413) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(4.9403886795043945, 2.2868170738220215) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:1, 29:0, 30:0>
(5.081148624420166, 1.9233863353729248) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.490387916564941, 1.838126301765442) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.8755364418029785, 1.6878249645233154) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.792293071746826, 1.6517434120178223) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.427152156829834, 1.4877468347549438) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.2648091316223145, 1.2548198699951172) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.181559085845947, 1.102453589439392) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(5.193044662475586, 0.9185721278190613) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.533547401428223, 0.718765139579773) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.826085567474365, 0.5331920981407166) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.617894172668457, 0.48320895433425903) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.451884746551514, 0.6789068579673767) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(5.183216571807861, 0.8350794911384583) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.980166912078857, 0.9363664388656616) 	<22:0, 23:0, 24:0, 25:0, 26:0, 27:1, 28:0, 29:0, 30:0>
(4.721207618713379, 1.1728382110595703) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.4117865562438965, 1.2611455917358398) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(4.148235321044922, 1.3256666660308838) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.8197758197784424, 1.3918790817260742) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.68847918510437, 1.4232161045074463) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(3.360790967941284, 1.4939032793045044) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.976147174835205, 1.573374629020691) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.6731321811676025, 1.6460989713668823) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.486926317214966, 1.6969658136367798) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(2.1466124057769775, 1.7885074615478516) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.8321155309677124, 1.845276951789856) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.6606806516647339, 1.8705631494522095) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.2232279777526855, 1.929046869277954) 	<22:1, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.067152500152588, 2.0605833530426025) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9684015512466431, 2.3420145511627197) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.0023833513259888, 2.654205083847046) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.9703637361526489, 2.8039348125457764) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:1>
(1.016390085220337, 2.647160530090332) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.919129490852356, 2.297365427017212) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8571147322654724, 2.2841999530792236) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.5150994658470154, 2.194833517074585) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(0.8571147322654724, 2.2841999530792236) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>
(1.190995216369629, 2.3904078006744385) 	<22:0, 23:0, 24:1, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0>

Movement: 
[h,0]  [r1,0]  [r1,b,12]  [r1,12]  [h,12]  [r3,12]  [r3,t,12]  [r3,12]  [r3,b,45]  [r3,45]  [h,45]  [r4,45]  [r4,b,34]  [r4,t,34]  [r4,34]  [h,34]  [r5,34]  [r5,t,34]  [r5,34]  [r5,b,47]  [r5,47]  [h,47]  [r6,47]  [r6,b,37]  [r6,37]  [r6,t,37]  [r6,37]  [h,37]  [r5,37]  [h,37]  [r2,37]  [r2,t,37]  [r2,37]  [r2,b,63]  


Remaining path: 
[r2,b,63]  

Storing output ... done
Exporting product automaton ... Resizing node table from 1000003 to 2000003
done

Number of iterations = 42
Total sampled points = 23062
RRG size = 2102

Movement Length = 32.434788
Remaining path Length = 0.0
Total path Length = 32.434788

Advice samples: [14, 7, 3, 1, 0, 0, 0, 0, 0, 0] (25)

Total time taken (in ms):10566.063818

Initialization time (in ms):537.478179
Sampling time (in ms):8519.524558
Advice time (in ms):8.320133
Path checking time (in ms):865.567958
Learning time (in ms):172.976463
Exploration time (in ms):0.0
Time taken other than these things (in ms):462.196527
Moving time (in ms):2751.4634



